define endian=little;
define alignment=2;
define space ram      type=ram_space      size=4  default;
define space register type=register_space size=4;

define register offset=0x000 size=4 [
  R0   R1   R2   R3   R4   R5   R6   R7
  R8   R9   R10  R11  R12  R13  R14  R15
  R16  R17  R18  R19  R20  R21  R22  R23
  R24  R25  R26  R27  R28  R29  R30  R31
  C0   C1   C2   C3   C4   C5   C6   C7
  C8   C9   C10  C11  C12  C13  C14  C15
  C16  C17  C18  C19  C20  C21  C22  C23
  C24  C25  C26  C27  C28  C29  C30  C31
  G0   G1   G2   G3   G4   G5   G6   G7
  G8   G9   G10  G11  G12  G13  G14  G15
  G16  G17  G18  G19  G20  G21  G22  G23
  G24  G25  G26  G27  G28  G29  G30  G31
  S0   S1   S2   S3   S4   S5   S6   S7
  S8   S9   S10  S11  S12  S13  S14  S15
  S16  S17  S18  S19  S20  S21  S22  S23
  S24  S25  S26  S27  S28  S29  S30  S31
  S32  S33  S34  S35  S36  S37  S38  S39
  S40  S41  S42  S43  S44  S45  S46  S47
  S48  S49  S50  S51  S52  S53  S54  S55
  S56  S57  S58  S59  S60  S61  S62  S63
  S64  S65  S66  S67  S68  S69  S70  S71
  S72  S73  S74  S75  S76  S77  S78  S79
  S80  S81  S82  S83  S84  S85  S86  S87
  S88  S89  S90  S91  S92  S93  S94  S95
  S96  S97  S98  S99  S100 S101 S102 S103
  S104 S105 S106 S107 S108 S109 S110 S111
  S112 S113 S114 S115 S116 S117 S118 S119
  S120 S121 S122 S123 S124 S125 S126 S127
  SGP0 SGP1
];

define register offset=0x094 size=1 [
  P0  P1  P2  P3
];

define register offset=0x000 size=8 [
  R1R0      R3R2      R5R4      R7R6
  R9R8      R11R10    R13R12    R15R14
  R17R16    R19R18    R21R20    R23R22
  R25R24    R27R26    R29R28    R31R30
  C1C0      C3C2      C5C4      C7C6
  C9C8      C11C10    C13C12    C15C14
  C17C16    C19C18    C21C20    C23C22
  C25C24    C27C26    C29C28    C31C30
  G1G0      G3G2      G5G4      G7G6
  G9G8      G11G10    G13G12    G15G14
  G17G16    G19G18    G21G20    G23G22
  G25G24    G27G26    G29G28    G31G30
  S1S0      S3S2      S5S4      S7S6
  S9S8      S11S10    S13S12    S15S14
  S17S16    S19S18    S21S20    S23S22
  S25S24    S27S26    S29S28    S31S30
  S33S32    S35S34    S37S36    S39S38
  S41S40    S43S42    S45S44    S47S46
  S49S48    S51S50    S53S52    S55S54
  S57S56    S59S58    S61S60    S63S62
  S65S64    S67S66    S69S68    S71S70
  S73S72    S75S74    S77S76    S79S78
  S81S80    S83S82    S85S84    S87S86
  S89S88    S91S90    S93S92    S95S94
  S97S96    S99S98    S101S100  S103S102
  S105S104  S107S106  S109S108  S111S110
  S113S112  S115S114  S117S116  S119S118
  S121S120  S123S122  S125S124  S127S126
  SGP1SGP0
];

define register offset=0x500 size=24 contextreg;
define context contextreg
  pkt_start   = (  0,  31) noflow
  pkt_next    = ( 32,  63) noflow
  subinsn     = ( 64,  66) noflow
  immext      = ( 67,  98) noflow
  dotnew      = ( 99, 103) noflow
  hasnew      = (104, 104) noflow
  endloop     = (105, 106) noflow
  phase       = (107, 107) noflow
  duplex_next = (108, 139) noflow
;

define pcodeop newreg;
define pcodeop trap0;
define pcodeop trap1;
define pcodeop pause;
define pcodeop rte;
define pcodeop swi;
define pcodeop cswi;
define pcodeop ciad;
define pcodeop siad;
define pcodeop iassignr;
define pcodeop iassignw;
define pcodeop getimask;
define pcodeop setimask;
define pcodeop tlbw;
define pcodeop ctlbw;
define pcodeop tlboc;
define pcodeop tlbr;
define pcodeop tlbp;
define pcodeop tlbinvasid;
define pcodeop tlblock;
define pcodeop tlbunlock;
define pcodeop k0lock;
define pcodeop k0unlock;
define pcodeop crswap;
define pcodeop setprio;
define pcodeop diag;
define pcodeop diag0;
define pcodeop diag1;
define pcodeop trace;
define pcodeop stop;
define pcodeop nmi;
define pcodeop start;
define pcodeop wait;
define pcodeop resume;
define pcodeop brkpt;
define pcodeop ictagr;
define pcodeop ictagw;
define pcodeop icdataw;
define pcodeop icdatar;
define pcodeop icinva;
define pcodeop icinvidx;
define pcodeop ickill;
define pcodeop isync;
define pcodeop barrier;
define pcodeop syncht;
define pcodeop dcfetch;
define pcodeop dckill;
define pcodeop dczeroa;
define pcodeop dccleana;
define pcodeop dccleanidx;
define pcodeop dccleaninva;
define pcodeop dccleaninvidx;
define pcodeop dcinva;
define pcodeop dcinvidx;
define pcodeop dctagr;
define pcodeop dctagw;
define pcodeop l2kill;
define pcodeop l2tagw;
define pcodeop l2tagr;
define pcodeop l2cleaninvidx;
define pcodeop l2cleanidx;
define pcodeop l2invidx;
define pcodeop l2fetch;
define pcodeop l2locka;
define pcodeop l2unlocka;
define pcodeop l2gunlock;
define pcodeop l2gclean;
define pcodeop l2gcleaninv;
define pcodeop memw_locked;
define pcodeop memd_locked;
define pcodeop memw_phys;
define pcodeop cl1;
define pcodeop brev;

define token NORMAL(32)
  Parse                                = (14, 15)
  b0                                   = ( 0,  0)
  b1                                   = ( 1,  1)
  b2                                   = ( 2,  2)
  b3                                   = ( 3,  3)
  b4                                   = ( 4,  4)
  b5                                   = ( 5,  5)
  b6                                   = ( 6,  6)
  b7                                   = ( 7,  7)
  b8                                   = ( 8,  8)
  b9                                   = ( 9,  9)
  b10                                  = (10, 10)
  b11                                  = (11, 11)
  b12                                  = (12, 12)
  b13                                  = (13, 13)
  b16                                  = (16, 16)
  b17                                  = (17, 17)
  b18                                  = (18, 18)
  b19                                  = (19, 19)
  b20                                  = (20, 20)
  b21                                  = (21, 21)
  b22                                  = (22, 22)
  b23                                  = (23, 23)
  b24                                  = (24, 24)
  b25                                  = (25, 25)
  b26                                  = (26, 26)
  b27                                  = (27, 27)
  b28                                  = (28, 28)
  b29                                  = (29, 29)
  b30                                  = (30, 30)
  b31                                  = (31, 31)
  J2_jump_r22_2_0                      = ( 1, 13)
  J2_jump_r22_2_1                      = (16, 24) signed
  J2_jumpr_Rs32                        = (16, 20)
  J2_jumpt_Pu4                         = ( 8,  9)
  J2_jumpt_r15_2_0                     = ( 1,  7)
  J2_jumpt_r15_2_1                     = (13, 13)
  J2_jumpt_r15_2_2                     = (16, 20)
  J2_jumpt_r15_2_3                     = (22, 23) signed
  J2_jumpf_Pu4                         = ( 8,  9)
  J2_jumpf_r15_2_0                     = ( 1,  7)
  J2_jumpf_r15_2_1                     = (13, 13)
  J2_jumpf_r15_2_2                     = (16, 20)
  J2_jumpf_r15_2_3                     = (22, 23) signed
  J2_jumptpt_Pu4                       = ( 8,  9)
  J2_jumptpt_r15_2_0                   = ( 1,  7)
  J2_jumptpt_r15_2_1                   = (13, 13)
  J2_jumptpt_r15_2_2                   = (16, 20)
  J2_jumptpt_r15_2_3                   = (22, 23) signed
  J2_jumpfpt_Pu4                       = ( 8,  9)
  J2_jumpfpt_r15_2_0                   = ( 1,  7)
  J2_jumpfpt_r15_2_1                   = (13, 13)
  J2_jumpfpt_r15_2_2                   = (16, 20)
  J2_jumpfpt_r15_2_3                   = (22, 23) signed
  J2_jumprt_Pu4                        = ( 8,  9)
  J2_jumprt_Rs32                       = (16, 20)
  J2_jumprf_Pu4                        = ( 8,  9)
  J2_jumprf_Rs32                       = (16, 20)
  J2_jumprtpt_Pu4                      = ( 8,  9)
  J2_jumprtpt_Rs32                     = (16, 20)
  J2_jumprfpt_Pu4                      = ( 8,  9)
  J2_jumprfpt_Rs32                     = (16, 20)
  J2_jumptnew_Pu4                      = ( 8,  9)
  J2_jumptnew_r15_2_0                  = ( 1,  7)
  J2_jumptnew_r15_2_1                  = (13, 13)
  J2_jumptnew_r15_2_2                  = (16, 20)
  J2_jumptnew_r15_2_3                  = (22, 23) signed
  J2_jumpfnew_Pu4                      = ( 8,  9)
  J2_jumpfnew_r15_2_0                  = ( 1,  7)
  J2_jumpfnew_r15_2_1                  = (13, 13)
  J2_jumpfnew_r15_2_2                  = (16, 20)
  J2_jumpfnew_r15_2_3                  = (22, 23) signed
  J2_jumptnewpt_Pu4                    = ( 8,  9)
  J2_jumptnewpt_r15_2_0                = ( 1,  7)
  J2_jumptnewpt_r15_2_1                = (13, 13)
  J2_jumptnewpt_r15_2_2                = (16, 20)
  J2_jumptnewpt_r15_2_3                = (22, 23) signed
  J2_jumpfnewpt_Pu4                    = ( 8,  9)
  J2_jumpfnewpt_r15_2_0                = ( 1,  7)
  J2_jumpfnewpt_r15_2_1                = (13, 13)
  J2_jumpfnewpt_r15_2_2                = (16, 20)
  J2_jumpfnewpt_r15_2_3                = (22, 23) signed
  J2_jumprtnew_Pu4                     = ( 8,  9)
  J2_jumprtnew_Rs32                    = (16, 20)
  J2_jumprfnew_Pu4                     = ( 8,  9)
  J2_jumprfnew_Rs32                    = (16, 20)
  J2_jumprtnewpt_Pu4                   = ( 8,  9)
  J2_jumprtnewpt_Rs32                  = (16, 20)
  J2_jumprfnewpt_Pu4                   = ( 8,  9)
  J2_jumprfnewpt_Rs32                  = (16, 20)
  J4_hintjumpr_Rs32                    = (16, 20)
  J2_jumprz_Rs32                       = (16, 20)
  J2_jumprz_r13_2_0                    = ( 1, 11)
  J2_jumprz_r13_2_1                    = (13, 13)
  J2_jumprz_r13_2_2                    = (21, 21) signed
  J2_jumprnz_Rs32                      = (16, 20)
  J2_jumprnz_r13_2_0                   = ( 1, 11)
  J2_jumprnz_r13_2_1                   = (13, 13)
  J2_jumprnz_r13_2_2                   = (21, 21) signed
  J2_jumprzpt_Rs32                     = (16, 20)
  J2_jumprzpt_r13_2_0                  = ( 1, 11)
  J2_jumprzpt_r13_2_1                  = (13, 13)
  J2_jumprzpt_r13_2_2                  = (21, 21) signed
  J2_jumprnzpt_Rs32                    = (16, 20)
  J2_jumprnzpt_r13_2_0                 = ( 1, 11)
  J2_jumprnzpt_r13_2_1                 = (13, 13)
  J2_jumprnzpt_r13_2_2                 = (21, 21) signed
  J2_jumprgtez_Rs32                    = (16, 20)
  J2_jumprgtez_r13_2_0                 = ( 1, 11)
  J2_jumprgtez_r13_2_1                 = (13, 13)
  J2_jumprgtez_r13_2_2                 = (21, 21) signed
  J2_jumprgtezpt_Rs32                  = (16, 20)
  J2_jumprgtezpt_r13_2_0               = ( 1, 11)
  J2_jumprgtezpt_r13_2_1               = (13, 13)
  J2_jumprgtezpt_r13_2_2               = (21, 21) signed
  J2_jumprltez_Rs32                    = (16, 20)
  J2_jumprltez_r13_2_0                 = ( 1, 11)
  J2_jumprltez_r13_2_1                 = (13, 13)
  J2_jumprltez_r13_2_2                 = (21, 21) signed
  J2_jumprltezpt_Rs32                  = (16, 20)
  J2_jumprltezpt_r13_2_0               = ( 1, 11)
  J2_jumprltezpt_r13_2_1               = (13, 13)
  J2_jumprltezpt_r13_2_2               = (21, 21) signed
  J4_cmpeqi_tp0_jump_nt_Rs16           = (16, 19)
  J4_cmpeqi_tp0_jump_nt_U5_0           = ( 8, 12)
  J4_cmpeqi_tp0_jump_nt_r9_2_0         = ( 1,  7)
  J4_cmpeqi_tp0_jump_nt_r9_2_1         = (20, 21) signed
  J4_cmpeqi_fp0_jump_nt_Rs16           = (16, 19)
  J4_cmpeqi_fp0_jump_nt_U5_0           = ( 8, 12)
  J4_cmpeqi_fp0_jump_nt_r9_2_0         = ( 1,  7)
  J4_cmpeqi_fp0_jump_nt_r9_2_1         = (20, 21) signed
  J4_cmpeqi_tp0_jump_t_Rs16            = (16, 19)
  J4_cmpeqi_tp0_jump_t_U5_0            = ( 8, 12)
  J4_cmpeqi_tp0_jump_t_r9_2_0          = ( 1,  7)
  J4_cmpeqi_tp0_jump_t_r9_2_1          = (20, 21) signed
  J4_cmpeqi_fp0_jump_t_Rs16            = (16, 19)
  J4_cmpeqi_fp0_jump_t_U5_0            = ( 8, 12)
  J4_cmpeqi_fp0_jump_t_r9_2_0          = ( 1,  7)
  J4_cmpeqi_fp0_jump_t_r9_2_1          = (20, 21) signed
  J4_cmpeqi_tp1_jump_nt_Rs16           = (16, 19)
  J4_cmpeqi_tp1_jump_nt_U5_0           = ( 8, 12)
  J4_cmpeqi_tp1_jump_nt_r9_2_0         = ( 1,  7)
  J4_cmpeqi_tp1_jump_nt_r9_2_1         = (20, 21) signed
  J4_cmpeqi_fp1_jump_nt_Rs16           = (16, 19)
  J4_cmpeqi_fp1_jump_nt_U5_0           = ( 8, 12)
  J4_cmpeqi_fp1_jump_nt_r9_2_0         = ( 1,  7)
  J4_cmpeqi_fp1_jump_nt_r9_2_1         = (20, 21) signed
  J4_cmpeqi_tp1_jump_t_Rs16            = (16, 19)
  J4_cmpeqi_tp1_jump_t_U5_0            = ( 8, 12)
  J4_cmpeqi_tp1_jump_t_r9_2_0          = ( 1,  7)
  J4_cmpeqi_tp1_jump_t_r9_2_1          = (20, 21) signed
  J4_cmpeqi_fp1_jump_t_Rs16            = (16, 19)
  J4_cmpeqi_fp1_jump_t_U5_0            = ( 8, 12)
  J4_cmpeqi_fp1_jump_t_r9_2_0          = ( 1,  7)
  J4_cmpeqi_fp1_jump_t_r9_2_1          = (20, 21) signed
  J4_cmpgti_tp0_jump_nt_Rs16           = (16, 19)
  J4_cmpgti_tp0_jump_nt_U5_0           = ( 8, 12)
  J4_cmpgti_tp0_jump_nt_r9_2_0         = ( 1,  7)
  J4_cmpgti_tp0_jump_nt_r9_2_1         = (20, 21) signed
  J4_cmpgti_fp0_jump_nt_Rs16           = (16, 19)
  J4_cmpgti_fp0_jump_nt_U5_0           = ( 8, 12)
  J4_cmpgti_fp0_jump_nt_r9_2_0         = ( 1,  7)
  J4_cmpgti_fp0_jump_nt_r9_2_1         = (20, 21) signed
  J4_cmpgti_tp0_jump_t_Rs16            = (16, 19)
  J4_cmpgti_tp0_jump_t_U5_0            = ( 8, 12)
  J4_cmpgti_tp0_jump_t_r9_2_0          = ( 1,  7)
  J4_cmpgti_tp0_jump_t_r9_2_1          = (20, 21) signed
  J4_cmpgti_fp0_jump_t_Rs16            = (16, 19)
  J4_cmpgti_fp0_jump_t_U5_0            = ( 8, 12)
  J4_cmpgti_fp0_jump_t_r9_2_0          = ( 1,  7)
  J4_cmpgti_fp0_jump_t_r9_2_1          = (20, 21) signed
  J4_cmpgti_tp1_jump_nt_Rs16           = (16, 19)
  J4_cmpgti_tp1_jump_nt_U5_0           = ( 8, 12)
  J4_cmpgti_tp1_jump_nt_r9_2_0         = ( 1,  7)
  J4_cmpgti_tp1_jump_nt_r9_2_1         = (20, 21) signed
  J4_cmpgti_fp1_jump_nt_Rs16           = (16, 19)
  J4_cmpgti_fp1_jump_nt_U5_0           = ( 8, 12)
  J4_cmpgti_fp1_jump_nt_r9_2_0         = ( 1,  7)
  J4_cmpgti_fp1_jump_nt_r9_2_1         = (20, 21) signed
  J4_cmpgti_tp1_jump_t_Rs16            = (16, 19)
  J4_cmpgti_tp1_jump_t_U5_0            = ( 8, 12)
  J4_cmpgti_tp1_jump_t_r9_2_0          = ( 1,  7)
  J4_cmpgti_tp1_jump_t_r9_2_1          = (20, 21) signed
  J4_cmpgti_fp1_jump_t_Rs16            = (16, 19)
  J4_cmpgti_fp1_jump_t_U5_0            = ( 8, 12)
  J4_cmpgti_fp1_jump_t_r9_2_0          = ( 1,  7)
  J4_cmpgti_fp1_jump_t_r9_2_1          = (20, 21) signed
  J4_cmpgtui_tp0_jump_nt_Rs16          = (16, 19)
  J4_cmpgtui_tp0_jump_nt_U5_0          = ( 8, 12)
  J4_cmpgtui_tp0_jump_nt_r9_2_0        = ( 1,  7)
  J4_cmpgtui_tp0_jump_nt_r9_2_1        = (20, 21) signed
  J4_cmpgtui_fp0_jump_nt_Rs16          = (16, 19)
  J4_cmpgtui_fp0_jump_nt_U5_0          = ( 8, 12)
  J4_cmpgtui_fp0_jump_nt_r9_2_0        = ( 1,  7)
  J4_cmpgtui_fp0_jump_nt_r9_2_1        = (20, 21) signed
  J4_cmpgtui_tp0_jump_t_Rs16           = (16, 19)
  J4_cmpgtui_tp0_jump_t_U5_0           = ( 8, 12)
  J4_cmpgtui_tp0_jump_t_r9_2_0         = ( 1,  7)
  J4_cmpgtui_tp0_jump_t_r9_2_1         = (20, 21) signed
  J4_cmpgtui_fp0_jump_t_Rs16           = (16, 19)
  J4_cmpgtui_fp0_jump_t_U5_0           = ( 8, 12)
  J4_cmpgtui_fp0_jump_t_r9_2_0         = ( 1,  7)
  J4_cmpgtui_fp0_jump_t_r9_2_1         = (20, 21) signed
  J4_cmpgtui_tp1_jump_nt_Rs16          = (16, 19)
  J4_cmpgtui_tp1_jump_nt_U5_0          = ( 8, 12)
  J4_cmpgtui_tp1_jump_nt_r9_2_0        = ( 1,  7)
  J4_cmpgtui_tp1_jump_nt_r9_2_1        = (20, 21) signed
  J4_cmpgtui_fp1_jump_nt_Rs16          = (16, 19)
  J4_cmpgtui_fp1_jump_nt_U5_0          = ( 8, 12)
  J4_cmpgtui_fp1_jump_nt_r9_2_0        = ( 1,  7)
  J4_cmpgtui_fp1_jump_nt_r9_2_1        = (20, 21) signed
  J4_cmpgtui_tp1_jump_t_Rs16           = (16, 19)
  J4_cmpgtui_tp1_jump_t_U5_0           = ( 8, 12)
  J4_cmpgtui_tp1_jump_t_r9_2_0         = ( 1,  7)
  J4_cmpgtui_tp1_jump_t_r9_2_1         = (20, 21) signed
  J4_cmpgtui_fp1_jump_t_Rs16           = (16, 19)
  J4_cmpgtui_fp1_jump_t_U5_0           = ( 8, 12)
  J4_cmpgtui_fp1_jump_t_r9_2_0         = ( 1,  7)
  J4_cmpgtui_fp1_jump_t_r9_2_1         = (20, 21) signed
  J4_cmpeqn1_tp0_jump_nt_Rs16          = (16, 19)
  J4_cmpeqn1_tp0_jump_nt_r9_2_0        = ( 1,  7)
  J4_cmpeqn1_tp0_jump_nt_r9_2_1        = (20, 21) signed
  J4_cmpeqn1_fp0_jump_nt_Rs16          = (16, 19)
  J4_cmpeqn1_fp0_jump_nt_r9_2_0        = ( 1,  7)
  J4_cmpeqn1_fp0_jump_nt_r9_2_1        = (20, 21) signed
  J4_cmpeqn1_tp0_jump_t_Rs16           = (16, 19)
  J4_cmpeqn1_tp0_jump_t_r9_2_0         = ( 1,  7)
  J4_cmpeqn1_tp0_jump_t_r9_2_1         = (20, 21) signed
  J4_cmpeqn1_fp0_jump_t_Rs16           = (16, 19)
  J4_cmpeqn1_fp0_jump_t_r9_2_0         = ( 1,  7)
  J4_cmpeqn1_fp0_jump_t_r9_2_1         = (20, 21) signed
  J4_cmpeqn1_tp1_jump_nt_Rs16          = (16, 19)
  J4_cmpeqn1_tp1_jump_nt_r9_2_0        = ( 1,  7)
  J4_cmpeqn1_tp1_jump_nt_r9_2_1        = (20, 21) signed
  J4_cmpeqn1_fp1_jump_nt_Rs16          = (16, 19)
  J4_cmpeqn1_fp1_jump_nt_r9_2_0        = ( 1,  7)
  J4_cmpeqn1_fp1_jump_nt_r9_2_1        = (20, 21) signed
  J4_cmpeqn1_tp1_jump_t_Rs16           = (16, 19)
  J4_cmpeqn1_tp1_jump_t_r9_2_0         = ( 1,  7)
  J4_cmpeqn1_tp1_jump_t_r9_2_1         = (20, 21) signed
  J4_cmpeqn1_fp1_jump_t_Rs16           = (16, 19)
  J4_cmpeqn1_fp1_jump_t_r9_2_0         = ( 1,  7)
  J4_cmpeqn1_fp1_jump_t_r9_2_1         = (20, 21) signed
  J4_cmpgtn1_tp0_jump_nt_Rs16          = (16, 19)
  J4_cmpgtn1_tp0_jump_nt_r9_2_0        = ( 1,  7)
  J4_cmpgtn1_tp0_jump_nt_r9_2_1        = (20, 21) signed
  J4_cmpgtn1_fp0_jump_nt_Rs16          = (16, 19)
  J4_cmpgtn1_fp0_jump_nt_r9_2_0        = ( 1,  7)
  J4_cmpgtn1_fp0_jump_nt_r9_2_1        = (20, 21) signed
  J4_cmpgtn1_tp0_jump_t_Rs16           = (16, 19)
  J4_cmpgtn1_tp0_jump_t_r9_2_0         = ( 1,  7)
  J4_cmpgtn1_tp0_jump_t_r9_2_1         = (20, 21) signed
  J4_cmpgtn1_fp0_jump_t_Rs16           = (16, 19)
  J4_cmpgtn1_fp0_jump_t_r9_2_0         = ( 1,  7)
  J4_cmpgtn1_fp0_jump_t_r9_2_1         = (20, 21) signed
  J4_cmpgtn1_tp1_jump_nt_Rs16          = (16, 19)
  J4_cmpgtn1_tp1_jump_nt_r9_2_0        = ( 1,  7)
  J4_cmpgtn1_tp1_jump_nt_r9_2_1        = (20, 21) signed
  J4_cmpgtn1_fp1_jump_nt_Rs16          = (16, 19)
  J4_cmpgtn1_fp1_jump_nt_r9_2_0        = ( 1,  7)
  J4_cmpgtn1_fp1_jump_nt_r9_2_1        = (20, 21) signed
  J4_cmpgtn1_tp1_jump_t_Rs16           = (16, 19)
  J4_cmpgtn1_tp1_jump_t_r9_2_0         = ( 1,  7)
  J4_cmpgtn1_tp1_jump_t_r9_2_1         = (20, 21) signed
  J4_cmpgtn1_fp1_jump_t_Rs16           = (16, 19)
  J4_cmpgtn1_fp1_jump_t_r9_2_0         = ( 1,  7)
  J4_cmpgtn1_fp1_jump_t_r9_2_1         = (20, 21) signed
  J4_tstbit0_tp0_jump_nt_Rs16          = (16, 19)
  J4_tstbit0_tp0_jump_nt_r9_2_0        = ( 1,  7)
  J4_tstbit0_tp0_jump_nt_r9_2_1        = (20, 21) signed
  J4_tstbit0_fp0_jump_nt_Rs16          = (16, 19)
  J4_tstbit0_fp0_jump_nt_r9_2_0        = ( 1,  7)
  J4_tstbit0_fp0_jump_nt_r9_2_1        = (20, 21) signed
  J4_tstbit0_tp0_jump_t_Rs16           = (16, 19)
  J4_tstbit0_tp0_jump_t_r9_2_0         = ( 1,  7)
  J4_tstbit0_tp0_jump_t_r9_2_1         = (20, 21) signed
  J4_tstbit0_fp0_jump_t_Rs16           = (16, 19)
  J4_tstbit0_fp0_jump_t_r9_2_0         = ( 1,  7)
  J4_tstbit0_fp0_jump_t_r9_2_1         = (20, 21) signed
  J4_tstbit0_tp1_jump_nt_Rs16          = (16, 19)
  J4_tstbit0_tp1_jump_nt_r9_2_0        = ( 1,  7)
  J4_tstbit0_tp1_jump_nt_r9_2_1        = (20, 21) signed
  J4_tstbit0_fp1_jump_nt_Rs16          = (16, 19)
  J4_tstbit0_fp1_jump_nt_r9_2_0        = ( 1,  7)
  J4_tstbit0_fp1_jump_nt_r9_2_1        = (20, 21) signed
  J4_tstbit0_tp1_jump_t_Rs16           = (16, 19)
  J4_tstbit0_tp1_jump_t_r9_2_0         = ( 1,  7)
  J4_tstbit0_tp1_jump_t_r9_2_1         = (20, 21) signed
  J4_tstbit0_fp1_jump_t_Rs16           = (16, 19)
  J4_tstbit0_fp1_jump_t_r9_2_0         = ( 1,  7)
  J4_tstbit0_fp1_jump_t_r9_2_1         = (20, 21) signed
  J4_cmpeq_tp0_jump_nt_Rs16            = (16, 19)
  J4_cmpeq_tp0_jump_nt_Rt16            = ( 8, 11)
  J4_cmpeq_tp0_jump_nt_r9_2_0          = ( 1,  7)
  J4_cmpeq_tp0_jump_nt_r9_2_1          = (20, 21) signed
  J4_cmpeq_fp0_jump_nt_Rs16            = (16, 19)
  J4_cmpeq_fp0_jump_nt_Rt16            = ( 8, 11)
  J4_cmpeq_fp0_jump_nt_r9_2_0          = ( 1,  7)
  J4_cmpeq_fp0_jump_nt_r9_2_1          = (20, 21) signed
  J4_cmpeq_tp0_jump_t_Rs16             = (16, 19)
  J4_cmpeq_tp0_jump_t_Rt16             = ( 8, 11)
  J4_cmpeq_tp0_jump_t_r9_2_0           = ( 1,  7)
  J4_cmpeq_tp0_jump_t_r9_2_1           = (20, 21) signed
  J4_cmpeq_fp0_jump_t_Rs16             = (16, 19)
  J4_cmpeq_fp0_jump_t_Rt16             = ( 8, 11)
  J4_cmpeq_fp0_jump_t_r9_2_0           = ( 1,  7)
  J4_cmpeq_fp0_jump_t_r9_2_1           = (20, 21) signed
  J4_cmpeq_tp1_jump_nt_Rs16            = (16, 19)
  J4_cmpeq_tp1_jump_nt_Rt16            = ( 8, 11)
  J4_cmpeq_tp1_jump_nt_r9_2_0          = ( 1,  7)
  J4_cmpeq_tp1_jump_nt_r9_2_1          = (20, 21) signed
  J4_cmpeq_fp1_jump_nt_Rs16            = (16, 19)
  J4_cmpeq_fp1_jump_nt_Rt16            = ( 8, 11)
  J4_cmpeq_fp1_jump_nt_r9_2_0          = ( 1,  7)
  J4_cmpeq_fp1_jump_nt_r9_2_1          = (20, 21) signed
  J4_cmpeq_tp1_jump_t_Rs16             = (16, 19)
  J4_cmpeq_tp1_jump_t_Rt16             = ( 8, 11)
  J4_cmpeq_tp1_jump_t_r9_2_0           = ( 1,  7)
  J4_cmpeq_tp1_jump_t_r9_2_1           = (20, 21) signed
  J4_cmpeq_fp1_jump_t_Rs16             = (16, 19)
  J4_cmpeq_fp1_jump_t_Rt16             = ( 8, 11)
  J4_cmpeq_fp1_jump_t_r9_2_0           = ( 1,  7)
  J4_cmpeq_fp1_jump_t_r9_2_1           = (20, 21) signed
  J4_cmpgt_tp0_jump_nt_Rs16            = (16, 19)
  J4_cmpgt_tp0_jump_nt_Rt16            = ( 8, 11)
  J4_cmpgt_tp0_jump_nt_r9_2_0          = ( 1,  7)
  J4_cmpgt_tp0_jump_nt_r9_2_1          = (20, 21) signed
  J4_cmpgt_fp0_jump_nt_Rs16            = (16, 19)
  J4_cmpgt_fp0_jump_nt_Rt16            = ( 8, 11)
  J4_cmpgt_fp0_jump_nt_r9_2_0          = ( 1,  7)
  J4_cmpgt_fp0_jump_nt_r9_2_1          = (20, 21) signed
  J4_cmpgt_tp0_jump_t_Rs16             = (16, 19)
  J4_cmpgt_tp0_jump_t_Rt16             = ( 8, 11)
  J4_cmpgt_tp0_jump_t_r9_2_0           = ( 1,  7)
  J4_cmpgt_tp0_jump_t_r9_2_1           = (20, 21) signed
  J4_cmpgt_fp0_jump_t_Rs16             = (16, 19)
  J4_cmpgt_fp0_jump_t_Rt16             = ( 8, 11)
  J4_cmpgt_fp0_jump_t_r9_2_0           = ( 1,  7)
  J4_cmpgt_fp0_jump_t_r9_2_1           = (20, 21) signed
  J4_cmpgt_tp1_jump_nt_Rs16            = (16, 19)
  J4_cmpgt_tp1_jump_nt_Rt16            = ( 8, 11)
  J4_cmpgt_tp1_jump_nt_r9_2_0          = ( 1,  7)
  J4_cmpgt_tp1_jump_nt_r9_2_1          = (20, 21) signed
  J4_cmpgt_fp1_jump_nt_Rs16            = (16, 19)
  J4_cmpgt_fp1_jump_nt_Rt16            = ( 8, 11)
  J4_cmpgt_fp1_jump_nt_r9_2_0          = ( 1,  7)
  J4_cmpgt_fp1_jump_nt_r9_2_1          = (20, 21) signed
  J4_cmpgt_tp1_jump_t_Rs16             = (16, 19)
  J4_cmpgt_tp1_jump_t_Rt16             = ( 8, 11)
  J4_cmpgt_tp1_jump_t_r9_2_0           = ( 1,  7)
  J4_cmpgt_tp1_jump_t_r9_2_1           = (20, 21) signed
  J4_cmpgt_fp1_jump_t_Rs16             = (16, 19)
  J4_cmpgt_fp1_jump_t_Rt16             = ( 8, 11)
  J4_cmpgt_fp1_jump_t_r9_2_0           = ( 1,  7)
  J4_cmpgt_fp1_jump_t_r9_2_1           = (20, 21) signed
  J4_cmpgtu_tp0_jump_nt_Rs16           = (16, 19)
  J4_cmpgtu_tp0_jump_nt_Rt16           = ( 8, 11)
  J4_cmpgtu_tp0_jump_nt_r9_2_0         = ( 1,  7)
  J4_cmpgtu_tp0_jump_nt_r9_2_1         = (20, 21) signed
  J4_cmpgtu_fp0_jump_nt_Rs16           = (16, 19)
  J4_cmpgtu_fp0_jump_nt_Rt16           = ( 8, 11)
  J4_cmpgtu_fp0_jump_nt_r9_2_0         = ( 1,  7)
  J4_cmpgtu_fp0_jump_nt_r9_2_1         = (20, 21) signed
  J4_cmpgtu_tp0_jump_t_Rs16            = (16, 19)
  J4_cmpgtu_tp0_jump_t_Rt16            = ( 8, 11)
  J4_cmpgtu_tp0_jump_t_r9_2_0          = ( 1,  7)
  J4_cmpgtu_tp0_jump_t_r9_2_1          = (20, 21) signed
  J4_cmpgtu_fp0_jump_t_Rs16            = (16, 19)
  J4_cmpgtu_fp0_jump_t_Rt16            = ( 8, 11)
  J4_cmpgtu_fp0_jump_t_r9_2_0          = ( 1,  7)
  J4_cmpgtu_fp0_jump_t_r9_2_1          = (20, 21) signed
  J4_cmpgtu_tp1_jump_nt_Rs16           = (16, 19)
  J4_cmpgtu_tp1_jump_nt_Rt16           = ( 8, 11)
  J4_cmpgtu_tp1_jump_nt_r9_2_0         = ( 1,  7)
  J4_cmpgtu_tp1_jump_nt_r9_2_1         = (20, 21) signed
  J4_cmpgtu_fp1_jump_nt_Rs16           = (16, 19)
  J4_cmpgtu_fp1_jump_nt_Rt16           = ( 8, 11)
  J4_cmpgtu_fp1_jump_nt_r9_2_0         = ( 1,  7)
  J4_cmpgtu_fp1_jump_nt_r9_2_1         = (20, 21) signed
  J4_cmpgtu_tp1_jump_t_Rs16            = (16, 19)
  J4_cmpgtu_tp1_jump_t_Rt16            = ( 8, 11)
  J4_cmpgtu_tp1_jump_t_r9_2_0          = ( 1,  7)
  J4_cmpgtu_tp1_jump_t_r9_2_1          = (20, 21) signed
  J4_cmpgtu_fp1_jump_t_Rs16            = (16, 19)
  J4_cmpgtu_fp1_jump_t_Rt16            = ( 8, 11)
  J4_cmpgtu_fp1_jump_t_r9_2_0          = ( 1,  7)
  J4_cmpgtu_fp1_jump_t_r9_2_1          = (20, 21) signed
  J4_jumpseti_Rd16                     = (16, 19)
  J4_jumpseti_U6_0                     = ( 8, 13)
  J4_jumpseti_r9_2_0                   = ( 1,  7)
  J4_jumpseti_r9_2_1                   = (20, 21) signed
  J4_jumpsetr_Rd16                     = ( 8, 11)
  J4_jumpsetr_Rs16                     = (16, 19)
  J4_jumpsetr_r9_2_0                   = ( 1,  7)
  J4_jumpsetr_r9_2_1                   = (20, 21) signed
  J4_cmpeqi_t_jumpnv_t_Ns8             = (16, 18)
  J4_cmpeqi_t_jumpnv_t_U5_0            = ( 8, 12)
  J4_cmpeqi_t_jumpnv_t_r9_2_0          = ( 1,  7)
  J4_cmpeqi_t_jumpnv_t_r9_2_1          = (20, 21) signed
  J4_cmpeqi_t_jumpnv_nt_Ns8            = (16, 18)
  J4_cmpeqi_t_jumpnv_nt_U5_0           = ( 8, 12)
  J4_cmpeqi_t_jumpnv_nt_r9_2_0         = ( 1,  7)
  J4_cmpeqi_t_jumpnv_nt_r9_2_1         = (20, 21) signed
  J4_cmpeqi_f_jumpnv_t_Ns8             = (16, 18)
  J4_cmpeqi_f_jumpnv_t_U5_0            = ( 8, 12)
  J4_cmpeqi_f_jumpnv_t_r9_2_0          = ( 1,  7)
  J4_cmpeqi_f_jumpnv_t_r9_2_1          = (20, 21) signed
  J4_cmpeqi_f_jumpnv_nt_Ns8            = (16, 18)
  J4_cmpeqi_f_jumpnv_nt_U5_0           = ( 8, 12)
  J4_cmpeqi_f_jumpnv_nt_r9_2_0         = ( 1,  7)
  J4_cmpeqi_f_jumpnv_nt_r9_2_1         = (20, 21) signed
  J4_cmpgti_t_jumpnv_t_Ns8             = (16, 18)
  J4_cmpgti_t_jumpnv_t_U5_0            = ( 8, 12)
  J4_cmpgti_t_jumpnv_t_r9_2_0          = ( 1,  7)
  J4_cmpgti_t_jumpnv_t_r9_2_1          = (20, 21) signed
  J4_cmpgti_t_jumpnv_nt_Ns8            = (16, 18)
  J4_cmpgti_t_jumpnv_nt_U5_0           = ( 8, 12)
  J4_cmpgti_t_jumpnv_nt_r9_2_0         = ( 1,  7)
  J4_cmpgti_t_jumpnv_nt_r9_2_1         = (20, 21) signed
  J4_cmpgti_f_jumpnv_t_Ns8             = (16, 18)
  J4_cmpgti_f_jumpnv_t_U5_0            = ( 8, 12)
  J4_cmpgti_f_jumpnv_t_r9_2_0          = ( 1,  7)
  J4_cmpgti_f_jumpnv_t_r9_2_1          = (20, 21) signed
  J4_cmpgti_f_jumpnv_nt_Ns8            = (16, 18)
  J4_cmpgti_f_jumpnv_nt_U5_0           = ( 8, 12)
  J4_cmpgti_f_jumpnv_nt_r9_2_0         = ( 1,  7)
  J4_cmpgti_f_jumpnv_nt_r9_2_1         = (20, 21) signed
  J4_cmpgtui_t_jumpnv_t_Ns8            = (16, 18)
  J4_cmpgtui_t_jumpnv_t_U5_0           = ( 8, 12)
  J4_cmpgtui_t_jumpnv_t_r9_2_0         = ( 1,  7)
  J4_cmpgtui_t_jumpnv_t_r9_2_1         = (20, 21) signed
  J4_cmpgtui_t_jumpnv_nt_Ns8           = (16, 18)
  J4_cmpgtui_t_jumpnv_nt_U5_0          = ( 8, 12)
  J4_cmpgtui_t_jumpnv_nt_r9_2_0        = ( 1,  7)
  J4_cmpgtui_t_jumpnv_nt_r9_2_1        = (20, 21) signed
  J4_cmpgtui_f_jumpnv_t_Ns8            = (16, 18)
  J4_cmpgtui_f_jumpnv_t_U5_0           = ( 8, 12)
  J4_cmpgtui_f_jumpnv_t_r9_2_0         = ( 1,  7)
  J4_cmpgtui_f_jumpnv_t_r9_2_1         = (20, 21) signed
  J4_cmpgtui_f_jumpnv_nt_Ns8           = (16, 18)
  J4_cmpgtui_f_jumpnv_nt_U5_0          = ( 8, 12)
  J4_cmpgtui_f_jumpnv_nt_r9_2_0        = ( 1,  7)
  J4_cmpgtui_f_jumpnv_nt_r9_2_1        = (20, 21) signed
  J4_cmpeqn1_t_jumpnv_t_Ns8            = (16, 18)
  J4_cmpeqn1_t_jumpnv_t_r9_2_0         = ( 1,  7)
  J4_cmpeqn1_t_jumpnv_t_r9_2_1         = (20, 21) signed
  J4_cmpeqn1_t_jumpnv_nt_Ns8           = (16, 18)
  J4_cmpeqn1_t_jumpnv_nt_r9_2_0        = ( 1,  7)
  J4_cmpeqn1_t_jumpnv_nt_r9_2_1        = (20, 21) signed
  J4_cmpeqn1_f_jumpnv_t_Ns8            = (16, 18)
  J4_cmpeqn1_f_jumpnv_t_r9_2_0         = ( 1,  7)
  J4_cmpeqn1_f_jumpnv_t_r9_2_1         = (20, 21) signed
  J4_cmpeqn1_f_jumpnv_nt_Ns8           = (16, 18)
  J4_cmpeqn1_f_jumpnv_nt_r9_2_0        = ( 1,  7)
  J4_cmpeqn1_f_jumpnv_nt_r9_2_1        = (20, 21) signed
  J4_cmpgtn1_t_jumpnv_t_Ns8            = (16, 18)
  J4_cmpgtn1_t_jumpnv_t_r9_2_0         = ( 1,  7)
  J4_cmpgtn1_t_jumpnv_t_r9_2_1         = (20, 21) signed
  J4_cmpgtn1_t_jumpnv_nt_Ns8           = (16, 18)
  J4_cmpgtn1_t_jumpnv_nt_r9_2_0        = ( 1,  7)
  J4_cmpgtn1_t_jumpnv_nt_r9_2_1        = (20, 21) signed
  J4_cmpgtn1_f_jumpnv_t_Ns8            = (16, 18)
  J4_cmpgtn1_f_jumpnv_t_r9_2_0         = ( 1,  7)
  J4_cmpgtn1_f_jumpnv_t_r9_2_1         = (20, 21) signed
  J4_cmpgtn1_f_jumpnv_nt_Ns8           = (16, 18)
  J4_cmpgtn1_f_jumpnv_nt_r9_2_0        = ( 1,  7)
  J4_cmpgtn1_f_jumpnv_nt_r9_2_1        = (20, 21) signed
  J4_tstbit0_t_jumpnv_t_Ns8            = (16, 18)
  J4_tstbit0_t_jumpnv_t_r9_2_0         = ( 1,  7)
  J4_tstbit0_t_jumpnv_t_r9_2_1         = (20, 21) signed
  J4_tstbit0_t_jumpnv_nt_Ns8           = (16, 18)
  J4_tstbit0_t_jumpnv_nt_r9_2_0        = ( 1,  7)
  J4_tstbit0_t_jumpnv_nt_r9_2_1        = (20, 21) signed
  J4_tstbit0_f_jumpnv_t_Ns8            = (16, 18)
  J4_tstbit0_f_jumpnv_t_r9_2_0         = ( 1,  7)
  J4_tstbit0_f_jumpnv_t_r9_2_1         = (20, 21) signed
  J4_tstbit0_f_jumpnv_nt_Ns8           = (16, 18)
  J4_tstbit0_f_jumpnv_nt_r9_2_0        = ( 1,  7)
  J4_tstbit0_f_jumpnv_nt_r9_2_1        = (20, 21) signed
  J4_cmpeq_t_jumpnv_t_Ns8              = (16, 18)
  J4_cmpeq_t_jumpnv_t_Rt32             = ( 8, 12)
  J4_cmpeq_t_jumpnv_t_r9_2_0           = ( 1,  7)
  J4_cmpeq_t_jumpnv_t_r9_2_1           = (20, 21) signed
  J4_cmpeq_t_jumpnv_nt_Ns8             = (16, 18)
  J4_cmpeq_t_jumpnv_nt_Rt32            = ( 8, 12)
  J4_cmpeq_t_jumpnv_nt_r9_2_0          = ( 1,  7)
  J4_cmpeq_t_jumpnv_nt_r9_2_1          = (20, 21) signed
  J4_cmpgt_t_jumpnv_t_Ns8              = (16, 18)
  J4_cmpgt_t_jumpnv_t_Rt32             = ( 8, 12)
  J4_cmpgt_t_jumpnv_t_r9_2_0           = ( 1,  7)
  J4_cmpgt_t_jumpnv_t_r9_2_1           = (20, 21) signed
  J4_cmpgt_t_jumpnv_nt_Ns8             = (16, 18)
  J4_cmpgt_t_jumpnv_nt_Rt32            = ( 8, 12)
  J4_cmpgt_t_jumpnv_nt_r9_2_0          = ( 1,  7)
  J4_cmpgt_t_jumpnv_nt_r9_2_1          = (20, 21) signed
  J4_cmpgtu_t_jumpnv_t_Ns8             = (16, 18)
  J4_cmpgtu_t_jumpnv_t_Rt32            = ( 8, 12)
  J4_cmpgtu_t_jumpnv_t_r9_2_0          = ( 1,  7)
  J4_cmpgtu_t_jumpnv_t_r9_2_1          = (20, 21) signed
  J4_cmpgtu_t_jumpnv_nt_Ns8            = (16, 18)
  J4_cmpgtu_t_jumpnv_nt_Rt32           = ( 8, 12)
  J4_cmpgtu_t_jumpnv_nt_r9_2_0         = ( 1,  7)
  J4_cmpgtu_t_jumpnv_nt_r9_2_1         = (20, 21) signed
  J4_cmplt_t_jumpnv_t_Rt32             = ( 8, 12)
  J4_cmplt_t_jumpnv_t_Ns8              = (16, 18)
  J4_cmplt_t_jumpnv_t_r9_2_0           = ( 1,  7)
  J4_cmplt_t_jumpnv_t_r9_2_1           = (20, 21) signed
  J4_cmplt_t_jumpnv_nt_Rt32            = ( 8, 12)
  J4_cmplt_t_jumpnv_nt_Ns8             = (16, 18)
  J4_cmplt_t_jumpnv_nt_r9_2_0          = ( 1,  7)
  J4_cmplt_t_jumpnv_nt_r9_2_1          = (20, 21) signed
  J4_cmpltu_t_jumpnv_t_Rt32            = ( 8, 12)
  J4_cmpltu_t_jumpnv_t_Ns8             = (16, 18)
  J4_cmpltu_t_jumpnv_t_r9_2_0          = ( 1,  7)
  J4_cmpltu_t_jumpnv_t_r9_2_1          = (20, 21) signed
  J4_cmpltu_t_jumpnv_nt_Rt32           = ( 8, 12)
  J4_cmpltu_t_jumpnv_nt_Ns8            = (16, 18)
  J4_cmpltu_t_jumpnv_nt_r9_2_0         = ( 1,  7)
  J4_cmpltu_t_jumpnv_nt_r9_2_1         = (20, 21) signed
  J4_cmpeq_f_jumpnv_t_Ns8              = (16, 18)
  J4_cmpeq_f_jumpnv_t_Rt32             = ( 8, 12)
  J4_cmpeq_f_jumpnv_t_r9_2_0           = ( 1,  7)
  J4_cmpeq_f_jumpnv_t_r9_2_1           = (20, 21) signed
  J4_cmpeq_f_jumpnv_nt_Ns8             = (16, 18)
  J4_cmpeq_f_jumpnv_nt_Rt32            = ( 8, 12)
  J4_cmpeq_f_jumpnv_nt_r9_2_0          = ( 1,  7)
  J4_cmpeq_f_jumpnv_nt_r9_2_1          = (20, 21) signed
  J4_cmpgt_f_jumpnv_t_Ns8              = (16, 18)
  J4_cmpgt_f_jumpnv_t_Rt32             = ( 8, 12)
  J4_cmpgt_f_jumpnv_t_r9_2_0           = ( 1,  7)
  J4_cmpgt_f_jumpnv_t_r9_2_1           = (20, 21) signed
  J4_cmpgt_f_jumpnv_nt_Ns8             = (16, 18)
  J4_cmpgt_f_jumpnv_nt_Rt32            = ( 8, 12)
  J4_cmpgt_f_jumpnv_nt_r9_2_0          = ( 1,  7)
  J4_cmpgt_f_jumpnv_nt_r9_2_1          = (20, 21) signed
  J4_cmpgtu_f_jumpnv_t_Ns8             = (16, 18)
  J4_cmpgtu_f_jumpnv_t_Rt32            = ( 8, 12)
  J4_cmpgtu_f_jumpnv_t_r9_2_0          = ( 1,  7)
  J4_cmpgtu_f_jumpnv_t_r9_2_1          = (20, 21) signed
  J4_cmpgtu_f_jumpnv_nt_Ns8            = (16, 18)
  J4_cmpgtu_f_jumpnv_nt_Rt32           = ( 8, 12)
  J4_cmpgtu_f_jumpnv_nt_r9_2_0         = ( 1,  7)
  J4_cmpgtu_f_jumpnv_nt_r9_2_1         = (20, 21) signed
  J4_cmplt_f_jumpnv_t_Rt32             = ( 8, 12)
  J4_cmplt_f_jumpnv_t_Ns8              = (16, 18)
  J4_cmplt_f_jumpnv_t_r9_2_0           = ( 1,  7)
  J4_cmplt_f_jumpnv_t_r9_2_1           = (20, 21) signed
  J4_cmplt_f_jumpnv_nt_Rt32            = ( 8, 12)
  J4_cmplt_f_jumpnv_nt_Ns8             = (16, 18)
  J4_cmplt_f_jumpnv_nt_r9_2_0          = ( 1,  7)
  J4_cmplt_f_jumpnv_nt_r9_2_1          = (20, 21) signed
  J4_cmpltu_f_jumpnv_t_Rt32            = ( 8, 12)
  J4_cmpltu_f_jumpnv_t_Ns8             = (16, 18)
  J4_cmpltu_f_jumpnv_t_r9_2_0          = ( 1,  7)
  J4_cmpltu_f_jumpnv_t_r9_2_1          = (20, 21) signed
  J4_cmpltu_f_jumpnv_nt_Rt32           = ( 8, 12)
  J4_cmpltu_f_jumpnv_nt_Ns8            = (16, 18)
  J4_cmpltu_f_jumpnv_nt_r9_2_0         = ( 1,  7)
  J4_cmpltu_f_jumpnv_nt_r9_2_1         = (20, 21) signed
  J2_call_r22_2_0                      = ( 1, 13)
  J2_call_r22_2_1                      = (16, 24) signed
  J2_callt_Pu4                         = ( 8,  9)
  J2_callt_r15_2_0                     = ( 1,  7)
  J2_callt_r15_2_1                     = (13, 13)
  J2_callt_r15_2_2                     = (16, 20)
  J2_callt_r15_2_3                     = (22, 23) signed
  J2_callf_Pu4                         = ( 8,  9)
  J2_callf_r15_2_0                     = ( 1,  7)
  J2_callf_r15_2_1                     = (13, 13)
  J2_callf_r15_2_2                     = (16, 20)
  J2_callf_r15_2_3                     = (22, 23) signed
  J2_callr_Rs32                        = (16, 20)
  J2_callrt_Pu4                        = ( 8,  9)
  J2_callrt_Rs32                       = (16, 20)
  J2_callrf_Pu4                        = ( 8,  9)
  J2_callrf_Rs32                       = (16, 20)
  J2_loop0r_Rs32                       = (16, 20)
  J2_loop0r_r7_2_0                     = ( 3,  4)
  J2_loop0r_r7_2_1                     = ( 8, 12) signed
  J2_loop1r_Rs32                       = (16, 20)
  J2_loop1r_r7_2_0                     = ( 3,  4)
  J2_loop1r_r7_2_1                     = ( 8, 12) signed
  J2_loop0i_r7_2_0                     = ( 3,  4)
  J2_loop0i_r7_2_1                     = ( 8, 12) signed
  J2_loop0i_U10_0                      = ( 0,  1)
  J2_loop0i_U10_1                      = ( 5,  7)
  J2_loop0i_U10_2                      = (16, 20)
  J2_loop1i_r7_2_0                     = ( 3,  4)
  J2_loop1i_r7_2_1                     = ( 8, 12) signed
  J2_loop1i_U10_0                      = ( 0,  1)
  J2_loop1i_U10_1                      = ( 5,  7)
  J2_loop1i_U10_2                      = (16, 20)
  J2_ploop1sr_Rs32                     = (16, 20)
  J2_ploop1sr_r7_2_0                   = ( 3,  4)
  J2_ploop1sr_r7_2_1                   = ( 8, 12) signed
  J2_ploop1si_r7_2_0                   = ( 3,  4)
  J2_ploop1si_r7_2_1                   = ( 8, 12) signed
  J2_ploop1si_U10_0                    = ( 0,  1)
  J2_ploop1si_U10_1                    = ( 5,  7)
  J2_ploop1si_U10_2                    = (16, 20)
  J2_ploop2sr_Rs32                     = (16, 20)
  J2_ploop2sr_r7_2_0                   = ( 3,  4)
  J2_ploop2sr_r7_2_1                   = ( 8, 12) signed
  J2_ploop2si_r7_2_0                   = ( 3,  4)
  J2_ploop2si_r7_2_1                   = ( 8, 12) signed
  J2_ploop2si_U10_0                    = ( 0,  1)
  J2_ploop2si_U10_1                    = ( 5,  7)
  J2_ploop2si_U10_2                    = (16, 20)
  J2_ploop3sr_Rs32                     = (16, 20)
  J2_ploop3sr_r7_2_0                   = ( 3,  4)
  J2_ploop3sr_r7_2_1                   = ( 8, 12) signed
  J2_ploop3si_r7_2_0                   = ( 3,  4)
  J2_ploop3si_r7_2_1                   = ( 8, 12) signed
  J2_ploop3si_U10_0                    = ( 0,  1)
  J2_ploop3si_U10_1                    = ( 5,  7)
  J2_ploop3si_U10_2                    = (16, 20)
  L2_loadrub_io_Rd32                   = ( 0,  4)
  L2_loadrub_io_Rs32                   = (16, 20)
  L2_loadrub_io_s11_0_0                = ( 5, 13)
  L2_loadrub_io_s11_0_1                = (25, 26) signed
  L4_loadrub_ur_Rd32                   = ( 0,  4)
  L4_loadrub_ur_Rt32                   = (16, 20)
  L4_loadrub_ur_u2_0                   = ( 7,  7)
  L4_loadrub_ur_u2_1                   = (13, 13)
  L4_loadrub_ur_U6_0                   = ( 5,  6)
  L4_loadrub_ur_U6_1                   = ( 8, 11)
  L4_loadrub_ap_Rd32                   = ( 0,  4)
  L4_loadrub_ap_Re32                   = (16, 20)
  L4_loadrub_ap_U6_0                   = ( 5,  6)
  L4_loadrub_ap_U6_1                   = ( 8, 11)
  L2_loadrub_pr_Rd32                   = ( 0,  4)
  L2_loadrub_pr_Rx32                   = (16, 20)
  L2_loadrub_pr_Mu2                    = (13, 13)
  L2_loadrub_pbr_Rd32                  = ( 0,  4)
  L2_loadrub_pbr_Rx32                  = (16, 20)
  L2_loadrub_pbr_Mu2                   = (13, 13)
  L2_loadrub_pi_Rd32                   = ( 0,  4)
  L2_loadrub_pi_Rx32                   = (16, 20)
  L2_loadrub_pi_s4_0_0                 = ( 5,  8) signed
  L2_loadrub_pci_Rd32                  = ( 0,  4)
  L2_loadrub_pci_Rx32                  = (16, 20)
  L2_loadrub_pci_Mu2                   = (13, 13)
  L2_loadrub_pci_s4_0_0                = ( 5,  8) signed
  L2_loadrub_pcr_Rd32                  = ( 0,  4)
  L2_loadrub_pcr_Rx32                  = (16, 20)
  L2_loadrub_pcr_Mu2                   = (13, 13)
  L2_loadrb_io_Rd32                    = ( 0,  4)
  L2_loadrb_io_Rs32                    = (16, 20)
  L2_loadrb_io_s11_0_0                 = ( 5, 13)
  L2_loadrb_io_s11_0_1                 = (25, 26) signed
  L4_loadrb_ur_Rd32                    = ( 0,  4)
  L4_loadrb_ur_Rt32                    = (16, 20)
  L4_loadrb_ur_u2_0                    = ( 7,  7)
  L4_loadrb_ur_u2_1                    = (13, 13)
  L4_loadrb_ur_U6_0                    = ( 5,  6)
  L4_loadrb_ur_U6_1                    = ( 8, 11)
  L4_loadrb_ap_Rd32                    = ( 0,  4)
  L4_loadrb_ap_Re32                    = (16, 20)
  L4_loadrb_ap_U6_0                    = ( 5,  6)
  L4_loadrb_ap_U6_1                    = ( 8, 11)
  L2_loadrb_pr_Rd32                    = ( 0,  4)
  L2_loadrb_pr_Rx32                    = (16, 20)
  L2_loadrb_pr_Mu2                     = (13, 13)
  L2_loadrb_pbr_Rd32                   = ( 0,  4)
  L2_loadrb_pbr_Rx32                   = (16, 20)
  L2_loadrb_pbr_Mu2                    = (13, 13)
  L2_loadrb_pi_Rd32                    = ( 0,  4)
  L2_loadrb_pi_Rx32                    = (16, 20)
  L2_loadrb_pi_s4_0_0                  = ( 5,  8) signed
  L2_loadrb_pci_Rd32                   = ( 0,  4)
  L2_loadrb_pci_Rx32                   = (16, 20)
  L2_loadrb_pci_Mu2                    = (13, 13)
  L2_loadrb_pci_s4_0_0                 = ( 5,  8) signed
  L2_loadrb_pcr_Rd32                   = ( 0,  4)
  L2_loadrb_pcr_Rx32                   = (16, 20)
  L2_loadrb_pcr_Mu2                    = (13, 13)
  L2_loadruh_io_Rd32                   = ( 0,  4)
  L2_loadruh_io_Rs32                   = (16, 20)
  L2_loadruh_io_s11_1_0                = ( 5, 13)
  L2_loadruh_io_s11_1_1                = (25, 26) signed
  L4_loadruh_ur_Rd32                   = ( 0,  4)
  L4_loadruh_ur_Rt32                   = (16, 20)
  L4_loadruh_ur_u2_0                   = ( 7,  7)
  L4_loadruh_ur_u2_1                   = (13, 13)
  L4_loadruh_ur_U6_0                   = ( 5,  6)
  L4_loadruh_ur_U6_1                   = ( 8, 11)
  L4_loadruh_ap_Rd32                   = ( 0,  4)
  L4_loadruh_ap_Re32                   = (16, 20)
  L4_loadruh_ap_U6_0                   = ( 5,  6)
  L4_loadruh_ap_U6_1                   = ( 8, 11)
  L2_loadruh_pr_Rd32                   = ( 0,  4)
  L2_loadruh_pr_Rx32                   = (16, 20)
  L2_loadruh_pr_Mu2                    = (13, 13)
  L2_loadruh_pbr_Rd32                  = ( 0,  4)
  L2_loadruh_pbr_Rx32                  = (16, 20)
  L2_loadruh_pbr_Mu2                   = (13, 13)
  L2_loadruh_pi_Rd32                   = ( 0,  4)
  L2_loadruh_pi_Rx32                   = (16, 20)
  L2_loadruh_pi_s4_1_0                 = ( 5,  8) signed
  L2_loadruh_pci_Rd32                  = ( 0,  4)
  L2_loadruh_pci_Rx32                  = (16, 20)
  L2_loadruh_pci_Mu2                   = (13, 13)
  L2_loadruh_pci_s4_1_0                = ( 5,  8) signed
  L2_loadruh_pcr_Rd32                  = ( 0,  4)
  L2_loadruh_pcr_Rx32                  = (16, 20)
  L2_loadruh_pcr_Mu2                   = (13, 13)
  L2_loadrh_io_Rd32                    = ( 0,  4)
  L2_loadrh_io_Rs32                    = (16, 20)
  L2_loadrh_io_s11_1_0                 = ( 5, 13)
  L2_loadrh_io_s11_1_1                 = (25, 26) signed
  L4_loadrh_ur_Rd32                    = ( 0,  4)
  L4_loadrh_ur_Rt32                    = (16, 20)
  L4_loadrh_ur_u2_0                    = ( 7,  7)
  L4_loadrh_ur_u2_1                    = (13, 13)
  L4_loadrh_ur_U6_0                    = ( 5,  6)
  L4_loadrh_ur_U6_1                    = ( 8, 11)
  L4_loadrh_ap_Rd32                    = ( 0,  4)
  L4_loadrh_ap_Re32                    = (16, 20)
  L4_loadrh_ap_U6_0                    = ( 5,  6)
  L4_loadrh_ap_U6_1                    = ( 8, 11)
  L2_loadrh_pr_Rd32                    = ( 0,  4)
  L2_loadrh_pr_Rx32                    = (16, 20)
  L2_loadrh_pr_Mu2                     = (13, 13)
  L2_loadrh_pbr_Rd32                   = ( 0,  4)
  L2_loadrh_pbr_Rx32                   = (16, 20)
  L2_loadrh_pbr_Mu2                    = (13, 13)
  L2_loadrh_pi_Rd32                    = ( 0,  4)
  L2_loadrh_pi_Rx32                    = (16, 20)
  L2_loadrh_pi_s4_1_0                  = ( 5,  8) signed
  L2_loadrh_pci_Rd32                   = ( 0,  4)
  L2_loadrh_pci_Rx32                   = (16, 20)
  L2_loadrh_pci_Mu2                    = (13, 13)
  L2_loadrh_pci_s4_1_0                 = ( 5,  8) signed
  L2_loadrh_pcr_Rd32                   = ( 0,  4)
  L2_loadrh_pcr_Rx32                   = (16, 20)
  L2_loadrh_pcr_Mu2                    = (13, 13)
  L2_loadri_io_Rd32                    = ( 0,  4)
  L2_loadri_io_Rs32                    = (16, 20)
  L2_loadri_io_s11_2_0                 = ( 5, 13)
  L2_loadri_io_s11_2_1                 = (25, 26) signed
  L4_loadri_ur_Rd32                    = ( 0,  4)
  L4_loadri_ur_Rt32                    = (16, 20)
  L4_loadri_ur_u2_0                    = ( 7,  7)
  L4_loadri_ur_u2_1                    = (13, 13)
  L4_loadri_ur_U6_0                    = ( 5,  6)
  L4_loadri_ur_U6_1                    = ( 8, 11)
  L4_loadri_ap_Rd32                    = ( 0,  4)
  L4_loadri_ap_Re32                    = (16, 20)
  L4_loadri_ap_U6_0                    = ( 5,  6)
  L4_loadri_ap_U6_1                    = ( 8, 11)
  L2_loadri_pr_Rd32                    = ( 0,  4)
  L2_loadri_pr_Rx32                    = (16, 20)
  L2_loadri_pr_Mu2                     = (13, 13)
  L2_loadri_pbr_Rd32                   = ( 0,  4)
  L2_loadri_pbr_Rx32                   = (16, 20)
  L2_loadri_pbr_Mu2                    = (13, 13)
  L2_loadri_pi_Rd32                    = ( 0,  4)
  L2_loadri_pi_Rx32                    = (16, 20)
  L2_loadri_pi_s4_2_0                  = ( 5,  8) signed
  L2_loadri_pci_Rd32                   = ( 0,  4)
  L2_loadri_pci_Rx32                   = (16, 20)
  L2_loadri_pci_Mu2                    = (13, 13)
  L2_loadri_pci_s4_2_0                 = ( 5,  8) signed
  L2_loadri_pcr_Rd32                   = ( 0,  4)
  L2_loadri_pcr_Rx32                   = (16, 20)
  L2_loadri_pcr_Mu2                    = (13, 13)
  L2_loadrd_io_Rdd32                   = ( 0,  4)
  L2_loadrd_io_Rs32                    = (16, 20)
  L2_loadrd_io_s11_3_0                 = ( 5, 13)
  L2_loadrd_io_s11_3_1                 = (25, 26) signed
  L4_loadrd_ur_Rdd32                   = ( 0,  4)
  L4_loadrd_ur_Rt32                    = (16, 20)
  L4_loadrd_ur_u2_0                    = ( 7,  7)
  L4_loadrd_ur_u2_1                    = (13, 13)
  L4_loadrd_ur_U6_0                    = ( 5,  6)
  L4_loadrd_ur_U6_1                    = ( 8, 11)
  L4_loadrd_ap_Rdd32                   = ( 0,  4)
  L4_loadrd_ap_Re32                    = (16, 20)
  L4_loadrd_ap_U6_0                    = ( 5,  6)
  L4_loadrd_ap_U6_1                    = ( 8, 11)
  L2_loadrd_pr_Rdd32                   = ( 0,  4)
  L2_loadrd_pr_Rx32                    = (16, 20)
  L2_loadrd_pr_Mu2                     = (13, 13)
  L2_loadrd_pbr_Rdd32                  = ( 0,  4)
  L2_loadrd_pbr_Rx32                   = (16, 20)
  L2_loadrd_pbr_Mu2                    = (13, 13)
  L2_loadrd_pi_Rdd32                   = ( 0,  4)
  L2_loadrd_pi_Rx32                    = (16, 20)
  L2_loadrd_pi_s4_3_0                  = ( 5,  8) signed
  L2_loadrd_pci_Rdd32                  = ( 0,  4)
  L2_loadrd_pci_Rx32                   = (16, 20)
  L2_loadrd_pci_Mu2                    = (13, 13)
  L2_loadrd_pci_s4_3_0                 = ( 5,  8) signed
  L2_loadrd_pcr_Rdd32                  = ( 0,  4)
  L2_loadrd_pcr_Rx32                   = (16, 20)
  L2_loadrd_pcr_Mu2                    = (13, 13)
  L2_loadbzw2_io_Rd32                  = ( 0,  4)
  L2_loadbzw2_io_Rs32                  = (16, 20)
  L2_loadbzw2_io_s11_1_0               = ( 5, 13)
  L2_loadbzw2_io_s11_1_1               = (25, 26) signed
  L4_loadbzw2_ur_Rd32                  = ( 0,  4)
  L4_loadbzw2_ur_Rt32                  = (16, 20)
  L4_loadbzw2_ur_u2_0                  = ( 7,  7)
  L4_loadbzw2_ur_u2_1                  = (13, 13)
  L4_loadbzw2_ur_U6_0                  = ( 5,  6)
  L4_loadbzw2_ur_U6_1                  = ( 8, 11)
  L4_loadbzw2_ap_Rd32                  = ( 0,  4)
  L4_loadbzw2_ap_Re32                  = (16, 20)
  L4_loadbzw2_ap_U6_0                  = ( 5,  6)
  L4_loadbzw2_ap_U6_1                  = ( 8, 11)
  L2_loadbzw2_pr_Rd32                  = ( 0,  4)
  L2_loadbzw2_pr_Rx32                  = (16, 20)
  L2_loadbzw2_pr_Mu2                   = (13, 13)
  L2_loadbzw2_pbr_Rd32                 = ( 0,  4)
  L2_loadbzw2_pbr_Rx32                 = (16, 20)
  L2_loadbzw2_pbr_Mu2                  = (13, 13)
  L2_loadbzw2_pi_Rd32                  = ( 0,  4)
  L2_loadbzw2_pi_Rx32                  = (16, 20)
  L2_loadbzw2_pi_s4_1_0                = ( 5,  8) signed
  L2_loadbzw2_pci_Rd32                 = ( 0,  4)
  L2_loadbzw2_pci_Rx32                 = (16, 20)
  L2_loadbzw2_pci_Mu2                  = (13, 13)
  L2_loadbzw2_pci_s4_1_0               = ( 5,  8) signed
  L2_loadbzw2_pcr_Rd32                 = ( 0,  4)
  L2_loadbzw2_pcr_Rx32                 = (16, 20)
  L2_loadbzw2_pcr_Mu2                  = (13, 13)
  L2_loadbzw4_io_Rdd32                 = ( 0,  4)
  L2_loadbzw4_io_Rs32                  = (16, 20)
  L2_loadbzw4_io_s11_2_0               = ( 5, 13)
  L2_loadbzw4_io_s11_2_1               = (25, 26) signed
  L4_loadbzw4_ur_Rdd32                 = ( 0,  4)
  L4_loadbzw4_ur_Rt32                  = (16, 20)
  L4_loadbzw4_ur_u2_0                  = ( 7,  7)
  L4_loadbzw4_ur_u2_1                  = (13, 13)
  L4_loadbzw4_ur_U6_0                  = ( 5,  6)
  L4_loadbzw4_ur_U6_1                  = ( 8, 11)
  L4_loadbzw4_ap_Rdd32                 = ( 0,  4)
  L4_loadbzw4_ap_Re32                  = (16, 20)
  L4_loadbzw4_ap_U6_0                  = ( 5,  6)
  L4_loadbzw4_ap_U6_1                  = ( 8, 11)
  L2_loadbzw4_pr_Rdd32                 = ( 0,  4)
  L2_loadbzw4_pr_Rx32                  = (16, 20)
  L2_loadbzw4_pr_Mu2                   = (13, 13)
  L2_loadbzw4_pbr_Rdd32                = ( 0,  4)
  L2_loadbzw4_pbr_Rx32                 = (16, 20)
  L2_loadbzw4_pbr_Mu2                  = (13, 13)
  L2_loadbzw4_pi_Rdd32                 = ( 0,  4)
  L2_loadbzw4_pi_Rx32                  = (16, 20)
  L2_loadbzw4_pi_s4_2_0                = ( 5,  8) signed
  L2_loadbzw4_pci_Rdd32                = ( 0,  4)
  L2_loadbzw4_pci_Rx32                 = (16, 20)
  L2_loadbzw4_pci_Mu2                  = (13, 13)
  L2_loadbzw4_pci_s4_2_0               = ( 5,  8) signed
  L2_loadbzw4_pcr_Rdd32                = ( 0,  4)
  L2_loadbzw4_pcr_Rx32                 = (16, 20)
  L2_loadbzw4_pcr_Mu2                  = (13, 13)
  L2_loadbsw2_io_Rd32                  = ( 0,  4)
  L2_loadbsw2_io_Rs32                  = (16, 20)
  L2_loadbsw2_io_s11_1_0               = ( 5, 13)
  L2_loadbsw2_io_s11_1_1               = (25, 26) signed
  L4_loadbsw2_ur_Rd32                  = ( 0,  4)
  L4_loadbsw2_ur_Rt32                  = (16, 20)
  L4_loadbsw2_ur_u2_0                  = ( 7,  7)
  L4_loadbsw2_ur_u2_1                  = (13, 13)
  L4_loadbsw2_ur_U6_0                  = ( 5,  6)
  L4_loadbsw2_ur_U6_1                  = ( 8, 11)
  L4_loadbsw2_ap_Rd32                  = ( 0,  4)
  L4_loadbsw2_ap_Re32                  = (16, 20)
  L4_loadbsw2_ap_U6_0                  = ( 5,  6)
  L4_loadbsw2_ap_U6_1                  = ( 8, 11)
  L2_loadbsw2_pr_Rd32                  = ( 0,  4)
  L2_loadbsw2_pr_Rx32                  = (16, 20)
  L2_loadbsw2_pr_Mu2                   = (13, 13)
  L2_loadbsw2_pbr_Rd32                 = ( 0,  4)
  L2_loadbsw2_pbr_Rx32                 = (16, 20)
  L2_loadbsw2_pbr_Mu2                  = (13, 13)
  L2_loadbsw2_pi_Rd32                  = ( 0,  4)
  L2_loadbsw2_pi_Rx32                  = (16, 20)
  L2_loadbsw2_pi_s4_1_0                = ( 5,  8) signed
  L2_loadbsw2_pci_Rd32                 = ( 0,  4)
  L2_loadbsw2_pci_Rx32                 = (16, 20)
  L2_loadbsw2_pci_Mu2                  = (13, 13)
  L2_loadbsw2_pci_s4_1_0               = ( 5,  8) signed
  L2_loadbsw2_pcr_Rd32                 = ( 0,  4)
  L2_loadbsw2_pcr_Rx32                 = (16, 20)
  L2_loadbsw2_pcr_Mu2                  = (13, 13)
  L2_loadbsw4_io_Rdd32                 = ( 0,  4)
  L2_loadbsw4_io_Rs32                  = (16, 20)
  L2_loadbsw4_io_s11_2_0               = ( 5, 13)
  L2_loadbsw4_io_s11_2_1               = (25, 26) signed
  L4_loadbsw4_ur_Rdd32                 = ( 0,  4)
  L4_loadbsw4_ur_Rt32                  = (16, 20)
  L4_loadbsw4_ur_u2_0                  = ( 7,  7)
  L4_loadbsw4_ur_u2_1                  = (13, 13)
  L4_loadbsw4_ur_U6_0                  = ( 5,  6)
  L4_loadbsw4_ur_U6_1                  = ( 8, 11)
  L4_loadbsw4_ap_Rdd32                 = ( 0,  4)
  L4_loadbsw4_ap_Re32                  = (16, 20)
  L4_loadbsw4_ap_U6_0                  = ( 5,  6)
  L4_loadbsw4_ap_U6_1                  = ( 8, 11)
  L2_loadbsw4_pr_Rdd32                 = ( 0,  4)
  L2_loadbsw4_pr_Rx32                  = (16, 20)
  L2_loadbsw4_pr_Mu2                   = (13, 13)
  L2_loadbsw4_pbr_Rdd32                = ( 0,  4)
  L2_loadbsw4_pbr_Rx32                 = (16, 20)
  L2_loadbsw4_pbr_Mu2                  = (13, 13)
  L2_loadbsw4_pi_Rdd32                 = ( 0,  4)
  L2_loadbsw4_pi_Rx32                  = (16, 20)
  L2_loadbsw4_pi_s4_2_0                = ( 5,  8) signed
  L2_loadbsw4_pci_Rdd32                = ( 0,  4)
  L2_loadbsw4_pci_Rx32                 = (16, 20)
  L2_loadbsw4_pci_Mu2                  = (13, 13)
  L2_loadbsw4_pci_s4_2_0               = ( 5,  8) signed
  L2_loadbsw4_pcr_Rdd32                = ( 0,  4)
  L2_loadbsw4_pcr_Rx32                 = (16, 20)
  L2_loadbsw4_pcr_Mu2                  = (13, 13)
  L2_loadalignh_io_Ryy32               = ( 0,  4)
  L2_loadalignh_io_Rs32                = (16, 20)
  L2_loadalignh_io_s11_1_0             = ( 5, 13)
  L2_loadalignh_io_s11_1_1             = (25, 26) signed
  L4_loadalignh_ur_Ryy32               = ( 0,  4)
  L4_loadalignh_ur_Rt32                = (16, 20)
  L4_loadalignh_ur_u2_0                = ( 7,  7)
  L4_loadalignh_ur_u2_1                = (13, 13)
  L4_loadalignh_ur_U6_0                = ( 5,  6)
  L4_loadalignh_ur_U6_1                = ( 8, 11)
  L4_loadalignh_ap_Ryy32               = ( 0,  4)
  L4_loadalignh_ap_Re32                = (16, 20)
  L4_loadalignh_ap_U6_0                = ( 5,  6)
  L4_loadalignh_ap_U6_1                = ( 8, 11)
  L2_loadalignh_pr_Ryy32               = ( 0,  4)
  L2_loadalignh_pr_Rx32                = (16, 20)
  L2_loadalignh_pr_Mu2                 = (13, 13)
  L2_loadalignh_pbr_Ryy32              = ( 0,  4)
  L2_loadalignh_pbr_Rx32               = (16, 20)
  L2_loadalignh_pbr_Mu2                = (13, 13)
  L2_loadalignh_pi_Ryy32               = ( 0,  4)
  L2_loadalignh_pi_Rx32                = (16, 20)
  L2_loadalignh_pi_s4_1_0              = ( 5,  8) signed
  L2_loadalignh_pci_Ryy32              = ( 0,  4)
  L2_loadalignh_pci_Rx32               = (16, 20)
  L2_loadalignh_pci_Mu2                = (13, 13)
  L2_loadalignh_pci_s4_1_0             = ( 5,  8) signed
  L2_loadalignh_pcr_Ryy32              = ( 0,  4)
  L2_loadalignh_pcr_Rx32               = (16, 20)
  L2_loadalignh_pcr_Mu2                = (13, 13)
  L2_loadalignb_io_Ryy32               = ( 0,  4)
  L2_loadalignb_io_Rs32                = (16, 20)
  L2_loadalignb_io_s11_0_0             = ( 5, 13)
  L2_loadalignb_io_s11_0_1             = (25, 26) signed
  L4_loadalignb_ur_Ryy32               = ( 0,  4)
  L4_loadalignb_ur_Rt32                = (16, 20)
  L4_loadalignb_ur_u2_0                = ( 7,  7)
  L4_loadalignb_ur_u2_1                = (13, 13)
  L4_loadalignb_ur_U6_0                = ( 5,  6)
  L4_loadalignb_ur_U6_1                = ( 8, 11)
  L4_loadalignb_ap_Ryy32               = ( 0,  4)
  L4_loadalignb_ap_Re32                = (16, 20)
  L4_loadalignb_ap_U6_0                = ( 5,  6)
  L4_loadalignb_ap_U6_1                = ( 8, 11)
  L2_loadalignb_pr_Ryy32               = ( 0,  4)
  L2_loadalignb_pr_Rx32                = (16, 20)
  L2_loadalignb_pr_Mu2                 = (13, 13)
  L2_loadalignb_pbr_Ryy32              = ( 0,  4)
  L2_loadalignb_pbr_Rx32               = (16, 20)
  L2_loadalignb_pbr_Mu2                = (13, 13)
  L2_loadalignb_pi_Ryy32               = ( 0,  4)
  L2_loadalignb_pi_Rx32                = (16, 20)
  L2_loadalignb_pi_s4_0_0              = ( 5,  8) signed
  L2_loadalignb_pci_Ryy32              = ( 0,  4)
  L2_loadalignb_pci_Rx32               = (16, 20)
  L2_loadalignb_pci_Mu2                = (13, 13)
  L2_loadalignb_pci_s4_0_0             = ( 5,  8) signed
  L2_loadalignb_pcr_Ryy32              = ( 0,  4)
  L2_loadalignb_pcr_Rx32               = (16, 20)
  L2_loadalignb_pcr_Mu2                = (13, 13)
  S2_storerb_io_Rs32                   = (16, 20)
  S2_storerb_io_Rt32                   = ( 8, 12)
  S2_storerb_io_s11_0_0                = ( 0,  7)
  S2_storerb_io_s11_0_1                = (13, 13)
  S2_storerb_io_s11_0_2                = (25, 26) signed
  S2_storerb_pi_Rx32                   = (16, 20)
  S2_storerb_pi_Rt32                   = ( 8, 12)
  S2_storerb_pi_s4_0_0                 = ( 3,  6) signed
  S4_storerb_ap_Re32                   = (16, 20)
  S4_storerb_ap_Rt32                   = ( 8, 12)
  S4_storerb_ap_U6_0                   = ( 0,  5)
  S2_storerb_pr_Rx32                   = (16, 20)
  S2_storerb_pr_Mu2                    = (13, 13)
  S2_storerb_pr_Rt32                   = ( 8, 12)
  S4_storerb_ur_Ru32                   = (16, 20)
  S4_storerb_ur_Rt32                   = ( 8, 12)
  S4_storerb_ur_u2_0                   = ( 6,  6)
  S4_storerb_ur_u2_1                   = (13, 13)
  S4_storerb_ur_U6_0                   = ( 0,  5)
  S2_storerb_pbr_Rx32                  = (16, 20)
  S2_storerb_pbr_Mu2                   = (13, 13)
  S2_storerb_pbr_Rt32                  = ( 8, 12)
  S2_storerb_pci_Rx32                  = (16, 20)
  S2_storerb_pci_Mu2                   = (13, 13)
  S2_storerb_pci_Rt32                  = ( 8, 12)
  S2_storerb_pci_s4_0_0                = ( 3,  6) signed
  S2_storerb_pcr_Rx32                  = (16, 20)
  S2_storerb_pcr_Mu2                   = (13, 13)
  S2_storerb_pcr_Rt32                  = ( 8, 12)
  S2_storerh_io_Rs32                   = (16, 20)
  S2_storerh_io_Rt32                   = ( 8, 12)
  S2_storerh_io_s11_1_0                = ( 0,  7)
  S2_storerh_io_s11_1_1                = (13, 13)
  S2_storerh_io_s11_1_2                = (25, 26) signed
  S2_storerh_pi_Rx32                   = (16, 20)
  S2_storerh_pi_Rt32                   = ( 8, 12)
  S2_storerh_pi_s4_1_0                 = ( 3,  6) signed
  S4_storerh_ap_Re32                   = (16, 20)
  S4_storerh_ap_Rt32                   = ( 8, 12)
  S4_storerh_ap_U6_0                   = ( 0,  5)
  S2_storerh_pr_Rx32                   = (16, 20)
  S2_storerh_pr_Mu2                    = (13, 13)
  S2_storerh_pr_Rt32                   = ( 8, 12)
  S4_storerh_ur_Ru32                   = (16, 20)
  S4_storerh_ur_Rt32                   = ( 8, 12)
  S4_storerh_ur_u2_0                   = ( 6,  6)
  S4_storerh_ur_u2_1                   = (13, 13)
  S4_storerh_ur_U6_0                   = ( 0,  5)
  S2_storerh_pbr_Rx32                  = (16, 20)
  S2_storerh_pbr_Mu2                   = (13, 13)
  S2_storerh_pbr_Rt32                  = ( 8, 12)
  S2_storerh_pci_Rx32                  = (16, 20)
  S2_storerh_pci_Mu2                   = (13, 13)
  S2_storerh_pci_Rt32                  = ( 8, 12)
  S2_storerh_pci_s4_1_0                = ( 3,  6) signed
  S2_storerh_pcr_Rx32                  = (16, 20)
  S2_storerh_pcr_Mu2                   = (13, 13)
  S2_storerh_pcr_Rt32                  = ( 8, 12)
  S2_storerf_io_Rs32                   = (16, 20)
  S2_storerf_io_Rt32                   = ( 8, 12)
  S2_storerf_io_s11_1_0                = ( 0,  7)
  S2_storerf_io_s11_1_1                = (13, 13)
  S2_storerf_io_s11_1_2                = (25, 26) signed
  S2_storerf_pi_Rx32                   = (16, 20)
  S2_storerf_pi_Rt32                   = ( 8, 12)
  S2_storerf_pi_s4_1_0                 = ( 3,  6) signed
  S4_storerf_ap_Re32                   = (16, 20)
  S4_storerf_ap_Rt32                   = ( 8, 12)
  S4_storerf_ap_U6_0                   = ( 0,  5)
  S2_storerf_pr_Rx32                   = (16, 20)
  S2_storerf_pr_Mu2                    = (13, 13)
  S2_storerf_pr_Rt32                   = ( 8, 12)
  S4_storerf_ur_Ru32                   = (16, 20)
  S4_storerf_ur_Rt32                   = ( 8, 12)
  S4_storerf_ur_u2_0                   = ( 6,  6)
  S4_storerf_ur_u2_1                   = (13, 13)
  S4_storerf_ur_U6_0                   = ( 0,  5)
  S2_storerf_pbr_Rx32                  = (16, 20)
  S2_storerf_pbr_Mu2                   = (13, 13)
  S2_storerf_pbr_Rt32                  = ( 8, 12)
  S2_storerf_pci_Rx32                  = (16, 20)
  S2_storerf_pci_Mu2                   = (13, 13)
  S2_storerf_pci_Rt32                  = ( 8, 12)
  S2_storerf_pci_s4_1_0                = ( 3,  6) signed
  S2_storerf_pcr_Rx32                  = (16, 20)
  S2_storerf_pcr_Mu2                   = (13, 13)
  S2_storerf_pcr_Rt32                  = ( 8, 12)
  S2_storeri_io_Rs32                   = (16, 20)
  S2_storeri_io_Rt32                   = ( 8, 12)
  S2_storeri_io_s11_2_0                = ( 0,  7)
  S2_storeri_io_s11_2_1                = (13, 13)
  S2_storeri_io_s11_2_2                = (25, 26) signed
  S2_storeri_pi_Rx32                   = (16, 20)
  S2_storeri_pi_Rt32                   = ( 8, 12)
  S2_storeri_pi_s4_2_0                 = ( 3,  6) signed
  S4_storeri_ap_Re32                   = (16, 20)
  S4_storeri_ap_Rt32                   = ( 8, 12)
  S4_storeri_ap_U6_0                   = ( 0,  5)
  S2_storeri_pr_Rx32                   = (16, 20)
  S2_storeri_pr_Mu2                    = (13, 13)
  S2_storeri_pr_Rt32                   = ( 8, 12)
  S4_storeri_ur_Ru32                   = (16, 20)
  S4_storeri_ur_Rt32                   = ( 8, 12)
  S4_storeri_ur_u2_0                   = ( 6,  6)
  S4_storeri_ur_u2_1                   = (13, 13)
  S4_storeri_ur_U6_0                   = ( 0,  5)
  S2_storeri_pbr_Rx32                  = (16, 20)
  S2_storeri_pbr_Mu2                   = (13, 13)
  S2_storeri_pbr_Rt32                  = ( 8, 12)
  S2_storeri_pci_Rx32                  = (16, 20)
  S2_storeri_pci_Mu2                   = (13, 13)
  S2_storeri_pci_Rt32                  = ( 8, 12)
  S2_storeri_pci_s4_2_0                = ( 3,  6) signed
  S2_storeri_pcr_Rx32                  = (16, 20)
  S2_storeri_pcr_Mu2                   = (13, 13)
  S2_storeri_pcr_Rt32                  = ( 8, 12)
  S2_storerd_io_Rs32                   = (16, 20)
  S2_storerd_io_Rtt32                  = ( 8, 12)
  S2_storerd_io_s11_3_0                = ( 0,  7)
  S2_storerd_io_s11_3_1                = (13, 13)
  S2_storerd_io_s11_3_2                = (25, 26) signed
  S2_storerd_pi_Rx32                   = (16, 20)
  S2_storerd_pi_Rtt32                  = ( 8, 12)
  S2_storerd_pi_s4_3_0                 = ( 3,  6) signed
  S4_storerd_ap_Re32                   = (16, 20)
  S4_storerd_ap_Rtt32                  = ( 8, 12)
  S4_storerd_ap_U6_0                   = ( 0,  5)
  S2_storerd_pr_Rx32                   = (16, 20)
  S2_storerd_pr_Mu2                    = (13, 13)
  S2_storerd_pr_Rtt32                  = ( 8, 12)
  S4_storerd_ur_Ru32                   = (16, 20)
  S4_storerd_ur_Rtt32                  = ( 8, 12)
  S4_storerd_ur_u2_0                   = ( 6,  6)
  S4_storerd_ur_u2_1                   = (13, 13)
  S4_storerd_ur_U6_0                   = ( 0,  5)
  S2_storerd_pbr_Rx32                  = (16, 20)
  S2_storerd_pbr_Mu2                   = (13, 13)
  S2_storerd_pbr_Rtt32                 = ( 8, 12)
  S2_storerd_pci_Rx32                  = (16, 20)
  S2_storerd_pci_Mu2                   = (13, 13)
  S2_storerd_pci_Rtt32                 = ( 8, 12)
  S2_storerd_pci_s4_3_0                = ( 3,  6) signed
  S2_storerd_pcr_Rx32                  = (16, 20)
  S2_storerd_pcr_Mu2                   = (13, 13)
  S2_storerd_pcr_Rtt32                 = ( 8, 12)
  S2_storerinew_io_Rs32                = (16, 20)
  S2_storerinew_io_Nt8                 = ( 8, 10)
  S2_storerinew_io_s11_2_0             = ( 0,  7)
  S2_storerinew_io_s11_2_1             = (13, 13)
  S2_storerinew_io_s11_2_2             = (25, 26) signed
  S2_storerinew_pi_Rx32                = (16, 20)
  S2_storerinew_pi_Nt8                 = ( 8, 10)
  S2_storerinew_pi_s4_2_0              = ( 3,  6) signed
  S4_storerinew_ap_Re32                = (16, 20)
  S4_storerinew_ap_Nt8                 = ( 8, 10)
  S4_storerinew_ap_U6_0                = ( 0,  5)
  S2_storerinew_pr_Rx32                = (16, 20)
  S2_storerinew_pr_Mu2                 = (13, 13)
  S2_storerinew_pr_Nt8                 = ( 8, 10)
  S4_storerinew_ur_Ru32                = (16, 20)
  S4_storerinew_ur_Nt8                 = ( 8, 10)
  S4_storerinew_ur_u2_0                = ( 6,  6)
  S4_storerinew_ur_u2_1                = (13, 13)
  S4_storerinew_ur_U6_0                = ( 0,  5)
  S2_storerinew_pbr_Rx32               = (16, 20)
  S2_storerinew_pbr_Mu2                = (13, 13)
  S2_storerinew_pbr_Nt8                = ( 8, 10)
  S2_storerinew_pci_Rx32               = (16, 20)
  S2_storerinew_pci_Mu2                = (13, 13)
  S2_storerinew_pci_Nt8                = ( 8, 10)
  S2_storerinew_pci_s4_2_0             = ( 3,  6) signed
  S2_storerinew_pcr_Rx32               = (16, 20)
  S2_storerinew_pcr_Mu2                = (13, 13)
  S2_storerinew_pcr_Nt8                = ( 8, 10)
  S2_storerbnew_io_Rs32                = (16, 20)
  S2_storerbnew_io_Nt8                 = ( 8, 10)
  S2_storerbnew_io_s11_0_0             = ( 0,  7)
  S2_storerbnew_io_s11_0_1             = (13, 13)
  S2_storerbnew_io_s11_0_2             = (25, 26) signed
  S2_storerbnew_pi_Rx32                = (16, 20)
  S2_storerbnew_pi_Nt8                 = ( 8, 10)
  S2_storerbnew_pi_s4_0_0              = ( 3,  6) signed
  S4_storerbnew_ap_Re32                = (16, 20)
  S4_storerbnew_ap_Nt8                 = ( 8, 10)
  S4_storerbnew_ap_U6_0                = ( 0,  5)
  S2_storerbnew_pr_Rx32                = (16, 20)
  S2_storerbnew_pr_Mu2                 = (13, 13)
  S2_storerbnew_pr_Nt8                 = ( 8, 10)
  S4_storerbnew_ur_Ru32                = (16, 20)
  S4_storerbnew_ur_Nt8                 = ( 8, 10)
  S4_storerbnew_ur_u2_0                = ( 6,  6)
  S4_storerbnew_ur_u2_1                = (13, 13)
  S4_storerbnew_ur_U6_0                = ( 0,  5)
  S2_storerbnew_pbr_Rx32               = (16, 20)
  S2_storerbnew_pbr_Mu2                = (13, 13)
  S2_storerbnew_pbr_Nt8                = ( 8, 10)
  S2_storerbnew_pci_Rx32               = (16, 20)
  S2_storerbnew_pci_Mu2                = (13, 13)
  S2_storerbnew_pci_Nt8                = ( 8, 10)
  S2_storerbnew_pci_s4_0_0             = ( 3,  6) signed
  S2_storerbnew_pcr_Rx32               = (16, 20)
  S2_storerbnew_pcr_Mu2                = (13, 13)
  S2_storerbnew_pcr_Nt8                = ( 8, 10)
  S2_storerhnew_io_Rs32                = (16, 20)
  S2_storerhnew_io_Nt8                 = ( 8, 10)
  S2_storerhnew_io_s11_1_0             = ( 0,  7)
  S2_storerhnew_io_s11_1_1             = (13, 13)
  S2_storerhnew_io_s11_1_2             = (25, 26) signed
  S2_storerhnew_pi_Rx32                = (16, 20)
  S2_storerhnew_pi_Nt8                 = ( 8, 10)
  S2_storerhnew_pi_s4_1_0              = ( 3,  6) signed
  S4_storerhnew_ap_Re32                = (16, 20)
  S4_storerhnew_ap_Nt8                 = ( 8, 10)
  S4_storerhnew_ap_U6_0                = ( 0,  5)
  S2_storerhnew_pr_Rx32                = (16, 20)
  S2_storerhnew_pr_Mu2                 = (13, 13)
  S2_storerhnew_pr_Nt8                 = ( 8, 10)
  S4_storerhnew_ur_Ru32                = (16, 20)
  S4_storerhnew_ur_Nt8                 = ( 8, 10)
  S4_storerhnew_ur_u2_0                = ( 6,  6)
  S4_storerhnew_ur_u2_1                = (13, 13)
  S4_storerhnew_ur_U6_0                = ( 0,  5)
  S2_storerhnew_pbr_Rx32               = (16, 20)
  S2_storerhnew_pbr_Mu2                = (13, 13)
  S2_storerhnew_pbr_Nt8                = ( 8, 10)
  S2_storerhnew_pci_Rx32               = (16, 20)
  S2_storerhnew_pci_Mu2                = (13, 13)
  S2_storerhnew_pci_Nt8                = ( 8, 10)
  S2_storerhnew_pci_s4_1_0             = ( 3,  6) signed
  S2_storerhnew_pcr_Rx32               = (16, 20)
  S2_storerhnew_pcr_Mu2                = (13, 13)
  S2_storerhnew_pcr_Nt8                = ( 8, 10)
  S2_allocframe_Rx32                   = (16, 20)
  S2_allocframe_u11_3_0                = ( 0, 10)
  L2_deallocframe_Rdd32                = ( 0,  4)
  L2_deallocframe_Rs32                 = (16, 20)
  L4_return_Rdd32                      = ( 0,  4)
  L4_return_Rs32                       = (16, 20)
  L4_return_t_Rdd32                    = ( 0,  4)
  L4_return_t_Pv4                      = ( 8,  9)
  L4_return_t_Rs32                     = (16, 20)
  L4_return_f_Rdd32                    = ( 0,  4)
  L4_return_f_Pv4                      = ( 8,  9)
  L4_return_f_Rs32                     = (16, 20)
  L4_return_tnew_pt_Rdd32              = ( 0,  4)
  L4_return_tnew_pt_Pv4                = ( 8,  9)
  L4_return_tnew_pt_Rs32               = (16, 20)
  L4_return_fnew_pt_Rdd32              = ( 0,  4)
  L4_return_fnew_pt_Pv4                = ( 8,  9)
  L4_return_fnew_pt_Rs32               = (16, 20)
  L4_return_tnew_pnt_Rdd32             = ( 0,  4)
  L4_return_tnew_pnt_Pv4               = ( 8,  9)
  L4_return_tnew_pnt_Rs32              = (16, 20)
  L4_return_fnew_pnt_Rdd32             = ( 0,  4)
  L4_return_fnew_pnt_Pv4               = ( 8,  9)
  L4_return_fnew_pnt_Rs32              = (16, 20)
  L2_loadw_locked_Rd32                 = ( 0,  4)
  L2_loadw_locked_Rs32                 = (16, 20)
  S2_storew_locked_Pd4                 = ( 0,  1)
  S2_storew_locked_Rs32                = (16, 20)
  S2_storew_locked_Rt32                = ( 8, 12)
  L4_loadd_locked_Rdd32                = ( 0,  4)
  L4_loadd_locked_Rs32                 = (16, 20)
  L4_loadw_phys_Rd32                   = ( 0,  4)
  L4_loadw_phys_Rs32                   = (16, 20)
  L4_loadw_phys_Rt32                   = ( 8, 12)
  S4_stored_locked_Pd4                 = ( 0,  1)
  S4_stored_locked_Rs32                = (16, 20)
  S4_stored_locked_Rtt32               = ( 8, 12)
  L4_loadrub_rr_Rd32                   = ( 0,  4)
  L4_loadrub_rr_Rs32                   = (16, 20)
  L4_loadrub_rr_Rt32                   = ( 8, 12)
  L4_loadrub_rr_u2_0                   = ( 7,  7)
  L4_loadrub_rr_u2_1                   = (13, 13)
  L2_ploadrubt_io_Rd32                 = ( 0,  4)
  L2_ploadrubt_io_Pt4                  = (11, 12)
  L2_ploadrubt_io_Rs32                 = (16, 20)
  L2_ploadrubt_io_u6_0_0               = ( 5, 10)
  L2_ploadrubt_pi_Rd32                 = ( 0,  4)
  L2_ploadrubt_pi_Rx32                 = (16, 20)
  L2_ploadrubt_pi_Pt4                  = ( 9, 10)
  L2_ploadrubt_pi_s4_0_0               = ( 5,  8) signed
  L2_ploadrubf_io_Rd32                 = ( 0,  4)
  L2_ploadrubf_io_Pt4                  = (11, 12)
  L2_ploadrubf_io_Rs32                 = (16, 20)
  L2_ploadrubf_io_u6_0_0               = ( 5, 10)
  L2_ploadrubf_pi_Rd32                 = ( 0,  4)
  L2_ploadrubf_pi_Rx32                 = (16, 20)
  L2_ploadrubf_pi_Pt4                  = ( 9, 10)
  L2_ploadrubf_pi_s4_0_0               = ( 5,  8) signed
  L2_ploadrubtnew_io_Rd32              = ( 0,  4)
  L2_ploadrubtnew_io_Pt4               = (11, 12)
  L2_ploadrubtnew_io_Rs32              = (16, 20)
  L2_ploadrubtnew_io_u6_0_0            = ( 5, 10)
  L2_ploadrubfnew_io_Rd32              = ( 0,  4)
  L2_ploadrubfnew_io_Pt4               = (11, 12)
  L2_ploadrubfnew_io_Rs32              = (16, 20)
  L2_ploadrubfnew_io_u6_0_0            = ( 5, 10)
  L4_ploadrubt_rr_Rd32                 = ( 0,  4)
  L4_ploadrubt_rr_Pv4                  = ( 5,  6)
  L4_ploadrubt_rr_Rs32                 = (16, 20)
  L4_ploadrubt_rr_Rt32                 = ( 8, 12)
  L4_ploadrubt_rr_u2_0                 = ( 7,  7)
  L4_ploadrubt_rr_u2_1                 = (13, 13)
  L4_ploadrubf_rr_Rd32                 = ( 0,  4)
  L4_ploadrubf_rr_Pv4                  = ( 5,  6)
  L4_ploadrubf_rr_Rs32                 = (16, 20)
  L4_ploadrubf_rr_Rt32                 = ( 8, 12)
  L4_ploadrubf_rr_u2_0                 = ( 7,  7)
  L4_ploadrubf_rr_u2_1                 = (13, 13)
  L4_ploadrubtnew_rr_Rd32              = ( 0,  4)
  L4_ploadrubtnew_rr_Pv4               = ( 5,  6)
  L4_ploadrubtnew_rr_Rs32              = (16, 20)
  L4_ploadrubtnew_rr_Rt32              = ( 8, 12)
  L4_ploadrubtnew_rr_u2_0              = ( 7,  7)
  L4_ploadrubtnew_rr_u2_1              = (13, 13)
  L4_ploadrubfnew_rr_Rd32              = ( 0,  4)
  L4_ploadrubfnew_rr_Pv4               = ( 5,  6)
  L4_ploadrubfnew_rr_Rs32              = (16, 20)
  L4_ploadrubfnew_rr_Rt32              = ( 8, 12)
  L4_ploadrubfnew_rr_u2_0              = ( 7,  7)
  L4_ploadrubfnew_rr_u2_1              = (13, 13)
  L2_ploadrubtnew_pi_Rd32              = ( 0,  4)
  L2_ploadrubtnew_pi_Rx32              = (16, 20)
  L2_ploadrubtnew_pi_Pt4               = ( 9, 10)
  L2_ploadrubtnew_pi_s4_0_0            = ( 5,  8) signed
  L2_ploadrubfnew_pi_Rd32              = ( 0,  4)
  L2_ploadrubfnew_pi_Rx32              = (16, 20)
  L2_ploadrubfnew_pi_Pt4               = ( 9, 10)
  L2_ploadrubfnew_pi_s4_0_0            = ( 5,  8) signed
  L4_ploadrubt_abs_Rd32                = ( 0,  4)
  L4_ploadrubt_abs_Pt4                 = ( 9, 10)
  L4_ploadrubt_abs_u6_0                = ( 8,  8)
  L4_ploadrubt_abs_u6_1                = (16, 20)
  L4_ploadrubf_abs_Rd32                = ( 0,  4)
  L4_ploadrubf_abs_Pt4                 = ( 9, 10)
  L4_ploadrubf_abs_u6_0                = ( 8,  8)
  L4_ploadrubf_abs_u6_1                = (16, 20)
  L4_ploadrubtnew_abs_Rd32             = ( 0,  4)
  L4_ploadrubtnew_abs_Pt4              = ( 9, 10)
  L4_ploadrubtnew_abs_u6_0             = ( 8,  8)
  L4_ploadrubtnew_abs_u6_1             = (16, 20)
  L4_ploadrubfnew_abs_Rd32             = ( 0,  4)
  L4_ploadrubfnew_abs_Pt4              = ( 9, 10)
  L4_ploadrubfnew_abs_u6_0             = ( 8,  8)
  L4_ploadrubfnew_abs_u6_1             = (16, 20)
  L4_loadrb_rr_Rd32                    = ( 0,  4)
  L4_loadrb_rr_Rs32                    = (16, 20)
  L4_loadrb_rr_Rt32                    = ( 8, 12)
  L4_loadrb_rr_u2_0                    = ( 7,  7)
  L4_loadrb_rr_u2_1                    = (13, 13)
  L2_ploadrbt_io_Rd32                  = ( 0,  4)
  L2_ploadrbt_io_Pt4                   = (11, 12)
  L2_ploadrbt_io_Rs32                  = (16, 20)
  L2_ploadrbt_io_u6_0_0                = ( 5, 10)
  L2_ploadrbt_pi_Rd32                  = ( 0,  4)
  L2_ploadrbt_pi_Rx32                  = (16, 20)
  L2_ploadrbt_pi_Pt4                   = ( 9, 10)
  L2_ploadrbt_pi_s4_0_0                = ( 5,  8) signed
  L2_ploadrbf_io_Rd32                  = ( 0,  4)
  L2_ploadrbf_io_Pt4                   = (11, 12)
  L2_ploadrbf_io_Rs32                  = (16, 20)
  L2_ploadrbf_io_u6_0_0                = ( 5, 10)
  L2_ploadrbf_pi_Rd32                  = ( 0,  4)
  L2_ploadrbf_pi_Rx32                  = (16, 20)
  L2_ploadrbf_pi_Pt4                   = ( 9, 10)
  L2_ploadrbf_pi_s4_0_0                = ( 5,  8) signed
  L2_ploadrbtnew_io_Rd32               = ( 0,  4)
  L2_ploadrbtnew_io_Pt4                = (11, 12)
  L2_ploadrbtnew_io_Rs32               = (16, 20)
  L2_ploadrbtnew_io_u6_0_0             = ( 5, 10)
  L2_ploadrbfnew_io_Rd32               = ( 0,  4)
  L2_ploadrbfnew_io_Pt4                = (11, 12)
  L2_ploadrbfnew_io_Rs32               = (16, 20)
  L2_ploadrbfnew_io_u6_0_0             = ( 5, 10)
  L4_ploadrbt_rr_Rd32                  = ( 0,  4)
  L4_ploadrbt_rr_Pv4                   = ( 5,  6)
  L4_ploadrbt_rr_Rs32                  = (16, 20)
  L4_ploadrbt_rr_Rt32                  = ( 8, 12)
  L4_ploadrbt_rr_u2_0                  = ( 7,  7)
  L4_ploadrbt_rr_u2_1                  = (13, 13)
  L4_ploadrbf_rr_Rd32                  = ( 0,  4)
  L4_ploadrbf_rr_Pv4                   = ( 5,  6)
  L4_ploadrbf_rr_Rs32                  = (16, 20)
  L4_ploadrbf_rr_Rt32                  = ( 8, 12)
  L4_ploadrbf_rr_u2_0                  = ( 7,  7)
  L4_ploadrbf_rr_u2_1                  = (13, 13)
  L4_ploadrbtnew_rr_Rd32               = ( 0,  4)
  L4_ploadrbtnew_rr_Pv4                = ( 5,  6)
  L4_ploadrbtnew_rr_Rs32               = (16, 20)
  L4_ploadrbtnew_rr_Rt32               = ( 8, 12)
  L4_ploadrbtnew_rr_u2_0               = ( 7,  7)
  L4_ploadrbtnew_rr_u2_1               = (13, 13)
  L4_ploadrbfnew_rr_Rd32               = ( 0,  4)
  L4_ploadrbfnew_rr_Pv4                = ( 5,  6)
  L4_ploadrbfnew_rr_Rs32               = (16, 20)
  L4_ploadrbfnew_rr_Rt32               = ( 8, 12)
  L4_ploadrbfnew_rr_u2_0               = ( 7,  7)
  L4_ploadrbfnew_rr_u2_1               = (13, 13)
  L2_ploadrbtnew_pi_Rd32               = ( 0,  4)
  L2_ploadrbtnew_pi_Rx32               = (16, 20)
  L2_ploadrbtnew_pi_Pt4                = ( 9, 10)
  L2_ploadrbtnew_pi_s4_0_0             = ( 5,  8) signed
  L2_ploadrbfnew_pi_Rd32               = ( 0,  4)
  L2_ploadrbfnew_pi_Rx32               = (16, 20)
  L2_ploadrbfnew_pi_Pt4                = ( 9, 10)
  L2_ploadrbfnew_pi_s4_0_0             = ( 5,  8) signed
  L4_ploadrbt_abs_Rd32                 = ( 0,  4)
  L4_ploadrbt_abs_Pt4                  = ( 9, 10)
  L4_ploadrbt_abs_u6_0                 = ( 8,  8)
  L4_ploadrbt_abs_u6_1                 = (16, 20)
  L4_ploadrbf_abs_Rd32                 = ( 0,  4)
  L4_ploadrbf_abs_Pt4                  = ( 9, 10)
  L4_ploadrbf_abs_u6_0                 = ( 8,  8)
  L4_ploadrbf_abs_u6_1                 = (16, 20)
  L4_ploadrbtnew_abs_Rd32              = ( 0,  4)
  L4_ploadrbtnew_abs_Pt4               = ( 9, 10)
  L4_ploadrbtnew_abs_u6_0              = ( 8,  8)
  L4_ploadrbtnew_abs_u6_1              = (16, 20)
  L4_ploadrbfnew_abs_Rd32              = ( 0,  4)
  L4_ploadrbfnew_abs_Pt4               = ( 9, 10)
  L4_ploadrbfnew_abs_u6_0              = ( 8,  8)
  L4_ploadrbfnew_abs_u6_1              = (16, 20)
  L4_loadruh_rr_Rd32                   = ( 0,  4)
  L4_loadruh_rr_Rs32                   = (16, 20)
  L4_loadruh_rr_Rt32                   = ( 8, 12)
  L4_loadruh_rr_u2_0                   = ( 7,  7)
  L4_loadruh_rr_u2_1                   = (13, 13)
  L2_ploadruht_io_Rd32                 = ( 0,  4)
  L2_ploadruht_io_Pt4                  = (11, 12)
  L2_ploadruht_io_Rs32                 = (16, 20)
  L2_ploadruht_io_u6_1_0               = ( 5, 10)
  L2_ploadruht_pi_Rd32                 = ( 0,  4)
  L2_ploadruht_pi_Rx32                 = (16, 20)
  L2_ploadruht_pi_Pt4                  = ( 9, 10)
  L2_ploadruht_pi_s4_1_0               = ( 5,  8) signed
  L2_ploadruhf_io_Rd32                 = ( 0,  4)
  L2_ploadruhf_io_Pt4                  = (11, 12)
  L2_ploadruhf_io_Rs32                 = (16, 20)
  L2_ploadruhf_io_u6_1_0               = ( 5, 10)
  L2_ploadruhf_pi_Rd32                 = ( 0,  4)
  L2_ploadruhf_pi_Rx32                 = (16, 20)
  L2_ploadruhf_pi_Pt4                  = ( 9, 10)
  L2_ploadruhf_pi_s4_1_0               = ( 5,  8) signed
  L2_ploadruhtnew_io_Rd32              = ( 0,  4)
  L2_ploadruhtnew_io_Pt4               = (11, 12)
  L2_ploadruhtnew_io_Rs32              = (16, 20)
  L2_ploadruhtnew_io_u6_1_0            = ( 5, 10)
  L2_ploadruhfnew_io_Rd32              = ( 0,  4)
  L2_ploadruhfnew_io_Pt4               = (11, 12)
  L2_ploadruhfnew_io_Rs32              = (16, 20)
  L2_ploadruhfnew_io_u6_1_0            = ( 5, 10)
  L4_ploadruht_rr_Rd32                 = ( 0,  4)
  L4_ploadruht_rr_Pv4                  = ( 5,  6)
  L4_ploadruht_rr_Rs32                 = (16, 20)
  L4_ploadruht_rr_Rt32                 = ( 8, 12)
  L4_ploadruht_rr_u2_0                 = ( 7,  7)
  L4_ploadruht_rr_u2_1                 = (13, 13)
  L4_ploadruhf_rr_Rd32                 = ( 0,  4)
  L4_ploadruhf_rr_Pv4                  = ( 5,  6)
  L4_ploadruhf_rr_Rs32                 = (16, 20)
  L4_ploadruhf_rr_Rt32                 = ( 8, 12)
  L4_ploadruhf_rr_u2_0                 = ( 7,  7)
  L4_ploadruhf_rr_u2_1                 = (13, 13)
  L4_ploadruhtnew_rr_Rd32              = ( 0,  4)
  L4_ploadruhtnew_rr_Pv4               = ( 5,  6)
  L4_ploadruhtnew_rr_Rs32              = (16, 20)
  L4_ploadruhtnew_rr_Rt32              = ( 8, 12)
  L4_ploadruhtnew_rr_u2_0              = ( 7,  7)
  L4_ploadruhtnew_rr_u2_1              = (13, 13)
  L4_ploadruhfnew_rr_Rd32              = ( 0,  4)
  L4_ploadruhfnew_rr_Pv4               = ( 5,  6)
  L4_ploadruhfnew_rr_Rs32              = (16, 20)
  L4_ploadruhfnew_rr_Rt32              = ( 8, 12)
  L4_ploadruhfnew_rr_u2_0              = ( 7,  7)
  L4_ploadruhfnew_rr_u2_1              = (13, 13)
  L2_ploadruhtnew_pi_Rd32              = ( 0,  4)
  L2_ploadruhtnew_pi_Rx32              = (16, 20)
  L2_ploadruhtnew_pi_Pt4               = ( 9, 10)
  L2_ploadruhtnew_pi_s4_1_0            = ( 5,  8) signed
  L2_ploadruhfnew_pi_Rd32              = ( 0,  4)
  L2_ploadruhfnew_pi_Rx32              = (16, 20)
  L2_ploadruhfnew_pi_Pt4               = ( 9, 10)
  L2_ploadruhfnew_pi_s4_1_0            = ( 5,  8) signed
  L4_ploadruht_abs_Rd32                = ( 0,  4)
  L4_ploadruht_abs_Pt4                 = ( 9, 10)
  L4_ploadruht_abs_u6_0                = ( 8,  8)
  L4_ploadruht_abs_u6_1                = (16, 20)
  L4_ploadruhf_abs_Rd32                = ( 0,  4)
  L4_ploadruhf_abs_Pt4                 = ( 9, 10)
  L4_ploadruhf_abs_u6_0                = ( 8,  8)
  L4_ploadruhf_abs_u6_1                = (16, 20)
  L4_ploadruhtnew_abs_Rd32             = ( 0,  4)
  L4_ploadruhtnew_abs_Pt4              = ( 9, 10)
  L4_ploadruhtnew_abs_u6_0             = ( 8,  8)
  L4_ploadruhtnew_abs_u6_1             = (16, 20)
  L4_ploadruhfnew_abs_Rd32             = ( 0,  4)
  L4_ploadruhfnew_abs_Pt4              = ( 9, 10)
  L4_ploadruhfnew_abs_u6_0             = ( 8,  8)
  L4_ploadruhfnew_abs_u6_1             = (16, 20)
  L4_loadrh_rr_Rd32                    = ( 0,  4)
  L4_loadrh_rr_Rs32                    = (16, 20)
  L4_loadrh_rr_Rt32                    = ( 8, 12)
  L4_loadrh_rr_u2_0                    = ( 7,  7)
  L4_loadrh_rr_u2_1                    = (13, 13)
  L2_ploadrht_io_Rd32                  = ( 0,  4)
  L2_ploadrht_io_Pt4                   = (11, 12)
  L2_ploadrht_io_Rs32                  = (16, 20)
  L2_ploadrht_io_u6_1_0                = ( 5, 10)
  L2_ploadrht_pi_Rd32                  = ( 0,  4)
  L2_ploadrht_pi_Rx32                  = (16, 20)
  L2_ploadrht_pi_Pt4                   = ( 9, 10)
  L2_ploadrht_pi_s4_1_0                = ( 5,  8) signed
  L2_ploadrhf_io_Rd32                  = ( 0,  4)
  L2_ploadrhf_io_Pt4                   = (11, 12)
  L2_ploadrhf_io_Rs32                  = (16, 20)
  L2_ploadrhf_io_u6_1_0                = ( 5, 10)
  L2_ploadrhf_pi_Rd32                  = ( 0,  4)
  L2_ploadrhf_pi_Rx32                  = (16, 20)
  L2_ploadrhf_pi_Pt4                   = ( 9, 10)
  L2_ploadrhf_pi_s4_1_0                = ( 5,  8) signed
  L2_ploadrhtnew_io_Rd32               = ( 0,  4)
  L2_ploadrhtnew_io_Pt4                = (11, 12)
  L2_ploadrhtnew_io_Rs32               = (16, 20)
  L2_ploadrhtnew_io_u6_1_0             = ( 5, 10)
  L2_ploadrhfnew_io_Rd32               = ( 0,  4)
  L2_ploadrhfnew_io_Pt4                = (11, 12)
  L2_ploadrhfnew_io_Rs32               = (16, 20)
  L2_ploadrhfnew_io_u6_1_0             = ( 5, 10)
  L4_ploadrht_rr_Rd32                  = ( 0,  4)
  L4_ploadrht_rr_Pv4                   = ( 5,  6)
  L4_ploadrht_rr_Rs32                  = (16, 20)
  L4_ploadrht_rr_Rt32                  = ( 8, 12)
  L4_ploadrht_rr_u2_0                  = ( 7,  7)
  L4_ploadrht_rr_u2_1                  = (13, 13)
  L4_ploadrhf_rr_Rd32                  = ( 0,  4)
  L4_ploadrhf_rr_Pv4                   = ( 5,  6)
  L4_ploadrhf_rr_Rs32                  = (16, 20)
  L4_ploadrhf_rr_Rt32                  = ( 8, 12)
  L4_ploadrhf_rr_u2_0                  = ( 7,  7)
  L4_ploadrhf_rr_u2_1                  = (13, 13)
  L4_ploadrhtnew_rr_Rd32               = ( 0,  4)
  L4_ploadrhtnew_rr_Pv4                = ( 5,  6)
  L4_ploadrhtnew_rr_Rs32               = (16, 20)
  L4_ploadrhtnew_rr_Rt32               = ( 8, 12)
  L4_ploadrhtnew_rr_u2_0               = ( 7,  7)
  L4_ploadrhtnew_rr_u2_1               = (13, 13)
  L4_ploadrhfnew_rr_Rd32               = ( 0,  4)
  L4_ploadrhfnew_rr_Pv4                = ( 5,  6)
  L4_ploadrhfnew_rr_Rs32               = (16, 20)
  L4_ploadrhfnew_rr_Rt32               = ( 8, 12)
  L4_ploadrhfnew_rr_u2_0               = ( 7,  7)
  L4_ploadrhfnew_rr_u2_1               = (13, 13)
  L2_ploadrhtnew_pi_Rd32               = ( 0,  4)
  L2_ploadrhtnew_pi_Rx32               = (16, 20)
  L2_ploadrhtnew_pi_Pt4                = ( 9, 10)
  L2_ploadrhtnew_pi_s4_1_0             = ( 5,  8) signed
  L2_ploadrhfnew_pi_Rd32               = ( 0,  4)
  L2_ploadrhfnew_pi_Rx32               = (16, 20)
  L2_ploadrhfnew_pi_Pt4                = ( 9, 10)
  L2_ploadrhfnew_pi_s4_1_0             = ( 5,  8) signed
  L4_ploadrht_abs_Rd32                 = ( 0,  4)
  L4_ploadrht_abs_Pt4                  = ( 9, 10)
  L4_ploadrht_abs_u6_0                 = ( 8,  8)
  L4_ploadrht_abs_u6_1                 = (16, 20)
  L4_ploadrhf_abs_Rd32                 = ( 0,  4)
  L4_ploadrhf_abs_Pt4                  = ( 9, 10)
  L4_ploadrhf_abs_u6_0                 = ( 8,  8)
  L4_ploadrhf_abs_u6_1                 = (16, 20)
  L4_ploadrhtnew_abs_Rd32              = ( 0,  4)
  L4_ploadrhtnew_abs_Pt4               = ( 9, 10)
  L4_ploadrhtnew_abs_u6_0              = ( 8,  8)
  L4_ploadrhtnew_abs_u6_1              = (16, 20)
  L4_ploadrhfnew_abs_Rd32              = ( 0,  4)
  L4_ploadrhfnew_abs_Pt4               = ( 9, 10)
  L4_ploadrhfnew_abs_u6_0              = ( 8,  8)
  L4_ploadrhfnew_abs_u6_1              = (16, 20)
  L4_loadri_rr_Rd32                    = ( 0,  4)
  L4_loadri_rr_Rs32                    = (16, 20)
  L4_loadri_rr_Rt32                    = ( 8, 12)
  L4_loadri_rr_u2_0                    = ( 7,  7)
  L4_loadri_rr_u2_1                    = (13, 13)
  L2_ploadrit_io_Rd32                  = ( 0,  4)
  L2_ploadrit_io_Pt4                   = (11, 12)
  L2_ploadrit_io_Rs32                  = (16, 20)
  L2_ploadrit_io_u6_2_0                = ( 5, 10)
  L2_ploadrit_pi_Rd32                  = ( 0,  4)
  L2_ploadrit_pi_Rx32                  = (16, 20)
  L2_ploadrit_pi_Pt4                   = ( 9, 10)
  L2_ploadrit_pi_s4_2_0                = ( 5,  8) signed
  L2_ploadrif_io_Rd32                  = ( 0,  4)
  L2_ploadrif_io_Pt4                   = (11, 12)
  L2_ploadrif_io_Rs32                  = (16, 20)
  L2_ploadrif_io_u6_2_0                = ( 5, 10)
  L2_ploadrif_pi_Rd32                  = ( 0,  4)
  L2_ploadrif_pi_Rx32                  = (16, 20)
  L2_ploadrif_pi_Pt4                   = ( 9, 10)
  L2_ploadrif_pi_s4_2_0                = ( 5,  8) signed
  L2_ploadritnew_io_Rd32               = ( 0,  4)
  L2_ploadritnew_io_Pt4                = (11, 12)
  L2_ploadritnew_io_Rs32               = (16, 20)
  L2_ploadritnew_io_u6_2_0             = ( 5, 10)
  L2_ploadrifnew_io_Rd32               = ( 0,  4)
  L2_ploadrifnew_io_Pt4                = (11, 12)
  L2_ploadrifnew_io_Rs32               = (16, 20)
  L2_ploadrifnew_io_u6_2_0             = ( 5, 10)
  L4_ploadrit_rr_Rd32                  = ( 0,  4)
  L4_ploadrit_rr_Pv4                   = ( 5,  6)
  L4_ploadrit_rr_Rs32                  = (16, 20)
  L4_ploadrit_rr_Rt32                  = ( 8, 12)
  L4_ploadrit_rr_u2_0                  = ( 7,  7)
  L4_ploadrit_rr_u2_1                  = (13, 13)
  L4_ploadrif_rr_Rd32                  = ( 0,  4)
  L4_ploadrif_rr_Pv4                   = ( 5,  6)
  L4_ploadrif_rr_Rs32                  = (16, 20)
  L4_ploadrif_rr_Rt32                  = ( 8, 12)
  L4_ploadrif_rr_u2_0                  = ( 7,  7)
  L4_ploadrif_rr_u2_1                  = (13, 13)
  L4_ploadritnew_rr_Rd32               = ( 0,  4)
  L4_ploadritnew_rr_Pv4                = ( 5,  6)
  L4_ploadritnew_rr_Rs32               = (16, 20)
  L4_ploadritnew_rr_Rt32               = ( 8, 12)
  L4_ploadritnew_rr_u2_0               = ( 7,  7)
  L4_ploadritnew_rr_u2_1               = (13, 13)
  L4_ploadrifnew_rr_Rd32               = ( 0,  4)
  L4_ploadrifnew_rr_Pv4                = ( 5,  6)
  L4_ploadrifnew_rr_Rs32               = (16, 20)
  L4_ploadrifnew_rr_Rt32               = ( 8, 12)
  L4_ploadrifnew_rr_u2_0               = ( 7,  7)
  L4_ploadrifnew_rr_u2_1               = (13, 13)
  L2_ploadritnew_pi_Rd32               = ( 0,  4)
  L2_ploadritnew_pi_Rx32               = (16, 20)
  L2_ploadritnew_pi_Pt4                = ( 9, 10)
  L2_ploadritnew_pi_s4_2_0             = ( 5,  8) signed
  L2_ploadrifnew_pi_Rd32               = ( 0,  4)
  L2_ploadrifnew_pi_Rx32               = (16, 20)
  L2_ploadrifnew_pi_Pt4                = ( 9, 10)
  L2_ploadrifnew_pi_s4_2_0             = ( 5,  8) signed
  L4_ploadrit_abs_Rd32                 = ( 0,  4)
  L4_ploadrit_abs_Pt4                  = ( 9, 10)
  L4_ploadrit_abs_u6_0                 = ( 8,  8)
  L4_ploadrit_abs_u6_1                 = (16, 20)
  L4_ploadrif_abs_Rd32                 = ( 0,  4)
  L4_ploadrif_abs_Pt4                  = ( 9, 10)
  L4_ploadrif_abs_u6_0                 = ( 8,  8)
  L4_ploadrif_abs_u6_1                 = (16, 20)
  L4_ploadritnew_abs_Rd32              = ( 0,  4)
  L4_ploadritnew_abs_Pt4               = ( 9, 10)
  L4_ploadritnew_abs_u6_0              = ( 8,  8)
  L4_ploadritnew_abs_u6_1              = (16, 20)
  L4_ploadrifnew_abs_Rd32              = ( 0,  4)
  L4_ploadrifnew_abs_Pt4               = ( 9, 10)
  L4_ploadrifnew_abs_u6_0              = ( 8,  8)
  L4_ploadrifnew_abs_u6_1              = (16, 20)
  L4_loadrd_rr_Rdd32                   = ( 0,  4)
  L4_loadrd_rr_Rs32                    = (16, 20)
  L4_loadrd_rr_Rt32                    = ( 8, 12)
  L4_loadrd_rr_u2_0                    = ( 7,  7)
  L4_loadrd_rr_u2_1                    = (13, 13)
  L2_ploadrdt_io_Rdd32                 = ( 0,  4)
  L2_ploadrdt_io_Pt4                   = (11, 12)
  L2_ploadrdt_io_Rs32                  = (16, 20)
  L2_ploadrdt_io_u6_3_0                = ( 5, 10)
  L2_ploadrdt_pi_Rdd32                 = ( 0,  4)
  L2_ploadrdt_pi_Rx32                  = (16, 20)
  L2_ploadrdt_pi_Pt4                   = ( 9, 10)
  L2_ploadrdt_pi_s4_3_0                = ( 5,  8) signed
  L2_ploadrdf_io_Rdd32                 = ( 0,  4)
  L2_ploadrdf_io_Pt4                   = (11, 12)
  L2_ploadrdf_io_Rs32                  = (16, 20)
  L2_ploadrdf_io_u6_3_0                = ( 5, 10)
  L2_ploadrdf_pi_Rdd32                 = ( 0,  4)
  L2_ploadrdf_pi_Rx32                  = (16, 20)
  L2_ploadrdf_pi_Pt4                   = ( 9, 10)
  L2_ploadrdf_pi_s4_3_0                = ( 5,  8) signed
  L2_ploadrdtnew_io_Rdd32              = ( 0,  4)
  L2_ploadrdtnew_io_Pt4                = (11, 12)
  L2_ploadrdtnew_io_Rs32               = (16, 20)
  L2_ploadrdtnew_io_u6_3_0             = ( 5, 10)
  L2_ploadrdfnew_io_Rdd32              = ( 0,  4)
  L2_ploadrdfnew_io_Pt4                = (11, 12)
  L2_ploadrdfnew_io_Rs32               = (16, 20)
  L2_ploadrdfnew_io_u6_3_0             = ( 5, 10)
  L4_ploadrdt_rr_Rdd32                 = ( 0,  4)
  L4_ploadrdt_rr_Pv4                   = ( 5,  6)
  L4_ploadrdt_rr_Rs32                  = (16, 20)
  L4_ploadrdt_rr_Rt32                  = ( 8, 12)
  L4_ploadrdt_rr_u2_0                  = ( 7,  7)
  L4_ploadrdt_rr_u2_1                  = (13, 13)
  L4_ploadrdf_rr_Rdd32                 = ( 0,  4)
  L4_ploadrdf_rr_Pv4                   = ( 5,  6)
  L4_ploadrdf_rr_Rs32                  = (16, 20)
  L4_ploadrdf_rr_Rt32                  = ( 8, 12)
  L4_ploadrdf_rr_u2_0                  = ( 7,  7)
  L4_ploadrdf_rr_u2_1                  = (13, 13)
  L4_ploadrdtnew_rr_Rdd32              = ( 0,  4)
  L4_ploadrdtnew_rr_Pv4                = ( 5,  6)
  L4_ploadrdtnew_rr_Rs32               = (16, 20)
  L4_ploadrdtnew_rr_Rt32               = ( 8, 12)
  L4_ploadrdtnew_rr_u2_0               = ( 7,  7)
  L4_ploadrdtnew_rr_u2_1               = (13, 13)
  L4_ploadrdfnew_rr_Rdd32              = ( 0,  4)
  L4_ploadrdfnew_rr_Pv4                = ( 5,  6)
  L4_ploadrdfnew_rr_Rs32               = (16, 20)
  L4_ploadrdfnew_rr_Rt32               = ( 8, 12)
  L4_ploadrdfnew_rr_u2_0               = ( 7,  7)
  L4_ploadrdfnew_rr_u2_1               = (13, 13)
  L2_ploadrdtnew_pi_Rdd32              = ( 0,  4)
  L2_ploadrdtnew_pi_Rx32               = (16, 20)
  L2_ploadrdtnew_pi_Pt4                = ( 9, 10)
  L2_ploadrdtnew_pi_s4_3_0             = ( 5,  8) signed
  L2_ploadrdfnew_pi_Rdd32              = ( 0,  4)
  L2_ploadrdfnew_pi_Rx32               = (16, 20)
  L2_ploadrdfnew_pi_Pt4                = ( 9, 10)
  L2_ploadrdfnew_pi_s4_3_0             = ( 5,  8) signed
  L4_ploadrdt_abs_Rdd32                = ( 0,  4)
  L4_ploadrdt_abs_Pt4                  = ( 9, 10)
  L4_ploadrdt_abs_u6_0                 = ( 8,  8)
  L4_ploadrdt_abs_u6_1                 = (16, 20)
  L4_ploadrdf_abs_Rdd32                = ( 0,  4)
  L4_ploadrdf_abs_Pt4                  = ( 9, 10)
  L4_ploadrdf_abs_u6_0                 = ( 8,  8)
  L4_ploadrdf_abs_u6_1                 = (16, 20)
  L4_ploadrdtnew_abs_Rdd32             = ( 0,  4)
  L4_ploadrdtnew_abs_Pt4               = ( 9, 10)
  L4_ploadrdtnew_abs_u6_0              = ( 8,  8)
  L4_ploadrdtnew_abs_u6_1              = (16, 20)
  L4_ploadrdfnew_abs_Rdd32             = ( 0,  4)
  L4_ploadrdfnew_abs_Pt4               = ( 9, 10)
  L4_ploadrdfnew_abs_u6_0              = ( 8,  8)
  L4_ploadrdfnew_abs_u6_1              = (16, 20)
  S4_storerb_rr_Rs32                   = (16, 20)
  S4_storerb_rr_Ru32                   = ( 8, 12)
  S4_storerb_rr_Rt32                   = ( 0,  4)
  S4_storerb_rr_u2_0                   = ( 7,  7)
  S4_storerb_rr_u2_1                   = (13, 13)
  S2_pstorerbt_io_Pv4                  = ( 0,  1)
  S2_pstorerbt_io_Rs32                 = (16, 20)
  S2_pstorerbt_io_Rt32                 = ( 8, 12)
  S2_pstorerbt_io_u6_0_0               = ( 3,  7)
  S2_pstorerbt_io_u6_0_1               = (13, 13)
  S2_pstorerbt_pi_Rx32                 = (16, 20)
  S2_pstorerbt_pi_Pv4                  = ( 0,  1)
  S2_pstorerbt_pi_Rt32                 = ( 8, 12)
  S2_pstorerbt_pi_s4_0_0               = ( 3,  6) signed
  S2_pstorerbf_io_Pv4                  = ( 0,  1)
  S2_pstorerbf_io_Rs32                 = (16, 20)
  S2_pstorerbf_io_Rt32                 = ( 8, 12)
  S2_pstorerbf_io_u6_0_0               = ( 3,  7)
  S2_pstorerbf_io_u6_0_1               = (13, 13)
  S2_pstorerbf_pi_Rx32                 = (16, 20)
  S2_pstorerbf_pi_Pv4                  = ( 0,  1)
  S2_pstorerbf_pi_Rt32                 = ( 8, 12)
  S2_pstorerbf_pi_s4_0_0               = ( 3,  6) signed
  S4_pstorerbt_rr_Pv4                  = ( 5,  6)
  S4_pstorerbt_rr_Rs32                 = (16, 20)
  S4_pstorerbt_rr_Ru32                 = ( 8, 12)
  S4_pstorerbt_rr_Rt32                 = ( 0,  4)
  S4_pstorerbt_rr_u2_0                 = ( 7,  7)
  S4_pstorerbt_rr_u2_1                 = (13, 13)
  S4_pstorerbf_rr_Pv4                  = ( 5,  6)
  S4_pstorerbf_rr_Rs32                 = (16, 20)
  S4_pstorerbf_rr_Ru32                 = ( 8, 12)
  S4_pstorerbf_rr_Rt32                 = ( 0,  4)
  S4_pstorerbf_rr_u2_0                 = ( 7,  7)
  S4_pstorerbf_rr_u2_1                 = (13, 13)
  S4_pstorerbtnew_io_Pv4               = ( 0,  1)
  S4_pstorerbtnew_io_Rs32              = (16, 20)
  S4_pstorerbtnew_io_Rt32              = ( 8, 12)
  S4_pstorerbtnew_io_u6_0_0            = ( 3,  7)
  S4_pstorerbtnew_io_u6_0_1            = (13, 13)
  S4_pstorerbfnew_io_Pv4               = ( 0,  1)
  S4_pstorerbfnew_io_Rs32              = (16, 20)
  S4_pstorerbfnew_io_Rt32              = ( 8, 12)
  S4_pstorerbfnew_io_u6_0_0            = ( 3,  7)
  S4_pstorerbfnew_io_u6_0_1            = (13, 13)
  S4_pstorerbtnew_rr_Pv4               = ( 5,  6)
  S4_pstorerbtnew_rr_Rs32              = (16, 20)
  S4_pstorerbtnew_rr_Ru32              = ( 8, 12)
  S4_pstorerbtnew_rr_Rt32              = ( 0,  4)
  S4_pstorerbtnew_rr_u2_0              = ( 7,  7)
  S4_pstorerbtnew_rr_u2_1              = (13, 13)
  S4_pstorerbfnew_rr_Pv4               = ( 5,  6)
  S4_pstorerbfnew_rr_Rs32              = (16, 20)
  S4_pstorerbfnew_rr_Ru32              = ( 8, 12)
  S4_pstorerbfnew_rr_Rt32              = ( 0,  4)
  S4_pstorerbfnew_rr_u2_0              = ( 7,  7)
  S4_pstorerbfnew_rr_u2_1              = (13, 13)
  S2_pstorerbtnew_pi_Rx32              = (16, 20)
  S2_pstorerbtnew_pi_Pv4               = ( 0,  1)
  S2_pstorerbtnew_pi_Rt32              = ( 8, 12)
  S2_pstorerbtnew_pi_s4_0_0            = ( 3,  6) signed
  S2_pstorerbfnew_pi_Rx32              = (16, 20)
  S2_pstorerbfnew_pi_Pv4               = ( 0,  1)
  S2_pstorerbfnew_pi_Rt32              = ( 8, 12)
  S2_pstorerbfnew_pi_s4_0_0            = ( 3,  6) signed
  S4_pstorerbt_abs_Pv4                 = ( 0,  1)
  S4_pstorerbt_abs_Rt32                = ( 8, 12)
  S4_pstorerbt_abs_u6_0                = ( 3,  6)
  S4_pstorerbt_abs_u6_1                = (16, 17)
  S4_pstorerbf_abs_Pv4                 = ( 0,  1)
  S4_pstorerbf_abs_Rt32                = ( 8, 12)
  S4_pstorerbf_abs_u6_0                = ( 3,  6)
  S4_pstorerbf_abs_u6_1                = (16, 17)
  S4_pstorerbtnew_abs_Pv4              = ( 0,  1)
  S4_pstorerbtnew_abs_Rt32             = ( 8, 12)
  S4_pstorerbtnew_abs_u6_0             = ( 3,  6)
  S4_pstorerbtnew_abs_u6_1             = (16, 17)
  S4_pstorerbfnew_abs_Pv4              = ( 0,  1)
  S4_pstorerbfnew_abs_Rt32             = ( 8, 12)
  S4_pstorerbfnew_abs_u6_0             = ( 3,  6)
  S4_pstorerbfnew_abs_u6_1             = (16, 17)
  S4_storerh_rr_Rs32                   = (16, 20)
  S4_storerh_rr_Ru32                   = ( 8, 12)
  S4_storerh_rr_Rt32                   = ( 0,  4)
  S4_storerh_rr_u2_0                   = ( 7,  7)
  S4_storerh_rr_u2_1                   = (13, 13)
  S2_pstorerht_io_Pv4                  = ( 0,  1)
  S2_pstorerht_io_Rs32                 = (16, 20)
  S2_pstorerht_io_Rt32                 = ( 8, 12)
  S2_pstorerht_io_u6_1_0               = ( 3,  7)
  S2_pstorerht_io_u6_1_1               = (13, 13)
  S2_pstorerht_pi_Rx32                 = (16, 20)
  S2_pstorerht_pi_Pv4                  = ( 0,  1)
  S2_pstorerht_pi_Rt32                 = ( 8, 12)
  S2_pstorerht_pi_s4_1_0               = ( 3,  6) signed
  S2_pstorerhf_io_Pv4                  = ( 0,  1)
  S2_pstorerhf_io_Rs32                 = (16, 20)
  S2_pstorerhf_io_Rt32                 = ( 8, 12)
  S2_pstorerhf_io_u6_1_0               = ( 3,  7)
  S2_pstorerhf_io_u6_1_1               = (13, 13)
  S2_pstorerhf_pi_Rx32                 = (16, 20)
  S2_pstorerhf_pi_Pv4                  = ( 0,  1)
  S2_pstorerhf_pi_Rt32                 = ( 8, 12)
  S2_pstorerhf_pi_s4_1_0               = ( 3,  6) signed
  S4_pstorerht_rr_Pv4                  = ( 5,  6)
  S4_pstorerht_rr_Rs32                 = (16, 20)
  S4_pstorerht_rr_Ru32                 = ( 8, 12)
  S4_pstorerht_rr_Rt32                 = ( 0,  4)
  S4_pstorerht_rr_u2_0                 = ( 7,  7)
  S4_pstorerht_rr_u2_1                 = (13, 13)
  S4_pstorerhf_rr_Pv4                  = ( 5,  6)
  S4_pstorerhf_rr_Rs32                 = (16, 20)
  S4_pstorerhf_rr_Ru32                 = ( 8, 12)
  S4_pstorerhf_rr_Rt32                 = ( 0,  4)
  S4_pstorerhf_rr_u2_0                 = ( 7,  7)
  S4_pstorerhf_rr_u2_1                 = (13, 13)
  S4_pstorerhtnew_io_Pv4               = ( 0,  1)
  S4_pstorerhtnew_io_Rs32              = (16, 20)
  S4_pstorerhtnew_io_Rt32              = ( 8, 12)
  S4_pstorerhtnew_io_u6_1_0            = ( 3,  7)
  S4_pstorerhtnew_io_u6_1_1            = (13, 13)
  S4_pstorerhfnew_io_Pv4               = ( 0,  1)
  S4_pstorerhfnew_io_Rs32              = (16, 20)
  S4_pstorerhfnew_io_Rt32              = ( 8, 12)
  S4_pstorerhfnew_io_u6_1_0            = ( 3,  7)
  S4_pstorerhfnew_io_u6_1_1            = (13, 13)
  S4_pstorerhtnew_rr_Pv4               = ( 5,  6)
  S4_pstorerhtnew_rr_Rs32              = (16, 20)
  S4_pstorerhtnew_rr_Ru32              = ( 8, 12)
  S4_pstorerhtnew_rr_Rt32              = ( 0,  4)
  S4_pstorerhtnew_rr_u2_0              = ( 7,  7)
  S4_pstorerhtnew_rr_u2_1              = (13, 13)
  S4_pstorerhfnew_rr_Pv4               = ( 5,  6)
  S4_pstorerhfnew_rr_Rs32              = (16, 20)
  S4_pstorerhfnew_rr_Ru32              = ( 8, 12)
  S4_pstorerhfnew_rr_Rt32              = ( 0,  4)
  S4_pstorerhfnew_rr_u2_0              = ( 7,  7)
  S4_pstorerhfnew_rr_u2_1              = (13, 13)
  S2_pstorerhtnew_pi_Rx32              = (16, 20)
  S2_pstorerhtnew_pi_Pv4               = ( 0,  1)
  S2_pstorerhtnew_pi_Rt32              = ( 8, 12)
  S2_pstorerhtnew_pi_s4_1_0            = ( 3,  6) signed
  S2_pstorerhfnew_pi_Rx32              = (16, 20)
  S2_pstorerhfnew_pi_Pv4               = ( 0,  1)
  S2_pstorerhfnew_pi_Rt32              = ( 8, 12)
  S2_pstorerhfnew_pi_s4_1_0            = ( 3,  6) signed
  S4_pstorerht_abs_Pv4                 = ( 0,  1)
  S4_pstorerht_abs_Rt32                = ( 8, 12)
  S4_pstorerht_abs_u6_0                = ( 3,  6)
  S4_pstorerht_abs_u6_1                = (16, 17)
  S4_pstorerhf_abs_Pv4                 = ( 0,  1)
  S4_pstorerhf_abs_Rt32                = ( 8, 12)
  S4_pstorerhf_abs_u6_0                = ( 3,  6)
  S4_pstorerhf_abs_u6_1                = (16, 17)
  S4_pstorerhtnew_abs_Pv4              = ( 0,  1)
  S4_pstorerhtnew_abs_Rt32             = ( 8, 12)
  S4_pstorerhtnew_abs_u6_0             = ( 3,  6)
  S4_pstorerhtnew_abs_u6_1             = (16, 17)
  S4_pstorerhfnew_abs_Pv4              = ( 0,  1)
  S4_pstorerhfnew_abs_Rt32             = ( 8, 12)
  S4_pstorerhfnew_abs_u6_0             = ( 3,  6)
  S4_pstorerhfnew_abs_u6_1             = (16, 17)
  S4_storerf_rr_Rs32                   = (16, 20)
  S4_storerf_rr_Ru32                   = ( 8, 12)
  S4_storerf_rr_Rt32                   = ( 0,  4)
  S4_storerf_rr_u2_0                   = ( 7,  7)
  S4_storerf_rr_u2_1                   = (13, 13)
  S2_pstorerft_io_Pv4                  = ( 0,  1)
  S2_pstorerft_io_Rs32                 = (16, 20)
  S2_pstorerft_io_Rt32                 = ( 8, 12)
  S2_pstorerft_io_u6_1_0               = ( 3,  7)
  S2_pstorerft_io_u6_1_1               = (13, 13)
  S2_pstorerft_pi_Rx32                 = (16, 20)
  S2_pstorerft_pi_Pv4                  = ( 0,  1)
  S2_pstorerft_pi_Rt32                 = ( 8, 12)
  S2_pstorerft_pi_s4_1_0               = ( 3,  6) signed
  S2_pstorerff_io_Pv4                  = ( 0,  1)
  S2_pstorerff_io_Rs32                 = (16, 20)
  S2_pstorerff_io_Rt32                 = ( 8, 12)
  S2_pstorerff_io_u6_1_0               = ( 3,  7)
  S2_pstorerff_io_u6_1_1               = (13, 13)
  S2_pstorerff_pi_Rx32                 = (16, 20)
  S2_pstorerff_pi_Pv4                  = ( 0,  1)
  S2_pstorerff_pi_Rt32                 = ( 8, 12)
  S2_pstorerff_pi_s4_1_0               = ( 3,  6) signed
  S4_pstorerft_rr_Pv4                  = ( 5,  6)
  S4_pstorerft_rr_Rs32                 = (16, 20)
  S4_pstorerft_rr_Ru32                 = ( 8, 12)
  S4_pstorerft_rr_Rt32                 = ( 0,  4)
  S4_pstorerft_rr_u2_0                 = ( 7,  7)
  S4_pstorerft_rr_u2_1                 = (13, 13)
  S4_pstorerff_rr_Pv4                  = ( 5,  6)
  S4_pstorerff_rr_Rs32                 = (16, 20)
  S4_pstorerff_rr_Ru32                 = ( 8, 12)
  S4_pstorerff_rr_Rt32                 = ( 0,  4)
  S4_pstorerff_rr_u2_0                 = ( 7,  7)
  S4_pstorerff_rr_u2_1                 = (13, 13)
  S4_pstorerftnew_io_Pv4               = ( 0,  1)
  S4_pstorerftnew_io_Rs32              = (16, 20)
  S4_pstorerftnew_io_Rt32              = ( 8, 12)
  S4_pstorerftnew_io_u6_1_0            = ( 3,  7)
  S4_pstorerftnew_io_u6_1_1            = (13, 13)
  S4_pstorerffnew_io_Pv4               = ( 0,  1)
  S4_pstorerffnew_io_Rs32              = (16, 20)
  S4_pstorerffnew_io_Rt32              = ( 8, 12)
  S4_pstorerffnew_io_u6_1_0            = ( 3,  7)
  S4_pstorerffnew_io_u6_1_1            = (13, 13)
  S4_pstorerftnew_rr_Pv4               = ( 5,  6)
  S4_pstorerftnew_rr_Rs32              = (16, 20)
  S4_pstorerftnew_rr_Ru32              = ( 8, 12)
  S4_pstorerftnew_rr_Rt32              = ( 0,  4)
  S4_pstorerftnew_rr_u2_0              = ( 7,  7)
  S4_pstorerftnew_rr_u2_1              = (13, 13)
  S4_pstorerffnew_rr_Pv4               = ( 5,  6)
  S4_pstorerffnew_rr_Rs32              = (16, 20)
  S4_pstorerffnew_rr_Ru32              = ( 8, 12)
  S4_pstorerffnew_rr_Rt32              = ( 0,  4)
  S4_pstorerffnew_rr_u2_0              = ( 7,  7)
  S4_pstorerffnew_rr_u2_1              = (13, 13)
  S2_pstorerftnew_pi_Rx32              = (16, 20)
  S2_pstorerftnew_pi_Pv4               = ( 0,  1)
  S2_pstorerftnew_pi_Rt32              = ( 8, 12)
  S2_pstorerftnew_pi_s4_1_0            = ( 3,  6) signed
  S2_pstorerffnew_pi_Rx32              = (16, 20)
  S2_pstorerffnew_pi_Pv4               = ( 0,  1)
  S2_pstorerffnew_pi_Rt32              = ( 8, 12)
  S2_pstorerffnew_pi_s4_1_0            = ( 3,  6) signed
  S4_pstorerft_abs_Pv4                 = ( 0,  1)
  S4_pstorerft_abs_Rt32                = ( 8, 12)
  S4_pstorerft_abs_u6_0                = ( 3,  6)
  S4_pstorerft_abs_u6_1                = (16, 17)
  S4_pstorerff_abs_Pv4                 = ( 0,  1)
  S4_pstorerff_abs_Rt32                = ( 8, 12)
  S4_pstorerff_abs_u6_0                = ( 3,  6)
  S4_pstorerff_abs_u6_1                = (16, 17)
  S4_pstorerftnew_abs_Pv4              = ( 0,  1)
  S4_pstorerftnew_abs_Rt32             = ( 8, 12)
  S4_pstorerftnew_abs_u6_0             = ( 3,  6)
  S4_pstorerftnew_abs_u6_1             = (16, 17)
  S4_pstorerffnew_abs_Pv4              = ( 0,  1)
  S4_pstorerffnew_abs_Rt32             = ( 8, 12)
  S4_pstorerffnew_abs_u6_0             = ( 3,  6)
  S4_pstorerffnew_abs_u6_1             = (16, 17)
  S4_storeri_rr_Rs32                   = (16, 20)
  S4_storeri_rr_Ru32                   = ( 8, 12)
  S4_storeri_rr_Rt32                   = ( 0,  4)
  S4_storeri_rr_u2_0                   = ( 7,  7)
  S4_storeri_rr_u2_1                   = (13, 13)
  S2_pstorerit_io_Pv4                  = ( 0,  1)
  S2_pstorerit_io_Rs32                 = (16, 20)
  S2_pstorerit_io_Rt32                 = ( 8, 12)
  S2_pstorerit_io_u6_2_0               = ( 3,  7)
  S2_pstorerit_io_u6_2_1               = (13, 13)
  S2_pstorerit_pi_Rx32                 = (16, 20)
  S2_pstorerit_pi_Pv4                  = ( 0,  1)
  S2_pstorerit_pi_Rt32                 = ( 8, 12)
  S2_pstorerit_pi_s4_2_0               = ( 3,  6) signed
  S2_pstorerif_io_Pv4                  = ( 0,  1)
  S2_pstorerif_io_Rs32                 = (16, 20)
  S2_pstorerif_io_Rt32                 = ( 8, 12)
  S2_pstorerif_io_u6_2_0               = ( 3,  7)
  S2_pstorerif_io_u6_2_1               = (13, 13)
  S2_pstorerif_pi_Rx32                 = (16, 20)
  S2_pstorerif_pi_Pv4                  = ( 0,  1)
  S2_pstorerif_pi_Rt32                 = ( 8, 12)
  S2_pstorerif_pi_s4_2_0               = ( 3,  6) signed
  S4_pstorerit_rr_Pv4                  = ( 5,  6)
  S4_pstorerit_rr_Rs32                 = (16, 20)
  S4_pstorerit_rr_Ru32                 = ( 8, 12)
  S4_pstorerit_rr_Rt32                 = ( 0,  4)
  S4_pstorerit_rr_u2_0                 = ( 7,  7)
  S4_pstorerit_rr_u2_1                 = (13, 13)
  S4_pstorerif_rr_Pv4                  = ( 5,  6)
  S4_pstorerif_rr_Rs32                 = (16, 20)
  S4_pstorerif_rr_Ru32                 = ( 8, 12)
  S4_pstorerif_rr_Rt32                 = ( 0,  4)
  S4_pstorerif_rr_u2_0                 = ( 7,  7)
  S4_pstorerif_rr_u2_1                 = (13, 13)
  S4_pstoreritnew_io_Pv4               = ( 0,  1)
  S4_pstoreritnew_io_Rs32              = (16, 20)
  S4_pstoreritnew_io_Rt32              = ( 8, 12)
  S4_pstoreritnew_io_u6_2_0            = ( 3,  7)
  S4_pstoreritnew_io_u6_2_1            = (13, 13)
  S4_pstorerifnew_io_Pv4               = ( 0,  1)
  S4_pstorerifnew_io_Rs32              = (16, 20)
  S4_pstorerifnew_io_Rt32              = ( 8, 12)
  S4_pstorerifnew_io_u6_2_0            = ( 3,  7)
  S4_pstorerifnew_io_u6_2_1            = (13, 13)
  S4_pstoreritnew_rr_Pv4               = ( 5,  6)
  S4_pstoreritnew_rr_Rs32              = (16, 20)
  S4_pstoreritnew_rr_Ru32              = ( 8, 12)
  S4_pstoreritnew_rr_Rt32              = ( 0,  4)
  S4_pstoreritnew_rr_u2_0              = ( 7,  7)
  S4_pstoreritnew_rr_u2_1              = (13, 13)
  S4_pstorerifnew_rr_Pv4               = ( 5,  6)
  S4_pstorerifnew_rr_Rs32              = (16, 20)
  S4_pstorerifnew_rr_Ru32              = ( 8, 12)
  S4_pstorerifnew_rr_Rt32              = ( 0,  4)
  S4_pstorerifnew_rr_u2_0              = ( 7,  7)
  S4_pstorerifnew_rr_u2_1              = (13, 13)
  S2_pstoreritnew_pi_Rx32              = (16, 20)
  S2_pstoreritnew_pi_Pv4               = ( 0,  1)
  S2_pstoreritnew_pi_Rt32              = ( 8, 12)
  S2_pstoreritnew_pi_s4_2_0            = ( 3,  6) signed
  S2_pstorerifnew_pi_Rx32              = (16, 20)
  S2_pstorerifnew_pi_Pv4               = ( 0,  1)
  S2_pstorerifnew_pi_Rt32              = ( 8, 12)
  S2_pstorerifnew_pi_s4_2_0            = ( 3,  6) signed
  S4_pstorerit_abs_Pv4                 = ( 0,  1)
  S4_pstorerit_abs_Rt32                = ( 8, 12)
  S4_pstorerit_abs_u6_0                = ( 3,  6)
  S4_pstorerit_abs_u6_1                = (16, 17)
  S4_pstorerif_abs_Pv4                 = ( 0,  1)
  S4_pstorerif_abs_Rt32                = ( 8, 12)
  S4_pstorerif_abs_u6_0                = ( 3,  6)
  S4_pstorerif_abs_u6_1                = (16, 17)
  S4_pstoreritnew_abs_Pv4              = ( 0,  1)
  S4_pstoreritnew_abs_Rt32             = ( 8, 12)
  S4_pstoreritnew_abs_u6_0             = ( 3,  6)
  S4_pstoreritnew_abs_u6_1             = (16, 17)
  S4_pstorerifnew_abs_Pv4              = ( 0,  1)
  S4_pstorerifnew_abs_Rt32             = ( 8, 12)
  S4_pstorerifnew_abs_u6_0             = ( 3,  6)
  S4_pstorerifnew_abs_u6_1             = (16, 17)
  S4_storerd_rr_Rs32                   = (16, 20)
  S4_storerd_rr_Ru32                   = ( 8, 12)
  S4_storerd_rr_Rtt32                  = ( 0,  4)
  S4_storerd_rr_u2_0                   = ( 7,  7)
  S4_storerd_rr_u2_1                   = (13, 13)
  S2_pstorerdt_io_Pv4                  = ( 0,  1)
  S2_pstorerdt_io_Rs32                 = (16, 20)
  S2_pstorerdt_io_Rtt32                = ( 8, 12)
  S2_pstorerdt_io_u6_3_0               = ( 3,  7)
  S2_pstorerdt_io_u6_3_1               = (13, 13)
  S2_pstorerdt_pi_Rx32                 = (16, 20)
  S2_pstorerdt_pi_Pv4                  = ( 0,  1)
  S2_pstorerdt_pi_Rtt32                = ( 8, 12)
  S2_pstorerdt_pi_s4_3_0               = ( 3,  6) signed
  S2_pstorerdf_io_Pv4                  = ( 0,  1)
  S2_pstorerdf_io_Rs32                 = (16, 20)
  S2_pstorerdf_io_Rtt32                = ( 8, 12)
  S2_pstorerdf_io_u6_3_0               = ( 3,  7)
  S2_pstorerdf_io_u6_3_1               = (13, 13)
  S2_pstorerdf_pi_Rx32                 = (16, 20)
  S2_pstorerdf_pi_Pv4                  = ( 0,  1)
  S2_pstorerdf_pi_Rtt32                = ( 8, 12)
  S2_pstorerdf_pi_s4_3_0               = ( 3,  6) signed
  S4_pstorerdt_rr_Pv4                  = ( 5,  6)
  S4_pstorerdt_rr_Rs32                 = (16, 20)
  S4_pstorerdt_rr_Ru32                 = ( 8, 12)
  S4_pstorerdt_rr_Rtt32                = ( 0,  4)
  S4_pstorerdt_rr_u2_0                 = ( 7,  7)
  S4_pstorerdt_rr_u2_1                 = (13, 13)
  S4_pstorerdf_rr_Pv4                  = ( 5,  6)
  S4_pstorerdf_rr_Rs32                 = (16, 20)
  S4_pstorerdf_rr_Ru32                 = ( 8, 12)
  S4_pstorerdf_rr_Rtt32                = ( 0,  4)
  S4_pstorerdf_rr_u2_0                 = ( 7,  7)
  S4_pstorerdf_rr_u2_1                 = (13, 13)
  S4_pstorerdtnew_io_Pv4               = ( 0,  1)
  S4_pstorerdtnew_io_Rs32              = (16, 20)
  S4_pstorerdtnew_io_Rtt32             = ( 8, 12)
  S4_pstorerdtnew_io_u6_3_0            = ( 3,  7)
  S4_pstorerdtnew_io_u6_3_1            = (13, 13)
  S4_pstorerdfnew_io_Pv4               = ( 0,  1)
  S4_pstorerdfnew_io_Rs32              = (16, 20)
  S4_pstorerdfnew_io_Rtt32             = ( 8, 12)
  S4_pstorerdfnew_io_u6_3_0            = ( 3,  7)
  S4_pstorerdfnew_io_u6_3_1            = (13, 13)
  S4_pstorerdtnew_rr_Pv4               = ( 5,  6)
  S4_pstorerdtnew_rr_Rs32              = (16, 20)
  S4_pstorerdtnew_rr_Ru32              = ( 8, 12)
  S4_pstorerdtnew_rr_Rtt32             = ( 0,  4)
  S4_pstorerdtnew_rr_u2_0              = ( 7,  7)
  S4_pstorerdtnew_rr_u2_1              = (13, 13)
  S4_pstorerdfnew_rr_Pv4               = ( 5,  6)
  S4_pstorerdfnew_rr_Rs32              = (16, 20)
  S4_pstorerdfnew_rr_Ru32              = ( 8, 12)
  S4_pstorerdfnew_rr_Rtt32             = ( 0,  4)
  S4_pstorerdfnew_rr_u2_0              = ( 7,  7)
  S4_pstorerdfnew_rr_u2_1              = (13, 13)
  S2_pstorerdtnew_pi_Rx32              = (16, 20)
  S2_pstorerdtnew_pi_Pv4               = ( 0,  1)
  S2_pstorerdtnew_pi_Rtt32             = ( 8, 12)
  S2_pstorerdtnew_pi_s4_3_0            = ( 3,  6) signed
  S2_pstorerdfnew_pi_Rx32              = (16, 20)
  S2_pstorerdfnew_pi_Pv4               = ( 0,  1)
  S2_pstorerdfnew_pi_Rtt32             = ( 8, 12)
  S2_pstorerdfnew_pi_s4_3_0            = ( 3,  6) signed
  S4_pstorerdt_abs_Pv4                 = ( 0,  1)
  S4_pstorerdt_abs_Rtt32               = ( 8, 12)
  S4_pstorerdt_abs_u6_0                = ( 3,  6)
  S4_pstorerdt_abs_u6_1                = (16, 17)
  S4_pstorerdf_abs_Pv4                 = ( 0,  1)
  S4_pstorerdf_abs_Rtt32               = ( 8, 12)
  S4_pstorerdf_abs_u6_0                = ( 3,  6)
  S4_pstorerdf_abs_u6_1                = (16, 17)
  S4_pstorerdtnew_abs_Pv4              = ( 0,  1)
  S4_pstorerdtnew_abs_Rtt32            = ( 8, 12)
  S4_pstorerdtnew_abs_u6_0             = ( 3,  6)
  S4_pstorerdtnew_abs_u6_1             = (16, 17)
  S4_pstorerdfnew_abs_Pv4              = ( 0,  1)
  S4_pstorerdfnew_abs_Rtt32            = ( 8, 12)
  S4_pstorerdfnew_abs_u6_0             = ( 3,  6)
  S4_pstorerdfnew_abs_u6_1             = (16, 17)
  S4_storerinew_rr_Rs32                = (16, 20)
  S4_storerinew_rr_Ru32                = ( 8, 12)
  S4_storerinew_rr_Nt8                 = ( 0,  2)
  S4_storerinew_rr_u2_0                = ( 7,  7)
  S4_storerinew_rr_u2_1                = (13, 13)
  S2_pstorerinewt_io_Pv4               = ( 0,  1)
  S2_pstorerinewt_io_Rs32              = (16, 20)
  S2_pstorerinewt_io_Nt8               = ( 8, 10)
  S2_pstorerinewt_io_u6_2_0            = ( 3,  7)
  S2_pstorerinewt_io_u6_2_1            = (13, 13)
  S2_pstorerinewt_pi_Rx32              = (16, 20)
  S2_pstorerinewt_pi_Pv4               = ( 0,  1)
  S2_pstorerinewt_pi_Nt8               = ( 8, 10)
  S2_pstorerinewt_pi_s4_2_0            = ( 3,  6) signed
  S2_pstorerinewf_io_Pv4               = ( 0,  1)
  S2_pstorerinewf_io_Rs32              = (16, 20)
  S2_pstorerinewf_io_Nt8               = ( 8, 10)
  S2_pstorerinewf_io_u6_2_0            = ( 3,  7)
  S2_pstorerinewf_io_u6_2_1            = (13, 13)
  S2_pstorerinewf_pi_Rx32              = (16, 20)
  S2_pstorerinewf_pi_Pv4               = ( 0,  1)
  S2_pstorerinewf_pi_Nt8               = ( 8, 10)
  S2_pstorerinewf_pi_s4_2_0            = ( 3,  6) signed
  S4_pstorerinewt_rr_Pv4               = ( 5,  6)
  S4_pstorerinewt_rr_Rs32              = (16, 20)
  S4_pstorerinewt_rr_Ru32              = ( 8, 12)
  S4_pstorerinewt_rr_Nt8               = ( 0,  2)
  S4_pstorerinewt_rr_u2_0              = ( 7,  7)
  S4_pstorerinewt_rr_u2_1              = (13, 13)
  S4_pstorerinewf_rr_Pv4               = ( 5,  6)
  S4_pstorerinewf_rr_Rs32              = (16, 20)
  S4_pstorerinewf_rr_Ru32              = ( 8, 12)
  S4_pstorerinewf_rr_Nt8               = ( 0,  2)
  S4_pstorerinewf_rr_u2_0              = ( 7,  7)
  S4_pstorerinewf_rr_u2_1              = (13, 13)
  S4_pstorerinewtnew_io_Pv4            = ( 0,  1)
  S4_pstorerinewtnew_io_Rs32           = (16, 20)
  S4_pstorerinewtnew_io_Nt8            = ( 8, 10)
  S4_pstorerinewtnew_io_u6_2_0         = ( 3,  7)
  S4_pstorerinewtnew_io_u6_2_1         = (13, 13)
  S4_pstorerinewfnew_io_Pv4            = ( 0,  1)
  S4_pstorerinewfnew_io_Rs32           = (16, 20)
  S4_pstorerinewfnew_io_Nt8            = ( 8, 10)
  S4_pstorerinewfnew_io_u6_2_0         = ( 3,  7)
  S4_pstorerinewfnew_io_u6_2_1         = (13, 13)
  S4_pstorerinewtnew_rr_Pv4            = ( 5,  6)
  S4_pstorerinewtnew_rr_Rs32           = (16, 20)
  S4_pstorerinewtnew_rr_Ru32           = ( 8, 12)
  S4_pstorerinewtnew_rr_Nt8            = ( 0,  2)
  S4_pstorerinewtnew_rr_u2_0           = ( 7,  7)
  S4_pstorerinewtnew_rr_u2_1           = (13, 13)
  S4_pstorerinewfnew_rr_Pv4            = ( 5,  6)
  S4_pstorerinewfnew_rr_Rs32           = (16, 20)
  S4_pstorerinewfnew_rr_Ru32           = ( 8, 12)
  S4_pstorerinewfnew_rr_Nt8            = ( 0,  2)
  S4_pstorerinewfnew_rr_u2_0           = ( 7,  7)
  S4_pstorerinewfnew_rr_u2_1           = (13, 13)
  S2_pstorerinewtnew_pi_Rx32           = (16, 20)
  S2_pstorerinewtnew_pi_Pv4            = ( 0,  1)
  S2_pstorerinewtnew_pi_Nt8            = ( 8, 10)
  S2_pstorerinewtnew_pi_s4_2_0         = ( 3,  6) signed
  S2_pstorerinewfnew_pi_Rx32           = (16, 20)
  S2_pstorerinewfnew_pi_Pv4            = ( 0,  1)
  S2_pstorerinewfnew_pi_Nt8            = ( 8, 10)
  S2_pstorerinewfnew_pi_s4_2_0         = ( 3,  6) signed
  S4_pstorerinewt_abs_Pv4              = ( 0,  1)
  S4_pstorerinewt_abs_Nt8              = ( 8, 10)
  S4_pstorerinewt_abs_u6_0             = ( 3,  6)
  S4_pstorerinewt_abs_u6_1             = (16, 17)
  S4_pstorerinewf_abs_Pv4              = ( 0,  1)
  S4_pstorerinewf_abs_Nt8              = ( 8, 10)
  S4_pstorerinewf_abs_u6_0             = ( 3,  6)
  S4_pstorerinewf_abs_u6_1             = (16, 17)
  S4_pstorerinewtnew_abs_Pv4           = ( 0,  1)
  S4_pstorerinewtnew_abs_Nt8           = ( 8, 10)
  S4_pstorerinewtnew_abs_u6_0          = ( 3,  6)
  S4_pstorerinewtnew_abs_u6_1          = (16, 17)
  S4_pstorerinewfnew_abs_Pv4           = ( 0,  1)
  S4_pstorerinewfnew_abs_Nt8           = ( 8, 10)
  S4_pstorerinewfnew_abs_u6_0          = ( 3,  6)
  S4_pstorerinewfnew_abs_u6_1          = (16, 17)
  S4_storerbnew_rr_Rs32                = (16, 20)
  S4_storerbnew_rr_Ru32                = ( 8, 12)
  S4_storerbnew_rr_Nt8                 = ( 0,  2)
  S4_storerbnew_rr_u2_0                = ( 7,  7)
  S4_storerbnew_rr_u2_1                = (13, 13)
  S2_pstorerbnewt_io_Pv4               = ( 0,  1)
  S2_pstorerbnewt_io_Rs32              = (16, 20)
  S2_pstorerbnewt_io_Nt8               = ( 8, 10)
  S2_pstorerbnewt_io_u6_0_0            = ( 3,  7)
  S2_pstorerbnewt_io_u6_0_1            = (13, 13)
  S2_pstorerbnewt_pi_Rx32              = (16, 20)
  S2_pstorerbnewt_pi_Pv4               = ( 0,  1)
  S2_pstorerbnewt_pi_Nt8               = ( 8, 10)
  S2_pstorerbnewt_pi_s4_0_0            = ( 3,  6) signed
  S2_pstorerbnewf_io_Pv4               = ( 0,  1)
  S2_pstorerbnewf_io_Rs32              = (16, 20)
  S2_pstorerbnewf_io_Nt8               = ( 8, 10)
  S2_pstorerbnewf_io_u6_0_0            = ( 3,  7)
  S2_pstorerbnewf_io_u6_0_1            = (13, 13)
  S2_pstorerbnewf_pi_Rx32              = (16, 20)
  S2_pstorerbnewf_pi_Pv4               = ( 0,  1)
  S2_pstorerbnewf_pi_Nt8               = ( 8, 10)
  S2_pstorerbnewf_pi_s4_0_0            = ( 3,  6) signed
  S4_pstorerbnewt_rr_Pv4               = ( 5,  6)
  S4_pstorerbnewt_rr_Rs32              = (16, 20)
  S4_pstorerbnewt_rr_Ru32              = ( 8, 12)
  S4_pstorerbnewt_rr_Nt8               = ( 0,  2)
  S4_pstorerbnewt_rr_u2_0              = ( 7,  7)
  S4_pstorerbnewt_rr_u2_1              = (13, 13)
  S4_pstorerbnewf_rr_Pv4               = ( 5,  6)
  S4_pstorerbnewf_rr_Rs32              = (16, 20)
  S4_pstorerbnewf_rr_Ru32              = ( 8, 12)
  S4_pstorerbnewf_rr_Nt8               = ( 0,  2)
  S4_pstorerbnewf_rr_u2_0              = ( 7,  7)
  S4_pstorerbnewf_rr_u2_1              = (13, 13)
  S4_pstorerbnewtnew_io_Pv4            = ( 0,  1)
  S4_pstorerbnewtnew_io_Rs32           = (16, 20)
  S4_pstorerbnewtnew_io_Nt8            = ( 8, 10)
  S4_pstorerbnewtnew_io_u6_0_0         = ( 3,  7)
  S4_pstorerbnewtnew_io_u6_0_1         = (13, 13)
  S4_pstorerbnewfnew_io_Pv4            = ( 0,  1)
  S4_pstorerbnewfnew_io_Rs32           = (16, 20)
  S4_pstorerbnewfnew_io_Nt8            = ( 8, 10)
  S4_pstorerbnewfnew_io_u6_0_0         = ( 3,  7)
  S4_pstorerbnewfnew_io_u6_0_1         = (13, 13)
  S4_pstorerbnewtnew_rr_Pv4            = ( 5,  6)
  S4_pstorerbnewtnew_rr_Rs32           = (16, 20)
  S4_pstorerbnewtnew_rr_Ru32           = ( 8, 12)
  S4_pstorerbnewtnew_rr_Nt8            = ( 0,  2)
  S4_pstorerbnewtnew_rr_u2_0           = ( 7,  7)
  S4_pstorerbnewtnew_rr_u2_1           = (13, 13)
  S4_pstorerbnewfnew_rr_Pv4            = ( 5,  6)
  S4_pstorerbnewfnew_rr_Rs32           = (16, 20)
  S4_pstorerbnewfnew_rr_Ru32           = ( 8, 12)
  S4_pstorerbnewfnew_rr_Nt8            = ( 0,  2)
  S4_pstorerbnewfnew_rr_u2_0           = ( 7,  7)
  S4_pstorerbnewfnew_rr_u2_1           = (13, 13)
  S2_pstorerbnewtnew_pi_Rx32           = (16, 20)
  S2_pstorerbnewtnew_pi_Pv4            = ( 0,  1)
  S2_pstorerbnewtnew_pi_Nt8            = ( 8, 10)
  S2_pstorerbnewtnew_pi_s4_0_0         = ( 3,  6) signed
  S2_pstorerbnewfnew_pi_Rx32           = (16, 20)
  S2_pstorerbnewfnew_pi_Pv4            = ( 0,  1)
  S2_pstorerbnewfnew_pi_Nt8            = ( 8, 10)
  S2_pstorerbnewfnew_pi_s4_0_0         = ( 3,  6) signed
  S4_pstorerbnewt_abs_Pv4              = ( 0,  1)
  S4_pstorerbnewt_abs_Nt8              = ( 8, 10)
  S4_pstorerbnewt_abs_u6_0             = ( 3,  6)
  S4_pstorerbnewt_abs_u6_1             = (16, 17)
  S4_pstorerbnewf_abs_Pv4              = ( 0,  1)
  S4_pstorerbnewf_abs_Nt8              = ( 8, 10)
  S4_pstorerbnewf_abs_u6_0             = ( 3,  6)
  S4_pstorerbnewf_abs_u6_1             = (16, 17)
  S4_pstorerbnewtnew_abs_Pv4           = ( 0,  1)
  S4_pstorerbnewtnew_abs_Nt8           = ( 8, 10)
  S4_pstorerbnewtnew_abs_u6_0          = ( 3,  6)
  S4_pstorerbnewtnew_abs_u6_1          = (16, 17)
  S4_pstorerbnewfnew_abs_Pv4           = ( 0,  1)
  S4_pstorerbnewfnew_abs_Nt8           = ( 8, 10)
  S4_pstorerbnewfnew_abs_u6_0          = ( 3,  6)
  S4_pstorerbnewfnew_abs_u6_1          = (16, 17)
  S4_storerhnew_rr_Rs32                = (16, 20)
  S4_storerhnew_rr_Ru32                = ( 8, 12)
  S4_storerhnew_rr_Nt8                 = ( 0,  2)
  S4_storerhnew_rr_u2_0                = ( 7,  7)
  S4_storerhnew_rr_u2_1                = (13, 13)
  S2_pstorerhnewt_io_Pv4               = ( 0,  1)
  S2_pstorerhnewt_io_Rs32              = (16, 20)
  S2_pstorerhnewt_io_Nt8               = ( 8, 10)
  S2_pstorerhnewt_io_u6_1_0            = ( 3,  7)
  S2_pstorerhnewt_io_u6_1_1            = (13, 13)
  S2_pstorerhnewt_pi_Rx32              = (16, 20)
  S2_pstorerhnewt_pi_Pv4               = ( 0,  1)
  S2_pstorerhnewt_pi_Nt8               = ( 8, 10)
  S2_pstorerhnewt_pi_s4_1_0            = ( 3,  6) signed
  S2_pstorerhnewf_io_Pv4               = ( 0,  1)
  S2_pstorerhnewf_io_Rs32              = (16, 20)
  S2_pstorerhnewf_io_Nt8               = ( 8, 10)
  S2_pstorerhnewf_io_u6_1_0            = ( 3,  7)
  S2_pstorerhnewf_io_u6_1_1            = (13, 13)
  S2_pstorerhnewf_pi_Rx32              = (16, 20)
  S2_pstorerhnewf_pi_Pv4               = ( 0,  1)
  S2_pstorerhnewf_pi_Nt8               = ( 8, 10)
  S2_pstorerhnewf_pi_s4_1_0            = ( 3,  6) signed
  S4_pstorerhnewt_rr_Pv4               = ( 5,  6)
  S4_pstorerhnewt_rr_Rs32              = (16, 20)
  S4_pstorerhnewt_rr_Ru32              = ( 8, 12)
  S4_pstorerhnewt_rr_Nt8               = ( 0,  2)
  S4_pstorerhnewt_rr_u2_0              = ( 7,  7)
  S4_pstorerhnewt_rr_u2_1              = (13, 13)
  S4_pstorerhnewf_rr_Pv4               = ( 5,  6)
  S4_pstorerhnewf_rr_Rs32              = (16, 20)
  S4_pstorerhnewf_rr_Ru32              = ( 8, 12)
  S4_pstorerhnewf_rr_Nt8               = ( 0,  2)
  S4_pstorerhnewf_rr_u2_0              = ( 7,  7)
  S4_pstorerhnewf_rr_u2_1              = (13, 13)
  S4_pstorerhnewtnew_io_Pv4            = ( 0,  1)
  S4_pstorerhnewtnew_io_Rs32           = (16, 20)
  S4_pstorerhnewtnew_io_Nt8            = ( 8, 10)
  S4_pstorerhnewtnew_io_u6_1_0         = ( 3,  7)
  S4_pstorerhnewtnew_io_u6_1_1         = (13, 13)
  S4_pstorerhnewfnew_io_Pv4            = ( 0,  1)
  S4_pstorerhnewfnew_io_Rs32           = (16, 20)
  S4_pstorerhnewfnew_io_Nt8            = ( 8, 10)
  S4_pstorerhnewfnew_io_u6_1_0         = ( 3,  7)
  S4_pstorerhnewfnew_io_u6_1_1         = (13, 13)
  S4_pstorerhnewtnew_rr_Pv4            = ( 5,  6)
  S4_pstorerhnewtnew_rr_Rs32           = (16, 20)
  S4_pstorerhnewtnew_rr_Ru32           = ( 8, 12)
  S4_pstorerhnewtnew_rr_Nt8            = ( 0,  2)
  S4_pstorerhnewtnew_rr_u2_0           = ( 7,  7)
  S4_pstorerhnewtnew_rr_u2_1           = (13, 13)
  S4_pstorerhnewfnew_rr_Pv4            = ( 5,  6)
  S4_pstorerhnewfnew_rr_Rs32           = (16, 20)
  S4_pstorerhnewfnew_rr_Ru32           = ( 8, 12)
  S4_pstorerhnewfnew_rr_Nt8            = ( 0,  2)
  S4_pstorerhnewfnew_rr_u2_0           = ( 7,  7)
  S4_pstorerhnewfnew_rr_u2_1           = (13, 13)
  S2_pstorerhnewtnew_pi_Rx32           = (16, 20)
  S2_pstorerhnewtnew_pi_Pv4            = ( 0,  1)
  S2_pstorerhnewtnew_pi_Nt8            = ( 8, 10)
  S2_pstorerhnewtnew_pi_s4_1_0         = ( 3,  6) signed
  S2_pstorerhnewfnew_pi_Rx32           = (16, 20)
  S2_pstorerhnewfnew_pi_Pv4            = ( 0,  1)
  S2_pstorerhnewfnew_pi_Nt8            = ( 8, 10)
  S2_pstorerhnewfnew_pi_s4_1_0         = ( 3,  6) signed
  S4_pstorerhnewt_abs_Pv4              = ( 0,  1)
  S4_pstorerhnewt_abs_Nt8              = ( 8, 10)
  S4_pstorerhnewt_abs_u6_0             = ( 3,  6)
  S4_pstorerhnewt_abs_u6_1             = (16, 17)
  S4_pstorerhnewf_abs_Pv4              = ( 0,  1)
  S4_pstorerhnewf_abs_Nt8              = ( 8, 10)
  S4_pstorerhnewf_abs_u6_0             = ( 3,  6)
  S4_pstorerhnewf_abs_u6_1             = (16, 17)
  S4_pstorerhnewtnew_abs_Pv4           = ( 0,  1)
  S4_pstorerhnewtnew_abs_Nt8           = ( 8, 10)
  S4_pstorerhnewtnew_abs_u6_0          = ( 3,  6)
  S4_pstorerhnewtnew_abs_u6_1          = (16, 17)
  S4_pstorerhnewfnew_abs_Pv4           = ( 0,  1)
  S4_pstorerhnewfnew_abs_Nt8           = ( 8, 10)
  S4_pstorerhnewfnew_abs_u6_0          = ( 3,  6)
  S4_pstorerhnewfnew_abs_u6_1          = (16, 17)
  L4_add_memopw_io_Rs32                = (16, 20)
  L4_add_memopw_io_Rt32                = ( 0,  4)
  L4_add_memopw_io_u6_2_0              = ( 7, 12)
  L4_add_memopb_io_Rs32                = (16, 20)
  L4_add_memopb_io_Rt32                = ( 0,  4)
  L4_add_memopb_io_u6_0_0              = ( 7, 12)
  L4_add_memoph_io_Rs32                = (16, 20)
  L4_add_memoph_io_Rt32                = ( 0,  4)
  L4_add_memoph_io_u6_1_0              = ( 7, 12)
  L4_sub_memopw_io_Rs32                = (16, 20)
  L4_sub_memopw_io_Rt32                = ( 0,  4)
  L4_sub_memopw_io_u6_2_0              = ( 7, 12)
  L4_sub_memopb_io_Rs32                = (16, 20)
  L4_sub_memopb_io_Rt32                = ( 0,  4)
  L4_sub_memopb_io_u6_0_0              = ( 7, 12)
  L4_sub_memoph_io_Rs32                = (16, 20)
  L4_sub_memoph_io_Rt32                = ( 0,  4)
  L4_sub_memoph_io_u6_1_0              = ( 7, 12)
  L4_and_memopw_io_Rs32                = (16, 20)
  L4_and_memopw_io_Rt32                = ( 0,  4)
  L4_and_memopw_io_u6_2_0              = ( 7, 12)
  L4_and_memopb_io_Rs32                = (16, 20)
  L4_and_memopb_io_Rt32                = ( 0,  4)
  L4_and_memopb_io_u6_0_0              = ( 7, 12)
  L4_and_memoph_io_Rs32                = (16, 20)
  L4_and_memoph_io_Rt32                = ( 0,  4)
  L4_and_memoph_io_u6_1_0              = ( 7, 12)
  L4_or_memopw_io_Rs32                 = (16, 20)
  L4_or_memopw_io_Rt32                 = ( 0,  4)
  L4_or_memopw_io_u6_2_0               = ( 7, 12)
  L4_or_memopb_io_Rs32                 = (16, 20)
  L4_or_memopb_io_Rt32                 = ( 0,  4)
  L4_or_memopb_io_u6_0_0               = ( 7, 12)
  L4_or_memoph_io_Rs32                 = (16, 20)
  L4_or_memoph_io_Rt32                 = ( 0,  4)
  L4_or_memoph_io_u6_1_0               = ( 7, 12)
  L4_iadd_memopw_io_Rs32               = (16, 20)
  L4_iadd_memopw_io_u6_2_0             = ( 7, 12)
  L4_iadd_memopw_io_U5_0               = ( 0,  4)
  L4_iadd_memopb_io_Rs32               = (16, 20)
  L4_iadd_memopb_io_u6_0_0             = ( 7, 12)
  L4_iadd_memopb_io_U5_0               = ( 0,  4)
  L4_iadd_memoph_io_Rs32               = (16, 20)
  L4_iadd_memoph_io_u6_1_0             = ( 7, 12)
  L4_iadd_memoph_io_U5_0               = ( 0,  4)
  L4_isub_memopw_io_Rs32               = (16, 20)
  L4_isub_memopw_io_u6_2_0             = ( 7, 12)
  L4_isub_memopw_io_U5_0               = ( 0,  4)
  L4_isub_memopb_io_Rs32               = (16, 20)
  L4_isub_memopb_io_u6_0_0             = ( 7, 12)
  L4_isub_memopb_io_U5_0               = ( 0,  4)
  L4_isub_memoph_io_Rs32               = (16, 20)
  L4_isub_memoph_io_u6_1_0             = ( 7, 12)
  L4_isub_memoph_io_U5_0               = ( 0,  4)
  L4_iand_memopw_io_Rs32               = (16, 20)
  L4_iand_memopw_io_u6_2_0             = ( 7, 12)
  L4_iand_memopw_io_U5_0               = ( 0,  4)
  L4_iand_memopb_io_Rs32               = (16, 20)
  L4_iand_memopb_io_u6_0_0             = ( 7, 12)
  L4_iand_memopb_io_U5_0               = ( 0,  4)
  L4_iand_memoph_io_Rs32               = (16, 20)
  L4_iand_memoph_io_u6_1_0             = ( 7, 12)
  L4_iand_memoph_io_U5_0               = ( 0,  4)
  L4_ior_memopw_io_Rs32                = (16, 20)
  L4_ior_memopw_io_u6_2_0              = ( 7, 12)
  L4_ior_memopw_io_U5_0                = ( 0,  4)
  L4_ior_memopb_io_Rs32                = (16, 20)
  L4_ior_memopb_io_u6_0_0              = ( 7, 12)
  L4_ior_memopb_io_U5_0                = ( 0,  4)
  L4_ior_memoph_io_Rs32                = (16, 20)
  L4_ior_memoph_io_u6_1_0              = ( 7, 12)
  L4_ior_memoph_io_U5_0                = ( 0,  4)
  S4_storeirbt_io_Pv4                  = ( 5,  6)
  S4_storeirbt_io_Rs32                 = (16, 20)
  S4_storeirbt_io_u6_0_0               = ( 7, 12)
  S4_storeirbt_io_S6_0                 = ( 0,  4)
  S4_storeirbt_io_S6_1                 = (13, 13) signed
  S4_storeirbf_io_Pv4                  = ( 5,  6)
  S4_storeirbf_io_Rs32                 = (16, 20)
  S4_storeirbf_io_u6_0_0               = ( 7, 12)
  S4_storeirbf_io_S6_0                 = ( 0,  4)
  S4_storeirbf_io_S6_1                 = (13, 13) signed
  S4_storeirbtnew_io_Pv4               = ( 5,  6)
  S4_storeirbtnew_io_Rs32              = (16, 20)
  S4_storeirbtnew_io_u6_0_0            = ( 7, 12)
  S4_storeirbtnew_io_S6_0              = ( 0,  4)
  S4_storeirbtnew_io_S6_1              = (13, 13) signed
  S4_storeirbfnew_io_Pv4               = ( 5,  6)
  S4_storeirbfnew_io_Rs32              = (16, 20)
  S4_storeirbfnew_io_u6_0_0            = ( 7, 12)
  S4_storeirbfnew_io_S6_0              = ( 0,  4)
  S4_storeirbfnew_io_S6_1              = (13, 13) signed
  S4_storeirht_io_Pv4                  = ( 5,  6)
  S4_storeirht_io_Rs32                 = (16, 20)
  S4_storeirht_io_u6_1_0               = ( 7, 12)
  S4_storeirht_io_S6_0                 = ( 0,  4)
  S4_storeirht_io_S6_1                 = (13, 13) signed
  S4_storeirhf_io_Pv4                  = ( 5,  6)
  S4_storeirhf_io_Rs32                 = (16, 20)
  S4_storeirhf_io_u6_1_0               = ( 7, 12)
  S4_storeirhf_io_S6_0                 = ( 0,  4)
  S4_storeirhf_io_S6_1                 = (13, 13) signed
  S4_storeirhtnew_io_Pv4               = ( 5,  6)
  S4_storeirhtnew_io_Rs32              = (16, 20)
  S4_storeirhtnew_io_u6_1_0            = ( 7, 12)
  S4_storeirhtnew_io_S6_0              = ( 0,  4)
  S4_storeirhtnew_io_S6_1              = (13, 13) signed
  S4_storeirhfnew_io_Pv4               = ( 5,  6)
  S4_storeirhfnew_io_Rs32              = (16, 20)
  S4_storeirhfnew_io_u6_1_0            = ( 7, 12)
  S4_storeirhfnew_io_S6_0              = ( 0,  4)
  S4_storeirhfnew_io_S6_1              = (13, 13) signed
  S4_storeirit_io_Pv4                  = ( 5,  6)
  S4_storeirit_io_Rs32                 = (16, 20)
  S4_storeirit_io_u6_2_0               = ( 7, 12)
  S4_storeirit_io_S6_0                 = ( 0,  4)
  S4_storeirit_io_S6_1                 = (13, 13) signed
  S4_storeirif_io_Pv4                  = ( 5,  6)
  S4_storeirif_io_Rs32                 = (16, 20)
  S4_storeirif_io_u6_2_0               = ( 7, 12)
  S4_storeirif_io_S6_0                 = ( 0,  4)
  S4_storeirif_io_S6_1                 = (13, 13) signed
  S4_storeiritnew_io_Pv4               = ( 5,  6)
  S4_storeiritnew_io_Rs32              = (16, 20)
  S4_storeiritnew_io_u6_2_0            = ( 7, 12)
  S4_storeiritnew_io_S6_0              = ( 0,  4)
  S4_storeiritnew_io_S6_1              = (13, 13) signed
  S4_storeirifnew_io_Pv4               = ( 5,  6)
  S4_storeirifnew_io_Rs32              = (16, 20)
  S4_storeirifnew_io_u6_2_0            = ( 7, 12)
  S4_storeirifnew_io_S6_0              = ( 0,  4)
  S4_storeirifnew_io_S6_1              = (13, 13) signed
  S4_storeirb_io_Rs32                  = (16, 20)
  S4_storeirb_io_u6_0_0                = ( 7, 12)
  S4_storeirb_io_S8_0                  = ( 0,  6)
  S4_storeirb_io_S8_1                  = (13, 13) signed
  S4_storeirh_io_Rs32                  = (16, 20)
  S4_storeirh_io_u6_1_0                = ( 7, 12)
  S4_storeirh_io_S8_0                  = ( 0,  6)
  S4_storeirh_io_S8_1                  = (13, 13) signed
  S4_storeiri_io_Rs32                  = (16, 20)
  S4_storeiri_io_u6_2_0                = ( 7, 12)
  S4_storeiri_io_S8_0                  = ( 0,  6)
  S4_storeiri_io_S8_1                  = (13, 13) signed
  L2_loadrubgp_Rd32                    = ( 0,  4)
  L2_loadrubgp_u16_0_0                 = ( 5, 13)
  L2_loadrubgp_u16_0_1                 = (16, 20)
  L2_loadrubgp_u16_0_2                 = (25, 26)
  L2_loadrbgp_Rd32                     = ( 0,  4)
  L2_loadrbgp_u16_0_0                  = ( 5, 13)
  L2_loadrbgp_u16_0_1                  = (16, 20)
  L2_loadrbgp_u16_0_2                  = (25, 26)
  L2_loadruhgp_Rd32                    = ( 0,  4)
  L2_loadruhgp_u16_1_0                 = ( 5, 13)
  L2_loadruhgp_u16_1_1                 = (16, 20)
  L2_loadruhgp_u16_1_2                 = (25, 26)
  L2_loadrhgp_Rd32                     = ( 0,  4)
  L2_loadrhgp_u16_1_0                  = ( 5, 13)
  L2_loadrhgp_u16_1_1                  = (16, 20)
  L2_loadrhgp_u16_1_2                  = (25, 26)
  L2_loadrigp_Rd32                     = ( 0,  4)
  L2_loadrigp_u16_2_0                  = ( 5, 13)
  L2_loadrigp_u16_2_1                  = (16, 20)
  L2_loadrigp_u16_2_2                  = (25, 26)
  L2_loadrdgp_Rdd32                    = ( 0,  4)
  L2_loadrdgp_u16_3_0                  = ( 5, 13)
  L2_loadrdgp_u16_3_1                  = (16, 20)
  L2_loadrdgp_u16_3_2                  = (25, 26)
  S2_storerbgp_Rt32                    = ( 8, 12)
  S2_storerbgp_u16_0_0                 = ( 0,  7)
  S2_storerbgp_u16_0_1                 = (13, 13)
  S2_storerbgp_u16_0_2                 = (16, 20)
  S2_storerbgp_u16_0_3                 = (25, 26)
  S2_storerhgp_Rt32                    = ( 8, 12)
  S2_storerhgp_u16_1_0                 = ( 0,  7)
  S2_storerhgp_u16_1_1                 = (13, 13)
  S2_storerhgp_u16_1_2                 = (16, 20)
  S2_storerhgp_u16_1_3                 = (25, 26)
  S2_storerfgp_Rt32                    = ( 8, 12)
  S2_storerfgp_u16_1_0                 = ( 0,  7)
  S2_storerfgp_u16_1_1                 = (13, 13)
  S2_storerfgp_u16_1_2                 = (16, 20)
  S2_storerfgp_u16_1_3                 = (25, 26)
  S2_storerigp_Rt32                    = ( 8, 12)
  S2_storerigp_u16_2_0                 = ( 0,  7)
  S2_storerigp_u16_2_1                 = (13, 13)
  S2_storerigp_u16_2_2                 = (16, 20)
  S2_storerigp_u16_2_3                 = (25, 26)
  S2_storerdgp_Rtt32                   = ( 8, 12)
  S2_storerdgp_u16_3_0                 = ( 0,  7)
  S2_storerdgp_u16_3_1                 = (13, 13)
  S2_storerdgp_u16_3_2                 = (16, 20)
  S2_storerdgp_u16_3_3                 = (25, 26)
  S2_storerinewgp_Nt8                  = ( 8, 10)
  S2_storerinewgp_u16_2_0              = ( 0,  7)
  S2_storerinewgp_u16_2_1              = (13, 13)
  S2_storerinewgp_u16_2_2              = (16, 20)
  S2_storerinewgp_u16_2_3              = (25, 26)
  S2_storerbnewgp_Nt8                  = ( 8, 10)
  S2_storerbnewgp_u16_0_0              = ( 0,  7)
  S2_storerbnewgp_u16_0_1              = (13, 13)
  S2_storerbnewgp_u16_0_2              = (16, 20)
  S2_storerbnewgp_u16_0_3              = (25, 26)
  S2_storerhnewgp_Nt8                  = ( 8, 10)
  S2_storerhnewgp_u16_1_0              = ( 0,  7)
  S2_storerhnewgp_u16_1_1              = (13, 13)
  S2_storerhnewgp_u16_1_2              = (16, 20)
  S2_storerhnewgp_u16_1_3              = (25, 26)
  C2_cmpeq_Pd4                         = ( 0,  1)
  C2_cmpeq_Rs32                        = (16, 20)
  C2_cmpeq_Rt32                        = ( 8, 12)
  C2_cmpgt_Pd4                         = ( 0,  1)
  C2_cmpgt_Rs32                        = (16, 20)
  C2_cmpgt_Rt32                        = ( 8, 12)
  C2_cmpgtu_Pd4                        = ( 0,  1)
  C2_cmpgtu_Rs32                       = (16, 20)
  C2_cmpgtu_Rt32                       = ( 8, 12)
  C2_cmpeqp_Pd4                        = ( 0,  1)
  C2_cmpeqp_Rss32                      = (16, 20)
  C2_cmpeqp_Rtt32                      = ( 8, 12)
  C2_cmpgtp_Pd4                        = ( 0,  1)
  C2_cmpgtp_Rss32                      = (16, 20)
  C2_cmpgtp_Rtt32                      = ( 8, 12)
  C2_cmpgtup_Pd4                       = ( 0,  1)
  C2_cmpgtup_Rss32                     = (16, 20)
  C2_cmpgtup_Rtt32                     = ( 8, 12)
  A4_rcmpeqi_Rd32                      = ( 0,  4)
  A4_rcmpeqi_Rs32                      = (16, 20)
  A4_rcmpeqi_s8_0                      = ( 5, 12) signed
  A4_rcmpneqi_Rd32                     = ( 0,  4)
  A4_rcmpneqi_Rs32                     = (16, 20)
  A4_rcmpneqi_s8_0                     = ( 5, 12) signed
  A4_rcmpeq_Rd32                       = ( 0,  4)
  A4_rcmpeq_Rs32                       = (16, 20)
  A4_rcmpeq_Rt32                       = ( 8, 12)
  A4_rcmpneq_Rd32                      = ( 0,  4)
  A4_rcmpneq_Rs32                      = (16, 20)
  A4_rcmpneq_Rt32                      = ( 8, 12)
  C2_bitsset_Pd4                       = ( 0,  1)
  C2_bitsset_Rs32                      = (16, 20)
  C2_bitsset_Rt32                      = ( 8, 12)
  C2_bitsclr_Pd4                       = ( 0,  1)
  C2_bitsclr_Rs32                      = (16, 20)
  C2_bitsclr_Rt32                      = ( 8, 12)
  C4_nbitsset_Pd4                      = ( 0,  1)
  C4_nbitsset_Rs32                     = (16, 20)
  C4_nbitsset_Rt32                     = ( 8, 12)
  C4_nbitsclr_Pd4                      = ( 0,  1)
  C4_nbitsclr_Rs32                     = (16, 20)
  C4_nbitsclr_Rt32                     = ( 8, 12)
  C2_cmpeqi_Pd4                        = ( 0,  1)
  C2_cmpeqi_Rs32                       = (16, 20)
  C2_cmpeqi_s10_0                      = ( 5, 13)
  C2_cmpeqi_s10_1                      = (21, 21) signed
  C2_cmpgti_Pd4                        = ( 0,  1)
  C2_cmpgti_Rs32                       = (16, 20)
  C2_cmpgti_s10_0                      = ( 5, 13)
  C2_cmpgti_s10_1                      = (21, 21) signed
  C2_cmpgtui_Pd4                       = ( 0,  1)
  C2_cmpgtui_Rs32                      = (16, 20)
  C2_cmpgtui_u9_0                      = ( 5, 13)
  C2_bitsclri_Pd4                      = ( 0,  1)
  C2_bitsclri_Rs32                     = (16, 20)
  C2_bitsclri_u6_0                     = ( 8, 13)
  C4_nbitsclri_Pd4                     = ( 0,  1)
  C4_nbitsclri_Rs32                    = (16, 20)
  C4_nbitsclri_u6_0                    = ( 8, 13)
  C4_cmpneqi_Pd4                       = ( 0,  1)
  C4_cmpneqi_Rs32                      = (16, 20)
  C4_cmpneqi_s10_0                     = ( 5, 13)
  C4_cmpneqi_s10_1                     = (21, 21) signed
  C4_cmpltei_Pd4                       = ( 0,  1)
  C4_cmpltei_Rs32                      = (16, 20)
  C4_cmpltei_s10_0                     = ( 5, 13)
  C4_cmpltei_s10_1                     = (21, 21) signed
  C4_cmplteui_Pd4                      = ( 0,  1)
  C4_cmplteui_Rs32                     = (16, 20)
  C4_cmplteui_u9_0                     = ( 5, 13)
  C4_cmpneq_Pd4                        = ( 0,  1)
  C4_cmpneq_Rs32                       = (16, 20)
  C4_cmpneq_Rt32                       = ( 8, 12)
  C4_cmplte_Pd4                        = ( 0,  1)
  C4_cmplte_Rs32                       = (16, 20)
  C4_cmplte_Rt32                       = ( 8, 12)
  C4_cmplteu_Pd4                       = ( 0,  1)
  C4_cmplteu_Rs32                      = (16, 20)
  C4_cmplteu_Rt32                      = ( 8, 12)
  C2_and_Pd4                           = ( 0,  1)
  C2_and_Pt4                           = ( 8,  9)
  C2_and_Ps4                           = (16, 17)
  C2_or_Pd4                            = ( 0,  1)
  C2_or_Pt4                            = ( 8,  9)
  C2_or_Ps4                            = (16, 17)
  C2_xor_Pd4                           = ( 0,  1)
  C2_xor_Ps4                           = (16, 17)
  C2_xor_Pt4                           = ( 8,  9)
  C2_andn_Pd4                          = ( 0,  1)
  C2_andn_Pt4                          = ( 8,  9)
  C2_andn_Ps4                          = (16, 17)
  C2_not_Pd4                           = ( 0,  1)
  C2_not_Ps4                           = (16, 17)
  C2_orn_Pd4                           = ( 0,  1)
  C2_orn_Pt4                           = ( 8,  9)
  C2_orn_Ps4                           = (16, 17)
  C4_and_and_Pd4                       = ( 0,  1)
  C4_and_and_Ps4                       = (16, 17)
  C4_and_and_Pt4                       = ( 8,  9)
  C4_and_and_Pu4                       = ( 6,  7)
  C4_and_or_Pd4                        = ( 0,  1)
  C4_and_or_Ps4                        = (16, 17)
  C4_and_or_Pt4                        = ( 8,  9)
  C4_and_or_Pu4                        = ( 6,  7)
  C4_or_and_Pd4                        = ( 0,  1)
  C4_or_and_Ps4                        = (16, 17)
  C4_or_and_Pt4                        = ( 8,  9)
  C4_or_and_Pu4                        = ( 6,  7)
  C4_or_or_Pd4                         = ( 0,  1)
  C4_or_or_Ps4                         = (16, 17)
  C4_or_or_Pt4                         = ( 8,  9)
  C4_or_or_Pu4                         = ( 6,  7)
  C4_and_andn_Pd4                      = ( 0,  1)
  C4_and_andn_Ps4                      = (16, 17)
  C4_and_andn_Pt4                      = ( 8,  9)
  C4_and_andn_Pu4                      = ( 6,  7)
  C4_and_orn_Pd4                       = ( 0,  1)
  C4_and_orn_Ps4                       = (16, 17)
  C4_and_orn_Pt4                       = ( 8,  9)
  C4_and_orn_Pu4                       = ( 6,  7)
  C4_or_andn_Pd4                       = ( 0,  1)
  C4_or_andn_Ps4                       = (16, 17)
  C4_or_andn_Pt4                       = ( 8,  9)
  C4_or_andn_Pu4                       = ( 6,  7)
  C4_or_orn_Pd4                        = ( 0,  1)
  C4_or_orn_Ps4                        = (16, 17)
  C4_or_orn_Pt4                        = ( 8,  9)
  C4_or_orn_Pu4                        = ( 6,  7)
  C2_any8_Pd4                          = ( 0,  1)
  C2_any8_Ps4                          = (16, 17)
  C2_all8_Pd4                          = ( 0,  1)
  C2_all8_Ps4                          = (16, 17)
  C2_vitpack_Rd32                      = ( 0,  4)
  C2_vitpack_Ps4                       = (16, 17)
  C2_vitpack_Pt4                       = ( 8,  9)
  C2_mux_Rd32                          = ( 0,  4)
  C2_mux_Pu4                           = ( 5,  6)
  C2_mux_Rs32                          = (16, 20)
  C2_mux_Rt32                          = ( 8, 12)
  C2_cmovenewit_Rd32                   = ( 0,  4)
  C2_cmovenewit_Pu4                    = (21, 22)
  C2_cmovenewit_s12_0                  = ( 5, 12)
  C2_cmovenewit_s12_1                  = (16, 19) signed
  C2_cmovenewif_Rd32                   = ( 0,  4)
  C2_cmovenewif_Pu4                    = (21, 22)
  C2_cmovenewif_s12_0                  = ( 5, 12)
  C2_cmovenewif_s12_1                  = (16, 19) signed
  C2_cmoveit_Rd32                      = ( 0,  4)
  C2_cmoveit_Pu4                       = (21, 22)
  C2_cmoveit_s12_0                     = ( 5, 12)
  C2_cmoveit_s12_1                     = (16, 19) signed
  C2_cmoveif_Rd32                      = ( 0,  4)
  C2_cmoveif_Pu4                       = (21, 22)
  C2_cmoveif_s12_0                     = ( 5, 12)
  C2_cmoveif_s12_1                     = (16, 19) signed
  C2_ccombinewnewt_Rdd32               = ( 0,  4)
  C2_ccombinewnewt_Pu4                 = ( 5,  6)
  C2_ccombinewnewt_Rs32                = (16, 20)
  C2_ccombinewnewt_Rt32                = ( 8, 12)
  C2_ccombinewnewf_Rdd32               = ( 0,  4)
  C2_ccombinewnewf_Pu4                 = ( 5,  6)
  C2_ccombinewnewf_Rs32                = (16, 20)
  C2_ccombinewnewf_Rt32                = ( 8, 12)
  C2_ccombinewt_Rdd32                  = ( 0,  4)
  C2_ccombinewt_Pu4                    = ( 5,  6)
  C2_ccombinewt_Rs32                   = (16, 20)
  C2_ccombinewt_Rt32                   = ( 8, 12)
  C2_ccombinewf_Rdd32                  = ( 0,  4)
  C2_ccombinewf_Pu4                    = ( 5,  6)
  C2_ccombinewf_Rs32                   = (16, 20)
  C2_ccombinewf_Rt32                   = ( 8, 12)
  C2_muxii_Rd32                        = ( 0,  4)
  C2_muxii_Pu4                         = (23, 24)
  C2_muxii_s8_0                        = ( 5, 12) signed
  C2_muxii_S8_0                        = (13, 13)
  C2_muxii_S8_1                        = (16, 22) signed
  C2_muxir_Rd32                        = ( 0,  4)
  C2_muxir_Pu4                         = (21, 22)
  C2_muxir_Rs32                        = (16, 20)
  C2_muxir_s8_0                        = ( 5, 12) signed
  C2_muxri_Rd32                        = ( 0,  4)
  C2_muxri_Pu4                         = (21, 22)
  C2_muxri_Rs32                        = (16, 20)
  C2_muxri_s8_0                        = ( 5, 12) signed
  C2_vmux_Rdd32                        = ( 0,  4)
  C2_vmux_Pu4                          = ( 5,  6)
  C2_vmux_Rss32                        = (16, 20)
  C2_vmux_Rtt32                        = ( 8, 12)
  C2_mask_Rdd32                        = ( 0,  4)
  C2_mask_Pt4                          = ( 8,  9)
  A2_vcmpbeq_Pd4                       = ( 0,  1)
  A2_vcmpbeq_Rss32                     = (16, 20)
  A2_vcmpbeq_Rtt32                     = ( 8, 12)
  A4_vcmpbeqi_Pd4                      = ( 0,  1)
  A4_vcmpbeqi_Rss32                    = (16, 20)
  A4_vcmpbeqi_u8_0                     = ( 5, 12)
  A4_vcmpbeq_any_Pd4                   = ( 0,  1)
  A4_vcmpbeq_any_Rss32                 = (16, 20)
  A4_vcmpbeq_any_Rtt32                 = ( 8, 12)
  A6_vcmpbeq_notany_Pd4                = ( 0,  1)
  A6_vcmpbeq_notany_Rss32              = (16, 20)
  A6_vcmpbeq_notany_Rtt32              = ( 8, 12)
  A2_vcmpbgtu_Pd4                      = ( 0,  1)
  A2_vcmpbgtu_Rss32                    = (16, 20)
  A2_vcmpbgtu_Rtt32                    = ( 8, 12)
  A4_vcmpbgtui_Pd4                     = ( 0,  1)
  A4_vcmpbgtui_Rss32                   = (16, 20)
  A4_vcmpbgtui_u7_0                    = ( 5, 11)
  A4_vcmpbgt_Pd4                       = ( 0,  1)
  A4_vcmpbgt_Rss32                     = (16, 20)
  A4_vcmpbgt_Rtt32                     = ( 8, 12)
  A4_vcmpbgti_Pd4                      = ( 0,  1)
  A4_vcmpbgti_Rss32                    = (16, 20)
  A4_vcmpbgti_s8_0                     = ( 5, 12) signed
  A4_cmpbeq_Pd4                        = ( 0,  1)
  A4_cmpbeq_Rs32                       = (16, 20)
  A4_cmpbeq_Rt32                       = ( 8, 12)
  A4_cmpbeqi_Pd4                       = ( 0,  1)
  A4_cmpbeqi_Rs32                      = (16, 20)
  A4_cmpbeqi_u8_0                      = ( 5, 12)
  A4_cmpbgtu_Pd4                       = ( 0,  1)
  A4_cmpbgtu_Rs32                      = (16, 20)
  A4_cmpbgtu_Rt32                      = ( 8, 12)
  A4_cmpbgtui_Pd4                      = ( 0,  1)
  A4_cmpbgtui_Rs32                     = (16, 20)
  A4_cmpbgtui_u7_0                     = ( 5, 11)
  A4_cmpbgt_Pd4                        = ( 0,  1)
  A4_cmpbgt_Rs32                       = (16, 20)
  A4_cmpbgt_Rt32                       = ( 8, 12)
  A4_cmpbgti_Pd4                       = ( 0,  1)
  A4_cmpbgti_Rs32                      = (16, 20)
  A4_cmpbgti_s8_0                      = ( 5, 12) signed
  A2_vcmpheq_Pd4                       = ( 0,  1)
  A2_vcmpheq_Rss32                     = (16, 20)
  A2_vcmpheq_Rtt32                     = ( 8, 12)
  A2_vcmphgt_Pd4                       = ( 0,  1)
  A2_vcmphgt_Rss32                     = (16, 20)
  A2_vcmphgt_Rtt32                     = ( 8, 12)
  A2_vcmphgtu_Pd4                      = ( 0,  1)
  A2_vcmphgtu_Rss32                    = (16, 20)
  A2_vcmphgtu_Rtt32                    = ( 8, 12)
  A4_vcmpheqi_Pd4                      = ( 0,  1)
  A4_vcmpheqi_Rss32                    = (16, 20)
  A4_vcmpheqi_s8_0                     = ( 5, 12) signed
  A4_vcmphgti_Pd4                      = ( 0,  1)
  A4_vcmphgti_Rss32                    = (16, 20)
  A4_vcmphgti_s8_0                     = ( 5, 12) signed
  A4_vcmphgtui_Pd4                     = ( 0,  1)
  A4_vcmphgtui_Rss32                   = (16, 20)
  A4_vcmphgtui_u7_0                    = ( 5, 11)
  A4_cmpheq_Pd4                        = ( 0,  1)
  A4_cmpheq_Rs32                       = (16, 20)
  A4_cmpheq_Rt32                       = ( 8, 12)
  A4_cmphgt_Pd4                        = ( 0,  1)
  A4_cmphgt_Rs32                       = (16, 20)
  A4_cmphgt_Rt32                       = ( 8, 12)
  A4_cmphgtu_Pd4                       = ( 0,  1)
  A4_cmphgtu_Rs32                      = (16, 20)
  A4_cmphgtu_Rt32                      = ( 8, 12)
  A4_cmpheqi_Pd4                       = ( 0,  1)
  A4_cmpheqi_Rs32                      = (16, 20)
  A4_cmpheqi_s8_0                      = ( 5, 12) signed
  A4_cmphgti_Pd4                       = ( 0,  1)
  A4_cmphgti_Rs32                      = (16, 20)
  A4_cmphgti_s8_0                      = ( 5, 12) signed
  A4_cmphgtui_Pd4                      = ( 0,  1)
  A4_cmphgtui_Rs32                     = (16, 20)
  A4_cmphgtui_u7_0                     = ( 5, 11)
  A2_vcmpweq_Pd4                       = ( 0,  1)
  A2_vcmpweq_Rss32                     = (16, 20)
  A2_vcmpweq_Rtt32                     = ( 8, 12)
  A2_vcmpwgt_Pd4                       = ( 0,  1)
  A2_vcmpwgt_Rss32                     = (16, 20)
  A2_vcmpwgt_Rtt32                     = ( 8, 12)
  A2_vcmpwgtu_Pd4                      = ( 0,  1)
  A2_vcmpwgtu_Rss32                    = (16, 20)
  A2_vcmpwgtu_Rtt32                    = ( 8, 12)
  A4_vcmpweqi_Pd4                      = ( 0,  1)
  A4_vcmpweqi_Rss32                    = (16, 20)
  A4_vcmpweqi_s8_0                     = ( 5, 12) signed
  A4_vcmpwgti_Pd4                      = ( 0,  1)
  A4_vcmpwgti_Rss32                    = (16, 20)
  A4_vcmpwgti_s8_0                     = ( 5, 12) signed
  A4_vcmpwgtui_Pd4                     = ( 0,  1)
  A4_vcmpwgtui_Rss32                   = (16, 20)
  A4_vcmpwgtui_u7_0                    = ( 5, 11)
  A4_boundscheck_hi_Pd4                = ( 0,  1)
  A4_boundscheck_hi_Rss32              = (16, 20)
  A4_boundscheck_hi_Rtt32              = ( 8, 12)
  A4_boundscheck_lo_Pd4                = ( 0,  1)
  A4_boundscheck_lo_Rss32              = (16, 20)
  A4_boundscheck_lo_Rtt32              = ( 8, 12)
  A4_tlbmatch_Pd4                      = ( 0,  1)
  A4_tlbmatch_Rss32                    = (16, 20)
  A4_tlbmatch_Rt32                     = ( 8, 12)
  C2_tfrpr_Rd32                        = ( 0,  4)
  C2_tfrpr_Ps4                         = (16, 17)
  C2_tfrrp_Pd4                         = ( 0,  1)
  C2_tfrrp_Rs32                        = (16, 20)
  C4_fastcorner9_Pd4                   = ( 0,  1)
  C4_fastcorner9_Ps4                   = (16, 17)
  C4_fastcorner9_Pt4                   = ( 8,  9)
  C4_fastcorner9_not_Pd4               = ( 0,  1)
  C4_fastcorner9_not_Ps4               = (16, 17)
  C4_fastcorner9_not_Pt4               = ( 8,  9)
  M2_mpy_acc_hh_s0_Rx32                = ( 0,  4)
  M2_mpy_acc_hh_s0_Rs32                = (16, 20)
  M2_mpy_acc_hh_s0_Rt32                = ( 8, 12)
  M2_mpy_acc_hh_s1_Rx32                = ( 0,  4)
  M2_mpy_acc_hh_s1_Rs32                = (16, 20)
  M2_mpy_acc_hh_s1_Rt32                = ( 8, 12)
  M2_mpy_acc_hl_s0_Rx32                = ( 0,  4)
  M2_mpy_acc_hl_s0_Rs32                = (16, 20)
  M2_mpy_acc_hl_s0_Rt32                = ( 8, 12)
  M2_mpy_acc_hl_s1_Rx32                = ( 0,  4)
  M2_mpy_acc_hl_s1_Rs32                = (16, 20)
  M2_mpy_acc_hl_s1_Rt32                = ( 8, 12)
  M2_mpy_acc_lh_s0_Rx32                = ( 0,  4)
  M2_mpy_acc_lh_s0_Rs32                = (16, 20)
  M2_mpy_acc_lh_s0_Rt32                = ( 8, 12)
  M2_mpy_acc_lh_s1_Rx32                = ( 0,  4)
  M2_mpy_acc_lh_s1_Rs32                = (16, 20)
  M2_mpy_acc_lh_s1_Rt32                = ( 8, 12)
  M2_mpy_acc_ll_s0_Rx32                = ( 0,  4)
  M2_mpy_acc_ll_s0_Rs32                = (16, 20)
  M2_mpy_acc_ll_s0_Rt32                = ( 8, 12)
  M2_mpy_acc_ll_s1_Rx32                = ( 0,  4)
  M2_mpy_acc_ll_s1_Rs32                = (16, 20)
  M2_mpy_acc_ll_s1_Rt32                = ( 8, 12)
  M2_mpy_nac_hh_s0_Rx32                = ( 0,  4)
  M2_mpy_nac_hh_s0_Rs32                = (16, 20)
  M2_mpy_nac_hh_s0_Rt32                = ( 8, 12)
  M2_mpy_nac_hh_s1_Rx32                = ( 0,  4)
  M2_mpy_nac_hh_s1_Rs32                = (16, 20)
  M2_mpy_nac_hh_s1_Rt32                = ( 8, 12)
  M2_mpy_nac_hl_s0_Rx32                = ( 0,  4)
  M2_mpy_nac_hl_s0_Rs32                = (16, 20)
  M2_mpy_nac_hl_s0_Rt32                = ( 8, 12)
  M2_mpy_nac_hl_s1_Rx32                = ( 0,  4)
  M2_mpy_nac_hl_s1_Rs32                = (16, 20)
  M2_mpy_nac_hl_s1_Rt32                = ( 8, 12)
  M2_mpy_nac_lh_s0_Rx32                = ( 0,  4)
  M2_mpy_nac_lh_s0_Rs32                = (16, 20)
  M2_mpy_nac_lh_s0_Rt32                = ( 8, 12)
  M2_mpy_nac_lh_s1_Rx32                = ( 0,  4)
  M2_mpy_nac_lh_s1_Rs32                = (16, 20)
  M2_mpy_nac_lh_s1_Rt32                = ( 8, 12)
  M2_mpy_nac_ll_s0_Rx32                = ( 0,  4)
  M2_mpy_nac_ll_s0_Rs32                = (16, 20)
  M2_mpy_nac_ll_s0_Rt32                = ( 8, 12)
  M2_mpy_nac_ll_s1_Rx32                = ( 0,  4)
  M2_mpy_nac_ll_s1_Rs32                = (16, 20)
  M2_mpy_nac_ll_s1_Rt32                = ( 8, 12)
  M2_mpy_acc_sat_hh_s0_Rx32            = ( 0,  4)
  M2_mpy_acc_sat_hh_s0_Rs32            = (16, 20)
  M2_mpy_acc_sat_hh_s0_Rt32            = ( 8, 12)
  M2_mpy_acc_sat_hh_s1_Rx32            = ( 0,  4)
  M2_mpy_acc_sat_hh_s1_Rs32            = (16, 20)
  M2_mpy_acc_sat_hh_s1_Rt32            = ( 8, 12)
  M2_mpy_acc_sat_hl_s0_Rx32            = ( 0,  4)
  M2_mpy_acc_sat_hl_s0_Rs32            = (16, 20)
  M2_mpy_acc_sat_hl_s0_Rt32            = ( 8, 12)
  M2_mpy_acc_sat_hl_s1_Rx32            = ( 0,  4)
  M2_mpy_acc_sat_hl_s1_Rs32            = (16, 20)
  M2_mpy_acc_sat_hl_s1_Rt32            = ( 8, 12)
  M2_mpy_acc_sat_lh_s0_Rx32            = ( 0,  4)
  M2_mpy_acc_sat_lh_s0_Rs32            = (16, 20)
  M2_mpy_acc_sat_lh_s0_Rt32            = ( 8, 12)
  M2_mpy_acc_sat_lh_s1_Rx32            = ( 0,  4)
  M2_mpy_acc_sat_lh_s1_Rs32            = (16, 20)
  M2_mpy_acc_sat_lh_s1_Rt32            = ( 8, 12)
  M2_mpy_acc_sat_ll_s0_Rx32            = ( 0,  4)
  M2_mpy_acc_sat_ll_s0_Rs32            = (16, 20)
  M2_mpy_acc_sat_ll_s0_Rt32            = ( 8, 12)
  M2_mpy_acc_sat_ll_s1_Rx32            = ( 0,  4)
  M2_mpy_acc_sat_ll_s1_Rs32            = (16, 20)
  M2_mpy_acc_sat_ll_s1_Rt32            = ( 8, 12)
  M2_mpy_nac_sat_hh_s0_Rx32            = ( 0,  4)
  M2_mpy_nac_sat_hh_s0_Rs32            = (16, 20)
  M2_mpy_nac_sat_hh_s0_Rt32            = ( 8, 12)
  M2_mpy_nac_sat_hh_s1_Rx32            = ( 0,  4)
  M2_mpy_nac_sat_hh_s1_Rs32            = (16, 20)
  M2_mpy_nac_sat_hh_s1_Rt32            = ( 8, 12)
  M2_mpy_nac_sat_hl_s0_Rx32            = ( 0,  4)
  M2_mpy_nac_sat_hl_s0_Rs32            = (16, 20)
  M2_mpy_nac_sat_hl_s0_Rt32            = ( 8, 12)
  M2_mpy_nac_sat_hl_s1_Rx32            = ( 0,  4)
  M2_mpy_nac_sat_hl_s1_Rs32            = (16, 20)
  M2_mpy_nac_sat_hl_s1_Rt32            = ( 8, 12)
  M2_mpy_nac_sat_lh_s0_Rx32            = ( 0,  4)
  M2_mpy_nac_sat_lh_s0_Rs32            = (16, 20)
  M2_mpy_nac_sat_lh_s0_Rt32            = ( 8, 12)
  M2_mpy_nac_sat_lh_s1_Rx32            = ( 0,  4)
  M2_mpy_nac_sat_lh_s1_Rs32            = (16, 20)
  M2_mpy_nac_sat_lh_s1_Rt32            = ( 8, 12)
  M2_mpy_nac_sat_ll_s0_Rx32            = ( 0,  4)
  M2_mpy_nac_sat_ll_s0_Rs32            = (16, 20)
  M2_mpy_nac_sat_ll_s0_Rt32            = ( 8, 12)
  M2_mpy_nac_sat_ll_s1_Rx32            = ( 0,  4)
  M2_mpy_nac_sat_ll_s1_Rs32            = (16, 20)
  M2_mpy_nac_sat_ll_s1_Rt32            = ( 8, 12)
  M2_mpy_hh_s0_Rd32                    = ( 0,  4)
  M2_mpy_hh_s0_Rs32                    = (16, 20)
  M2_mpy_hh_s0_Rt32                    = ( 8, 12)
  M2_mpy_hh_s1_Rd32                    = ( 0,  4)
  M2_mpy_hh_s1_Rs32                    = (16, 20)
  M2_mpy_hh_s1_Rt32                    = ( 8, 12)
  M2_mpy_hl_s0_Rd32                    = ( 0,  4)
  M2_mpy_hl_s0_Rs32                    = (16, 20)
  M2_mpy_hl_s0_Rt32                    = ( 8, 12)
  M2_mpy_hl_s1_Rd32                    = ( 0,  4)
  M2_mpy_hl_s1_Rs32                    = (16, 20)
  M2_mpy_hl_s1_Rt32                    = ( 8, 12)
  M2_mpy_lh_s0_Rd32                    = ( 0,  4)
  M2_mpy_lh_s0_Rs32                    = (16, 20)
  M2_mpy_lh_s0_Rt32                    = ( 8, 12)
  M2_mpy_lh_s1_Rd32                    = ( 0,  4)
  M2_mpy_lh_s1_Rs32                    = (16, 20)
  M2_mpy_lh_s1_Rt32                    = ( 8, 12)
  M2_mpy_ll_s0_Rd32                    = ( 0,  4)
  M2_mpy_ll_s0_Rs32                    = (16, 20)
  M2_mpy_ll_s0_Rt32                    = ( 8, 12)
  M2_mpy_ll_s1_Rd32                    = ( 0,  4)
  M2_mpy_ll_s1_Rs32                    = (16, 20)
  M2_mpy_ll_s1_Rt32                    = ( 8, 12)
  M2_mpy_sat_hh_s0_Rd32                = ( 0,  4)
  M2_mpy_sat_hh_s0_Rs32                = (16, 20)
  M2_mpy_sat_hh_s0_Rt32                = ( 8, 12)
  M2_mpy_sat_hh_s1_Rd32                = ( 0,  4)
  M2_mpy_sat_hh_s1_Rs32                = (16, 20)
  M2_mpy_sat_hh_s1_Rt32                = ( 8, 12)
  M2_mpy_sat_hl_s0_Rd32                = ( 0,  4)
  M2_mpy_sat_hl_s0_Rs32                = (16, 20)
  M2_mpy_sat_hl_s0_Rt32                = ( 8, 12)
  M2_mpy_sat_hl_s1_Rd32                = ( 0,  4)
  M2_mpy_sat_hl_s1_Rs32                = (16, 20)
  M2_mpy_sat_hl_s1_Rt32                = ( 8, 12)
  M2_mpy_sat_lh_s0_Rd32                = ( 0,  4)
  M2_mpy_sat_lh_s0_Rs32                = (16, 20)
  M2_mpy_sat_lh_s0_Rt32                = ( 8, 12)
  M2_mpy_sat_lh_s1_Rd32                = ( 0,  4)
  M2_mpy_sat_lh_s1_Rs32                = (16, 20)
  M2_mpy_sat_lh_s1_Rt32                = ( 8, 12)
  M2_mpy_sat_ll_s0_Rd32                = ( 0,  4)
  M2_mpy_sat_ll_s0_Rs32                = (16, 20)
  M2_mpy_sat_ll_s0_Rt32                = ( 8, 12)
  M2_mpy_sat_ll_s1_Rd32                = ( 0,  4)
  M2_mpy_sat_ll_s1_Rs32                = (16, 20)
  M2_mpy_sat_ll_s1_Rt32                = ( 8, 12)
  M2_mpy_rnd_hh_s0_Rd32                = ( 0,  4)
  M2_mpy_rnd_hh_s0_Rs32                = (16, 20)
  M2_mpy_rnd_hh_s0_Rt32                = ( 8, 12)
  M2_mpy_rnd_hh_s1_Rd32                = ( 0,  4)
  M2_mpy_rnd_hh_s1_Rs32                = (16, 20)
  M2_mpy_rnd_hh_s1_Rt32                = ( 8, 12)
  M2_mpy_rnd_hl_s0_Rd32                = ( 0,  4)
  M2_mpy_rnd_hl_s0_Rs32                = (16, 20)
  M2_mpy_rnd_hl_s0_Rt32                = ( 8, 12)
  M2_mpy_rnd_hl_s1_Rd32                = ( 0,  4)
  M2_mpy_rnd_hl_s1_Rs32                = (16, 20)
  M2_mpy_rnd_hl_s1_Rt32                = ( 8, 12)
  M2_mpy_rnd_lh_s0_Rd32                = ( 0,  4)
  M2_mpy_rnd_lh_s0_Rs32                = (16, 20)
  M2_mpy_rnd_lh_s0_Rt32                = ( 8, 12)
  M2_mpy_rnd_lh_s1_Rd32                = ( 0,  4)
  M2_mpy_rnd_lh_s1_Rs32                = (16, 20)
  M2_mpy_rnd_lh_s1_Rt32                = ( 8, 12)
  M2_mpy_rnd_ll_s0_Rd32                = ( 0,  4)
  M2_mpy_rnd_ll_s0_Rs32                = (16, 20)
  M2_mpy_rnd_ll_s0_Rt32                = ( 8, 12)
  M2_mpy_rnd_ll_s1_Rd32                = ( 0,  4)
  M2_mpy_rnd_ll_s1_Rs32                = (16, 20)
  M2_mpy_rnd_ll_s1_Rt32                = ( 8, 12)
  M2_mpy_sat_rnd_hh_s0_Rd32            = ( 0,  4)
  M2_mpy_sat_rnd_hh_s0_Rs32            = (16, 20)
  M2_mpy_sat_rnd_hh_s0_Rt32            = ( 8, 12)
  M2_mpy_sat_rnd_hh_s1_Rd32            = ( 0,  4)
  M2_mpy_sat_rnd_hh_s1_Rs32            = (16, 20)
  M2_mpy_sat_rnd_hh_s1_Rt32            = ( 8, 12)
  M2_mpy_sat_rnd_hl_s0_Rd32            = ( 0,  4)
  M2_mpy_sat_rnd_hl_s0_Rs32            = (16, 20)
  M2_mpy_sat_rnd_hl_s0_Rt32            = ( 8, 12)
  M2_mpy_sat_rnd_hl_s1_Rd32            = ( 0,  4)
  M2_mpy_sat_rnd_hl_s1_Rs32            = (16, 20)
  M2_mpy_sat_rnd_hl_s1_Rt32            = ( 8, 12)
  M2_mpy_sat_rnd_lh_s0_Rd32            = ( 0,  4)
  M2_mpy_sat_rnd_lh_s0_Rs32            = (16, 20)
  M2_mpy_sat_rnd_lh_s0_Rt32            = ( 8, 12)
  M2_mpy_sat_rnd_lh_s1_Rd32            = ( 0,  4)
  M2_mpy_sat_rnd_lh_s1_Rs32            = (16, 20)
  M2_mpy_sat_rnd_lh_s1_Rt32            = ( 8, 12)
  M2_mpy_sat_rnd_ll_s0_Rd32            = ( 0,  4)
  M2_mpy_sat_rnd_ll_s0_Rs32            = (16, 20)
  M2_mpy_sat_rnd_ll_s0_Rt32            = ( 8, 12)
  M2_mpy_sat_rnd_ll_s1_Rd32            = ( 0,  4)
  M2_mpy_sat_rnd_ll_s1_Rs32            = (16, 20)
  M2_mpy_sat_rnd_ll_s1_Rt32            = ( 8, 12)
  M2_mpyd_acc_hh_s0_Rxx32              = ( 0,  4)
  M2_mpyd_acc_hh_s0_Rs32               = (16, 20)
  M2_mpyd_acc_hh_s0_Rt32               = ( 8, 12)
  M2_mpyd_acc_hh_s1_Rxx32              = ( 0,  4)
  M2_mpyd_acc_hh_s1_Rs32               = (16, 20)
  M2_mpyd_acc_hh_s1_Rt32               = ( 8, 12)
  M2_mpyd_acc_hl_s0_Rxx32              = ( 0,  4)
  M2_mpyd_acc_hl_s0_Rs32               = (16, 20)
  M2_mpyd_acc_hl_s0_Rt32               = ( 8, 12)
  M2_mpyd_acc_hl_s1_Rxx32              = ( 0,  4)
  M2_mpyd_acc_hl_s1_Rs32               = (16, 20)
  M2_mpyd_acc_hl_s1_Rt32               = ( 8, 12)
  M2_mpyd_acc_lh_s0_Rxx32              = ( 0,  4)
  M2_mpyd_acc_lh_s0_Rs32               = (16, 20)
  M2_mpyd_acc_lh_s0_Rt32               = ( 8, 12)
  M2_mpyd_acc_lh_s1_Rxx32              = ( 0,  4)
  M2_mpyd_acc_lh_s1_Rs32               = (16, 20)
  M2_mpyd_acc_lh_s1_Rt32               = ( 8, 12)
  M2_mpyd_acc_ll_s0_Rxx32              = ( 0,  4)
  M2_mpyd_acc_ll_s0_Rs32               = (16, 20)
  M2_mpyd_acc_ll_s0_Rt32               = ( 8, 12)
  M2_mpyd_acc_ll_s1_Rxx32              = ( 0,  4)
  M2_mpyd_acc_ll_s1_Rs32               = (16, 20)
  M2_mpyd_acc_ll_s1_Rt32               = ( 8, 12)
  M2_mpyd_nac_hh_s0_Rxx32              = ( 0,  4)
  M2_mpyd_nac_hh_s0_Rs32               = (16, 20)
  M2_mpyd_nac_hh_s0_Rt32               = ( 8, 12)
  M2_mpyd_nac_hh_s1_Rxx32              = ( 0,  4)
  M2_mpyd_nac_hh_s1_Rs32               = (16, 20)
  M2_mpyd_nac_hh_s1_Rt32               = ( 8, 12)
  M2_mpyd_nac_hl_s0_Rxx32              = ( 0,  4)
  M2_mpyd_nac_hl_s0_Rs32               = (16, 20)
  M2_mpyd_nac_hl_s0_Rt32               = ( 8, 12)
  M2_mpyd_nac_hl_s1_Rxx32              = ( 0,  4)
  M2_mpyd_nac_hl_s1_Rs32               = (16, 20)
  M2_mpyd_nac_hl_s1_Rt32               = ( 8, 12)
  M2_mpyd_nac_lh_s0_Rxx32              = ( 0,  4)
  M2_mpyd_nac_lh_s0_Rs32               = (16, 20)
  M2_mpyd_nac_lh_s0_Rt32               = ( 8, 12)
  M2_mpyd_nac_lh_s1_Rxx32              = ( 0,  4)
  M2_mpyd_nac_lh_s1_Rs32               = (16, 20)
  M2_mpyd_nac_lh_s1_Rt32               = ( 8, 12)
  M2_mpyd_nac_ll_s0_Rxx32              = ( 0,  4)
  M2_mpyd_nac_ll_s0_Rs32               = (16, 20)
  M2_mpyd_nac_ll_s0_Rt32               = ( 8, 12)
  M2_mpyd_nac_ll_s1_Rxx32              = ( 0,  4)
  M2_mpyd_nac_ll_s1_Rs32               = (16, 20)
  M2_mpyd_nac_ll_s1_Rt32               = ( 8, 12)
  M2_mpyd_hh_s0_Rdd32                  = ( 0,  4)
  M2_mpyd_hh_s0_Rs32                   = (16, 20)
  M2_mpyd_hh_s0_Rt32                   = ( 8, 12)
  M2_mpyd_hh_s1_Rdd32                  = ( 0,  4)
  M2_mpyd_hh_s1_Rs32                   = (16, 20)
  M2_mpyd_hh_s1_Rt32                   = ( 8, 12)
  M2_mpyd_hl_s0_Rdd32                  = ( 0,  4)
  M2_mpyd_hl_s0_Rs32                   = (16, 20)
  M2_mpyd_hl_s0_Rt32                   = ( 8, 12)
  M2_mpyd_hl_s1_Rdd32                  = ( 0,  4)
  M2_mpyd_hl_s1_Rs32                   = (16, 20)
  M2_mpyd_hl_s1_Rt32                   = ( 8, 12)
  M2_mpyd_lh_s0_Rdd32                  = ( 0,  4)
  M2_mpyd_lh_s0_Rs32                   = (16, 20)
  M2_mpyd_lh_s0_Rt32                   = ( 8, 12)
  M2_mpyd_lh_s1_Rdd32                  = ( 0,  4)
  M2_mpyd_lh_s1_Rs32                   = (16, 20)
  M2_mpyd_lh_s1_Rt32                   = ( 8, 12)
  M2_mpyd_ll_s0_Rdd32                  = ( 0,  4)
  M2_mpyd_ll_s0_Rs32                   = (16, 20)
  M2_mpyd_ll_s0_Rt32                   = ( 8, 12)
  M2_mpyd_ll_s1_Rdd32                  = ( 0,  4)
  M2_mpyd_ll_s1_Rs32                   = (16, 20)
  M2_mpyd_ll_s1_Rt32                   = ( 8, 12)
  M2_mpyd_rnd_hh_s0_Rdd32              = ( 0,  4)
  M2_mpyd_rnd_hh_s0_Rs32               = (16, 20)
  M2_mpyd_rnd_hh_s0_Rt32               = ( 8, 12)
  M2_mpyd_rnd_hh_s1_Rdd32              = ( 0,  4)
  M2_mpyd_rnd_hh_s1_Rs32               = (16, 20)
  M2_mpyd_rnd_hh_s1_Rt32               = ( 8, 12)
  M2_mpyd_rnd_hl_s0_Rdd32              = ( 0,  4)
  M2_mpyd_rnd_hl_s0_Rs32               = (16, 20)
  M2_mpyd_rnd_hl_s0_Rt32               = ( 8, 12)
  M2_mpyd_rnd_hl_s1_Rdd32              = ( 0,  4)
  M2_mpyd_rnd_hl_s1_Rs32               = (16, 20)
  M2_mpyd_rnd_hl_s1_Rt32               = ( 8, 12)
  M2_mpyd_rnd_lh_s0_Rdd32              = ( 0,  4)
  M2_mpyd_rnd_lh_s0_Rs32               = (16, 20)
  M2_mpyd_rnd_lh_s0_Rt32               = ( 8, 12)
  M2_mpyd_rnd_lh_s1_Rdd32              = ( 0,  4)
  M2_mpyd_rnd_lh_s1_Rs32               = (16, 20)
  M2_mpyd_rnd_lh_s1_Rt32               = ( 8, 12)
  M2_mpyd_rnd_ll_s0_Rdd32              = ( 0,  4)
  M2_mpyd_rnd_ll_s0_Rs32               = (16, 20)
  M2_mpyd_rnd_ll_s0_Rt32               = ( 8, 12)
  M2_mpyd_rnd_ll_s1_Rdd32              = ( 0,  4)
  M2_mpyd_rnd_ll_s1_Rs32               = (16, 20)
  M2_mpyd_rnd_ll_s1_Rt32               = ( 8, 12)
  M2_mpyu_acc_hh_s0_Rx32               = ( 0,  4)
  M2_mpyu_acc_hh_s0_Rs32               = (16, 20)
  M2_mpyu_acc_hh_s0_Rt32               = ( 8, 12)
  M2_mpyu_acc_hh_s1_Rx32               = ( 0,  4)
  M2_mpyu_acc_hh_s1_Rs32               = (16, 20)
  M2_mpyu_acc_hh_s1_Rt32               = ( 8, 12)
  M2_mpyu_acc_hl_s0_Rx32               = ( 0,  4)
  M2_mpyu_acc_hl_s0_Rs32               = (16, 20)
  M2_mpyu_acc_hl_s0_Rt32               = ( 8, 12)
  M2_mpyu_acc_hl_s1_Rx32               = ( 0,  4)
  M2_mpyu_acc_hl_s1_Rs32               = (16, 20)
  M2_mpyu_acc_hl_s1_Rt32               = ( 8, 12)
  M2_mpyu_acc_lh_s0_Rx32               = ( 0,  4)
  M2_mpyu_acc_lh_s0_Rs32               = (16, 20)
  M2_mpyu_acc_lh_s0_Rt32               = ( 8, 12)
  M2_mpyu_acc_lh_s1_Rx32               = ( 0,  4)
  M2_mpyu_acc_lh_s1_Rs32               = (16, 20)
  M2_mpyu_acc_lh_s1_Rt32               = ( 8, 12)
  M2_mpyu_acc_ll_s0_Rx32               = ( 0,  4)
  M2_mpyu_acc_ll_s0_Rs32               = (16, 20)
  M2_mpyu_acc_ll_s0_Rt32               = ( 8, 12)
  M2_mpyu_acc_ll_s1_Rx32               = ( 0,  4)
  M2_mpyu_acc_ll_s1_Rs32               = (16, 20)
  M2_mpyu_acc_ll_s1_Rt32               = ( 8, 12)
  M2_mpyu_nac_hh_s0_Rx32               = ( 0,  4)
  M2_mpyu_nac_hh_s0_Rs32               = (16, 20)
  M2_mpyu_nac_hh_s0_Rt32               = ( 8, 12)
  M2_mpyu_nac_hh_s1_Rx32               = ( 0,  4)
  M2_mpyu_nac_hh_s1_Rs32               = (16, 20)
  M2_mpyu_nac_hh_s1_Rt32               = ( 8, 12)
  M2_mpyu_nac_hl_s0_Rx32               = ( 0,  4)
  M2_mpyu_nac_hl_s0_Rs32               = (16, 20)
  M2_mpyu_nac_hl_s0_Rt32               = ( 8, 12)
  M2_mpyu_nac_hl_s1_Rx32               = ( 0,  4)
  M2_mpyu_nac_hl_s1_Rs32               = (16, 20)
  M2_mpyu_nac_hl_s1_Rt32               = ( 8, 12)
  M2_mpyu_nac_lh_s0_Rx32               = ( 0,  4)
  M2_mpyu_nac_lh_s0_Rs32               = (16, 20)
  M2_mpyu_nac_lh_s0_Rt32               = ( 8, 12)
  M2_mpyu_nac_lh_s1_Rx32               = ( 0,  4)
  M2_mpyu_nac_lh_s1_Rs32               = (16, 20)
  M2_mpyu_nac_lh_s1_Rt32               = ( 8, 12)
  M2_mpyu_nac_ll_s0_Rx32               = ( 0,  4)
  M2_mpyu_nac_ll_s0_Rs32               = (16, 20)
  M2_mpyu_nac_ll_s0_Rt32               = ( 8, 12)
  M2_mpyu_nac_ll_s1_Rx32               = ( 0,  4)
  M2_mpyu_nac_ll_s1_Rs32               = (16, 20)
  M2_mpyu_nac_ll_s1_Rt32               = ( 8, 12)
  M2_mpyu_hh_s0_Rd32                   = ( 0,  4)
  M2_mpyu_hh_s0_Rs32                   = (16, 20)
  M2_mpyu_hh_s0_Rt32                   = ( 8, 12)
  M2_mpyu_hh_s1_Rd32                   = ( 0,  4)
  M2_mpyu_hh_s1_Rs32                   = (16, 20)
  M2_mpyu_hh_s1_Rt32                   = ( 8, 12)
  M2_mpyu_hl_s0_Rd32                   = ( 0,  4)
  M2_mpyu_hl_s0_Rs32                   = (16, 20)
  M2_mpyu_hl_s0_Rt32                   = ( 8, 12)
  M2_mpyu_hl_s1_Rd32                   = ( 0,  4)
  M2_mpyu_hl_s1_Rs32                   = (16, 20)
  M2_mpyu_hl_s1_Rt32                   = ( 8, 12)
  M2_mpyu_lh_s0_Rd32                   = ( 0,  4)
  M2_mpyu_lh_s0_Rs32                   = (16, 20)
  M2_mpyu_lh_s0_Rt32                   = ( 8, 12)
  M2_mpyu_lh_s1_Rd32                   = ( 0,  4)
  M2_mpyu_lh_s1_Rs32                   = (16, 20)
  M2_mpyu_lh_s1_Rt32                   = ( 8, 12)
  M2_mpyu_ll_s0_Rd32                   = ( 0,  4)
  M2_mpyu_ll_s0_Rs32                   = (16, 20)
  M2_mpyu_ll_s0_Rt32                   = ( 8, 12)
  M2_mpyu_ll_s1_Rd32                   = ( 0,  4)
  M2_mpyu_ll_s1_Rs32                   = (16, 20)
  M2_mpyu_ll_s1_Rt32                   = ( 8, 12)
  M2_mpyud_acc_hh_s0_Rxx32             = ( 0,  4)
  M2_mpyud_acc_hh_s0_Rs32              = (16, 20)
  M2_mpyud_acc_hh_s0_Rt32              = ( 8, 12)
  M2_mpyud_acc_hh_s1_Rxx32             = ( 0,  4)
  M2_mpyud_acc_hh_s1_Rs32              = (16, 20)
  M2_mpyud_acc_hh_s1_Rt32              = ( 8, 12)
  M2_mpyud_acc_hl_s0_Rxx32             = ( 0,  4)
  M2_mpyud_acc_hl_s0_Rs32              = (16, 20)
  M2_mpyud_acc_hl_s0_Rt32              = ( 8, 12)
  M2_mpyud_acc_hl_s1_Rxx32             = ( 0,  4)
  M2_mpyud_acc_hl_s1_Rs32              = (16, 20)
  M2_mpyud_acc_hl_s1_Rt32              = ( 8, 12)
  M2_mpyud_acc_lh_s0_Rxx32             = ( 0,  4)
  M2_mpyud_acc_lh_s0_Rs32              = (16, 20)
  M2_mpyud_acc_lh_s0_Rt32              = ( 8, 12)
  M2_mpyud_acc_lh_s1_Rxx32             = ( 0,  4)
  M2_mpyud_acc_lh_s1_Rs32              = (16, 20)
  M2_mpyud_acc_lh_s1_Rt32              = ( 8, 12)
  M2_mpyud_acc_ll_s0_Rxx32             = ( 0,  4)
  M2_mpyud_acc_ll_s0_Rs32              = (16, 20)
  M2_mpyud_acc_ll_s0_Rt32              = ( 8, 12)
  M2_mpyud_acc_ll_s1_Rxx32             = ( 0,  4)
  M2_mpyud_acc_ll_s1_Rs32              = (16, 20)
  M2_mpyud_acc_ll_s1_Rt32              = ( 8, 12)
  M2_mpyud_nac_hh_s0_Rxx32             = ( 0,  4)
  M2_mpyud_nac_hh_s0_Rs32              = (16, 20)
  M2_mpyud_nac_hh_s0_Rt32              = ( 8, 12)
  M2_mpyud_nac_hh_s1_Rxx32             = ( 0,  4)
  M2_mpyud_nac_hh_s1_Rs32              = (16, 20)
  M2_mpyud_nac_hh_s1_Rt32              = ( 8, 12)
  M2_mpyud_nac_hl_s0_Rxx32             = ( 0,  4)
  M2_mpyud_nac_hl_s0_Rs32              = (16, 20)
  M2_mpyud_nac_hl_s0_Rt32              = ( 8, 12)
  M2_mpyud_nac_hl_s1_Rxx32             = ( 0,  4)
  M2_mpyud_nac_hl_s1_Rs32              = (16, 20)
  M2_mpyud_nac_hl_s1_Rt32              = ( 8, 12)
  M2_mpyud_nac_lh_s0_Rxx32             = ( 0,  4)
  M2_mpyud_nac_lh_s0_Rs32              = (16, 20)
  M2_mpyud_nac_lh_s0_Rt32              = ( 8, 12)
  M2_mpyud_nac_lh_s1_Rxx32             = ( 0,  4)
  M2_mpyud_nac_lh_s1_Rs32              = (16, 20)
  M2_mpyud_nac_lh_s1_Rt32              = ( 8, 12)
  M2_mpyud_nac_ll_s0_Rxx32             = ( 0,  4)
  M2_mpyud_nac_ll_s0_Rs32              = (16, 20)
  M2_mpyud_nac_ll_s0_Rt32              = ( 8, 12)
  M2_mpyud_nac_ll_s1_Rxx32             = ( 0,  4)
  M2_mpyud_nac_ll_s1_Rs32              = (16, 20)
  M2_mpyud_nac_ll_s1_Rt32              = ( 8, 12)
  M2_mpyud_hh_s0_Rdd32                 = ( 0,  4)
  M2_mpyud_hh_s0_Rs32                  = (16, 20)
  M2_mpyud_hh_s0_Rt32                  = ( 8, 12)
  M2_mpyud_hh_s1_Rdd32                 = ( 0,  4)
  M2_mpyud_hh_s1_Rs32                  = (16, 20)
  M2_mpyud_hh_s1_Rt32                  = ( 8, 12)
  M2_mpyud_hl_s0_Rdd32                 = ( 0,  4)
  M2_mpyud_hl_s0_Rs32                  = (16, 20)
  M2_mpyud_hl_s0_Rt32                  = ( 8, 12)
  M2_mpyud_hl_s1_Rdd32                 = ( 0,  4)
  M2_mpyud_hl_s1_Rs32                  = (16, 20)
  M2_mpyud_hl_s1_Rt32                  = ( 8, 12)
  M2_mpyud_lh_s0_Rdd32                 = ( 0,  4)
  M2_mpyud_lh_s0_Rs32                  = (16, 20)
  M2_mpyud_lh_s0_Rt32                  = ( 8, 12)
  M2_mpyud_lh_s1_Rdd32                 = ( 0,  4)
  M2_mpyud_lh_s1_Rs32                  = (16, 20)
  M2_mpyud_lh_s1_Rt32                  = ( 8, 12)
  M2_mpyud_ll_s0_Rdd32                 = ( 0,  4)
  M2_mpyud_ll_s0_Rs32                  = (16, 20)
  M2_mpyud_ll_s0_Rt32                  = ( 8, 12)
  M2_mpyud_ll_s1_Rdd32                 = ( 0,  4)
  M2_mpyud_ll_s1_Rs32                  = (16, 20)
  M2_mpyud_ll_s1_Rt32                  = ( 8, 12)
  M2_mpysip_Rd32                       = ( 0,  4)
  M2_mpysip_Rs32                       = (16, 20)
  M2_mpysip_u8_0                       = ( 5, 12)
  M2_mpysin_Rd32                       = ( 0,  4)
  M2_mpysin_Rs32                       = (16, 20)
  M2_mpysin_u8_0                       = ( 5, 12)
  M2_macsip_Rx32                       = ( 0,  4)
  M2_macsip_Rs32                       = (16, 20)
  M2_macsip_u8_0                       = ( 5, 12)
  M2_macsin_Rx32                       = ( 0,  4)
  M2_macsin_Rs32                       = (16, 20)
  M2_macsin_u8_0                       = ( 5, 12)
  M2_dpmpyss_s0_Rdd32                  = ( 0,  4)
  M2_dpmpyss_s0_Rs32                   = (16, 20)
  M2_dpmpyss_s0_Rt32                   = ( 8, 12)
  M2_dpmpyss_acc_s0_Rxx32              = ( 0,  4)
  M2_dpmpyss_acc_s0_Rs32               = (16, 20)
  M2_dpmpyss_acc_s0_Rt32               = ( 8, 12)
  M2_dpmpyss_nac_s0_Rxx32              = ( 0,  4)
  M2_dpmpyss_nac_s0_Rs32               = (16, 20)
  M2_dpmpyss_nac_s0_Rt32               = ( 8, 12)
  M2_dpmpyuu_s0_Rdd32                  = ( 0,  4)
  M2_dpmpyuu_s0_Rs32                   = (16, 20)
  M2_dpmpyuu_s0_Rt32                   = ( 8, 12)
  M2_dpmpyuu_acc_s0_Rxx32              = ( 0,  4)
  M2_dpmpyuu_acc_s0_Rs32               = (16, 20)
  M2_dpmpyuu_acc_s0_Rt32               = ( 8, 12)
  M2_dpmpyuu_nac_s0_Rxx32              = ( 0,  4)
  M2_dpmpyuu_nac_s0_Rs32               = (16, 20)
  M2_dpmpyuu_nac_s0_Rt32               = ( 8, 12)
  M2_mpy_up_Rd32                       = ( 0,  4)
  M2_mpy_up_Rs32                       = (16, 20)
  M2_mpy_up_Rt32                       = ( 8, 12)
  M2_mpy_up_s1_Rd32                    = ( 0,  4)
  M2_mpy_up_s1_Rs32                    = (16, 20)
  M2_mpy_up_s1_Rt32                    = ( 8, 12)
  M2_mpy_up_s1_sat_Rd32                = ( 0,  4)
  M2_mpy_up_s1_sat_Rs32                = (16, 20)
  M2_mpy_up_s1_sat_Rt32                = ( 8, 12)
  M2_mpyu_up_Rd32                      = ( 0,  4)
  M2_mpyu_up_Rs32                      = (16, 20)
  M2_mpyu_up_Rt32                      = ( 8, 12)
  M2_mpysu_up_Rd32                     = ( 0,  4)
  M2_mpysu_up_Rs32                     = (16, 20)
  M2_mpysu_up_Rt32                     = ( 8, 12)
  M2_dpmpyss_rnd_s0_Rd32               = ( 0,  4)
  M2_dpmpyss_rnd_s0_Rs32               = (16, 20)
  M2_dpmpyss_rnd_s0_Rt32               = ( 8, 12)
  M4_mac_up_s1_sat_Rx32                = ( 0,  4)
  M4_mac_up_s1_sat_Rs32                = (16, 20)
  M4_mac_up_s1_sat_Rt32                = ( 8, 12)
  M4_nac_up_s1_sat_Rx32                = ( 0,  4)
  M4_nac_up_s1_sat_Rs32                = (16, 20)
  M4_nac_up_s1_sat_Rt32                = ( 8, 12)
  M2_mpyi_Rd32                         = ( 0,  4)
  M2_mpyi_Rs32                         = (16, 20)
  M2_mpyi_Rt32                         = ( 8, 12)
  M2_maci_Rx32                         = ( 0,  4)
  M2_maci_Rs32                         = (16, 20)
  M2_maci_Rt32                         = ( 8, 12)
  M2_mnaci_Rx32                        = ( 0,  4)
  M2_mnaci_Rs32                        = (16, 20)
  M2_mnaci_Rt32                        = ( 8, 12)
  M2_acci_Rx32                         = ( 0,  4)
  M2_acci_Rs32                         = (16, 20)
  M2_acci_Rt32                         = ( 8, 12)
  M2_accii_Rx32                        = ( 0,  4)
  M2_accii_Rs32                        = (16, 20)
  M2_accii_s8_0                        = ( 5, 12) signed
  M2_nacci_Rx32                        = ( 0,  4)
  M2_nacci_Rs32                        = (16, 20)
  M2_nacci_Rt32                        = ( 8, 12)
  M2_naccii_Rx32                       = ( 0,  4)
  M2_naccii_Rs32                       = (16, 20)
  M2_naccii_s8_0                       = ( 5, 12) signed
  M2_subacc_Rx32                       = ( 0,  4)
  M2_subacc_Rt32                       = ( 8, 12)
  M2_subacc_Rs32                       = (16, 20)
  M4_mpyrr_addr_Ry32                   = ( 8, 12)
  M4_mpyrr_addr_Ru32                   = ( 0,  4)
  M4_mpyrr_addr_Rs32                   = (16, 20)
  M4_mpyri_addr_u2_Rd32                = ( 8, 12)
  M4_mpyri_addr_u2_Ru32                = ( 0,  4)
  M4_mpyri_addr_u2_Rs32                = (16, 20)
  M4_mpyri_addr_u2_u6_2_0              = ( 5,  7)
  M4_mpyri_addr_u2_u6_2_1              = (13, 13)
  M4_mpyri_addr_u2_u6_2_2              = (21, 22)
  M4_mpyri_addr_Rd32                   = ( 8, 12)
  M4_mpyri_addr_Ru32                   = ( 0,  4)
  M4_mpyri_addr_Rs32                   = (16, 20)
  M4_mpyri_addr_u6_0                   = ( 5,  7)
  M4_mpyri_addr_u6_1                   = (13, 13)
  M4_mpyri_addr_u6_2                   = (21, 22)
  M4_mpyri_addi_Rd32                   = ( 8, 12)
  M4_mpyri_addi_Rs32                   = (16, 20)
  M4_mpyri_addi_u6_0                   = ( 5,  7)
  M4_mpyri_addi_u6_1                   = (13, 13)
  M4_mpyri_addi_u6_2                   = (21, 22)
  M4_mpyri_addi_U6_0                   = ( 0,  4)
  M4_mpyri_addi_U6_1                   = (23, 23)
  M4_mpyrr_addi_Rd32                   = ( 0,  4)
  M4_mpyrr_addi_Rs32                   = (16, 20)
  M4_mpyrr_addi_Rt32                   = ( 8, 12)
  M4_mpyrr_addi_u6_0                   = ( 5,  7)
  M4_mpyrr_addi_u6_1                   = (13, 13)
  M4_mpyrr_addi_u6_2                   = (21, 22)
  M2_vmpy2s_s0_Rdd32                   = ( 0,  4)
  M2_vmpy2s_s0_Rs32                    = (16, 20)
  M2_vmpy2s_s0_Rt32                    = ( 8, 12)
  M2_vmpy2s_s1_Rdd32                   = ( 0,  4)
  M2_vmpy2s_s1_Rs32                    = (16, 20)
  M2_vmpy2s_s1_Rt32                    = ( 8, 12)
  M2_vmac2s_s0_Rxx32                   = ( 0,  4)
  M2_vmac2s_s0_Rs32                    = (16, 20)
  M2_vmac2s_s0_Rt32                    = ( 8, 12)
  M2_vmac2s_s1_Rxx32                   = ( 0,  4)
  M2_vmac2s_s1_Rs32                    = (16, 20)
  M2_vmac2s_s1_Rt32                    = ( 8, 12)
  M2_vmpy2su_s0_Rdd32                  = ( 0,  4)
  M2_vmpy2su_s0_Rs32                   = (16, 20)
  M2_vmpy2su_s0_Rt32                   = ( 8, 12)
  M2_vmpy2su_s1_Rdd32                  = ( 0,  4)
  M2_vmpy2su_s1_Rs32                   = (16, 20)
  M2_vmpy2su_s1_Rt32                   = ( 8, 12)
  M2_vmac2su_s0_Rxx32                  = ( 0,  4)
  M2_vmac2su_s0_Rs32                   = (16, 20)
  M2_vmac2su_s0_Rt32                   = ( 8, 12)
  M2_vmac2su_s1_Rxx32                  = ( 0,  4)
  M2_vmac2su_s1_Rs32                   = (16, 20)
  M2_vmac2su_s1_Rt32                   = ( 8, 12)
  M2_vmpy2s_s0pack_Rd32                = ( 0,  4)
  M2_vmpy2s_s0pack_Rs32                = (16, 20)
  M2_vmpy2s_s0pack_Rt32                = ( 8, 12)
  M2_vmpy2s_s1pack_Rd32                = ( 0,  4)
  M2_vmpy2s_s1pack_Rs32                = (16, 20)
  M2_vmpy2s_s1pack_Rt32                = ( 8, 12)
  M2_vmac2_Rxx32                       = ( 0,  4)
  M2_vmac2_Rs32                        = (16, 20)
  M2_vmac2_Rt32                        = ( 8, 12)
  M2_vmpy2es_s0_Rdd32                  = ( 0,  4)
  M2_vmpy2es_s0_Rss32                  = (16, 20)
  M2_vmpy2es_s0_Rtt32                  = ( 8, 12)
  M2_vmpy2es_s1_Rdd32                  = ( 0,  4)
  M2_vmpy2es_s1_Rss32                  = (16, 20)
  M2_vmpy2es_s1_Rtt32                  = ( 8, 12)
  M2_vmac2es_s0_Rxx32                  = ( 0,  4)
  M2_vmac2es_s0_Rss32                  = (16, 20)
  M2_vmac2es_s0_Rtt32                  = ( 8, 12)
  M2_vmac2es_s1_Rxx32                  = ( 0,  4)
  M2_vmac2es_s1_Rss32                  = (16, 20)
  M2_vmac2es_s1_Rtt32                  = ( 8, 12)
  M2_vmac2es_Rxx32                     = ( 0,  4)
  M2_vmac2es_Rss32                     = (16, 20)
  M2_vmac2es_Rtt32                     = ( 8, 12)
  M2_vrmac_s0_Rxx32                    = ( 0,  4)
  M2_vrmac_s0_Rss32                    = (16, 20)
  M2_vrmac_s0_Rtt32                    = ( 8, 12)
  M2_vrmpy_s0_Rdd32                    = ( 0,  4)
  M2_vrmpy_s0_Rss32                    = (16, 20)
  M2_vrmpy_s0_Rtt32                    = ( 8, 12)
  M2_vdmpyrs_s0_Rd32                   = ( 0,  4)
  M2_vdmpyrs_s0_Rss32                  = (16, 20)
  M2_vdmpyrs_s0_Rtt32                  = ( 8, 12)
  M2_vdmpyrs_s1_Rd32                   = ( 0,  4)
  M2_vdmpyrs_s1_Rss32                  = (16, 20)
  M2_vdmpyrs_s1_Rtt32                  = ( 8, 12)
  M5_vrmpybuu_Rdd32                    = ( 0,  4)
  M5_vrmpybuu_Rss32                    = (16, 20)
  M5_vrmpybuu_Rtt32                    = ( 8, 12)
  M5_vrmacbuu_Rxx32                    = ( 0,  4)
  M5_vrmacbuu_Rss32                    = (16, 20)
  M5_vrmacbuu_Rtt32                    = ( 8, 12)
  M5_vrmpybsu_Rdd32                    = ( 0,  4)
  M5_vrmpybsu_Rss32                    = (16, 20)
  M5_vrmpybsu_Rtt32                    = ( 8, 12)
  M5_vrmacbsu_Rxx32                    = ( 0,  4)
  M5_vrmacbsu_Rss32                    = (16, 20)
  M5_vrmacbsu_Rtt32                    = ( 8, 12)
  M5_vmpybuu_Rdd32                     = ( 0,  4)
  M5_vmpybuu_Rs32                      = (16, 20)
  M5_vmpybuu_Rt32                      = ( 8, 12)
  M5_vmpybsu_Rdd32                     = ( 0,  4)
  M5_vmpybsu_Rs32                      = (16, 20)
  M5_vmpybsu_Rt32                      = ( 8, 12)
  M5_vmacbuu_Rxx32                     = ( 0,  4)
  M5_vmacbuu_Rs32                      = (16, 20)
  M5_vmacbuu_Rt32                      = ( 8, 12)
  M5_vmacbsu_Rxx32                     = ( 0,  4)
  M5_vmacbsu_Rs32                      = (16, 20)
  M5_vmacbsu_Rt32                      = ( 8, 12)
  M5_vdmpybsu_Rdd32                    = ( 0,  4)
  M5_vdmpybsu_Rss32                    = (16, 20)
  M5_vdmpybsu_Rtt32                    = ( 8, 12)
  M5_vdmacbsu_Rxx32                    = ( 0,  4)
  M5_vdmacbsu_Rss32                    = (16, 20)
  M5_vdmacbsu_Rtt32                    = ( 8, 12)
  M2_vdmacs_s0_Rxx32                   = ( 0,  4)
  M2_vdmacs_s0_Rss32                   = (16, 20)
  M2_vdmacs_s0_Rtt32                   = ( 8, 12)
  M2_vdmacs_s1_Rxx32                   = ( 0,  4)
  M2_vdmacs_s1_Rss32                   = (16, 20)
  M2_vdmacs_s1_Rtt32                   = ( 8, 12)
  M2_vdmpys_s0_Rdd32                   = ( 0,  4)
  M2_vdmpys_s0_Rss32                   = (16, 20)
  M2_vdmpys_s0_Rtt32                   = ( 8, 12)
  M2_vdmpys_s1_Rdd32                   = ( 0,  4)
  M2_vdmpys_s1_Rss32                   = (16, 20)
  M2_vdmpys_s1_Rtt32                   = ( 8, 12)
  M2_cmpyrs_s0_Rd32                    = ( 0,  4)
  M2_cmpyrs_s0_Rs32                    = (16, 20)
  M2_cmpyrs_s0_Rt32                    = ( 8, 12)
  M2_cmpyrs_s1_Rd32                    = ( 0,  4)
  M2_cmpyrs_s1_Rs32                    = (16, 20)
  M2_cmpyrs_s1_Rt32                    = ( 8, 12)
  M2_cmpyrsc_s0_Rd32                   = ( 0,  4)
  M2_cmpyrsc_s0_Rs32                   = (16, 20)
  M2_cmpyrsc_s0_Rt32                   = ( 8, 12)
  M2_cmpyrsc_s1_Rd32                   = ( 0,  4)
  M2_cmpyrsc_s1_Rs32                   = (16, 20)
  M2_cmpyrsc_s1_Rt32                   = ( 8, 12)
  M2_cmacs_s0_Rxx32                    = ( 0,  4)
  M2_cmacs_s0_Rs32                     = (16, 20)
  M2_cmacs_s0_Rt32                     = ( 8, 12)
  M2_cmacs_s1_Rxx32                    = ( 0,  4)
  M2_cmacs_s1_Rs32                     = (16, 20)
  M2_cmacs_s1_Rt32                     = ( 8, 12)
  M2_cmacsc_s0_Rxx32                   = ( 0,  4)
  M2_cmacsc_s0_Rs32                    = (16, 20)
  M2_cmacsc_s0_Rt32                    = ( 8, 12)
  M2_cmacsc_s1_Rxx32                   = ( 0,  4)
  M2_cmacsc_s1_Rs32                    = (16, 20)
  M2_cmacsc_s1_Rt32                    = ( 8, 12)
  M2_cmpys_s0_Rdd32                    = ( 0,  4)
  M2_cmpys_s0_Rs32                     = (16, 20)
  M2_cmpys_s0_Rt32                     = ( 8, 12)
  M2_cmpys_s1_Rdd32                    = ( 0,  4)
  M2_cmpys_s1_Rs32                     = (16, 20)
  M2_cmpys_s1_Rt32                     = ( 8, 12)
  M2_cmpysc_s0_Rdd32                   = ( 0,  4)
  M2_cmpysc_s0_Rs32                    = (16, 20)
  M2_cmpysc_s0_Rt32                    = ( 8, 12)
  M2_cmpysc_s1_Rdd32                   = ( 0,  4)
  M2_cmpysc_s1_Rs32                    = (16, 20)
  M2_cmpysc_s1_Rt32                    = ( 8, 12)
  M2_cnacs_s0_Rxx32                    = ( 0,  4)
  M2_cnacs_s0_Rs32                     = (16, 20)
  M2_cnacs_s0_Rt32                     = ( 8, 12)
  M2_cnacs_s1_Rxx32                    = ( 0,  4)
  M2_cnacs_s1_Rs32                     = (16, 20)
  M2_cnacs_s1_Rt32                     = ( 8, 12)
  M2_cnacsc_s0_Rxx32                   = ( 0,  4)
  M2_cnacsc_s0_Rs32                    = (16, 20)
  M2_cnacsc_s0_Rt32                    = ( 8, 12)
  M2_cnacsc_s1_Rxx32                   = ( 0,  4)
  M2_cnacsc_s1_Rs32                    = (16, 20)
  M2_cnacsc_s1_Rt32                    = ( 8, 12)
  M2_vrcmpys_s1_h_Rdd32                = ( 0,  4)
  M2_vrcmpys_s1_h_Rss32                = (16, 20)
  M2_vrcmpys_s1_h_Rtt32                = ( 8, 12)
  M2_vrcmpys_s1_l_Rdd32                = ( 0,  4)
  M2_vrcmpys_s1_l_Rss32                = (16, 20)
  M2_vrcmpys_s1_l_Rtt32                = ( 8, 12)
  M2_vrcmpys_acc_s1_h_Rxx32            = ( 0,  4)
  M2_vrcmpys_acc_s1_h_Rss32            = (16, 20)
  M2_vrcmpys_acc_s1_h_Rtt32            = ( 8, 12)
  M2_vrcmpys_acc_s1_l_Rxx32            = ( 0,  4)
  M2_vrcmpys_acc_s1_l_Rss32            = (16, 20)
  M2_vrcmpys_acc_s1_l_Rtt32            = ( 8, 12)
  M2_vrcmpys_s1rp_h_Rd32               = ( 0,  4)
  M2_vrcmpys_s1rp_h_Rss32              = (16, 20)
  M2_vrcmpys_s1rp_h_Rtt32              = ( 8, 12)
  M2_vrcmpys_s1rp_l_Rd32               = ( 0,  4)
  M2_vrcmpys_s1rp_l_Rss32              = (16, 20)
  M2_vrcmpys_s1rp_l_Rtt32              = ( 8, 12)
  M2_mmacls_s0_Rxx32                   = ( 0,  4)
  M2_mmacls_s0_Rss32                   = (16, 20)
  M2_mmacls_s0_Rtt32                   = ( 8, 12)
  M2_mmacls_s1_Rxx32                   = ( 0,  4)
  M2_mmacls_s1_Rss32                   = (16, 20)
  M2_mmacls_s1_Rtt32                   = ( 8, 12)
  M2_mmachs_s0_Rxx32                   = ( 0,  4)
  M2_mmachs_s0_Rss32                   = (16, 20)
  M2_mmachs_s0_Rtt32                   = ( 8, 12)
  M2_mmachs_s1_Rxx32                   = ( 0,  4)
  M2_mmachs_s1_Rss32                   = (16, 20)
  M2_mmachs_s1_Rtt32                   = ( 8, 12)
  M2_mmpyl_s0_Rdd32                    = ( 0,  4)
  M2_mmpyl_s0_Rss32                    = (16, 20)
  M2_mmpyl_s0_Rtt32                    = ( 8, 12)
  M2_mmpyl_s1_Rdd32                    = ( 0,  4)
  M2_mmpyl_s1_Rss32                    = (16, 20)
  M2_mmpyl_s1_Rtt32                    = ( 8, 12)
  M2_mmpyh_s0_Rdd32                    = ( 0,  4)
  M2_mmpyh_s0_Rss32                    = (16, 20)
  M2_mmpyh_s0_Rtt32                    = ( 8, 12)
  M2_mmpyh_s1_Rdd32                    = ( 0,  4)
  M2_mmpyh_s1_Rss32                    = (16, 20)
  M2_mmpyh_s1_Rtt32                    = ( 8, 12)
  M2_mmacls_rs0_Rxx32                  = ( 0,  4)
  M2_mmacls_rs0_Rss32                  = (16, 20)
  M2_mmacls_rs0_Rtt32                  = ( 8, 12)
  M2_mmacls_rs1_Rxx32                  = ( 0,  4)
  M2_mmacls_rs1_Rss32                  = (16, 20)
  M2_mmacls_rs1_Rtt32                  = ( 8, 12)
  M2_mmachs_rs0_Rxx32                  = ( 0,  4)
  M2_mmachs_rs0_Rss32                  = (16, 20)
  M2_mmachs_rs0_Rtt32                  = ( 8, 12)
  M2_mmachs_rs1_Rxx32                  = ( 0,  4)
  M2_mmachs_rs1_Rss32                  = (16, 20)
  M2_mmachs_rs1_Rtt32                  = ( 8, 12)
  M2_mmpyl_rs0_Rdd32                   = ( 0,  4)
  M2_mmpyl_rs0_Rss32                   = (16, 20)
  M2_mmpyl_rs0_Rtt32                   = ( 8, 12)
  M2_mmpyl_rs1_Rdd32                   = ( 0,  4)
  M2_mmpyl_rs1_Rss32                   = (16, 20)
  M2_mmpyl_rs1_Rtt32                   = ( 8, 12)
  M2_mmpyh_rs0_Rdd32                   = ( 0,  4)
  M2_mmpyh_rs0_Rss32                   = (16, 20)
  M2_mmpyh_rs0_Rtt32                   = ( 8, 12)
  M2_mmpyh_rs1_Rdd32                   = ( 0,  4)
  M2_mmpyh_rs1_Rss32                   = (16, 20)
  M2_mmpyh_rs1_Rtt32                   = ( 8, 12)
  M4_vrmpyeh_s0_Rdd32                  = ( 0,  4)
  M4_vrmpyeh_s0_Rss32                  = (16, 20)
  M4_vrmpyeh_s0_Rtt32                  = ( 8, 12)
  M4_vrmpyeh_s1_Rdd32                  = ( 0,  4)
  M4_vrmpyeh_s1_Rss32                  = (16, 20)
  M4_vrmpyeh_s1_Rtt32                  = ( 8, 12)
  M4_vrmpyeh_acc_s0_Rxx32              = ( 0,  4)
  M4_vrmpyeh_acc_s0_Rss32              = (16, 20)
  M4_vrmpyeh_acc_s0_Rtt32              = ( 8, 12)
  M4_vrmpyeh_acc_s1_Rxx32              = ( 0,  4)
  M4_vrmpyeh_acc_s1_Rss32              = (16, 20)
  M4_vrmpyeh_acc_s1_Rtt32              = ( 8, 12)
  M4_vrmpyoh_s0_Rdd32                  = ( 0,  4)
  M4_vrmpyoh_s0_Rss32                  = (16, 20)
  M4_vrmpyoh_s0_Rtt32                  = ( 8, 12)
  M4_vrmpyoh_s1_Rdd32                  = ( 0,  4)
  M4_vrmpyoh_s1_Rss32                  = (16, 20)
  M4_vrmpyoh_s1_Rtt32                  = ( 8, 12)
  M4_vrmpyoh_acc_s0_Rxx32              = ( 0,  4)
  M4_vrmpyoh_acc_s0_Rss32              = (16, 20)
  M4_vrmpyoh_acc_s0_Rtt32              = ( 8, 12)
  M4_vrmpyoh_acc_s1_Rxx32              = ( 0,  4)
  M4_vrmpyoh_acc_s1_Rss32              = (16, 20)
  M4_vrmpyoh_acc_s1_Rtt32              = ( 8, 12)
  M2_hmmpyl_rs1_Rd32                   = ( 0,  4)
  M2_hmmpyl_rs1_Rs32                   = (16, 20)
  M2_hmmpyl_rs1_Rt32                   = ( 8, 12)
  M2_hmmpyh_rs1_Rd32                   = ( 0,  4)
  M2_hmmpyh_rs1_Rs32                   = (16, 20)
  M2_hmmpyh_rs1_Rt32                   = ( 8, 12)
  M2_hmmpyl_s1_Rd32                    = ( 0,  4)
  M2_hmmpyl_s1_Rs32                    = (16, 20)
  M2_hmmpyl_s1_Rt32                    = ( 8, 12)
  M2_hmmpyh_s1_Rd32                    = ( 0,  4)
  M2_hmmpyh_s1_Rs32                    = (16, 20)
  M2_hmmpyh_s1_Rt32                    = ( 8, 12)
  M2_mmaculs_s0_Rxx32                  = ( 0,  4)
  M2_mmaculs_s0_Rss32                  = (16, 20)
  M2_mmaculs_s0_Rtt32                  = ( 8, 12)
  M2_mmaculs_s1_Rxx32                  = ( 0,  4)
  M2_mmaculs_s1_Rss32                  = (16, 20)
  M2_mmaculs_s1_Rtt32                  = ( 8, 12)
  M2_mmacuhs_s0_Rxx32                  = ( 0,  4)
  M2_mmacuhs_s0_Rss32                  = (16, 20)
  M2_mmacuhs_s0_Rtt32                  = ( 8, 12)
  M2_mmacuhs_s1_Rxx32                  = ( 0,  4)
  M2_mmacuhs_s1_Rss32                  = (16, 20)
  M2_mmacuhs_s1_Rtt32                  = ( 8, 12)
  M2_mmpyul_s0_Rdd32                   = ( 0,  4)
  M2_mmpyul_s0_Rss32                   = (16, 20)
  M2_mmpyul_s0_Rtt32                   = ( 8, 12)
  M2_mmpyul_s1_Rdd32                   = ( 0,  4)
  M2_mmpyul_s1_Rss32                   = (16, 20)
  M2_mmpyul_s1_Rtt32                   = ( 8, 12)
  M2_mmpyuh_s0_Rdd32                   = ( 0,  4)
  M2_mmpyuh_s0_Rss32                   = (16, 20)
  M2_mmpyuh_s0_Rtt32                   = ( 8, 12)
  M2_mmpyuh_s1_Rdd32                   = ( 0,  4)
  M2_mmpyuh_s1_Rss32                   = (16, 20)
  M2_mmpyuh_s1_Rtt32                   = ( 8, 12)
  M2_mmaculs_rs0_Rxx32                 = ( 0,  4)
  M2_mmaculs_rs0_Rss32                 = (16, 20)
  M2_mmaculs_rs0_Rtt32                 = ( 8, 12)
  M2_mmaculs_rs1_Rxx32                 = ( 0,  4)
  M2_mmaculs_rs1_Rss32                 = (16, 20)
  M2_mmaculs_rs1_Rtt32                 = ( 8, 12)
  M2_mmacuhs_rs0_Rxx32                 = ( 0,  4)
  M2_mmacuhs_rs0_Rss32                 = (16, 20)
  M2_mmacuhs_rs0_Rtt32                 = ( 8, 12)
  M2_mmacuhs_rs1_Rxx32                 = ( 0,  4)
  M2_mmacuhs_rs1_Rss32                 = (16, 20)
  M2_mmacuhs_rs1_Rtt32                 = ( 8, 12)
  M2_mmpyul_rs0_Rdd32                  = ( 0,  4)
  M2_mmpyul_rs0_Rss32                  = (16, 20)
  M2_mmpyul_rs0_Rtt32                  = ( 8, 12)
  M2_mmpyul_rs1_Rdd32                  = ( 0,  4)
  M2_mmpyul_rs1_Rss32                  = (16, 20)
  M2_mmpyul_rs1_Rtt32                  = ( 8, 12)
  M2_mmpyuh_rs0_Rdd32                  = ( 0,  4)
  M2_mmpyuh_rs0_Rss32                  = (16, 20)
  M2_mmpyuh_rs0_Rtt32                  = ( 8, 12)
  M2_mmpyuh_rs1_Rdd32                  = ( 0,  4)
  M2_mmpyuh_rs1_Rss32                  = (16, 20)
  M2_mmpyuh_rs1_Rtt32                  = ( 8, 12)
  M2_vrcmaci_s0_Rxx32                  = ( 0,  4)
  M2_vrcmaci_s0_Rss32                  = (16, 20)
  M2_vrcmaci_s0_Rtt32                  = ( 8, 12)
  M2_vrcmacr_s0_Rxx32                  = ( 0,  4)
  M2_vrcmacr_s0_Rss32                  = (16, 20)
  M2_vrcmacr_s0_Rtt32                  = ( 8, 12)
  M2_vrcmaci_s0c_Rxx32                 = ( 0,  4)
  M2_vrcmaci_s0c_Rss32                 = (16, 20)
  M2_vrcmaci_s0c_Rtt32                 = ( 8, 12)
  M2_vrcmacr_s0c_Rxx32                 = ( 0,  4)
  M2_vrcmacr_s0c_Rss32                 = (16, 20)
  M2_vrcmacr_s0c_Rtt32                 = ( 8, 12)
  M2_cmaci_s0_Rxx32                    = ( 0,  4)
  M2_cmaci_s0_Rs32                     = (16, 20)
  M2_cmaci_s0_Rt32                     = ( 8, 12)
  M2_cmacr_s0_Rxx32                    = ( 0,  4)
  M2_cmacr_s0_Rs32                     = (16, 20)
  M2_cmacr_s0_Rt32                     = ( 8, 12)
  M2_vrcmpyi_s0_Rdd32                  = ( 0,  4)
  M2_vrcmpyi_s0_Rss32                  = (16, 20)
  M2_vrcmpyi_s0_Rtt32                  = ( 8, 12)
  M2_vrcmpyr_s0_Rdd32                  = ( 0,  4)
  M2_vrcmpyr_s0_Rss32                  = (16, 20)
  M2_vrcmpyr_s0_Rtt32                  = ( 8, 12)
  M2_vrcmpyi_s0c_Rdd32                 = ( 0,  4)
  M2_vrcmpyi_s0c_Rss32                 = (16, 20)
  M2_vrcmpyi_s0c_Rtt32                 = ( 8, 12)
  M2_vrcmpyr_s0c_Rdd32                 = ( 0,  4)
  M2_vrcmpyr_s0c_Rss32                 = (16, 20)
  M2_vrcmpyr_s0c_Rtt32                 = ( 8, 12)
  M2_cmpyi_s0_Rdd32                    = ( 0,  4)
  M2_cmpyi_s0_Rs32                     = (16, 20)
  M2_cmpyi_s0_Rt32                     = ( 8, 12)
  M2_cmpyr_s0_Rdd32                    = ( 0,  4)
  M2_cmpyr_s0_Rs32                     = (16, 20)
  M2_cmpyr_s0_Rt32                     = ( 8, 12)
  M4_cmpyi_wh_Rd32                     = ( 0,  4)
  M4_cmpyi_wh_Rss32                    = (16, 20)
  M4_cmpyi_wh_Rt32                     = ( 8, 12)
  M4_cmpyr_wh_Rd32                     = ( 0,  4)
  M4_cmpyr_wh_Rss32                    = (16, 20)
  M4_cmpyr_wh_Rt32                     = ( 8, 12)
  M4_cmpyi_whc_Rd32                    = ( 0,  4)
  M4_cmpyi_whc_Rss32                   = (16, 20)
  M4_cmpyi_whc_Rt32                    = ( 8, 12)
  M4_cmpyr_whc_Rd32                    = ( 0,  4)
  M4_cmpyr_whc_Rss32                   = (16, 20)
  M4_cmpyr_whc_Rt32                    = ( 8, 12)
  M2_vcmpy_s0_sat_i_Rdd32              = ( 0,  4)
  M2_vcmpy_s0_sat_i_Rss32              = (16, 20)
  M2_vcmpy_s0_sat_i_Rtt32              = ( 8, 12)
  M2_vcmpy_s0_sat_r_Rdd32              = ( 0,  4)
  M2_vcmpy_s0_sat_r_Rss32              = (16, 20)
  M2_vcmpy_s0_sat_r_Rtt32              = ( 8, 12)
  M2_vcmpy_s1_sat_i_Rdd32              = ( 0,  4)
  M2_vcmpy_s1_sat_i_Rss32              = (16, 20)
  M2_vcmpy_s1_sat_i_Rtt32              = ( 8, 12)
  M2_vcmpy_s1_sat_r_Rdd32              = ( 0,  4)
  M2_vcmpy_s1_sat_r_Rss32              = (16, 20)
  M2_vcmpy_s1_sat_r_Rtt32              = ( 8, 12)
  M2_vcmac_s0_sat_i_Rxx32              = ( 0,  4)
  M2_vcmac_s0_sat_i_Rss32              = (16, 20)
  M2_vcmac_s0_sat_i_Rtt32              = ( 8, 12)
  M2_vcmac_s0_sat_r_Rxx32              = ( 0,  4)
  M2_vcmac_s0_sat_r_Rss32              = (16, 20)
  M2_vcmac_s0_sat_r_Rtt32              = ( 8, 12)
  S2_vcrotate_Rdd32                    = ( 0,  4)
  S2_vcrotate_Rss32                    = (16, 20)
  S2_vcrotate_Rt32                     = ( 8, 12)
  S4_vrcrotate_acc_Rxx32               = ( 0,  4)
  S4_vrcrotate_acc_Rss32               = (16, 20)
  S4_vrcrotate_acc_Rt32                = ( 8, 12)
  S4_vrcrotate_acc_u2_0                = ( 5,  5)
  S4_vrcrotate_acc_u2_1                = (13, 13)
  S4_vrcrotate_Rdd32                   = ( 0,  4)
  S4_vrcrotate_Rss32                   = (16, 20)
  S4_vrcrotate_Rt32                    = ( 8, 12)
  S4_vrcrotate_u2_0                    = ( 5,  5)
  S4_vrcrotate_u2_1                    = (13, 13)
  S2_vcnegh_Rdd32                      = ( 0,  4)
  S2_vcnegh_Rss32                      = (16, 20)
  S2_vcnegh_Rt32                       = ( 8, 12)
  S2_vrcnegh_Rxx32                     = ( 0,  4)
  S2_vrcnegh_Rss32                     = (16, 20)
  S2_vrcnegh_Rt32                      = ( 8, 12)
  M4_pmpyw_Rdd32                       = ( 0,  4)
  M4_pmpyw_Rs32                        = (16, 20)
  M4_pmpyw_Rt32                        = ( 8, 12)
  M4_vpmpyh_Rdd32                      = ( 0,  4)
  M4_vpmpyh_Rs32                       = (16, 20)
  M4_vpmpyh_Rt32                       = ( 8, 12)
  M4_pmpyw_acc_Rxx32                   = ( 0,  4)
  M4_pmpyw_acc_Rs32                    = (16, 20)
  M4_pmpyw_acc_Rt32                    = ( 8, 12)
  M4_vpmpyh_acc_Rxx32                  = ( 0,  4)
  M4_vpmpyh_acc_Rs32                   = (16, 20)
  M4_vpmpyh_acc_Rt32                   = ( 8, 12)
  M7_dcmpyrw_Rdd32                     = ( 0,  4)
  M7_dcmpyrw_Rss32                     = (16, 20)
  M7_dcmpyrw_Rtt32                     = ( 8, 12)
  M7_dcmpyrw_acc_Rxx32                 = ( 0,  4)
  M7_dcmpyrw_acc_Rss32                 = (16, 20)
  M7_dcmpyrw_acc_Rtt32                 = ( 8, 12)
  M7_dcmpyrwc_Rdd32                    = ( 0,  4)
  M7_dcmpyrwc_Rss32                    = (16, 20)
  M7_dcmpyrwc_Rtt32                    = ( 8, 12)
  M7_dcmpyrwc_acc_Rxx32                = ( 0,  4)
  M7_dcmpyrwc_acc_Rss32                = (16, 20)
  M7_dcmpyrwc_acc_Rtt32                = ( 8, 12)
  M7_dcmpyiw_Rdd32                     = ( 0,  4)
  M7_dcmpyiw_Rss32                     = (16, 20)
  M7_dcmpyiw_Rtt32                     = ( 8, 12)
  M7_dcmpyiw_acc_Rxx32                 = ( 0,  4)
  M7_dcmpyiw_acc_Rss32                 = (16, 20)
  M7_dcmpyiw_acc_Rtt32                 = ( 8, 12)
  M7_dcmpyiwc_Rdd32                    = ( 0,  4)
  M7_dcmpyiwc_Rss32                    = (16, 20)
  M7_dcmpyiwc_Rtt32                    = ( 8, 12)
  M7_dcmpyiwc_acc_Rxx32                = ( 0,  4)
  M7_dcmpyiwc_acc_Rss32                = (16, 20)
  M7_dcmpyiwc_acc_Rtt32                = ( 8, 12)
  M7_wcmpyrw_Rd32                      = ( 0,  4)
  M7_wcmpyrw_Rss32                     = (16, 20)
  M7_wcmpyrw_Rtt32                     = ( 8, 12)
  M7_wcmpyrwc_Rd32                     = ( 0,  4)
  M7_wcmpyrwc_Rss32                    = (16, 20)
  M7_wcmpyrwc_Rtt32                    = ( 8, 12)
  M7_wcmpyiw_Rd32                      = ( 0,  4)
  M7_wcmpyiw_Rss32                     = (16, 20)
  M7_wcmpyiw_Rtt32                     = ( 8, 12)
  M7_wcmpyiwc_Rd32                     = ( 0,  4)
  M7_wcmpyiwc_Rss32                    = (16, 20)
  M7_wcmpyiwc_Rtt32                    = ( 8, 12)
  M7_wcmpyrw_rnd_Rd32                  = ( 0,  4)
  M7_wcmpyrw_rnd_Rss32                 = (16, 20)
  M7_wcmpyrw_rnd_Rtt32                 = ( 8, 12)
  M7_wcmpyrwc_rnd_Rd32                 = ( 0,  4)
  M7_wcmpyrwc_rnd_Rss32                = (16, 20)
  M7_wcmpyrwc_rnd_Rtt32                = ( 8, 12)
  M7_wcmpyiw_rnd_Rd32                  = ( 0,  4)
  M7_wcmpyiw_rnd_Rss32                 = (16, 20)
  M7_wcmpyiw_rnd_Rtt32                 = ( 8, 12)
  M7_wcmpyiwc_rnd_Rd32                 = ( 0,  4)
  M7_wcmpyiwc_rnd_Rss32                = (16, 20)
  M7_wcmpyiwc_rnd_Rtt32                = ( 8, 12)
  A2_add_Rd32                          = ( 0,  4)
  A2_add_Rs32                          = (16, 20)
  A2_add_Rt32                          = ( 8, 12)
  A2_sub_Rd32                          = ( 0,  4)
  A2_sub_Rt32                          = ( 8, 12)
  A2_sub_Rs32                          = (16, 20)
  A2_paddt_Rd32                        = ( 0,  4)
  A2_paddt_Pu4                         = ( 5,  6)
  A2_paddt_Rs32                        = (16, 20)
  A2_paddt_Rt32                        = ( 8, 12)
  A2_paddf_Rd32                        = ( 0,  4)
  A2_paddf_Pu4                         = ( 5,  6)
  A2_paddf_Rs32                        = (16, 20)
  A2_paddf_Rt32                        = ( 8, 12)
  A2_paddtnew_Rd32                     = ( 0,  4)
  A2_paddtnew_Pu4                      = ( 5,  6)
  A2_paddtnew_Rs32                     = (16, 20)
  A2_paddtnew_Rt32                     = ( 8, 12)
  A2_paddfnew_Rd32                     = ( 0,  4)
  A2_paddfnew_Pu4                      = ( 5,  6)
  A2_paddfnew_Rs32                     = (16, 20)
  A2_paddfnew_Rt32                     = ( 8, 12)
  A2_psubt_Rd32                        = ( 0,  4)
  A2_psubt_Pu4                         = ( 5,  6)
  A2_psubt_Rt32                        = ( 8, 12)
  A2_psubt_Rs32                        = (16, 20)
  A2_psubf_Rd32                        = ( 0,  4)
  A2_psubf_Pu4                         = ( 5,  6)
  A2_psubf_Rt32                        = ( 8, 12)
  A2_psubf_Rs32                        = (16, 20)
  A2_psubtnew_Rd32                     = ( 0,  4)
  A2_psubtnew_Pu4                      = ( 5,  6)
  A2_psubtnew_Rt32                     = ( 8, 12)
  A2_psubtnew_Rs32                     = (16, 20)
  A2_psubfnew_Rd32                     = ( 0,  4)
  A2_psubfnew_Pu4                      = ( 5,  6)
  A2_psubfnew_Rt32                     = ( 8, 12)
  A2_psubfnew_Rs32                     = (16, 20)
  A2_paddit_Rd32                       = ( 0,  4)
  A2_paddit_Pu4                        = (21, 22)
  A2_paddit_Rs32                       = (16, 20)
  A2_paddit_s8_0                       = ( 5, 12) signed
  A2_paddif_Rd32                       = ( 0,  4)
  A2_paddif_Pu4                        = (21, 22)
  A2_paddif_Rs32                       = (16, 20)
  A2_paddif_s8_0                       = ( 5, 12) signed
  A2_padditnew_Rd32                    = ( 0,  4)
  A2_padditnew_Pu4                     = (21, 22)
  A2_padditnew_Rs32                    = (16, 20)
  A2_padditnew_s8_0                    = ( 5, 12) signed
  A2_paddifnew_Rd32                    = ( 0,  4)
  A2_paddifnew_Pu4                     = (21, 22)
  A2_paddifnew_Rs32                    = (16, 20)
  A2_paddifnew_s8_0                    = ( 5, 12) signed
  A2_pxort_Rd32                        = ( 0,  4)
  A2_pxort_Pu4                         = ( 5,  6)
  A2_pxort_Rs32                        = (16, 20)
  A2_pxort_Rt32                        = ( 8, 12)
  A2_pxorf_Rd32                        = ( 0,  4)
  A2_pxorf_Pu4                         = ( 5,  6)
  A2_pxorf_Rs32                        = (16, 20)
  A2_pxorf_Rt32                        = ( 8, 12)
  A2_pxortnew_Rd32                     = ( 0,  4)
  A2_pxortnew_Pu4                      = ( 5,  6)
  A2_pxortnew_Rs32                     = (16, 20)
  A2_pxortnew_Rt32                     = ( 8, 12)
  A2_pxorfnew_Rd32                     = ( 0,  4)
  A2_pxorfnew_Pu4                      = ( 5,  6)
  A2_pxorfnew_Rs32                     = (16, 20)
  A2_pxorfnew_Rt32                     = ( 8, 12)
  A2_pandt_Rd32                        = ( 0,  4)
  A2_pandt_Pu4                         = ( 5,  6)
  A2_pandt_Rs32                        = (16, 20)
  A2_pandt_Rt32                        = ( 8, 12)
  A2_pandf_Rd32                        = ( 0,  4)
  A2_pandf_Pu4                         = ( 5,  6)
  A2_pandf_Rs32                        = (16, 20)
  A2_pandf_Rt32                        = ( 8, 12)
  A2_pandtnew_Rd32                     = ( 0,  4)
  A2_pandtnew_Pu4                      = ( 5,  6)
  A2_pandtnew_Rs32                     = (16, 20)
  A2_pandtnew_Rt32                     = ( 8, 12)
  A2_pandfnew_Rd32                     = ( 0,  4)
  A2_pandfnew_Pu4                      = ( 5,  6)
  A2_pandfnew_Rs32                     = (16, 20)
  A2_pandfnew_Rt32                     = ( 8, 12)
  A2_port_Rd32                         = ( 0,  4)
  A2_port_Pu4                          = ( 5,  6)
  A2_port_Rs32                         = (16, 20)
  A2_port_Rt32                         = ( 8, 12)
  A2_porf_Rd32                         = ( 0,  4)
  A2_porf_Pu4                          = ( 5,  6)
  A2_porf_Rs32                         = (16, 20)
  A2_porf_Rt32                         = ( 8, 12)
  A2_portnew_Rd32                      = ( 0,  4)
  A2_portnew_Pu4                       = ( 5,  6)
  A2_portnew_Rs32                      = (16, 20)
  A2_portnew_Rt32                      = ( 8, 12)
  A2_porfnew_Rd32                      = ( 0,  4)
  A2_porfnew_Pu4                       = ( 5,  6)
  A2_porfnew_Rs32                      = (16, 20)
  A2_porfnew_Rt32                      = ( 8, 12)
  A4_psxtbt_Rd32                       = ( 0,  4)
  A4_psxtbt_Pu4                        = ( 8,  9)
  A4_psxtbt_Rs32                       = (16, 20)
  A4_psxtbf_Rd32                       = ( 0,  4)
  A4_psxtbf_Pu4                        = ( 8,  9)
  A4_psxtbf_Rs32                       = (16, 20)
  A4_psxtbtnew_Rd32                    = ( 0,  4)
  A4_psxtbtnew_Pu4                     = ( 8,  9)
  A4_psxtbtnew_Rs32                    = (16, 20)
  A4_psxtbfnew_Rd32                    = ( 0,  4)
  A4_psxtbfnew_Pu4                     = ( 8,  9)
  A4_psxtbfnew_Rs32                    = (16, 20)
  A4_pzxtbt_Rd32                       = ( 0,  4)
  A4_pzxtbt_Pu4                        = ( 8,  9)
  A4_pzxtbt_Rs32                       = (16, 20)
  A4_pzxtbf_Rd32                       = ( 0,  4)
  A4_pzxtbf_Pu4                        = ( 8,  9)
  A4_pzxtbf_Rs32                       = (16, 20)
  A4_pzxtbtnew_Rd32                    = ( 0,  4)
  A4_pzxtbtnew_Pu4                     = ( 8,  9)
  A4_pzxtbtnew_Rs32                    = (16, 20)
  A4_pzxtbfnew_Rd32                    = ( 0,  4)
  A4_pzxtbfnew_Pu4                     = ( 8,  9)
  A4_pzxtbfnew_Rs32                    = (16, 20)
  A4_psxtht_Rd32                       = ( 0,  4)
  A4_psxtht_Pu4                        = ( 8,  9)
  A4_psxtht_Rs32                       = (16, 20)
  A4_psxthf_Rd32                       = ( 0,  4)
  A4_psxthf_Pu4                        = ( 8,  9)
  A4_psxthf_Rs32                       = (16, 20)
  A4_psxthtnew_Rd32                    = ( 0,  4)
  A4_psxthtnew_Pu4                     = ( 8,  9)
  A4_psxthtnew_Rs32                    = (16, 20)
  A4_psxthfnew_Rd32                    = ( 0,  4)
  A4_psxthfnew_Pu4                     = ( 8,  9)
  A4_psxthfnew_Rs32                    = (16, 20)
  A4_pzxtht_Rd32                       = ( 0,  4)
  A4_pzxtht_Pu4                        = ( 8,  9)
  A4_pzxtht_Rs32                       = (16, 20)
  A4_pzxthf_Rd32                       = ( 0,  4)
  A4_pzxthf_Pu4                        = ( 8,  9)
  A4_pzxthf_Rs32                       = (16, 20)
  A4_pzxthtnew_Rd32                    = ( 0,  4)
  A4_pzxthtnew_Pu4                     = ( 8,  9)
  A4_pzxthtnew_Rs32                    = (16, 20)
  A4_pzxthfnew_Rd32                    = ( 0,  4)
  A4_pzxthfnew_Pu4                     = ( 8,  9)
  A4_pzxthfnew_Rs32                    = (16, 20)
  A4_paslht_Rd32                       = ( 0,  4)
  A4_paslht_Pu4                        = ( 8,  9)
  A4_paslht_Rs32                       = (16, 20)
  A4_paslhf_Rd32                       = ( 0,  4)
  A4_paslhf_Pu4                        = ( 8,  9)
  A4_paslhf_Rs32                       = (16, 20)
  A4_paslhtnew_Rd32                    = ( 0,  4)
  A4_paslhtnew_Pu4                     = ( 8,  9)
  A4_paslhtnew_Rs32                    = (16, 20)
  A4_paslhfnew_Rd32                    = ( 0,  4)
  A4_paslhfnew_Pu4                     = ( 8,  9)
  A4_paslhfnew_Rs32                    = (16, 20)
  A4_pasrht_Rd32                       = ( 0,  4)
  A4_pasrht_Pu4                        = ( 8,  9)
  A4_pasrht_Rs32                       = (16, 20)
  A4_pasrhf_Rd32                       = ( 0,  4)
  A4_pasrhf_Pu4                        = ( 8,  9)
  A4_pasrhf_Rs32                       = (16, 20)
  A4_pasrhtnew_Rd32                    = ( 0,  4)
  A4_pasrhtnew_Pu4                     = ( 8,  9)
  A4_pasrhtnew_Rs32                    = (16, 20)
  A4_pasrhfnew_Rd32                    = ( 0,  4)
  A4_pasrhfnew_Pu4                     = ( 8,  9)
  A4_pasrhfnew_Rs32                    = (16, 20)
  A2_addsat_Rd32                       = ( 0,  4)
  A2_addsat_Rs32                       = (16, 20)
  A2_addsat_Rt32                       = ( 8, 12)
  A2_subsat_Rd32                       = ( 0,  4)
  A2_subsat_Rt32                       = ( 8, 12)
  A2_subsat_Rs32                       = (16, 20)
  A2_addi_Rd32                         = ( 0,  4)
  A2_addi_Rs32                         = (16, 20)
  A2_addi_s16_0                        = ( 5, 13)
  A2_addi_s16_1                        = (21, 27) signed
  C4_addipc_Rd32                       = ( 0,  4)
  C4_addipc_u6_0                       = ( 7, 12)
  A2_addh_l16_ll_Rd32                  = ( 0,  4)
  A2_addh_l16_ll_Rt32                  = ( 8, 12)
  A2_addh_l16_ll_Rs32                  = (16, 20)
  A2_addh_l16_hl_Rd32                  = ( 0,  4)
  A2_addh_l16_hl_Rt32                  = ( 8, 12)
  A2_addh_l16_hl_Rs32                  = (16, 20)
  A2_addh_l16_sat_ll_Rd32              = ( 0,  4)
  A2_addh_l16_sat_ll_Rt32              = ( 8, 12)
  A2_addh_l16_sat_ll_Rs32              = (16, 20)
  A2_addh_l16_sat_hl_Rd32              = ( 0,  4)
  A2_addh_l16_sat_hl_Rt32              = ( 8, 12)
  A2_addh_l16_sat_hl_Rs32              = (16, 20)
  A2_subh_l16_ll_Rd32                  = ( 0,  4)
  A2_subh_l16_ll_Rt32                  = ( 8, 12)
  A2_subh_l16_ll_Rs32                  = (16, 20)
  A2_subh_l16_hl_Rd32                  = ( 0,  4)
  A2_subh_l16_hl_Rt32                  = ( 8, 12)
  A2_subh_l16_hl_Rs32                  = (16, 20)
  A2_subh_l16_sat_ll_Rd32              = ( 0,  4)
  A2_subh_l16_sat_ll_Rt32              = ( 8, 12)
  A2_subh_l16_sat_ll_Rs32              = (16, 20)
  A2_subh_l16_sat_hl_Rd32              = ( 0,  4)
  A2_subh_l16_sat_hl_Rt32              = ( 8, 12)
  A2_subh_l16_sat_hl_Rs32              = (16, 20)
  A2_addh_h16_ll_Rd32                  = ( 0,  4)
  A2_addh_h16_ll_Rt32                  = ( 8, 12)
  A2_addh_h16_ll_Rs32                  = (16, 20)
  A2_addh_h16_lh_Rd32                  = ( 0,  4)
  A2_addh_h16_lh_Rt32                  = ( 8, 12)
  A2_addh_h16_lh_Rs32                  = (16, 20)
  A2_addh_h16_hl_Rd32                  = ( 0,  4)
  A2_addh_h16_hl_Rt32                  = ( 8, 12)
  A2_addh_h16_hl_Rs32                  = (16, 20)
  A2_addh_h16_hh_Rd32                  = ( 0,  4)
  A2_addh_h16_hh_Rt32                  = ( 8, 12)
  A2_addh_h16_hh_Rs32                  = (16, 20)
  A2_addh_h16_sat_ll_Rd32              = ( 0,  4)
  A2_addh_h16_sat_ll_Rt32              = ( 8, 12)
  A2_addh_h16_sat_ll_Rs32              = (16, 20)
  A2_addh_h16_sat_lh_Rd32              = ( 0,  4)
  A2_addh_h16_sat_lh_Rt32              = ( 8, 12)
  A2_addh_h16_sat_lh_Rs32              = (16, 20)
  A2_addh_h16_sat_hl_Rd32              = ( 0,  4)
  A2_addh_h16_sat_hl_Rt32              = ( 8, 12)
  A2_addh_h16_sat_hl_Rs32              = (16, 20)
  A2_addh_h16_sat_hh_Rd32              = ( 0,  4)
  A2_addh_h16_sat_hh_Rt32              = ( 8, 12)
  A2_addh_h16_sat_hh_Rs32              = (16, 20)
  A2_subh_h16_ll_Rd32                  = ( 0,  4)
  A2_subh_h16_ll_Rt32                  = ( 8, 12)
  A2_subh_h16_ll_Rs32                  = (16, 20)
  A2_subh_h16_lh_Rd32                  = ( 0,  4)
  A2_subh_h16_lh_Rt32                  = ( 8, 12)
  A2_subh_h16_lh_Rs32                  = (16, 20)
  A2_subh_h16_hl_Rd32                  = ( 0,  4)
  A2_subh_h16_hl_Rt32                  = ( 8, 12)
  A2_subh_h16_hl_Rs32                  = (16, 20)
  A2_subh_h16_hh_Rd32                  = ( 0,  4)
  A2_subh_h16_hh_Rt32                  = ( 8, 12)
  A2_subh_h16_hh_Rs32                  = (16, 20)
  A2_subh_h16_sat_ll_Rd32              = ( 0,  4)
  A2_subh_h16_sat_ll_Rt32              = ( 8, 12)
  A2_subh_h16_sat_ll_Rs32              = (16, 20)
  A2_subh_h16_sat_lh_Rd32              = ( 0,  4)
  A2_subh_h16_sat_lh_Rt32              = ( 8, 12)
  A2_subh_h16_sat_lh_Rs32              = (16, 20)
  A2_subh_h16_sat_hl_Rd32              = ( 0,  4)
  A2_subh_h16_sat_hl_Rt32              = ( 8, 12)
  A2_subh_h16_sat_hl_Rs32              = (16, 20)
  A2_subh_h16_sat_hh_Rd32              = ( 0,  4)
  A2_subh_h16_sat_hh_Rt32              = ( 8, 12)
  A2_subh_h16_sat_hh_Rs32              = (16, 20)
  A2_aslh_Rd32                         = ( 0,  4)
  A2_aslh_Rs32                         = (16, 20)
  A2_asrh_Rd32                         = ( 0,  4)
  A2_asrh_Rs32                         = (16, 20)
  A2_addp_Rdd32                        = ( 0,  4)
  A2_addp_Rss32                        = (16, 20)
  A2_addp_Rtt32                        = ( 8, 12)
  A2_addpsat_Rdd32                     = ( 0,  4)
  A2_addpsat_Rss32                     = (16, 20)
  A2_addpsat_Rtt32                     = ( 8, 12)
  A2_addspl_Rdd32                      = ( 0,  4)
  A2_addspl_Rss32                      = (16, 20)
  A2_addspl_Rtt32                      = ( 8, 12)
  A2_addsph_Rdd32                      = ( 0,  4)
  A2_addsph_Rss32                      = (16, 20)
  A2_addsph_Rtt32                      = ( 8, 12)
  A2_subp_Rdd32                        = ( 0,  4)
  A2_subp_Rtt32                        = ( 8, 12)
  A2_subp_Rss32                        = (16, 20)
  A4_addp_c_Rdd32                      = ( 0,  4)
  A4_addp_c_Px4                        = ( 5,  6)
  A4_addp_c_Rss32                      = (16, 20)
  A4_addp_c_Rtt32                      = ( 8, 12)
  A4_subp_c_Rdd32                      = ( 0,  4)
  A4_subp_c_Px4                        = ( 5,  6)
  A4_subp_c_Rss32                      = (16, 20)
  A4_subp_c_Rtt32                      = ( 8, 12)
  A2_negsat_Rd32                       = ( 0,  4)
  A2_negsat_Rs32                       = (16, 20)
  A2_abs_Rd32                          = ( 0,  4)
  A2_abs_Rs32                          = (16, 20)
  A2_abssat_Rd32                       = ( 0,  4)
  A2_abssat_Rs32                       = (16, 20)
  A2_vconj_Rdd32                       = ( 0,  4)
  A2_vconj_Rss32                       = (16, 20)
  A2_negp_Rdd32                        = ( 0,  4)
  A2_negp_Rss32                        = (16, 20)
  A2_absp_Rdd32                        = ( 0,  4)
  A2_absp_Rss32                        = (16, 20)
  A2_max_Rd32                          = ( 0,  4)
  A2_max_Rs32                          = (16, 20)
  A2_max_Rt32                          = ( 8, 12)
  A2_maxu_Rd32                         = ( 0,  4)
  A2_maxu_Rs32                         = (16, 20)
  A2_maxu_Rt32                         = ( 8, 12)
  A2_min_Rd32                          = ( 0,  4)
  A2_min_Rt32                          = ( 8, 12)
  A2_min_Rs32                          = (16, 20)
  A2_minu_Rd32                         = ( 0,  4)
  A2_minu_Rt32                         = ( 8, 12)
  A2_minu_Rs32                         = (16, 20)
  A2_maxp_Rdd32                        = ( 0,  4)
  A2_maxp_Rss32                        = (16, 20)
  A2_maxp_Rtt32                        = ( 8, 12)
  A2_maxup_Rdd32                       = ( 0,  4)
  A2_maxup_Rss32                       = (16, 20)
  A2_maxup_Rtt32                       = ( 8, 12)
  A2_minp_Rdd32                        = ( 0,  4)
  A2_minp_Rtt32                        = ( 8, 12)
  A2_minp_Rss32                        = (16, 20)
  A2_minup_Rdd32                       = ( 0,  4)
  A2_minup_Rtt32                       = ( 8, 12)
  A2_minup_Rss32                       = (16, 20)
  A4_ext_u26_6_0                       = ( 0, 13)
  A4_ext_u26_6_1                       = (16, 27)
  A2_tfr_Rd32                          = ( 0,  4)
  A2_tfr_Rs32                          = (16, 20)
  A2_tfrsi_Rd32                        = ( 0,  4)
  A2_tfrsi_s16_0                       = ( 5, 13)
  A2_tfrsi_s16_1                       = (16, 20)
  A2_tfrsi_s16_2                       = (22, 23) signed
  A2_sxtb_Rd32                         = ( 0,  4)
  A2_sxtb_Rs32                         = (16, 20)
  A2_zxth_Rd32                         = ( 0,  4)
  A2_zxth_Rs32                         = (16, 20)
  A2_sxth_Rd32                         = ( 0,  4)
  A2_sxth_Rs32                         = (16, 20)
  A2_combinew_Rdd32                    = ( 0,  4)
  A2_combinew_Rs32                     = (16, 20)
  A2_combinew_Rt32                     = ( 8, 12)
  A4_combineri_Rdd32                   = ( 0,  4)
  A4_combineri_Rs32                    = (16, 20)
  A4_combineri_s8_0                    = ( 5, 12) signed
  A4_combineir_Rdd32                   = ( 0,  4)
  A4_combineir_Rs32                    = (16, 20)
  A4_combineir_s8_0                    = ( 5, 12) signed
  A2_combineii_Rdd32                   = ( 0,  4)
  A2_combineii_s8_0                    = ( 5, 12) signed
  A2_combineii_S8_0                    = (13, 13)
  A2_combineii_S8_1                    = (16, 22) signed
  A4_combineii_Rdd32                   = ( 0,  4)
  A4_combineii_s8_0                    = ( 5, 12) signed
  A4_combineii_U6_0                    = (13, 13)
  A4_combineii_U6_1                    = (16, 20)
  A2_combine_hh_Rd32                   = ( 0,  4)
  A2_combine_hh_Rt32                   = ( 8, 12)
  A2_combine_hh_Rs32                   = (16, 20)
  A2_combine_hl_Rd32                   = ( 0,  4)
  A2_combine_hl_Rt32                   = ( 8, 12)
  A2_combine_hl_Rs32                   = (16, 20)
  A2_combine_lh_Rd32                   = ( 0,  4)
  A2_combine_lh_Rt32                   = ( 8, 12)
  A2_combine_lh_Rs32                   = (16, 20)
  A2_combine_ll_Rd32                   = ( 0,  4)
  A2_combine_ll_Rt32                   = ( 8, 12)
  A2_combine_ll_Rs32                   = (16, 20)
  A2_tfril_Rx32                        = (16, 20)
  A2_tfril_u16_0                       = ( 0, 13)
  A2_tfril_u16_1                       = (22, 23)
  A2_tfrih_Rx32                        = (16, 20)
  A2_tfrih_u16_0                       = ( 0, 13)
  A2_tfrih_u16_1                       = (22, 23)
  A2_tfrcrr_Rd32                       = ( 0,  4)
  A2_tfrcrr_Cs32                       = (16, 20)
  A2_tfrrcr_Cd32                       = ( 0,  4)
  A2_tfrrcr_Rs32                       = (16, 20)
  A4_tfrcpp_Rdd32                      = ( 0,  4)
  A4_tfrcpp_Css32                      = (16, 20)
  A4_tfrpcp_Cdd32                      = ( 0,  4)
  A4_tfrpcp_Rss32                      = (16, 20)
  A2_and_Rd32                          = ( 0,  4)
  A2_and_Rs32                          = (16, 20)
  A2_and_Rt32                          = ( 8, 12)
  A2_or_Rd32                           = ( 0,  4)
  A2_or_Rs32                           = (16, 20)
  A2_or_Rt32                           = ( 8, 12)
  A2_xor_Rd32                          = ( 0,  4)
  A2_xor_Rs32                          = (16, 20)
  A2_xor_Rt32                          = ( 8, 12)
  M2_xor_xacc_Rx32                     = ( 0,  4)
  M2_xor_xacc_Rs32                     = (16, 20)
  M2_xor_xacc_Rt32                     = ( 8, 12)
  M4_xor_xacc_Rxx32                    = ( 0,  4)
  M4_xor_xacc_Rss32                    = (16, 20)
  M4_xor_xacc_Rtt32                    = ( 8, 12)
  A4_andn_Rd32                         = ( 0,  4)
  A4_andn_Rt32                         = ( 8, 12)
  A4_andn_Rs32                         = (16, 20)
  A4_orn_Rd32                          = ( 0,  4)
  A4_orn_Rt32                          = ( 8, 12)
  A4_orn_Rs32                          = (16, 20)
  A4_andnp_Rdd32                       = ( 0,  4)
  A4_andnp_Rtt32                       = ( 8, 12)
  A4_andnp_Rss32                       = (16, 20)
  A4_ornp_Rdd32                        = ( 0,  4)
  A4_ornp_Rtt32                        = ( 8, 12)
  A4_ornp_Rss32                        = (16, 20)
  S4_addaddi_Rd32                      = ( 8, 12)
  S4_addaddi_Rs32                      = (16, 20)
  S4_addaddi_Ru32                      = ( 0,  4)
  S4_addaddi_s6_0                      = ( 5,  7)
  S4_addaddi_s6_1                      = (13, 13)
  S4_addaddi_s6_2                      = (21, 22) signed
  S4_subaddi_Rd32                      = ( 8, 12)
  S4_subaddi_Rs32                      = (16, 20)
  S4_subaddi_Ru32                      = ( 0,  4)
  S4_subaddi_s6_0                      = ( 5,  7)
  S4_subaddi_s6_1                      = (13, 13)
  S4_subaddi_s6_2                      = (21, 22) signed
  M4_and_and_Rx32                      = ( 0,  4)
  M4_and_and_Rs32                      = (16, 20)
  M4_and_and_Rt32                      = ( 8, 12)
  M4_and_andn_Rx32                     = ( 0,  4)
  M4_and_andn_Rs32                     = (16, 20)
  M4_and_andn_Rt32                     = ( 8, 12)
  M4_and_or_Rx32                       = ( 0,  4)
  M4_and_or_Rs32                       = (16, 20)
  M4_and_or_Rt32                       = ( 8, 12)
  M4_and_xor_Rx32                      = ( 0,  4)
  M4_and_xor_Rs32                      = (16, 20)
  M4_and_xor_Rt32                      = ( 8, 12)
  M4_or_and_Rx32                       = ( 0,  4)
  M4_or_and_Rs32                       = (16, 20)
  M4_or_and_Rt32                       = ( 8, 12)
  M4_or_andn_Rx32                      = ( 0,  4)
  M4_or_andn_Rs32                      = (16, 20)
  M4_or_andn_Rt32                      = ( 8, 12)
  M4_or_or_Rx32                        = ( 0,  4)
  M4_or_or_Rs32                        = (16, 20)
  M4_or_or_Rt32                        = ( 8, 12)
  M4_or_xor_Rx32                       = ( 0,  4)
  M4_or_xor_Rs32                       = (16, 20)
  M4_or_xor_Rt32                       = ( 8, 12)
  S4_or_andix_Rx32                     = (16, 20)
  S4_or_andix_Ru32                     = ( 0,  4)
  S4_or_andix_s10_0                    = ( 5, 13)
  S4_or_andix_s10_1                    = (21, 21) signed
  S4_or_andi_Rx32                      = ( 0,  4)
  S4_or_andi_Rs32                      = (16, 20)
  S4_or_andi_s10_0                     = ( 5, 13)
  S4_or_andi_s10_1                     = (21, 21) signed
  S4_or_ori_Rx32                       = ( 0,  4)
  S4_or_ori_Rs32                       = (16, 20)
  S4_or_ori_s10_0                      = ( 5, 13)
  S4_or_ori_s10_1                      = (21, 21) signed
  M4_xor_and_Rx32                      = ( 0,  4)
  M4_xor_and_Rs32                      = (16, 20)
  M4_xor_and_Rt32                      = ( 8, 12)
  M4_xor_or_Rx32                       = ( 0,  4)
  M4_xor_or_Rs32                       = (16, 20)
  M4_xor_or_Rt32                       = ( 8, 12)
  M4_xor_andn_Rx32                     = ( 0,  4)
  M4_xor_andn_Rs32                     = (16, 20)
  M4_xor_andn_Rt32                     = ( 8, 12)
  A2_subri_Rd32                        = ( 0,  4)
  A2_subri_Rs32                        = (16, 20)
  A2_subri_s10_0                       = ( 5, 13)
  A2_subri_s10_1                       = (21, 21) signed
  A2_andir_Rd32                        = ( 0,  4)
  A2_andir_Rs32                        = (16, 20)
  A2_andir_s10_0                       = ( 5, 13)
  A2_andir_s10_1                       = (21, 21) signed
  A2_orir_Rd32                         = ( 0,  4)
  A2_orir_Rs32                         = (16, 20)
  A2_orir_s10_0                        = ( 5, 13)
  A2_orir_s10_1                        = (21, 21) signed
  A2_andp_Rdd32                        = ( 0,  4)
  A2_andp_Rss32                        = (16, 20)
  A2_andp_Rtt32                        = ( 8, 12)
  A2_orp_Rdd32                         = ( 0,  4)
  A2_orp_Rss32                         = (16, 20)
  A2_orp_Rtt32                         = ( 8, 12)
  A2_xorp_Rdd32                        = ( 0,  4)
  A2_xorp_Rss32                        = (16, 20)
  A2_xorp_Rtt32                        = ( 8, 12)
  A2_notp_Rdd32                        = ( 0,  4)
  A2_notp_Rss32                        = (16, 20)
  A2_sxtw_Rdd32                        = ( 0,  4)
  A2_sxtw_Rs32                         = (16, 20)
  A2_sat_Rd32                          = ( 0,  4)
  A2_sat_Rss32                         = (16, 20)
  A2_roundsat_Rd32                     = ( 0,  4)
  A2_roundsat_Rss32                    = (16, 20)
  A2_sath_Rd32                         = ( 0,  4)
  A2_sath_Rs32                         = (16, 20)
  A2_satuh_Rd32                        = ( 0,  4)
  A2_satuh_Rs32                        = (16, 20)
  A2_satub_Rd32                        = ( 0,  4)
  A2_satub_Rs32                        = (16, 20)
  A2_satb_Rd32                         = ( 0,  4)
  A2_satb_Rs32                         = (16, 20)
  A2_vaddub_Rdd32                      = ( 0,  4)
  A2_vaddub_Rss32                      = (16, 20)
  A2_vaddub_Rtt32                      = ( 8, 12)
  A2_vaddubs_Rdd32                     = ( 0,  4)
  A2_vaddubs_Rss32                     = (16, 20)
  A2_vaddubs_Rtt32                     = ( 8, 12)
  A2_vaddh_Rdd32                       = ( 0,  4)
  A2_vaddh_Rss32                       = (16, 20)
  A2_vaddh_Rtt32                       = ( 8, 12)
  A2_vaddhs_Rdd32                      = ( 0,  4)
  A2_vaddhs_Rss32                      = (16, 20)
  A2_vaddhs_Rtt32                      = ( 8, 12)
  A2_vadduhs_Rdd32                     = ( 0,  4)
  A2_vadduhs_Rss32                     = (16, 20)
  A2_vadduhs_Rtt32                     = ( 8, 12)
  A5_vaddhubs_Rd32                     = ( 0,  4)
  A5_vaddhubs_Rss32                    = (16, 20)
  A5_vaddhubs_Rtt32                    = ( 8, 12)
  A2_vaddw_Rdd32                       = ( 0,  4)
  A2_vaddw_Rss32                       = (16, 20)
  A2_vaddw_Rtt32                       = ( 8, 12)
  A2_vaddws_Rdd32                      = ( 0,  4)
  A2_vaddws_Rss32                      = (16, 20)
  A2_vaddws_Rtt32                      = ( 8, 12)
  S4_vxaddsubw_Rdd32                   = ( 0,  4)
  S4_vxaddsubw_Rss32                   = (16, 20)
  S4_vxaddsubw_Rtt32                   = ( 8, 12)
  S4_vxsubaddw_Rdd32                   = ( 0,  4)
  S4_vxsubaddw_Rss32                   = (16, 20)
  S4_vxsubaddw_Rtt32                   = ( 8, 12)
  S4_vxaddsubh_Rdd32                   = ( 0,  4)
  S4_vxaddsubh_Rss32                   = (16, 20)
  S4_vxaddsubh_Rtt32                   = ( 8, 12)
  S4_vxsubaddh_Rdd32                   = ( 0,  4)
  S4_vxsubaddh_Rss32                   = (16, 20)
  S4_vxsubaddh_Rtt32                   = ( 8, 12)
  S4_vxaddsubhr_Rdd32                  = ( 0,  4)
  S4_vxaddsubhr_Rss32                  = (16, 20)
  S4_vxaddsubhr_Rtt32                  = ( 8, 12)
  S4_vxsubaddhr_Rdd32                  = ( 0,  4)
  S4_vxsubaddhr_Rss32                  = (16, 20)
  S4_vxsubaddhr_Rtt32                  = ( 8, 12)
  A2_svavgh_Rd32                       = ( 0,  4)
  A2_svavgh_Rs32                       = (16, 20)
  A2_svavgh_Rt32                       = ( 8, 12)
  A2_svavghs_Rd32                      = ( 0,  4)
  A2_svavghs_Rs32                      = (16, 20)
  A2_svavghs_Rt32                      = ( 8, 12)
  A2_svnavgh_Rd32                      = ( 0,  4)
  A2_svnavgh_Rt32                      = ( 8, 12)
  A2_svnavgh_Rs32                      = (16, 20)
  A2_svaddh_Rd32                       = ( 0,  4)
  A2_svaddh_Rs32                       = (16, 20)
  A2_svaddh_Rt32                       = ( 8, 12)
  A2_svaddhs_Rd32                      = ( 0,  4)
  A2_svaddhs_Rs32                      = (16, 20)
  A2_svaddhs_Rt32                      = ( 8, 12)
  A2_svadduhs_Rd32                     = ( 0,  4)
  A2_svadduhs_Rs32                     = (16, 20)
  A2_svadduhs_Rt32                     = ( 8, 12)
  A2_svsubh_Rd32                       = ( 0,  4)
  A2_svsubh_Rt32                       = ( 8, 12)
  A2_svsubh_Rs32                       = (16, 20)
  A2_svsubhs_Rd32                      = ( 0,  4)
  A2_svsubhs_Rt32                      = ( 8, 12)
  A2_svsubhs_Rs32                      = (16, 20)
  A2_svsubuhs_Rd32                     = ( 0,  4)
  A2_svsubuhs_Rt32                     = ( 8, 12)
  A2_svsubuhs_Rs32                     = (16, 20)
  A2_vraddub_Rdd32                     = ( 0,  4)
  A2_vraddub_Rss32                     = (16, 20)
  A2_vraddub_Rtt32                     = ( 8, 12)
  A2_vraddub_acc_Rxx32                 = ( 0,  4)
  A2_vraddub_acc_Rss32                 = (16, 20)
  A2_vraddub_acc_Rtt32                 = ( 8, 12)
  M2_vraddh_Rd32                       = ( 0,  4)
  M2_vraddh_Rss32                      = (16, 20)
  M2_vraddh_Rtt32                      = ( 8, 12)
  M2_vradduh_Rd32                      = ( 0,  4)
  M2_vradduh_Rss32                     = (16, 20)
  M2_vradduh_Rtt32                     = ( 8, 12)
  A2_vsubub_Rdd32                      = ( 0,  4)
  A2_vsubub_Rtt32                      = ( 8, 12)
  A2_vsubub_Rss32                      = (16, 20)
  A2_vsububs_Rdd32                     = ( 0,  4)
  A2_vsububs_Rtt32                     = ( 8, 12)
  A2_vsububs_Rss32                     = (16, 20)
  A2_vsubh_Rdd32                       = ( 0,  4)
  A2_vsubh_Rtt32                       = ( 8, 12)
  A2_vsubh_Rss32                       = (16, 20)
  A2_vsubhs_Rdd32                      = ( 0,  4)
  A2_vsubhs_Rtt32                      = ( 8, 12)
  A2_vsubhs_Rss32                      = (16, 20)
  A2_vsubuhs_Rdd32                     = ( 0,  4)
  A2_vsubuhs_Rtt32                     = ( 8, 12)
  A2_vsubuhs_Rss32                     = (16, 20)
  A2_vsubw_Rdd32                       = ( 0,  4)
  A2_vsubw_Rtt32                       = ( 8, 12)
  A2_vsubw_Rss32                       = (16, 20)
  A2_vsubws_Rdd32                      = ( 0,  4)
  A2_vsubws_Rtt32                      = ( 8, 12)
  A2_vsubws_Rss32                      = (16, 20)
  A2_vabsh_Rdd32                       = ( 0,  4)
  A2_vabsh_Rss32                       = (16, 20)
  A2_vabshsat_Rdd32                    = ( 0,  4)
  A2_vabshsat_Rss32                    = (16, 20)
  A2_vabsw_Rdd32                       = ( 0,  4)
  A2_vabsw_Rss32                       = (16, 20)
  A2_vabswsat_Rdd32                    = ( 0,  4)
  A2_vabswsat_Rss32                    = (16, 20)
  M2_vabsdiffw_Rdd32                   = ( 0,  4)
  M2_vabsdiffw_Rtt32                   = ( 8, 12)
  M2_vabsdiffw_Rss32                   = (16, 20)
  M2_vabsdiffh_Rdd32                   = ( 0,  4)
  M2_vabsdiffh_Rtt32                   = ( 8, 12)
  M2_vabsdiffh_Rss32                   = (16, 20)
  M6_vabsdiffb_Rdd32                   = ( 0,  4)
  M6_vabsdiffb_Rtt32                   = ( 8, 12)
  M6_vabsdiffb_Rss32                   = (16, 20)
  M6_vabsdiffub_Rdd32                  = ( 0,  4)
  M6_vabsdiffub_Rtt32                  = ( 8, 12)
  M6_vabsdiffub_Rss32                  = (16, 20)
  A2_vrsadub_Rdd32                     = ( 0,  4)
  A2_vrsadub_Rss32                     = (16, 20)
  A2_vrsadub_Rtt32                     = ( 8, 12)
  A2_vrsadub_acc_Rxx32                 = ( 0,  4)
  A2_vrsadub_acc_Rss32                 = (16, 20)
  A2_vrsadub_acc_Rtt32                 = ( 8, 12)
  A2_vavgub_Rdd32                      = ( 0,  4)
  A2_vavgub_Rss32                      = (16, 20)
  A2_vavgub_Rtt32                      = ( 8, 12)
  A2_vavguh_Rdd32                      = ( 0,  4)
  A2_vavguh_Rss32                      = (16, 20)
  A2_vavguh_Rtt32                      = ( 8, 12)
  A2_vavgh_Rdd32                       = ( 0,  4)
  A2_vavgh_Rss32                       = (16, 20)
  A2_vavgh_Rtt32                       = ( 8, 12)
  A2_vnavgh_Rdd32                      = ( 0,  4)
  A2_vnavgh_Rtt32                      = ( 8, 12)
  A2_vnavgh_Rss32                      = (16, 20)
  A2_vavgw_Rdd32                       = ( 0,  4)
  A2_vavgw_Rss32                       = (16, 20)
  A2_vavgw_Rtt32                       = ( 8, 12)
  A2_vnavgw_Rdd32                      = ( 0,  4)
  A2_vnavgw_Rtt32                      = ( 8, 12)
  A2_vnavgw_Rss32                      = (16, 20)
  A2_vavgwr_Rdd32                      = ( 0,  4)
  A2_vavgwr_Rss32                      = (16, 20)
  A2_vavgwr_Rtt32                      = ( 8, 12)
  A2_vnavgwr_Rdd32                     = ( 0,  4)
  A2_vnavgwr_Rtt32                     = ( 8, 12)
  A2_vnavgwr_Rss32                     = (16, 20)
  A2_vavgwcr_Rdd32                     = ( 0,  4)
  A2_vavgwcr_Rss32                     = (16, 20)
  A2_vavgwcr_Rtt32                     = ( 8, 12)
  A2_vnavgwcr_Rdd32                    = ( 0,  4)
  A2_vnavgwcr_Rtt32                    = ( 8, 12)
  A2_vnavgwcr_Rss32                    = (16, 20)
  A2_vavghcr_Rdd32                     = ( 0,  4)
  A2_vavghcr_Rss32                     = (16, 20)
  A2_vavghcr_Rtt32                     = ( 8, 12)
  A2_vnavghcr_Rdd32                    = ( 0,  4)
  A2_vnavghcr_Rtt32                    = ( 8, 12)
  A2_vnavghcr_Rss32                    = (16, 20)
  A2_vavguw_Rdd32                      = ( 0,  4)
  A2_vavguw_Rss32                      = (16, 20)
  A2_vavguw_Rtt32                      = ( 8, 12)
  A2_vavguwr_Rdd32                     = ( 0,  4)
  A2_vavguwr_Rss32                     = (16, 20)
  A2_vavguwr_Rtt32                     = ( 8, 12)
  A2_vavgubr_Rdd32                     = ( 0,  4)
  A2_vavgubr_Rss32                     = (16, 20)
  A2_vavgubr_Rtt32                     = ( 8, 12)
  A2_vavguhr_Rdd32                     = ( 0,  4)
  A2_vavguhr_Rss32                     = (16, 20)
  A2_vavguhr_Rtt32                     = ( 8, 12)
  A2_vavghr_Rdd32                      = ( 0,  4)
  A2_vavghr_Rss32                      = (16, 20)
  A2_vavghr_Rtt32                      = ( 8, 12)
  A2_vnavghr_Rdd32                     = ( 0,  4)
  A2_vnavghr_Rtt32                     = ( 8, 12)
  A2_vnavghr_Rss32                     = (16, 20)
  A4_round_ri_Rd32                     = ( 0,  4)
  A4_round_ri_Rs32                     = (16, 20)
  A4_round_ri_u5_0                     = ( 8, 12)
  A4_round_rr_Rd32                     = ( 0,  4)
  A4_round_rr_Rs32                     = (16, 20)
  A4_round_rr_Rt32                     = ( 8, 12)
  A4_round_ri_sat_Rd32                 = ( 0,  4)
  A4_round_ri_sat_Rs32                 = (16, 20)
  A4_round_ri_sat_u5_0                 = ( 8, 12)
  A4_round_rr_sat_Rd32                 = ( 0,  4)
  A4_round_rr_sat_Rs32                 = (16, 20)
  A4_round_rr_sat_Rt32                 = ( 8, 12)
  A4_cround_ri_Rd32                    = ( 0,  4)
  A4_cround_ri_Rs32                    = (16, 20)
  A4_cround_ri_u5_0                    = ( 8, 12)
  A4_cround_rr_Rd32                    = ( 0,  4)
  A4_cround_rr_Rs32                    = (16, 20)
  A4_cround_rr_Rt32                    = ( 8, 12)
  A7_croundd_ri_Rdd32                  = ( 0,  4)
  A7_croundd_ri_Rss32                  = (16, 20)
  A7_croundd_ri_u6_0                   = ( 8, 13)
  A7_croundd_rr_Rdd32                  = ( 0,  4)
  A7_croundd_rr_Rss32                  = (16, 20)
  A7_croundd_rr_Rt32                   = ( 8, 12)
  A7_clip_Rd32                         = ( 0,  4)
  A7_clip_Rs32                         = (16, 20)
  A7_clip_u5_0                         = ( 8, 12)
  A7_vclip_Rdd32                       = ( 0,  4)
  A7_vclip_Rss32                       = (16, 20)
  A7_vclip_u5_0                        = ( 8, 12)
  A4_vrminh_Rxx32                      = ( 8, 12)
  A4_vrminh_Rss32                      = (16, 20)
  A4_vrminh_Ru32                       = ( 0,  4)
  A4_vrmaxh_Rxx32                      = ( 8, 12)
  A4_vrmaxh_Rss32                      = (16, 20)
  A4_vrmaxh_Ru32                       = ( 0,  4)
  A4_vrminuh_Rxx32                     = ( 8, 12)
  A4_vrminuh_Rss32                     = (16, 20)
  A4_vrminuh_Ru32                      = ( 0,  4)
  A4_vrmaxuh_Rxx32                     = ( 8, 12)
  A4_vrmaxuh_Rss32                     = (16, 20)
  A4_vrmaxuh_Ru32                      = ( 0,  4)
  A4_vrminw_Rxx32                      = ( 8, 12)
  A4_vrminw_Rss32                      = (16, 20)
  A4_vrminw_Ru32                       = ( 0,  4)
  A4_vrmaxw_Rxx32                      = ( 8, 12)
  A4_vrmaxw_Rss32                      = (16, 20)
  A4_vrmaxw_Ru32                       = ( 0,  4)
  A4_vrminuw_Rxx32                     = ( 8, 12)
  A4_vrminuw_Rss32                     = (16, 20)
  A4_vrminuw_Ru32                      = ( 0,  4)
  A4_vrmaxuw_Rxx32                     = ( 8, 12)
  A4_vrmaxuw_Rss32                     = (16, 20)
  A4_vrmaxuw_Ru32                      = ( 0,  4)
  A2_vminb_Rdd32                       = ( 0,  4)
  A2_vminb_Rtt32                       = ( 8, 12)
  A2_vminb_Rss32                       = (16, 20)
  A2_vmaxb_Rdd32                       = ( 0,  4)
  A2_vmaxb_Rtt32                       = ( 8, 12)
  A2_vmaxb_Rss32                       = (16, 20)
  A2_vminub_Rdd32                      = ( 0,  4)
  A2_vminub_Rtt32                      = ( 8, 12)
  A2_vminub_Rss32                      = (16, 20)
  A2_vmaxub_Rdd32                      = ( 0,  4)
  A2_vmaxub_Rtt32                      = ( 8, 12)
  A2_vmaxub_Rss32                      = (16, 20)
  A2_vminh_Rdd32                       = ( 0,  4)
  A2_vminh_Rtt32                       = ( 8, 12)
  A2_vminh_Rss32                       = (16, 20)
  A2_vmaxh_Rdd32                       = ( 0,  4)
  A2_vmaxh_Rtt32                       = ( 8, 12)
  A2_vmaxh_Rss32                       = (16, 20)
  A2_vminuh_Rdd32                      = ( 0,  4)
  A2_vminuh_Rtt32                      = ( 8, 12)
  A2_vminuh_Rss32                      = (16, 20)
  A2_vmaxuh_Rdd32                      = ( 0,  4)
  A2_vmaxuh_Rtt32                      = ( 8, 12)
  A2_vmaxuh_Rss32                      = (16, 20)
  A2_vminw_Rdd32                       = ( 0,  4)
  A2_vminw_Rtt32                       = ( 8, 12)
  A2_vminw_Rss32                       = (16, 20)
  A2_vmaxw_Rdd32                       = ( 0,  4)
  A2_vmaxw_Rtt32                       = ( 8, 12)
  A2_vmaxw_Rss32                       = (16, 20)
  A2_vminuw_Rdd32                      = ( 0,  4)
  A2_vminuw_Rtt32                      = ( 8, 12)
  A2_vminuw_Rss32                      = (16, 20)
  A2_vmaxuw_Rdd32                      = ( 0,  4)
  A2_vmaxuw_Rtt32                      = ( 8, 12)
  A2_vmaxuw_Rss32                      = (16, 20)
  A5_ACS_Rxx32                         = ( 0,  4)
  A5_ACS_Pe4                           = ( 5,  6)
  A5_ACS_Rss32                         = (16, 20)
  A5_ACS_Rtt32                         = ( 8, 12)
  A6_vminub_RdP_Rdd32                  = ( 0,  4)
  A6_vminub_RdP_Pe4                    = ( 5,  6)
  A6_vminub_RdP_Rtt32                  = ( 8, 12)
  A6_vminub_RdP_Rss32                  = (16, 20)
  A4_modwrapu_Rd32                     = ( 0,  4)
  A4_modwrapu_Rs32                     = (16, 20)
  A4_modwrapu_Rt32                     = ( 8, 12)
  F2_sfadd_Rd32                        = ( 0,  4)
  F2_sfadd_Rs32                        = (16, 20)
  F2_sfadd_Rt32                        = ( 8, 12)
  F2_sfsub_Rd32                        = ( 0,  4)
  F2_sfsub_Rs32                        = (16, 20)
  F2_sfsub_Rt32                        = ( 8, 12)
  F2_sfmpy_Rd32                        = ( 0,  4)
  F2_sfmpy_Rs32                        = (16, 20)
  F2_sfmpy_Rt32                        = ( 8, 12)
  F2_sffma_Rx32                        = ( 0,  4)
  F2_sffma_Rs32                        = (16, 20)
  F2_sffma_Rt32                        = ( 8, 12)
  F2_sffma_sc_Rx32                     = ( 0,  4)
  F2_sffma_sc_Rs32                     = (16, 20)
  F2_sffma_sc_Rt32                     = ( 8, 12)
  F2_sffma_sc_Pu4                      = ( 5,  6)
  F2_sffms_Rx32                        = ( 0,  4)
  F2_sffms_Rs32                        = (16, 20)
  F2_sffms_Rt32                        = ( 8, 12)
  F2_sffma_lib_Rx32                    = ( 0,  4)
  F2_sffma_lib_Rs32                    = (16, 20)
  F2_sffma_lib_Rt32                    = ( 8, 12)
  F2_sffms_lib_Rx32                    = ( 0,  4)
  F2_sffms_lib_Rs32                    = (16, 20)
  F2_sffms_lib_Rt32                    = ( 8, 12)
  F2_sfcmpeq_Pd4                       = ( 0,  1)
  F2_sfcmpeq_Rs32                      = (16, 20)
  F2_sfcmpeq_Rt32                      = ( 8, 12)
  F2_sfcmpgt_Pd4                       = ( 0,  1)
  F2_sfcmpgt_Rs32                      = (16, 20)
  F2_sfcmpgt_Rt32                      = ( 8, 12)
  F2_sfcmpge_Pd4                       = ( 0,  1)
  F2_sfcmpge_Rs32                      = (16, 20)
  F2_sfcmpge_Rt32                      = ( 8, 12)
  F2_sfcmpuo_Pd4                       = ( 0,  1)
  F2_sfcmpuo_Rs32                      = (16, 20)
  F2_sfcmpuo_Rt32                      = ( 8, 12)
  F2_sfmax_Rd32                        = ( 0,  4)
  F2_sfmax_Rs32                        = (16, 20)
  F2_sfmax_Rt32                        = ( 8, 12)
  F2_sfmin_Rd32                        = ( 0,  4)
  F2_sfmin_Rs32                        = (16, 20)
  F2_sfmin_Rt32                        = ( 8, 12)
  F2_sfclass_Pd4                       = ( 0,  1)
  F2_sfclass_Rs32                      = (16, 20)
  F2_sfclass_u5_0                      = ( 8, 12)
  F2_sfimm_p_Rd32                      = ( 0,  4)
  F2_sfimm_p_u10_0                     = ( 5, 13)
  F2_sfimm_p_u10_1                     = (21, 21)
  F2_sfimm_n_Rd32                      = ( 0,  4)
  F2_sfimm_n_u10_0                     = ( 5, 13)
  F2_sfimm_n_u10_1                     = (21, 21)
  F2_sfrecipa_Rd32                     = ( 0,  4)
  F2_sfrecipa_Pe4                      = ( 5,  6)
  F2_sfrecipa_Rs32                     = (16, 20)
  F2_sfrecipa_Rt32                     = ( 8, 12)
  F2_sffixupn_Rd32                     = ( 0,  4)
  F2_sffixupn_Rs32                     = (16, 20)
  F2_sffixupn_Rt32                     = ( 8, 12)
  F2_sffixupd_Rd32                     = ( 0,  4)
  F2_sffixupd_Rs32                     = (16, 20)
  F2_sffixupd_Rt32                     = ( 8, 12)
  F2_sfinvsqrta_Rd32                   = ( 0,  4)
  F2_sfinvsqrta_Pe4                    = ( 5,  6)
  F2_sfinvsqrta_Rs32                   = (16, 20)
  F2_sffixupr_Rd32                     = ( 0,  4)
  F2_sffixupr_Rs32                     = (16, 20)
  F2_dfadd_Rdd32                       = ( 0,  4)
  F2_dfadd_Rss32                       = (16, 20)
  F2_dfadd_Rtt32                       = ( 8, 12)
  F2_dfsub_Rdd32                       = ( 0,  4)
  F2_dfsub_Rss32                       = (16, 20)
  F2_dfsub_Rtt32                       = ( 8, 12)
  F2_dfmax_Rdd32                       = ( 0,  4)
  F2_dfmax_Rss32                       = (16, 20)
  F2_dfmax_Rtt32                       = ( 8, 12)
  F2_dfmin_Rdd32                       = ( 0,  4)
  F2_dfmin_Rss32                       = (16, 20)
  F2_dfmin_Rtt32                       = ( 8, 12)
  F2_dfmpyfix_Rdd32                    = ( 0,  4)
  F2_dfmpyfix_Rss32                    = (16, 20)
  F2_dfmpyfix_Rtt32                    = ( 8, 12)
  F2_dfmpyll_Rdd32                     = ( 0,  4)
  F2_dfmpyll_Rss32                     = (16, 20)
  F2_dfmpyll_Rtt32                     = ( 8, 12)
  F2_dfmpylh_Rxx32                     = ( 0,  4)
  F2_dfmpylh_Rss32                     = (16, 20)
  F2_dfmpylh_Rtt32                     = ( 8, 12)
  F2_dfmpyhh_Rxx32                     = ( 0,  4)
  F2_dfmpyhh_Rss32                     = (16, 20)
  F2_dfmpyhh_Rtt32                     = ( 8, 12)
  F2_dfcmpeq_Pd4                       = ( 0,  1)
  F2_dfcmpeq_Rss32                     = (16, 20)
  F2_dfcmpeq_Rtt32                     = ( 8, 12)
  F2_dfcmpgt_Pd4                       = ( 0,  1)
  F2_dfcmpgt_Rss32                     = (16, 20)
  F2_dfcmpgt_Rtt32                     = ( 8, 12)
  F2_dfcmpge_Pd4                       = ( 0,  1)
  F2_dfcmpge_Rss32                     = (16, 20)
  F2_dfcmpge_Rtt32                     = ( 8, 12)
  F2_dfcmpuo_Pd4                       = ( 0,  1)
  F2_dfcmpuo_Rss32                     = (16, 20)
  F2_dfcmpuo_Rtt32                     = ( 8, 12)
  F2_dfclass_Pd4                       = ( 0,  1)
  F2_dfclass_Rss32                     = (16, 20)
  F2_dfclass_u5_0                      = ( 5,  9)
  F2_dfimm_p_Rdd32                     = ( 0,  4)
  F2_dfimm_p_u10_0                     = ( 5, 13)
  F2_dfimm_p_u10_1                     = (21, 21)
  F2_dfimm_n_Rdd32                     = ( 0,  4)
  F2_dfimm_n_u10_0                     = ( 5, 13)
  F2_dfimm_n_u10_1                     = (21, 21)
  F2_conv_sf2df_Rdd32                  = ( 0,  4)
  F2_conv_sf2df_Rs32                   = (16, 20)
  F2_conv_df2sf_Rd32                   = ( 0,  4)
  F2_conv_df2sf_Rss32                  = (16, 20)
  F2_conv_uw2sf_Rd32                   = ( 0,  4)
  F2_conv_uw2sf_Rs32                   = (16, 20)
  F2_conv_uw2df_Rdd32                  = ( 0,  4)
  F2_conv_uw2df_Rs32                   = (16, 20)
  F2_conv_w2sf_Rd32                    = ( 0,  4)
  F2_conv_w2sf_Rs32                    = (16, 20)
  F2_conv_w2df_Rdd32                   = ( 0,  4)
  F2_conv_w2df_Rs32                    = (16, 20)
  F2_conv_ud2sf_Rd32                   = ( 0,  4)
  F2_conv_ud2sf_Rss32                  = (16, 20)
  F2_conv_ud2df_Rdd32                  = ( 0,  4)
  F2_conv_ud2df_Rss32                  = (16, 20)
  F2_conv_d2sf_Rd32                    = ( 0,  4)
  F2_conv_d2sf_Rss32                   = (16, 20)
  F2_conv_d2df_Rdd32                   = ( 0,  4)
  F2_conv_d2df_Rss32                   = (16, 20)
  F2_conv_sf2uw_Rd32                   = ( 0,  4)
  F2_conv_sf2uw_Rs32                   = (16, 20)
  F2_conv_sf2w_Rd32                    = ( 0,  4)
  F2_conv_sf2w_Rs32                    = (16, 20)
  F2_conv_sf2ud_Rdd32                  = ( 0,  4)
  F2_conv_sf2ud_Rs32                   = (16, 20)
  F2_conv_sf2d_Rdd32                   = ( 0,  4)
  F2_conv_sf2d_Rs32                    = (16, 20)
  F2_conv_df2uw_Rd32                   = ( 0,  4)
  F2_conv_df2uw_Rss32                  = (16, 20)
  F2_conv_df2w_Rd32                    = ( 0,  4)
  F2_conv_df2w_Rss32                   = (16, 20)
  F2_conv_df2ud_Rdd32                  = ( 0,  4)
  F2_conv_df2ud_Rss32                  = (16, 20)
  F2_conv_df2d_Rdd32                   = ( 0,  4)
  F2_conv_df2d_Rss32                   = (16, 20)
  F2_conv_sf2uw_chop_Rd32              = ( 0,  4)
  F2_conv_sf2uw_chop_Rs32              = (16, 20)
  F2_conv_sf2w_chop_Rd32               = ( 0,  4)
  F2_conv_sf2w_chop_Rs32               = (16, 20)
  F2_conv_sf2ud_chop_Rdd32             = ( 0,  4)
  F2_conv_sf2ud_chop_Rs32              = (16, 20)
  F2_conv_sf2d_chop_Rdd32              = ( 0,  4)
  F2_conv_sf2d_chop_Rs32               = (16, 20)
  F2_conv_df2uw_chop_Rd32              = ( 0,  4)
  F2_conv_df2uw_chop_Rss32             = (16, 20)
  F2_conv_df2w_chop_Rd32               = ( 0,  4)
  F2_conv_df2w_chop_Rss32              = (16, 20)
  F2_conv_df2ud_chop_Rdd32             = ( 0,  4)
  F2_conv_df2ud_chop_Rss32             = (16, 20)
  F2_conv_df2d_chop_Rdd32              = ( 0,  4)
  F2_conv_df2d_chop_Rss32              = (16, 20)
  S2_asr_r_r_Rd32                      = ( 0,  4)
  S2_asr_r_r_Rs32                      = (16, 20)
  S2_asr_r_r_Rt32                      = ( 8, 12)
  S2_asl_r_r_Rd32                      = ( 0,  4)
  S2_asl_r_r_Rs32                      = (16, 20)
  S2_asl_r_r_Rt32                      = ( 8, 12)
  S2_lsr_r_r_Rd32                      = ( 0,  4)
  S2_lsr_r_r_Rs32                      = (16, 20)
  S2_lsr_r_r_Rt32                      = ( 8, 12)
  S2_lsl_r_r_Rd32                      = ( 0,  4)
  S2_lsl_r_r_Rs32                      = (16, 20)
  S2_lsl_r_r_Rt32                      = ( 8, 12)
  S2_asr_r_p_Rdd32                     = ( 0,  4)
  S2_asr_r_p_Rss32                     = (16, 20)
  S2_asr_r_p_Rt32                      = ( 8, 12)
  S2_asl_r_p_Rdd32                     = ( 0,  4)
  S2_asl_r_p_Rss32                     = (16, 20)
  S2_asl_r_p_Rt32                      = ( 8, 12)
  S2_lsr_r_p_Rdd32                     = ( 0,  4)
  S2_lsr_r_p_Rss32                     = (16, 20)
  S2_lsr_r_p_Rt32                      = ( 8, 12)
  S2_lsl_r_p_Rdd32                     = ( 0,  4)
  S2_lsl_r_p_Rss32                     = (16, 20)
  S2_lsl_r_p_Rt32                      = ( 8, 12)
  S2_asr_r_r_acc_Rx32                  = ( 0,  4)
  S2_asr_r_r_acc_Rs32                  = (16, 20)
  S2_asr_r_r_acc_Rt32                  = ( 8, 12)
  S2_asl_r_r_acc_Rx32                  = ( 0,  4)
  S2_asl_r_r_acc_Rs32                  = (16, 20)
  S2_asl_r_r_acc_Rt32                  = ( 8, 12)
  S2_lsr_r_r_acc_Rx32                  = ( 0,  4)
  S2_lsr_r_r_acc_Rs32                  = (16, 20)
  S2_lsr_r_r_acc_Rt32                  = ( 8, 12)
  S2_lsl_r_r_acc_Rx32                  = ( 0,  4)
  S2_lsl_r_r_acc_Rs32                  = (16, 20)
  S2_lsl_r_r_acc_Rt32                  = ( 8, 12)
  S2_asr_r_p_acc_Rxx32                 = ( 0,  4)
  S2_asr_r_p_acc_Rss32                 = (16, 20)
  S2_asr_r_p_acc_Rt32                  = ( 8, 12)
  S2_asl_r_p_acc_Rxx32                 = ( 0,  4)
  S2_asl_r_p_acc_Rss32                 = (16, 20)
  S2_asl_r_p_acc_Rt32                  = ( 8, 12)
  S2_lsr_r_p_acc_Rxx32                 = ( 0,  4)
  S2_lsr_r_p_acc_Rss32                 = (16, 20)
  S2_lsr_r_p_acc_Rt32                  = ( 8, 12)
  S2_lsl_r_p_acc_Rxx32                 = ( 0,  4)
  S2_lsl_r_p_acc_Rss32                 = (16, 20)
  S2_lsl_r_p_acc_Rt32                  = ( 8, 12)
  S2_asr_r_r_nac_Rx32                  = ( 0,  4)
  S2_asr_r_r_nac_Rs32                  = (16, 20)
  S2_asr_r_r_nac_Rt32                  = ( 8, 12)
  S2_asl_r_r_nac_Rx32                  = ( 0,  4)
  S2_asl_r_r_nac_Rs32                  = (16, 20)
  S2_asl_r_r_nac_Rt32                  = ( 8, 12)
  S2_lsr_r_r_nac_Rx32                  = ( 0,  4)
  S2_lsr_r_r_nac_Rs32                  = (16, 20)
  S2_lsr_r_r_nac_Rt32                  = ( 8, 12)
  S2_lsl_r_r_nac_Rx32                  = ( 0,  4)
  S2_lsl_r_r_nac_Rs32                  = (16, 20)
  S2_lsl_r_r_nac_Rt32                  = ( 8, 12)
  S2_asr_r_p_nac_Rxx32                 = ( 0,  4)
  S2_asr_r_p_nac_Rss32                 = (16, 20)
  S2_asr_r_p_nac_Rt32                  = ( 8, 12)
  S2_asl_r_p_nac_Rxx32                 = ( 0,  4)
  S2_asl_r_p_nac_Rss32                 = (16, 20)
  S2_asl_r_p_nac_Rt32                  = ( 8, 12)
  S2_lsr_r_p_nac_Rxx32                 = ( 0,  4)
  S2_lsr_r_p_nac_Rss32                 = (16, 20)
  S2_lsr_r_p_nac_Rt32                  = ( 8, 12)
  S2_lsl_r_p_nac_Rxx32                 = ( 0,  4)
  S2_lsl_r_p_nac_Rss32                 = (16, 20)
  S2_lsl_r_p_nac_Rt32                  = ( 8, 12)
  S2_asr_r_r_and_Rx32                  = ( 0,  4)
  S2_asr_r_r_and_Rs32                  = (16, 20)
  S2_asr_r_r_and_Rt32                  = ( 8, 12)
  S2_asl_r_r_and_Rx32                  = ( 0,  4)
  S2_asl_r_r_and_Rs32                  = (16, 20)
  S2_asl_r_r_and_Rt32                  = ( 8, 12)
  S2_lsr_r_r_and_Rx32                  = ( 0,  4)
  S2_lsr_r_r_and_Rs32                  = (16, 20)
  S2_lsr_r_r_and_Rt32                  = ( 8, 12)
  S2_lsl_r_r_and_Rx32                  = ( 0,  4)
  S2_lsl_r_r_and_Rs32                  = (16, 20)
  S2_lsl_r_r_and_Rt32                  = ( 8, 12)
  S2_asr_r_r_or_Rx32                   = ( 0,  4)
  S2_asr_r_r_or_Rs32                   = (16, 20)
  S2_asr_r_r_or_Rt32                   = ( 8, 12)
  S2_asl_r_r_or_Rx32                   = ( 0,  4)
  S2_asl_r_r_or_Rs32                   = (16, 20)
  S2_asl_r_r_or_Rt32                   = ( 8, 12)
  S2_lsr_r_r_or_Rx32                   = ( 0,  4)
  S2_lsr_r_r_or_Rs32                   = (16, 20)
  S2_lsr_r_r_or_Rt32                   = ( 8, 12)
  S2_lsl_r_r_or_Rx32                   = ( 0,  4)
  S2_lsl_r_r_or_Rs32                   = (16, 20)
  S2_lsl_r_r_or_Rt32                   = ( 8, 12)
  S2_asr_r_p_and_Rxx32                 = ( 0,  4)
  S2_asr_r_p_and_Rss32                 = (16, 20)
  S2_asr_r_p_and_Rt32                  = ( 8, 12)
  S2_asl_r_p_and_Rxx32                 = ( 0,  4)
  S2_asl_r_p_and_Rss32                 = (16, 20)
  S2_asl_r_p_and_Rt32                  = ( 8, 12)
  S2_lsr_r_p_and_Rxx32                 = ( 0,  4)
  S2_lsr_r_p_and_Rss32                 = (16, 20)
  S2_lsr_r_p_and_Rt32                  = ( 8, 12)
  S2_lsl_r_p_and_Rxx32                 = ( 0,  4)
  S2_lsl_r_p_and_Rss32                 = (16, 20)
  S2_lsl_r_p_and_Rt32                  = ( 8, 12)
  S2_asr_r_p_or_Rxx32                  = ( 0,  4)
  S2_asr_r_p_or_Rss32                  = (16, 20)
  S2_asr_r_p_or_Rt32                   = ( 8, 12)
  S2_asl_r_p_or_Rxx32                  = ( 0,  4)
  S2_asl_r_p_or_Rss32                  = (16, 20)
  S2_asl_r_p_or_Rt32                   = ( 8, 12)
  S2_lsr_r_p_or_Rxx32                  = ( 0,  4)
  S2_lsr_r_p_or_Rss32                  = (16, 20)
  S2_lsr_r_p_or_Rt32                   = ( 8, 12)
  S2_lsl_r_p_or_Rxx32                  = ( 0,  4)
  S2_lsl_r_p_or_Rss32                  = (16, 20)
  S2_lsl_r_p_or_Rt32                   = ( 8, 12)
  S2_asr_r_p_xor_Rxx32                 = ( 0,  4)
  S2_asr_r_p_xor_Rss32                 = (16, 20)
  S2_asr_r_p_xor_Rt32                  = ( 8, 12)
  S2_asl_r_p_xor_Rxx32                 = ( 0,  4)
  S2_asl_r_p_xor_Rss32                 = (16, 20)
  S2_asl_r_p_xor_Rt32                  = ( 8, 12)
  S2_lsr_r_p_xor_Rxx32                 = ( 0,  4)
  S2_lsr_r_p_xor_Rss32                 = (16, 20)
  S2_lsr_r_p_xor_Rt32                  = ( 8, 12)
  S2_lsl_r_p_xor_Rxx32                 = ( 0,  4)
  S2_lsl_r_p_xor_Rss32                 = (16, 20)
  S2_lsl_r_p_xor_Rt32                  = ( 8, 12)
  S2_asr_r_r_sat_Rd32                  = ( 0,  4)
  S2_asr_r_r_sat_Rs32                  = (16, 20)
  S2_asr_r_r_sat_Rt32                  = ( 8, 12)
  S2_asl_r_r_sat_Rd32                  = ( 0,  4)
  S2_asl_r_r_sat_Rs32                  = (16, 20)
  S2_asl_r_r_sat_Rt32                  = ( 8, 12)
  S2_asr_i_r_Rd32                      = ( 0,  4)
  S2_asr_i_r_Rs32                      = (16, 20)
  S2_asr_i_r_u5_0                      = ( 8, 12)
  S2_lsr_i_r_Rd32                      = ( 0,  4)
  S2_lsr_i_r_Rs32                      = (16, 20)
  S2_lsr_i_r_u5_0                      = ( 8, 12)
  S2_asl_i_r_Rd32                      = ( 0,  4)
  S2_asl_i_r_Rs32                      = (16, 20)
  S2_asl_i_r_u5_0                      = ( 8, 12)
  S6_rol_i_r_Rd32                      = ( 0,  4)
  S6_rol_i_r_Rs32                      = (16, 20)
  S6_rol_i_r_u5_0                      = ( 8, 12)
  S2_asr_i_p_Rdd32                     = ( 0,  4)
  S2_asr_i_p_Rss32                     = (16, 20)
  S2_asr_i_p_u6_0                      = ( 8, 13)
  S2_lsr_i_p_Rdd32                     = ( 0,  4)
  S2_lsr_i_p_Rss32                     = (16, 20)
  S2_lsr_i_p_u6_0                      = ( 8, 13)
  S2_asl_i_p_Rdd32                     = ( 0,  4)
  S2_asl_i_p_Rss32                     = (16, 20)
  S2_asl_i_p_u6_0                      = ( 8, 13)
  S6_rol_i_p_Rdd32                     = ( 0,  4)
  S6_rol_i_p_Rss32                     = (16, 20)
  S6_rol_i_p_u6_0                      = ( 8, 13)
  S2_asr_i_r_acc_Rx32                  = ( 0,  4)
  S2_asr_i_r_acc_Rs32                  = (16, 20)
  S2_asr_i_r_acc_u5_0                  = ( 8, 12)
  S2_lsr_i_r_acc_Rx32                  = ( 0,  4)
  S2_lsr_i_r_acc_Rs32                  = (16, 20)
  S2_lsr_i_r_acc_u5_0                  = ( 8, 12)
  S2_asl_i_r_acc_Rx32                  = ( 0,  4)
  S2_asl_i_r_acc_Rs32                  = (16, 20)
  S2_asl_i_r_acc_u5_0                  = ( 8, 12)
  S6_rol_i_r_acc_Rx32                  = ( 0,  4)
  S6_rol_i_r_acc_Rs32                  = (16, 20)
  S6_rol_i_r_acc_u5_0                  = ( 8, 12)
  S2_asr_i_p_acc_Rxx32                 = ( 0,  4)
  S2_asr_i_p_acc_Rss32                 = (16, 20)
  S2_asr_i_p_acc_u6_0                  = ( 8, 13)
  S2_lsr_i_p_acc_Rxx32                 = ( 0,  4)
  S2_lsr_i_p_acc_Rss32                 = (16, 20)
  S2_lsr_i_p_acc_u6_0                  = ( 8, 13)
  S2_asl_i_p_acc_Rxx32                 = ( 0,  4)
  S2_asl_i_p_acc_Rss32                 = (16, 20)
  S2_asl_i_p_acc_u6_0                  = ( 8, 13)
  S6_rol_i_p_acc_Rxx32                 = ( 0,  4)
  S6_rol_i_p_acc_Rss32                 = (16, 20)
  S6_rol_i_p_acc_u6_0                  = ( 8, 13)
  S2_asr_i_r_nac_Rx32                  = ( 0,  4)
  S2_asr_i_r_nac_Rs32                  = (16, 20)
  S2_asr_i_r_nac_u5_0                  = ( 8, 12)
  S2_lsr_i_r_nac_Rx32                  = ( 0,  4)
  S2_lsr_i_r_nac_Rs32                  = (16, 20)
  S2_lsr_i_r_nac_u5_0                  = ( 8, 12)
  S2_asl_i_r_nac_Rx32                  = ( 0,  4)
  S2_asl_i_r_nac_Rs32                  = (16, 20)
  S2_asl_i_r_nac_u5_0                  = ( 8, 12)
  S6_rol_i_r_nac_Rx32                  = ( 0,  4)
  S6_rol_i_r_nac_Rs32                  = (16, 20)
  S6_rol_i_r_nac_u5_0                  = ( 8, 12)
  S2_asr_i_p_nac_Rxx32                 = ( 0,  4)
  S2_asr_i_p_nac_Rss32                 = (16, 20)
  S2_asr_i_p_nac_u6_0                  = ( 8, 13)
  S2_lsr_i_p_nac_Rxx32                 = ( 0,  4)
  S2_lsr_i_p_nac_Rss32                 = (16, 20)
  S2_lsr_i_p_nac_u6_0                  = ( 8, 13)
  S2_asl_i_p_nac_Rxx32                 = ( 0,  4)
  S2_asl_i_p_nac_Rss32                 = (16, 20)
  S2_asl_i_p_nac_u6_0                  = ( 8, 13)
  S6_rol_i_p_nac_Rxx32                 = ( 0,  4)
  S6_rol_i_p_nac_Rss32                 = (16, 20)
  S6_rol_i_p_nac_u6_0                  = ( 8, 13)
  S2_lsr_i_r_xacc_Rx32                 = ( 0,  4)
  S2_lsr_i_r_xacc_Rs32                 = (16, 20)
  S2_lsr_i_r_xacc_u5_0                 = ( 8, 12)
  S2_asl_i_r_xacc_Rx32                 = ( 0,  4)
  S2_asl_i_r_xacc_Rs32                 = (16, 20)
  S2_asl_i_r_xacc_u5_0                 = ( 8, 12)
  S6_rol_i_r_xacc_Rx32                 = ( 0,  4)
  S6_rol_i_r_xacc_Rs32                 = (16, 20)
  S6_rol_i_r_xacc_u5_0                 = ( 8, 12)
  S2_lsr_i_p_xacc_Rxx32                = ( 0,  4)
  S2_lsr_i_p_xacc_Rss32                = (16, 20)
  S2_lsr_i_p_xacc_u6_0                 = ( 8, 13)
  S2_asl_i_p_xacc_Rxx32                = ( 0,  4)
  S2_asl_i_p_xacc_Rss32                = (16, 20)
  S2_asl_i_p_xacc_u6_0                 = ( 8, 13)
  S6_rol_i_p_xacc_Rxx32                = ( 0,  4)
  S6_rol_i_p_xacc_Rss32                = (16, 20)
  S6_rol_i_p_xacc_u6_0                 = ( 8, 13)
  S2_asr_i_r_and_Rx32                  = ( 0,  4)
  S2_asr_i_r_and_Rs32                  = (16, 20)
  S2_asr_i_r_and_u5_0                  = ( 8, 12)
  S2_lsr_i_r_and_Rx32                  = ( 0,  4)
  S2_lsr_i_r_and_Rs32                  = (16, 20)
  S2_lsr_i_r_and_u5_0                  = ( 8, 12)
  S2_asl_i_r_and_Rx32                  = ( 0,  4)
  S2_asl_i_r_and_Rs32                  = (16, 20)
  S2_asl_i_r_and_u5_0                  = ( 8, 12)
  S6_rol_i_r_and_Rx32                  = ( 0,  4)
  S6_rol_i_r_and_Rs32                  = (16, 20)
  S6_rol_i_r_and_u5_0                  = ( 8, 12)
  S2_asr_i_r_or_Rx32                   = ( 0,  4)
  S2_asr_i_r_or_Rs32                   = (16, 20)
  S2_asr_i_r_or_u5_0                   = ( 8, 12)
  S2_lsr_i_r_or_Rx32                   = ( 0,  4)
  S2_lsr_i_r_or_Rs32                   = (16, 20)
  S2_lsr_i_r_or_u5_0                   = ( 8, 12)
  S2_asl_i_r_or_Rx32                   = ( 0,  4)
  S2_asl_i_r_or_Rs32                   = (16, 20)
  S2_asl_i_r_or_u5_0                   = ( 8, 12)
  S6_rol_i_r_or_Rx32                   = ( 0,  4)
  S6_rol_i_r_or_Rs32                   = (16, 20)
  S6_rol_i_r_or_u5_0                   = ( 8, 12)
  S2_asr_i_p_and_Rxx32                 = ( 0,  4)
  S2_asr_i_p_and_Rss32                 = (16, 20)
  S2_asr_i_p_and_u6_0                  = ( 8, 13)
  S2_lsr_i_p_and_Rxx32                 = ( 0,  4)
  S2_lsr_i_p_and_Rss32                 = (16, 20)
  S2_lsr_i_p_and_u6_0                  = ( 8, 13)
  S2_asl_i_p_and_Rxx32                 = ( 0,  4)
  S2_asl_i_p_and_Rss32                 = (16, 20)
  S2_asl_i_p_and_u6_0                  = ( 8, 13)
  S6_rol_i_p_and_Rxx32                 = ( 0,  4)
  S6_rol_i_p_and_Rss32                 = (16, 20)
  S6_rol_i_p_and_u6_0                  = ( 8, 13)
  S2_asr_i_p_or_Rxx32                  = ( 0,  4)
  S2_asr_i_p_or_Rss32                  = (16, 20)
  S2_asr_i_p_or_u6_0                   = ( 8, 13)
  S2_lsr_i_p_or_Rxx32                  = ( 0,  4)
  S2_lsr_i_p_or_Rss32                  = (16, 20)
  S2_lsr_i_p_or_u6_0                   = ( 8, 13)
  S2_asl_i_p_or_Rxx32                  = ( 0,  4)
  S2_asl_i_p_or_Rss32                  = (16, 20)
  S2_asl_i_p_or_u6_0                   = ( 8, 13)
  S6_rol_i_p_or_Rxx32                  = ( 0,  4)
  S6_rol_i_p_or_Rss32                  = (16, 20)
  S6_rol_i_p_or_u6_0                   = ( 8, 13)
  S2_asl_i_r_sat_Rd32                  = ( 0,  4)
  S2_asl_i_r_sat_Rs32                  = (16, 20)
  S2_asl_i_r_sat_u5_0                  = ( 8, 12)
  S2_asr_i_r_rnd_Rd32                  = ( 0,  4)
  S2_asr_i_r_rnd_Rs32                  = (16, 20)
  S2_asr_i_r_rnd_u5_0                  = ( 8, 12)
  S2_asr_i_p_rnd_Rdd32                 = ( 0,  4)
  S2_asr_i_p_rnd_Rss32                 = (16, 20)
  S2_asr_i_p_rnd_u6_0                  = ( 8, 13)
  S4_lsli_Rd32                         = ( 0,  4)
  S4_lsli_Rt32                         = ( 8, 12)
  S4_lsli_s6_0                         = ( 5,  5)
  S4_lsli_s6_1                         = (16, 20) signed
  S2_addasl_rrri_Rd32                  = ( 0,  4)
  S2_addasl_rrri_Rt32                  = ( 8, 12)
  S2_addasl_rrri_Rs32                  = (16, 20)
  S2_addasl_rrri_u3_0                  = ( 5,  7)
  S4_andi_asl_ri_Rx32                  = (16, 20)
  S4_andi_asl_ri_u8_0                  = ( 3,  3)
  S4_andi_asl_ri_u8_1                  = ( 5,  7)
  S4_andi_asl_ri_u8_2                  = (13, 13)
  S4_andi_asl_ri_u8_3                  = (21, 23)
  S4_andi_asl_ri_U5_0                  = ( 8, 12)
  S4_ori_asl_ri_Rx32                   = (16, 20)
  S4_ori_asl_ri_u8_0                   = ( 3,  3)
  S4_ori_asl_ri_u8_1                   = ( 5,  7)
  S4_ori_asl_ri_u8_2                   = (13, 13)
  S4_ori_asl_ri_u8_3                   = (21, 23)
  S4_ori_asl_ri_U5_0                   = ( 8, 12)
  S4_addi_asl_ri_Rx32                  = (16, 20)
  S4_addi_asl_ri_u8_0                  = ( 3,  3)
  S4_addi_asl_ri_u8_1                  = ( 5,  7)
  S4_addi_asl_ri_u8_2                  = (13, 13)
  S4_addi_asl_ri_u8_3                  = (21, 23)
  S4_addi_asl_ri_U5_0                  = ( 8, 12)
  S4_subi_asl_ri_Rx32                  = (16, 20)
  S4_subi_asl_ri_u8_0                  = ( 3,  3)
  S4_subi_asl_ri_u8_1                  = ( 5,  7)
  S4_subi_asl_ri_u8_2                  = (13, 13)
  S4_subi_asl_ri_u8_3                  = (21, 23)
  S4_subi_asl_ri_U5_0                  = ( 8, 12)
  S4_andi_lsr_ri_Rx32                  = (16, 20)
  S4_andi_lsr_ri_u8_0                  = ( 3,  3)
  S4_andi_lsr_ri_u8_1                  = ( 5,  7)
  S4_andi_lsr_ri_u8_2                  = (13, 13)
  S4_andi_lsr_ri_u8_3                  = (21, 23)
  S4_andi_lsr_ri_U5_0                  = ( 8, 12)
  S4_ori_lsr_ri_Rx32                   = (16, 20)
  S4_ori_lsr_ri_u8_0                   = ( 3,  3)
  S4_ori_lsr_ri_u8_1                   = ( 5,  7)
  S4_ori_lsr_ri_u8_2                   = (13, 13)
  S4_ori_lsr_ri_u8_3                   = (21, 23)
  S4_ori_lsr_ri_U5_0                   = ( 8, 12)
  S4_addi_lsr_ri_Rx32                  = (16, 20)
  S4_addi_lsr_ri_u8_0                  = ( 3,  3)
  S4_addi_lsr_ri_u8_1                  = ( 5,  7)
  S4_addi_lsr_ri_u8_2                  = (13, 13)
  S4_addi_lsr_ri_u8_3                  = (21, 23)
  S4_addi_lsr_ri_U5_0                  = ( 8, 12)
  S4_subi_lsr_ri_Rx32                  = (16, 20)
  S4_subi_lsr_ri_u8_0                  = ( 3,  3)
  S4_subi_lsr_ri_u8_1                  = ( 5,  7)
  S4_subi_lsr_ri_u8_2                  = (13, 13)
  S4_subi_lsr_ri_u8_3                  = (21, 23)
  S4_subi_lsr_ri_U5_0                  = ( 8, 12)
  S2_valignib_Rdd32                    = ( 0,  4)
  S2_valignib_Rtt32                    = ( 8, 12)
  S2_valignib_Rss32                    = (16, 20)
  S2_valignib_u3_0                     = ( 5,  7)
  S2_valignrb_Rdd32                    = ( 0,  4)
  S2_valignrb_Rtt32                    = ( 8, 12)
  S2_valignrb_Rss32                    = (16, 20)
  S2_valignrb_Pu4                      = ( 5,  6)
  S2_vspliceib_Rdd32                   = ( 0,  4)
  S2_vspliceib_Rss32                   = (16, 20)
  S2_vspliceib_Rtt32                   = ( 8, 12)
  S2_vspliceib_u3_0                    = ( 5,  7)
  S2_vsplicerb_Rdd32                   = ( 0,  4)
  S2_vsplicerb_Rss32                   = (16, 20)
  S2_vsplicerb_Rtt32                   = ( 8, 12)
  S2_vsplicerb_Pu4                     = ( 5,  6)
  S2_vsplatrh_Rdd32                    = ( 0,  4)
  S2_vsplatrh_Rs32                     = (16, 20)
  S2_vsplatrb_Rd32                     = ( 0,  4)
  S2_vsplatrb_Rs32                     = (16, 20)
  S6_vsplatrbp_Rdd32                   = ( 0,  4)
  S6_vsplatrbp_Rs32                    = (16, 20)
  S2_insert_Rx32                       = ( 0,  4)
  S2_insert_Rs32                       = (16, 20)
  S2_insert_u5_0                       = ( 8, 12)
  S2_insert_U5_0                       = ( 5,  7)
  S2_insert_U5_1                       = (21, 22)
  S2_tableidxb_Rx32                    = ( 0,  4)
  S2_tableidxb_Rs32                    = (16, 20)
  S2_tableidxb_u4_0                    = ( 5,  7)
  S2_tableidxb_u4_1                    = (21, 21)
  S2_tableidxb_S6_0                    = ( 8, 13) signed
  S2_tableidxh_Rx32                    = ( 0,  4)
  S2_tableidxh_Rs32                    = (16, 20)
  S2_tableidxh_u4_0                    = ( 5,  7)
  S2_tableidxh_u4_1                    = (21, 21)
  S2_tableidxh_S6_0                    = ( 8, 13) signed
  S2_tableidxw_Rx32                    = ( 0,  4)
  S2_tableidxw_Rs32                    = (16, 20)
  S2_tableidxw_u4_0                    = ( 5,  7)
  S2_tableidxw_u4_1                    = (21, 21)
  S2_tableidxw_S6_0                    = ( 8, 13) signed
  S2_tableidxd_Rx32                    = ( 0,  4)
  S2_tableidxd_Rs32                    = (16, 20)
  S2_tableidxd_u4_0                    = ( 5,  7)
  S2_tableidxd_u4_1                    = (21, 21)
  S2_tableidxd_S6_0                    = ( 8, 13) signed
  A4_bitspliti_Rdd32                   = ( 0,  4)
  A4_bitspliti_Rs32                    = (16, 20)
  A4_bitspliti_u5_0                    = ( 8, 12)
  A4_bitsplit_Rdd32                    = ( 0,  4)
  A4_bitsplit_Rs32                     = (16, 20)
  A4_bitsplit_Rt32                     = ( 8, 12)
  S4_extract_Rd32                      = ( 0,  4)
  S4_extract_Rs32                      = (16, 20)
  S4_extract_u5_0                      = ( 8, 12)
  S4_extract_U5_0                      = ( 5,  7)
  S4_extract_U5_1                      = (21, 22)
  S2_extractu_Rd32                     = ( 0,  4)
  S2_extractu_Rs32                     = (16, 20)
  S2_extractu_u5_0                     = ( 8, 12)
  S2_extractu_U5_0                     = ( 5,  7)
  S2_extractu_U5_1                     = (21, 22)
  S2_insertp_Rxx32                     = ( 0,  4)
  S2_insertp_Rss32                     = (16, 20)
  S2_insertp_u6_0                      = ( 8, 13)
  S2_insertp_U6_0                      = ( 5,  7)
  S2_insertp_U6_1                      = (21, 23)
  S4_extractp_Rdd32                    = ( 0,  4)
  S4_extractp_Rss32                    = (16, 20)
  S4_extractp_u6_0                     = ( 8, 13)
  S4_extractp_U6_0                     = ( 5,  7)
  S4_extractp_U6_1                     = (21, 23)
  S2_extractup_Rdd32                   = ( 0,  4)
  S2_extractup_Rss32                   = (16, 20)
  S2_extractup_u6_0                    = ( 8, 13)
  S2_extractup_U6_0                    = ( 5,  7)
  S2_extractup_U6_1                    = (21, 23)
  S2_mask_Rd32                         = ( 0,  4)
  S2_mask_u5_0                         = ( 8, 12)
  S2_mask_U5_0                         = ( 5,  7)
  S2_mask_U5_1                         = (21, 22)
  S2_insert_rp_Rx32                    = ( 0,  4)
  S2_insert_rp_Rs32                    = (16, 20)
  S2_insert_rp_Rtt32                   = ( 8, 12)
  S4_extract_rp_Rd32                   = ( 0,  4)
  S4_extract_rp_Rs32                   = (16, 20)
  S4_extract_rp_Rtt32                  = ( 8, 12)
  S2_extractu_rp_Rd32                  = ( 0,  4)
  S2_extractu_rp_Rs32                  = (16, 20)
  S2_extractu_rp_Rtt32                 = ( 8, 12)
  S2_insertp_rp_Rxx32                  = ( 0,  4)
  S2_insertp_rp_Rss32                  = (16, 20)
  S2_insertp_rp_Rtt32                  = ( 8, 12)
  S4_extractp_rp_Rdd32                 = ( 0,  4)
  S4_extractp_rp_Rss32                 = (16, 20)
  S4_extractp_rp_Rtt32                 = ( 8, 12)
  S2_extractup_rp_Rdd32                = ( 0,  4)
  S2_extractup_rp_Rss32                = (16, 20)
  S2_extractup_rp_Rtt32                = ( 8, 12)
  S2_tstbit_i_Pd4                      = ( 0,  1)
  S2_tstbit_i_Rs32                     = (16, 20)
  S2_tstbit_i_u5_0                     = ( 8, 12)
  S4_ntstbit_i_Pd4                     = ( 0,  1)
  S4_ntstbit_i_Rs32                    = (16, 20)
  S4_ntstbit_i_u5_0                    = ( 8, 12)
  S2_setbit_i_Rd32                     = ( 0,  4)
  S2_setbit_i_Rs32                     = (16, 20)
  S2_setbit_i_u5_0                     = ( 8, 12)
  S2_togglebit_i_Rd32                  = ( 0,  4)
  S2_togglebit_i_Rs32                  = (16, 20)
  S2_togglebit_i_u5_0                  = ( 8, 12)
  S2_clrbit_i_Rd32                     = ( 0,  4)
  S2_clrbit_i_Rs32                     = (16, 20)
  S2_clrbit_i_u5_0                     = ( 8, 12)
  S2_tstbit_r_Pd4                      = ( 0,  1)
  S2_tstbit_r_Rs32                     = (16, 20)
  S2_tstbit_r_Rt32                     = ( 8, 12)
  S4_ntstbit_r_Pd4                     = ( 0,  1)
  S4_ntstbit_r_Rs32                    = (16, 20)
  S4_ntstbit_r_Rt32                    = ( 8, 12)
  S2_setbit_r_Rd32                     = ( 0,  4)
  S2_setbit_r_Rs32                     = (16, 20)
  S2_setbit_r_Rt32                     = ( 8, 12)
  S2_togglebit_r_Rd32                  = ( 0,  4)
  S2_togglebit_r_Rs32                  = (16, 20)
  S2_togglebit_r_Rt32                  = ( 8, 12)
  S2_clrbit_r_Rd32                     = ( 0,  4)
  S2_clrbit_r_Rs32                     = (16, 20)
  S2_clrbit_r_Rt32                     = ( 8, 12)
  S2_asr_i_vh_Rdd32                    = ( 0,  4)
  S2_asr_i_vh_Rss32                    = (16, 20)
  S2_asr_i_vh_u4_0                     = ( 8, 11)
  S2_lsr_i_vh_Rdd32                    = ( 0,  4)
  S2_lsr_i_vh_Rss32                    = (16, 20)
  S2_lsr_i_vh_u4_0                     = ( 8, 11)
  S2_asl_i_vh_Rdd32                    = ( 0,  4)
  S2_asl_i_vh_Rss32                    = (16, 20)
  S2_asl_i_vh_u4_0                     = ( 8, 11)
  S2_asr_r_vh_Rdd32                    = ( 0,  4)
  S2_asr_r_vh_Rss32                    = (16, 20)
  S2_asr_r_vh_Rt32                     = ( 8, 12)
  S5_asrhub_rnd_sat_Rd32               = ( 0,  4)
  S5_asrhub_rnd_sat_Rss32              = (16, 20)
  S5_asrhub_rnd_sat_u4_0               = ( 8, 11)
  S5_asrhub_sat_Rd32                   = ( 0,  4)
  S5_asrhub_sat_Rss32                  = (16, 20)
  S5_asrhub_sat_u4_0                   = ( 8, 11)
  S5_vasrhrnd_Rdd32                    = ( 0,  4)
  S5_vasrhrnd_Rss32                    = (16, 20)
  S5_vasrhrnd_u4_0                     = ( 8, 11)
  S2_asl_r_vh_Rdd32                    = ( 0,  4)
  S2_asl_r_vh_Rss32                    = (16, 20)
  S2_asl_r_vh_Rt32                     = ( 8, 12)
  S2_lsr_r_vh_Rdd32                    = ( 0,  4)
  S2_lsr_r_vh_Rss32                    = (16, 20)
  S2_lsr_r_vh_Rt32                     = ( 8, 12)
  S2_lsl_r_vh_Rdd32                    = ( 0,  4)
  S2_lsl_r_vh_Rss32                    = (16, 20)
  S2_lsl_r_vh_Rt32                     = ( 8, 12)
  S2_asr_i_vw_Rdd32                    = ( 0,  4)
  S2_asr_i_vw_Rss32                    = (16, 20)
  S2_asr_i_vw_u5_0                     = ( 8, 12)
  S2_asr_i_svw_trun_Rd32               = ( 0,  4)
  S2_asr_i_svw_trun_Rss32              = (16, 20)
  S2_asr_i_svw_trun_u5_0               = ( 8, 12)
  S2_asr_r_svw_trun_Rd32               = ( 0,  4)
  S2_asr_r_svw_trun_Rss32              = (16, 20)
  S2_asr_r_svw_trun_Rt32               = ( 8, 12)
  S2_lsr_i_vw_Rdd32                    = ( 0,  4)
  S2_lsr_i_vw_Rss32                    = (16, 20)
  S2_lsr_i_vw_u5_0                     = ( 8, 12)
  S2_asl_i_vw_Rdd32                    = ( 0,  4)
  S2_asl_i_vw_Rss32                    = (16, 20)
  S2_asl_i_vw_u5_0                     = ( 8, 12)
  S2_asr_r_vw_Rdd32                    = ( 0,  4)
  S2_asr_r_vw_Rss32                    = (16, 20)
  S2_asr_r_vw_Rt32                     = ( 8, 12)
  S2_asl_r_vw_Rdd32                    = ( 0,  4)
  S2_asl_r_vw_Rss32                    = (16, 20)
  S2_asl_r_vw_Rt32                     = ( 8, 12)
  S2_lsr_r_vw_Rdd32                    = ( 0,  4)
  S2_lsr_r_vw_Rss32                    = (16, 20)
  S2_lsr_r_vw_Rt32                     = ( 8, 12)
  S2_lsl_r_vw_Rdd32                    = ( 0,  4)
  S2_lsl_r_vw_Rss32                    = (16, 20)
  S2_lsl_r_vw_Rt32                     = ( 8, 12)
  S2_vrndpackwh_Rd32                   = ( 0,  4)
  S2_vrndpackwh_Rss32                  = (16, 20)
  S2_vrndpackwhs_Rd32                  = ( 0,  4)
  S2_vrndpackwhs_Rss32                 = (16, 20)
  S2_vsxtbh_Rdd32                      = ( 0,  4)
  S2_vsxtbh_Rs32                       = (16, 20)
  S2_vzxtbh_Rdd32                      = ( 0,  4)
  S2_vzxtbh_Rs32                       = (16, 20)
  S2_vsathub_Rd32                      = ( 0,  4)
  S2_vsathub_Rss32                     = (16, 20)
  S2_svsathub_Rd32                     = ( 0,  4)
  S2_svsathub_Rs32                     = (16, 20)
  S2_svsathb_Rd32                      = ( 0,  4)
  S2_svsathb_Rs32                      = (16, 20)
  S2_vsathb_Rd32                       = ( 0,  4)
  S2_vsathb_Rss32                      = (16, 20)
  S2_vtrunohb_Rd32                     = ( 0,  4)
  S2_vtrunohb_Rss32                    = (16, 20)
  S2_vtrunewh_Rdd32                    = ( 0,  4)
  S2_vtrunewh_Rss32                    = (16, 20)
  S2_vtrunewh_Rtt32                    = ( 8, 12)
  S2_vtrunowh_Rdd32                    = ( 0,  4)
  S2_vtrunowh_Rss32                    = (16, 20)
  S2_vtrunowh_Rtt32                    = ( 8, 12)
  S2_vtrunehb_Rd32                     = ( 0,  4)
  S2_vtrunehb_Rss32                    = (16, 20)
  S6_vtrunehb_ppp_Rdd32                = ( 0,  4)
  S6_vtrunehb_ppp_Rss32                = (16, 20)
  S6_vtrunehb_ppp_Rtt32                = ( 8, 12)
  S6_vtrunohb_ppp_Rdd32                = ( 0,  4)
  S6_vtrunohb_ppp_Rss32                = (16, 20)
  S6_vtrunohb_ppp_Rtt32                = ( 8, 12)
  S2_vsxthw_Rdd32                      = ( 0,  4)
  S2_vsxthw_Rs32                       = (16, 20)
  S2_vzxthw_Rdd32                      = ( 0,  4)
  S2_vzxthw_Rs32                       = (16, 20)
  S2_vsatwh_Rd32                       = ( 0,  4)
  S2_vsatwh_Rss32                      = (16, 20)
  S2_vsatwuh_Rd32                      = ( 0,  4)
  S2_vsatwuh_Rss32                     = (16, 20)
  S2_packhl_Rdd32                      = ( 0,  4)
  S2_packhl_Rs32                       = (16, 20)
  S2_packhl_Rt32                       = ( 8, 12)
  A2_swiz_Rd32                         = ( 0,  4)
  A2_swiz_Rs32                         = (16, 20)
  S2_vsathub_nopack_Rdd32              = ( 0,  4)
  S2_vsathub_nopack_Rss32              = (16, 20)
  S2_vsathb_nopack_Rdd32               = ( 0,  4)
  S2_vsathb_nopack_Rss32               = (16, 20)
  S2_vsatwh_nopack_Rdd32               = ( 0,  4)
  S2_vsatwh_nopack_Rss32               = (16, 20)
  S2_vsatwuh_nopack_Rdd32              = ( 0,  4)
  S2_vsatwuh_nopack_Rss32              = (16, 20)
  S2_shuffob_Rdd32                     = ( 0,  4)
  S2_shuffob_Rtt32                     = ( 8, 12)
  S2_shuffob_Rss32                     = (16, 20)
  S2_shuffeb_Rdd32                     = ( 0,  4)
  S2_shuffeb_Rss32                     = (16, 20)
  S2_shuffeb_Rtt32                     = ( 8, 12)
  S2_shuffoh_Rdd32                     = ( 0,  4)
  S2_shuffoh_Rtt32                     = ( 8, 12)
  S2_shuffoh_Rss32                     = (16, 20)
  S2_shuffeh_Rdd32                     = ( 0,  4)
  S2_shuffeh_Rss32                     = (16, 20)
  S2_shuffeh_Rtt32                     = ( 8, 12)
  S5_popcountp_Rd32                    = ( 0,  4)
  S5_popcountp_Rss32                   = (16, 20)
  S4_parity_Rd32                       = ( 0,  4)
  S4_parity_Rs32                       = (16, 20)
  S4_parity_Rt32                       = ( 8, 12)
  S2_parityp_Rd32                      = ( 0,  4)
  S2_parityp_Rss32                     = (16, 20)
  S2_parityp_Rtt32                     = ( 8, 12)
  S2_lfsp_Rdd32                        = ( 0,  4)
  S2_lfsp_Rss32                        = (16, 20)
  S2_lfsp_Rtt32                        = ( 8, 12)
  S2_clbnorm_Rd32                      = ( 0,  4)
  S2_clbnorm_Rs32                      = (16, 20)
  S4_clbaddi_Rd32                      = ( 0,  4)
  S4_clbaddi_Rs32                      = (16, 20)
  S4_clbaddi_s6_0                      = ( 8, 13) signed
  S4_clbpnorm_Rd32                     = ( 0,  4)
  S4_clbpnorm_Rss32                    = (16, 20)
  S4_clbpaddi_Rd32                     = ( 0,  4)
  S4_clbpaddi_Rss32                    = (16, 20)
  S4_clbpaddi_s6_0                     = ( 8, 13) signed
  S2_cabacdecbin_Rdd32                 = ( 0,  4)
  S2_cabacdecbin_Rss32                 = (16, 20)
  S2_cabacdecbin_Rtt32                 = ( 8, 12)
  S2_clb_Rd32                          = ( 0,  4)
  S2_clb_Rs32                          = (16, 20)
  S2_cl0_Rd32                          = ( 0,  4)
  S2_cl0_Rs32                          = (16, 20)
  S2_cl1_Rd32                          = ( 0,  4)
  S2_cl1_Rs32                          = (16, 20)
  S2_clbp_Rd32                         = ( 0,  4)
  S2_clbp_Rss32                        = (16, 20)
  S2_cl0p_Rd32                         = ( 0,  4)
  S2_cl0p_Rss32                        = (16, 20)
  S2_cl1p_Rd32                         = ( 0,  4)
  S2_cl1p_Rss32                        = (16, 20)
  S2_brev_Rd32                         = ( 0,  4)
  S2_brev_Rs32                         = (16, 20)
  S2_brevp_Rdd32                       = ( 0,  4)
  S2_brevp_Rss32                       = (16, 20)
  S2_ct0_Rd32                          = ( 0,  4)
  S2_ct0_Rs32                          = (16, 20)
  S2_ct1_Rd32                          = ( 0,  4)
  S2_ct1_Rs32                          = (16, 20)
  S2_ct0p_Rd32                         = ( 0,  4)
  S2_ct0p_Rss32                        = (16, 20)
  S2_ct1p_Rd32                         = ( 0,  4)
  S2_ct1p_Rss32                        = (16, 20)
  S2_interleave_Rdd32                  = ( 0,  4)
  S2_interleave_Rss32                  = (16, 20)
  S2_deinterleave_Rdd32                = ( 0,  4)
  S2_deinterleave_Rss32                = (16, 20)
  J2_trap0_u8_0                        = ( 2,  4)
  J2_trap0_u8_1                        = ( 8, 12)
  J2_trap1_Rx32                        = (16, 20)
  J2_trap1_u8_0                        = ( 2,  4)
  J2_trap1_u8_1                        = ( 8, 12)
  J2_pause_u8_0                        = ( 2,  4)
  J2_pause_u8_1                        = ( 8, 12)
  Y2_swi_Rs32                          = (16, 20)
  Y2_cswi_Rs32                         = (16, 20)
  Y2_ciad_Rs32                         = (16, 20)
  Y4_siad_Rs32                         = (16, 20)
  Y2_iassignr_Rd32                     = ( 0,  4)
  Y2_iassignr_Rs32                     = (16, 20)
  Y2_iassignw_Rs32                     = (16, 20)
  Y2_getimask_Rd32                     = ( 0,  4)
  Y2_getimask_Rs32                     = (16, 20)
  Y2_setimask_Pt4                      = ( 8,  9)
  Y2_setimask_Rs32                     = (16, 20)
  Y2_tlbw_Rss32                        = (16, 20)
  Y2_tlbw_Rt32                         = ( 8, 12)
  Y5_ctlbw_Rd32                        = ( 0,  4)
  Y5_ctlbw_Rss32                       = (16, 20)
  Y5_ctlbw_Rt32                        = ( 8, 12)
  Y5_tlboc_Rd32                        = ( 0,  4)
  Y5_tlboc_Rss32                       = (16, 20)
  Y2_tlbr_Rdd32                        = ( 0,  4)
  Y2_tlbr_Rs32                         = (16, 20)
  Y2_tlbp_Rd32                         = ( 0,  4)
  Y2_tlbp_Rs32                         = (16, 20)
  Y5_tlbasidi_Rs32                     = (16, 20)
  Y2_crswap0_Rx32                      = (16, 20)
  Y4_crswap1_Rx32                      = (16, 20)
  Y4_crswap10_Rxx32                    = (16, 20)
  Y2_tfrscrr_Rd32                      = ( 0,  4)
  Y2_tfrscrr_Ss128                     = (16, 22)
  Y2_tfrsrcr_Sd128                     = ( 0,  6)
  Y2_tfrsrcr_Rs32                      = (16, 20)
  Y4_tfrscpp_Rdd32                     = ( 0,  4)
  Y4_tfrscpp_Sss128                    = (16, 22)
  Y4_tfrspcp_Sdd128                    = ( 0,  6)
  Y4_tfrspcp_Rss32                     = (16, 20)
  G4_tfrgcrr_Rd32                      = ( 0,  4)
  G4_tfrgcrr_Gs32                      = (16, 20)
  G4_tfrgrcr_Gd32                      = ( 0,  4)
  G4_tfrgrcr_Rs32                      = (16, 20)
  G4_tfrgcpp_Rdd32                     = ( 0,  4)
  G4_tfrgcpp_Gss32                     = (16, 20)
  G4_tfrgpcp_Gdd32                     = ( 0,  4)
  G4_tfrgpcp_Rss32                     = (16, 20)
  Y2_setprio_Pt4                       = ( 8,  9)
  Y2_setprio_Rs32                      = (16, 20)
  Y6_diag_Rs32                         = (16, 20)
  Y6_diag0_Rss32                       = (16, 20)
  Y6_diag0_Rtt32                       = ( 8, 12)
  Y6_diag1_Rss32                       = (16, 20)
  Y6_diag1_Rtt32                       = ( 8, 12)
  Y4_trace_Rs32                        = (16, 20)
  Y2_stop_Rs32                         = (16, 20)
  Y4_nmi_Rs32                          = (16, 20)
  Y2_start_Rs32                        = (16, 20)
  Y2_wait_Rs32                         = (16, 20)
  Y2_resume_Rs32                       = (16, 20)
  Y2_ictagr_Rd32                       = ( 0,  4)
  Y2_ictagr_Rs32                       = (16, 20)
  Y2_ictagw_Rs32                       = (16, 20)
  Y2_ictagw_Rt32                       = ( 8, 12)
  Y2_icdataw_Rs32                      = (16, 20)
  Y2_icdataw_Rt32                      = ( 8, 12)
  Y2_icdatar_Rd32                      = ( 0,  4)
  Y2_icdatar_Rs32                      = (16, 20)
  Y2_icinva_Rs32                       = (16, 20)
  Y2_icinvidx_Rs32                     = (16, 20)
  Y2_dcfetchbo_Rs32                    = (16, 20)
  Y2_dcfetchbo_u11_3_0                 = ( 0, 10)
  Y2_dczeroa_Rs32                      = (16, 20)
  Y2_dccleana_Rs32                     = (16, 20)
  Y2_dccleanidx_Rs32                   = (16, 20)
  Y2_dccleaninva_Rs32                  = (16, 20)
  Y2_dccleaninvidx_Rs32                = (16, 20)
  Y2_dcinva_Rs32                       = (16, 20)
  Y2_dcinvidx_Rs32                     = (16, 20)
  Y2_dctagr_Rd32                       = ( 0,  4)
  Y2_dctagr_Rs32                       = (16, 20)
  Y2_dctagw_Rs32                       = (16, 20)
  Y2_dctagw_Rt32                       = ( 8, 12)
  Y4_l2tagw_Rs32                       = (16, 20)
  Y4_l2tagw_Rt32                       = ( 8, 12)
  Y4_l2tagr_Rd32                       = ( 0,  4)
  Y4_l2tagr_Rs32                       = (16, 20)
  Y2_l2cleaninvidx_Rs32                = (16, 20)
  Y5_l2cleanidx_Rs32                   = (16, 20)
  Y5_l2invidx_Rs32                     = (16, 20)
  Y4_l2fetch_Rs32                      = (16, 20)
  Y4_l2fetch_Rt32                      = ( 8, 12)
  Y5_l2fetch_Rs32                      = (16, 20)
  Y5_l2fetch_Rtt32                     = ( 8, 12)
  Y5_l2locka_Pd4                       = ( 0,  1)
  Y5_l2locka_Rs32                      = (16, 20)
  Y5_l2unlocka_Rs32                    = (16, 20)
  Y6_l2gcleanpa_Rtt32                  = ( 8, 12)
  Y6_l2gcleaninvpa_Rtt32               = ( 8, 12)
  A2_combinew_Rdd32_hi                 = ( 0,  4)
  A2_combinew_Rdd32_lo                 = ( 0,  4)
  A2_combineii_Rdd32_hi                = ( 0,  4)
  A2_combineii_Rdd32_lo                = ( 0,  4)
  A4_combineri_Rdd32_lo                = ( 0,  4)
  A4_combineri_Rdd32_hi                = ( 0,  4)
  A4_combineir_Rdd32_lo                = ( 0,  4)
  A4_combineir_Rdd32_hi                = ( 0,  4)
  A4_combineii_Rdd32_lo                = ( 0,  4)
  A4_combineii_Rdd32_hi                = ( 0,  4)
  C2_ccombinewnewt_Rdd32_lo            = ( 0,  4)
  C2_ccombinewnewt_Rdd32_hi            = ( 0,  4)
  C2_ccombinewnewf_Rdd32_lo            = ( 0,  4)
  C2_ccombinewnewf_Rdd32_hi            = ( 0,  4)
  C2_ccombinewt_Rdd32_lo               = ( 0,  4)
  C2_ccombinewt_Rdd32_hi               = ( 0,  4)
  C2_ccombinewf_Rdd32_lo               = ( 0,  4)
  C2_ccombinewf_Rdd32_hi               = ( 0,  4)
;

define token SUBINSN(16)
  a0                                   = ( 0,  0)
  a1                                   = ( 1,  1)
  a2                                   = ( 2,  2)
  a3                                   = ( 3,  3)
  a4                                   = ( 4,  4)
  a5                                   = ( 5,  5)
  a6                                   = ( 6,  6)
  a7                                   = ( 7,  7)
  a8                                   = ( 8,  8)
  a9                                   = ( 9,  9)
  a10                                  = (10, 10)
  a11                                  = (11, 11)
  a12                                  = (12, 12)
  SA1_addi_Rx16                        = ( 0,  3)
  SA1_addi_s7_0                        = ( 4, 10)
  SA1_tfr_Rd16                         = ( 0,  3)
  SA1_tfr_Rs16                         = ( 4,  7)
  SA1_seti_Rd16                        = ( 0,  3)
  SA1_seti_u6_0                        = ( 4,  9)
  SA1_setin1_Rd16                      = ( 0,  3)
  SA1_clrtnew_Rd16                     = ( 0,  3)
  SA1_clrfnew_Rd16                     = ( 0,  3)
  SA1_clrt_Rd16                        = ( 0,  3)
  SA1_clrf_Rd16                        = ( 0,  3)
  SA1_addsp_Rd16                       = ( 0,  3)
  SA1_addsp_u6_2_0                     = ( 4,  9)
  SA1_inc_Rd16                         = ( 0,  3)
  SA1_inc_Rs16                         = ( 4,  7)
  SA1_dec_Rd16                         = ( 0,  3)
  SA1_dec_Rs16                         = ( 4,  7)
  SA1_addrx_Rx16                       = ( 0,  3)
  SA1_addrx_Rs16                       = ( 4,  7)
  SA1_zxtb_Rd16                        = ( 0,  3)
  SA1_zxtb_Rs16                        = ( 4,  7)
  SA1_and1_Rd16                        = ( 0,  3)
  SA1_and1_Rs16                        = ( 4,  7)
  SA1_sxtb_Rd16                        = ( 0,  3)
  SA1_sxtb_Rs16                        = ( 4,  7)
  SA1_zxth_Rd16                        = ( 0,  3)
  SA1_zxth_Rs16                        = ( 4,  7)
  SA1_sxth_Rd16                        = ( 0,  3)
  SA1_sxth_Rs16                        = ( 4,  7)
  SA1_combinezr_Rdd8                   = ( 0,  2)
  SA1_combinezr_Rs16                   = ( 4,  7)
  SA1_combinerz_Rdd8                   = ( 0,  2)
  SA1_combinerz_Rs16                   = ( 4,  7)
  SA1_combine0i_Rdd8                   = ( 0,  2)
  SA1_combine0i_u2_0                   = ( 5,  6)
  SA1_combine1i_Rdd8                   = ( 0,  2)
  SA1_combine1i_u2_0                   = ( 5,  6)
  SA1_combine2i_Rdd8                   = ( 0,  2)
  SA1_combine2i_u2_0                   = ( 5,  6)
  SA1_combine3i_Rdd8                   = ( 0,  2)
  SA1_combine3i_u2_0                   = ( 5,  6)
  SA1_cmpeqi_Rs16                      = ( 4,  7)
  SA1_cmpeqi_u2_0                      = ( 0,  1)
  SL1_loadri_io_Rd16                   = ( 0,  3)
  SL1_loadri_io_Rs16                   = ( 4,  7)
  SL1_loadri_io_u4_2_0                 = ( 8, 11)
  SL1_loadrub_io_Rd16                  = ( 0,  3)
  SL1_loadrub_io_Rs16                  = ( 4,  7)
  SL1_loadrub_io_u4_0_0                = ( 8, 11)
  SL2_loadrh_io_Rd16                   = ( 0,  3)
  SL2_loadrh_io_Rs16                   = ( 4,  7)
  SL2_loadrh_io_u3_1_0                 = ( 8, 10)
  SL2_loadruh_io_Rd16                  = ( 0,  3)
  SL2_loadruh_io_Rs16                  = ( 4,  7)
  SL2_loadruh_io_u3_1_0                = ( 8, 10)
  SL2_loadrb_io_Rd16                   = ( 0,  3)
  SL2_loadrb_io_Rs16                   = ( 4,  7)
  SL2_loadrb_io_u3_0_0                 = ( 8, 10)
  SL2_loadri_sp_Rd16                   = ( 0,  3)
  SL2_loadri_sp_u5_2_0                 = ( 4,  8)
  SL2_loadrd_sp_Rdd8                   = ( 0,  2)
  SL2_loadrd_sp_u5_3_0                 = ( 3,  7)
  SS1_storew_io_Rs16                   = ( 4,  7)
  SS1_storew_io_Rt16                   = ( 0,  3)
  SS1_storew_io_u4_2_0                 = ( 8, 11)
  SS1_storeb_io_Rs16                   = ( 4,  7)
  SS1_storeb_io_Rt16                   = ( 0,  3)
  SS1_storeb_io_u4_0_0                 = ( 8, 11)
  SS2_storeh_io_Rs16                   = ( 4,  7)
  SS2_storeh_io_Rt16                   = ( 0,  3)
  SS2_storeh_io_u3_1_0                 = ( 8, 10)
  SS2_stored_sp_Rtt8                   = ( 0,  2)
  SS2_stored_sp_s6_3_0                 = ( 3,  8)
  SS2_storew_sp_Rt16                   = ( 0,  3)
  SS2_storew_sp_u5_2_0                 = ( 4,  8)
  SS2_storewi0_Rs16                    = ( 4,  7)
  SS2_storewi0_u4_2_0                  = ( 0,  3)
  SS2_storebi0_Rs16                    = ( 4,  7)
  SS2_storebi0_u4_0_0                  = ( 0,  3)
  SS2_storewi1_Rs16                    = ( 4,  7)
  SS2_storewi1_u4_2_0                  = ( 0,  3)
  SS2_storebi1_Rs16                    = ( 4,  7)
  SS2_storebi1_u4_0_0                  = ( 0,  3)
  SS2_allocframe_u5_3_0                = ( 4,  8)
  SA1_combinezr_Rdd8_lo                = ( 0,  2)
  SA1_combinezr_Rdd8_hi                = ( 0,  2)
  SA1_combinerz_Rdd8_lo                = ( 0,  2)
  SA1_combinerz_Rdd8_hi                = ( 0,  2)
  SA1_combine0i_Rdd8_lo                = ( 0,  2)
  SA1_combine0i_Rdd8_hi                = ( 0,  2)
  SA1_combine1i_Rdd8_lo                = ( 0,  2)
  SA1_combine1i_Rdd8_hi                = ( 0,  2)
  SA1_combine2i_Rdd8_lo                = ( 0,  2)
  SA1_combine2i_Rdd8_hi                = ( 0,  2)
  SA1_combine3i_Rdd8_lo                = ( 0,  2)
  SA1_combine3i_Rdd8_hi                = ( 0,  2)
;

attach variables [
  J2_jumpr_Rs32
  J2_jumprt_Rs32
  J2_jumprf_Rs32
  J2_jumprtpt_Rs32
  J2_jumprfpt_Rs32
  J2_jumprtnew_Rs32
  J2_jumprfnew_Rs32
  J2_jumprtnewpt_Rs32
  J2_jumprfnewpt_Rs32
  J4_hintjumpr_Rs32
  J2_jumprz_Rs32
  J2_jumprnz_Rs32
  J2_jumprzpt_Rs32
  J2_jumprnzpt_Rs32
  J2_jumprgtez_Rs32
  J2_jumprgtezpt_Rs32
  J2_jumprltez_Rs32
  J2_jumprltezpt_Rs32
  J4_cmpeq_t_jumpnv_t_Rt32
  J4_cmpeq_t_jumpnv_nt_Rt32
  J4_cmpgt_t_jumpnv_t_Rt32
  J4_cmpgt_t_jumpnv_nt_Rt32
  J4_cmpgtu_t_jumpnv_t_Rt32
  J4_cmpgtu_t_jumpnv_nt_Rt32
  J4_cmplt_t_jumpnv_t_Rt32
  J4_cmplt_t_jumpnv_nt_Rt32
  J4_cmpltu_t_jumpnv_t_Rt32
  J4_cmpltu_t_jumpnv_nt_Rt32
  J4_cmpeq_f_jumpnv_t_Rt32
  J4_cmpeq_f_jumpnv_nt_Rt32
  J4_cmpgt_f_jumpnv_t_Rt32
  J4_cmpgt_f_jumpnv_nt_Rt32
  J4_cmpgtu_f_jumpnv_t_Rt32
  J4_cmpgtu_f_jumpnv_nt_Rt32
  J4_cmplt_f_jumpnv_t_Rt32
  J4_cmplt_f_jumpnv_nt_Rt32
  J4_cmpltu_f_jumpnv_t_Rt32
  J4_cmpltu_f_jumpnv_nt_Rt32
  J2_callr_Rs32
  J2_callrt_Rs32
  J2_callrf_Rs32
  J2_loop0r_Rs32
  J2_loop1r_Rs32
  J2_ploop1sr_Rs32
  J2_ploop2sr_Rs32
  J2_ploop3sr_Rs32
  L2_loadrub_io_Rd32
  L2_loadrub_io_Rs32
  L4_loadrub_ur_Rd32
  L4_loadrub_ur_Rt32
  L4_loadrub_ap_Rd32
  L4_loadrub_ap_Re32
  L2_loadrub_pr_Rd32
  L2_loadrub_pr_Rx32
  L2_loadrub_pbr_Rd32
  L2_loadrub_pbr_Rx32
  L2_loadrub_pi_Rd32
  L2_loadrub_pi_Rx32
  L2_loadrub_pci_Rd32
  L2_loadrub_pci_Rx32
  L2_loadrub_pcr_Rd32
  L2_loadrub_pcr_Rx32
  L2_loadrb_io_Rd32
  L2_loadrb_io_Rs32
  L4_loadrb_ur_Rd32
  L4_loadrb_ur_Rt32
  L4_loadrb_ap_Rd32
  L4_loadrb_ap_Re32
  L2_loadrb_pr_Rd32
  L2_loadrb_pr_Rx32
  L2_loadrb_pbr_Rd32
  L2_loadrb_pbr_Rx32
  L2_loadrb_pi_Rd32
  L2_loadrb_pi_Rx32
  L2_loadrb_pci_Rd32
  L2_loadrb_pci_Rx32
  L2_loadrb_pcr_Rd32
  L2_loadrb_pcr_Rx32
  L2_loadruh_io_Rd32
  L2_loadruh_io_Rs32
  L4_loadruh_ur_Rd32
  L4_loadruh_ur_Rt32
  L4_loadruh_ap_Rd32
  L4_loadruh_ap_Re32
  L2_loadruh_pr_Rd32
  L2_loadruh_pr_Rx32
  L2_loadruh_pbr_Rd32
  L2_loadruh_pbr_Rx32
  L2_loadruh_pi_Rd32
  L2_loadruh_pi_Rx32
  L2_loadruh_pci_Rd32
  L2_loadruh_pci_Rx32
  L2_loadruh_pcr_Rd32
  L2_loadruh_pcr_Rx32
  L2_loadrh_io_Rd32
  L2_loadrh_io_Rs32
  L4_loadrh_ur_Rd32
  L4_loadrh_ur_Rt32
  L4_loadrh_ap_Rd32
  L4_loadrh_ap_Re32
  L2_loadrh_pr_Rd32
  L2_loadrh_pr_Rx32
  L2_loadrh_pbr_Rd32
  L2_loadrh_pbr_Rx32
  L2_loadrh_pi_Rd32
  L2_loadrh_pi_Rx32
  L2_loadrh_pci_Rd32
  L2_loadrh_pci_Rx32
  L2_loadrh_pcr_Rd32
  L2_loadrh_pcr_Rx32
  L2_loadri_io_Rd32
  L2_loadri_io_Rs32
  L4_loadri_ur_Rd32
  L4_loadri_ur_Rt32
  L4_loadri_ap_Rd32
  L4_loadri_ap_Re32
  L2_loadri_pr_Rd32
  L2_loadri_pr_Rx32
  L2_loadri_pbr_Rd32
  L2_loadri_pbr_Rx32
  L2_loadri_pi_Rd32
  L2_loadri_pi_Rx32
  L2_loadri_pci_Rd32
  L2_loadri_pci_Rx32
  L2_loadri_pcr_Rd32
  L2_loadri_pcr_Rx32
  L2_loadrd_io_Rs32
  L4_loadrd_ur_Rt32
  L4_loadrd_ap_Re32
  L2_loadrd_pr_Rx32
  L2_loadrd_pbr_Rx32
  L2_loadrd_pi_Rx32
  L2_loadrd_pci_Rx32
  L2_loadrd_pcr_Rx32
  L2_loadbzw2_io_Rd32
  L2_loadbzw2_io_Rs32
  L4_loadbzw2_ur_Rd32
  L4_loadbzw2_ur_Rt32
  L4_loadbzw2_ap_Rd32
  L4_loadbzw2_ap_Re32
  L2_loadbzw2_pr_Rd32
  L2_loadbzw2_pr_Rx32
  L2_loadbzw2_pbr_Rd32
  L2_loadbzw2_pbr_Rx32
  L2_loadbzw2_pi_Rd32
  L2_loadbzw2_pi_Rx32
  L2_loadbzw2_pci_Rd32
  L2_loadbzw2_pci_Rx32
  L2_loadbzw2_pcr_Rd32
  L2_loadbzw2_pcr_Rx32
  L2_loadbzw4_io_Rs32
  L4_loadbzw4_ur_Rt32
  L4_loadbzw4_ap_Re32
  L2_loadbzw4_pr_Rx32
  L2_loadbzw4_pbr_Rx32
  L2_loadbzw4_pi_Rx32
  L2_loadbzw4_pci_Rx32
  L2_loadbzw4_pcr_Rx32
  L2_loadbsw2_io_Rd32
  L2_loadbsw2_io_Rs32
  L4_loadbsw2_ur_Rd32
  L4_loadbsw2_ur_Rt32
  L4_loadbsw2_ap_Rd32
  L4_loadbsw2_ap_Re32
  L2_loadbsw2_pr_Rd32
  L2_loadbsw2_pr_Rx32
  L2_loadbsw2_pbr_Rd32
  L2_loadbsw2_pbr_Rx32
  L2_loadbsw2_pi_Rd32
  L2_loadbsw2_pi_Rx32
  L2_loadbsw2_pci_Rd32
  L2_loadbsw2_pci_Rx32
  L2_loadbsw2_pcr_Rd32
  L2_loadbsw2_pcr_Rx32
  L2_loadbsw4_io_Rs32
  L4_loadbsw4_ur_Rt32
  L4_loadbsw4_ap_Re32
  L2_loadbsw4_pr_Rx32
  L2_loadbsw4_pbr_Rx32
  L2_loadbsw4_pi_Rx32
  L2_loadbsw4_pci_Rx32
  L2_loadbsw4_pcr_Rx32
  L2_loadalignh_io_Rs32
  L4_loadalignh_ur_Rt32
  L4_loadalignh_ap_Re32
  L2_loadalignh_pr_Rx32
  L2_loadalignh_pbr_Rx32
  L2_loadalignh_pi_Rx32
  L2_loadalignh_pci_Rx32
  L2_loadalignh_pcr_Rx32
  L2_loadalignb_io_Rs32
  L4_loadalignb_ur_Rt32
  L4_loadalignb_ap_Re32
  L2_loadalignb_pr_Rx32
  L2_loadalignb_pbr_Rx32
  L2_loadalignb_pi_Rx32
  L2_loadalignb_pci_Rx32
  L2_loadalignb_pcr_Rx32
  S2_storerb_io_Rs32
  S2_storerb_io_Rt32
  S2_storerb_pi_Rx32
  S2_storerb_pi_Rt32
  S4_storerb_ap_Re32
  S4_storerb_ap_Rt32
  S2_storerb_pr_Rx32
  S2_storerb_pr_Rt32
  S4_storerb_ur_Ru32
  S4_storerb_ur_Rt32
  S2_storerb_pbr_Rx32
  S2_storerb_pbr_Rt32
  S2_storerb_pci_Rx32
  S2_storerb_pci_Rt32
  S2_storerb_pcr_Rx32
  S2_storerb_pcr_Rt32
  S2_storerh_io_Rs32
  S2_storerh_io_Rt32
  S2_storerh_pi_Rx32
  S2_storerh_pi_Rt32
  S4_storerh_ap_Re32
  S4_storerh_ap_Rt32
  S2_storerh_pr_Rx32
  S2_storerh_pr_Rt32
  S4_storerh_ur_Ru32
  S4_storerh_ur_Rt32
  S2_storerh_pbr_Rx32
  S2_storerh_pbr_Rt32
  S2_storerh_pci_Rx32
  S2_storerh_pci_Rt32
  S2_storerh_pcr_Rx32
  S2_storerh_pcr_Rt32
  S2_storerf_io_Rs32
  S2_storerf_io_Rt32
  S2_storerf_pi_Rx32
  S2_storerf_pi_Rt32
  S4_storerf_ap_Re32
  S4_storerf_ap_Rt32
  S2_storerf_pr_Rx32
  S2_storerf_pr_Rt32
  S4_storerf_ur_Ru32
  S4_storerf_ur_Rt32
  S2_storerf_pbr_Rx32
  S2_storerf_pbr_Rt32
  S2_storerf_pci_Rx32
  S2_storerf_pci_Rt32
  S2_storerf_pcr_Rx32
  S2_storerf_pcr_Rt32
  S2_storeri_io_Rs32
  S2_storeri_io_Rt32
  S2_storeri_pi_Rx32
  S2_storeri_pi_Rt32
  S4_storeri_ap_Re32
  S4_storeri_ap_Rt32
  S2_storeri_pr_Rx32
  S2_storeri_pr_Rt32
  S4_storeri_ur_Ru32
  S4_storeri_ur_Rt32
  S2_storeri_pbr_Rx32
  S2_storeri_pbr_Rt32
  S2_storeri_pci_Rx32
  S2_storeri_pci_Rt32
  S2_storeri_pcr_Rx32
  S2_storeri_pcr_Rt32
  S2_storerd_io_Rs32
  S2_storerd_pi_Rx32
  S4_storerd_ap_Re32
  S2_storerd_pr_Rx32
  S4_storerd_ur_Ru32
  S2_storerd_pbr_Rx32
  S2_storerd_pci_Rx32
  S2_storerd_pcr_Rx32
  S2_storerinew_io_Rs32
  S2_storerinew_pi_Rx32
  S4_storerinew_ap_Re32
  S2_storerinew_pr_Rx32
  S4_storerinew_ur_Ru32
  S2_storerinew_pbr_Rx32
  S2_storerinew_pci_Rx32
  S2_storerinew_pcr_Rx32
  S2_storerbnew_io_Rs32
  S2_storerbnew_pi_Rx32
  S4_storerbnew_ap_Re32
  S2_storerbnew_pr_Rx32
  S4_storerbnew_ur_Ru32
  S2_storerbnew_pbr_Rx32
  S2_storerbnew_pci_Rx32
  S2_storerbnew_pcr_Rx32
  S2_storerhnew_io_Rs32
  S2_storerhnew_pi_Rx32
  S4_storerhnew_ap_Re32
  S2_storerhnew_pr_Rx32
  S4_storerhnew_ur_Ru32
  S2_storerhnew_pbr_Rx32
  S2_storerhnew_pci_Rx32
  S2_storerhnew_pcr_Rx32
  S2_allocframe_Rx32
  L2_deallocframe_Rs32
  L4_return_Rs32
  L4_return_t_Rs32
  L4_return_f_Rs32
  L4_return_tnew_pt_Rs32
  L4_return_fnew_pt_Rs32
  L4_return_tnew_pnt_Rs32
  L4_return_fnew_pnt_Rs32
  L2_loadw_locked_Rd32
  L2_loadw_locked_Rs32
  S2_storew_locked_Rs32
  S2_storew_locked_Rt32
  L4_loadd_locked_Rs32
  L4_loadw_phys_Rd32
  L4_loadw_phys_Rs32
  L4_loadw_phys_Rt32
  S4_stored_locked_Rs32
  L4_loadrub_rr_Rd32
  L4_loadrub_rr_Rs32
  L4_loadrub_rr_Rt32
  L2_ploadrubt_io_Rd32
  L2_ploadrubt_io_Rs32
  L2_ploadrubt_pi_Rd32
  L2_ploadrubt_pi_Rx32
  L2_ploadrubf_io_Rd32
  L2_ploadrubf_io_Rs32
  L2_ploadrubf_pi_Rd32
  L2_ploadrubf_pi_Rx32
  L2_ploadrubtnew_io_Rd32
  L2_ploadrubtnew_io_Rs32
  L2_ploadrubfnew_io_Rd32
  L2_ploadrubfnew_io_Rs32
  L4_ploadrubt_rr_Rd32
  L4_ploadrubt_rr_Rs32
  L4_ploadrubt_rr_Rt32
  L4_ploadrubf_rr_Rd32
  L4_ploadrubf_rr_Rs32
  L4_ploadrubf_rr_Rt32
  L4_ploadrubtnew_rr_Rd32
  L4_ploadrubtnew_rr_Rs32
  L4_ploadrubtnew_rr_Rt32
  L4_ploadrubfnew_rr_Rd32
  L4_ploadrubfnew_rr_Rs32
  L4_ploadrubfnew_rr_Rt32
  L2_ploadrubtnew_pi_Rd32
  L2_ploadrubtnew_pi_Rx32
  L2_ploadrubfnew_pi_Rd32
  L2_ploadrubfnew_pi_Rx32
  L4_ploadrubt_abs_Rd32
  L4_ploadrubf_abs_Rd32
  L4_ploadrubtnew_abs_Rd32
  L4_ploadrubfnew_abs_Rd32
  L4_loadrb_rr_Rd32
  L4_loadrb_rr_Rs32
  L4_loadrb_rr_Rt32
  L2_ploadrbt_io_Rd32
  L2_ploadrbt_io_Rs32
  L2_ploadrbt_pi_Rd32
  L2_ploadrbt_pi_Rx32
  L2_ploadrbf_io_Rd32
  L2_ploadrbf_io_Rs32
  L2_ploadrbf_pi_Rd32
  L2_ploadrbf_pi_Rx32
  L2_ploadrbtnew_io_Rd32
  L2_ploadrbtnew_io_Rs32
  L2_ploadrbfnew_io_Rd32
  L2_ploadrbfnew_io_Rs32
  L4_ploadrbt_rr_Rd32
  L4_ploadrbt_rr_Rs32
  L4_ploadrbt_rr_Rt32
  L4_ploadrbf_rr_Rd32
  L4_ploadrbf_rr_Rs32
  L4_ploadrbf_rr_Rt32
  L4_ploadrbtnew_rr_Rd32
  L4_ploadrbtnew_rr_Rs32
  L4_ploadrbtnew_rr_Rt32
  L4_ploadrbfnew_rr_Rd32
  L4_ploadrbfnew_rr_Rs32
  L4_ploadrbfnew_rr_Rt32
  L2_ploadrbtnew_pi_Rd32
  L2_ploadrbtnew_pi_Rx32
  L2_ploadrbfnew_pi_Rd32
  L2_ploadrbfnew_pi_Rx32
  L4_ploadrbt_abs_Rd32
  L4_ploadrbf_abs_Rd32
  L4_ploadrbtnew_abs_Rd32
  L4_ploadrbfnew_abs_Rd32
  L4_loadruh_rr_Rd32
  L4_loadruh_rr_Rs32
  L4_loadruh_rr_Rt32
  L2_ploadruht_io_Rd32
  L2_ploadruht_io_Rs32
  L2_ploadruht_pi_Rd32
  L2_ploadruht_pi_Rx32
  L2_ploadruhf_io_Rd32
  L2_ploadruhf_io_Rs32
  L2_ploadruhf_pi_Rd32
  L2_ploadruhf_pi_Rx32
  L2_ploadruhtnew_io_Rd32
  L2_ploadruhtnew_io_Rs32
  L2_ploadruhfnew_io_Rd32
  L2_ploadruhfnew_io_Rs32
  L4_ploadruht_rr_Rd32
  L4_ploadruht_rr_Rs32
  L4_ploadruht_rr_Rt32
  L4_ploadruhf_rr_Rd32
  L4_ploadruhf_rr_Rs32
  L4_ploadruhf_rr_Rt32
  L4_ploadruhtnew_rr_Rd32
  L4_ploadruhtnew_rr_Rs32
  L4_ploadruhtnew_rr_Rt32
  L4_ploadruhfnew_rr_Rd32
  L4_ploadruhfnew_rr_Rs32
  L4_ploadruhfnew_rr_Rt32
  L2_ploadruhtnew_pi_Rd32
  L2_ploadruhtnew_pi_Rx32
  L2_ploadruhfnew_pi_Rd32
  L2_ploadruhfnew_pi_Rx32
  L4_ploadruht_abs_Rd32
  L4_ploadruhf_abs_Rd32
  L4_ploadruhtnew_abs_Rd32
  L4_ploadruhfnew_abs_Rd32
  L4_loadrh_rr_Rd32
  L4_loadrh_rr_Rs32
  L4_loadrh_rr_Rt32
  L2_ploadrht_io_Rd32
  L2_ploadrht_io_Rs32
  L2_ploadrht_pi_Rd32
  L2_ploadrht_pi_Rx32
  L2_ploadrhf_io_Rd32
  L2_ploadrhf_io_Rs32
  L2_ploadrhf_pi_Rd32
  L2_ploadrhf_pi_Rx32
  L2_ploadrhtnew_io_Rd32
  L2_ploadrhtnew_io_Rs32
  L2_ploadrhfnew_io_Rd32
  L2_ploadrhfnew_io_Rs32
  L4_ploadrht_rr_Rd32
  L4_ploadrht_rr_Rs32
  L4_ploadrht_rr_Rt32
  L4_ploadrhf_rr_Rd32
  L4_ploadrhf_rr_Rs32
  L4_ploadrhf_rr_Rt32
  L4_ploadrhtnew_rr_Rd32
  L4_ploadrhtnew_rr_Rs32
  L4_ploadrhtnew_rr_Rt32
  L4_ploadrhfnew_rr_Rd32
  L4_ploadrhfnew_rr_Rs32
  L4_ploadrhfnew_rr_Rt32
  L2_ploadrhtnew_pi_Rd32
  L2_ploadrhtnew_pi_Rx32
  L2_ploadrhfnew_pi_Rd32
  L2_ploadrhfnew_pi_Rx32
  L4_ploadrht_abs_Rd32
  L4_ploadrhf_abs_Rd32
  L4_ploadrhtnew_abs_Rd32
  L4_ploadrhfnew_abs_Rd32
  L4_loadri_rr_Rd32
  L4_loadri_rr_Rs32
  L4_loadri_rr_Rt32
  L2_ploadrit_io_Rd32
  L2_ploadrit_io_Rs32
  L2_ploadrit_pi_Rd32
  L2_ploadrit_pi_Rx32
  L2_ploadrif_io_Rd32
  L2_ploadrif_io_Rs32
  L2_ploadrif_pi_Rd32
  L2_ploadrif_pi_Rx32
  L2_ploadritnew_io_Rd32
  L2_ploadritnew_io_Rs32
  L2_ploadrifnew_io_Rd32
  L2_ploadrifnew_io_Rs32
  L4_ploadrit_rr_Rd32
  L4_ploadrit_rr_Rs32
  L4_ploadrit_rr_Rt32
  L4_ploadrif_rr_Rd32
  L4_ploadrif_rr_Rs32
  L4_ploadrif_rr_Rt32
  L4_ploadritnew_rr_Rd32
  L4_ploadritnew_rr_Rs32
  L4_ploadritnew_rr_Rt32
  L4_ploadrifnew_rr_Rd32
  L4_ploadrifnew_rr_Rs32
  L4_ploadrifnew_rr_Rt32
  L2_ploadritnew_pi_Rd32
  L2_ploadritnew_pi_Rx32
  L2_ploadrifnew_pi_Rd32
  L2_ploadrifnew_pi_Rx32
  L4_ploadrit_abs_Rd32
  L4_ploadrif_abs_Rd32
  L4_ploadritnew_abs_Rd32
  L4_ploadrifnew_abs_Rd32
  L4_loadrd_rr_Rs32
  L4_loadrd_rr_Rt32
  L2_ploadrdt_io_Rs32
  L2_ploadrdt_pi_Rx32
  L2_ploadrdf_io_Rs32
  L2_ploadrdf_pi_Rx32
  L2_ploadrdtnew_io_Rs32
  L2_ploadrdfnew_io_Rs32
  L4_ploadrdt_rr_Rs32
  L4_ploadrdt_rr_Rt32
  L4_ploadrdf_rr_Rs32
  L4_ploadrdf_rr_Rt32
  L4_ploadrdtnew_rr_Rs32
  L4_ploadrdtnew_rr_Rt32
  L4_ploadrdfnew_rr_Rs32
  L4_ploadrdfnew_rr_Rt32
  L2_ploadrdtnew_pi_Rx32
  L2_ploadrdfnew_pi_Rx32
  S4_storerb_rr_Rs32
  S4_storerb_rr_Ru32
  S4_storerb_rr_Rt32
  S2_pstorerbt_io_Rs32
  S2_pstorerbt_io_Rt32
  S2_pstorerbt_pi_Rx32
  S2_pstorerbt_pi_Rt32
  S2_pstorerbf_io_Rs32
  S2_pstorerbf_io_Rt32
  S2_pstorerbf_pi_Rx32
  S2_pstorerbf_pi_Rt32
  S4_pstorerbt_rr_Rs32
  S4_pstorerbt_rr_Ru32
  S4_pstorerbt_rr_Rt32
  S4_pstorerbf_rr_Rs32
  S4_pstorerbf_rr_Ru32
  S4_pstorerbf_rr_Rt32
  S4_pstorerbtnew_io_Rs32
  S4_pstorerbtnew_io_Rt32
  S4_pstorerbfnew_io_Rs32
  S4_pstorerbfnew_io_Rt32
  S4_pstorerbtnew_rr_Rs32
  S4_pstorerbtnew_rr_Ru32
  S4_pstorerbtnew_rr_Rt32
  S4_pstorerbfnew_rr_Rs32
  S4_pstorerbfnew_rr_Ru32
  S4_pstorerbfnew_rr_Rt32
  S2_pstorerbtnew_pi_Rx32
  S2_pstorerbtnew_pi_Rt32
  S2_pstorerbfnew_pi_Rx32
  S2_pstorerbfnew_pi_Rt32
  S4_pstorerbt_abs_Rt32
  S4_pstorerbf_abs_Rt32
  S4_pstorerbtnew_abs_Rt32
  S4_pstorerbfnew_abs_Rt32
  S4_storerh_rr_Rs32
  S4_storerh_rr_Ru32
  S4_storerh_rr_Rt32
  S2_pstorerht_io_Rs32
  S2_pstorerht_io_Rt32
  S2_pstorerht_pi_Rx32
  S2_pstorerht_pi_Rt32
  S2_pstorerhf_io_Rs32
  S2_pstorerhf_io_Rt32
  S2_pstorerhf_pi_Rx32
  S2_pstorerhf_pi_Rt32
  S4_pstorerht_rr_Rs32
  S4_pstorerht_rr_Ru32
  S4_pstorerht_rr_Rt32
  S4_pstorerhf_rr_Rs32
  S4_pstorerhf_rr_Ru32
  S4_pstorerhf_rr_Rt32
  S4_pstorerhtnew_io_Rs32
  S4_pstorerhtnew_io_Rt32
  S4_pstorerhfnew_io_Rs32
  S4_pstorerhfnew_io_Rt32
  S4_pstorerhtnew_rr_Rs32
  S4_pstorerhtnew_rr_Ru32
  S4_pstorerhtnew_rr_Rt32
  S4_pstorerhfnew_rr_Rs32
  S4_pstorerhfnew_rr_Ru32
  S4_pstorerhfnew_rr_Rt32
  S2_pstorerhtnew_pi_Rx32
  S2_pstorerhtnew_pi_Rt32
  S2_pstorerhfnew_pi_Rx32
  S2_pstorerhfnew_pi_Rt32
  S4_pstorerht_abs_Rt32
  S4_pstorerhf_abs_Rt32
  S4_pstorerhtnew_abs_Rt32
  S4_pstorerhfnew_abs_Rt32
  S4_storerf_rr_Rs32
  S4_storerf_rr_Ru32
  S4_storerf_rr_Rt32
  S2_pstorerft_io_Rs32
  S2_pstorerft_io_Rt32
  S2_pstorerft_pi_Rx32
  S2_pstorerft_pi_Rt32
  S2_pstorerff_io_Rs32
  S2_pstorerff_io_Rt32
  S2_pstorerff_pi_Rx32
  S2_pstorerff_pi_Rt32
  S4_pstorerft_rr_Rs32
  S4_pstorerft_rr_Ru32
  S4_pstorerft_rr_Rt32
  S4_pstorerff_rr_Rs32
  S4_pstorerff_rr_Ru32
  S4_pstorerff_rr_Rt32
  S4_pstorerftnew_io_Rs32
  S4_pstorerftnew_io_Rt32
  S4_pstorerffnew_io_Rs32
  S4_pstorerffnew_io_Rt32
  S4_pstorerftnew_rr_Rs32
  S4_pstorerftnew_rr_Ru32
  S4_pstorerftnew_rr_Rt32
  S4_pstorerffnew_rr_Rs32
  S4_pstorerffnew_rr_Ru32
  S4_pstorerffnew_rr_Rt32
  S2_pstorerftnew_pi_Rx32
  S2_pstorerftnew_pi_Rt32
  S2_pstorerffnew_pi_Rx32
  S2_pstorerffnew_pi_Rt32
  S4_pstorerft_abs_Rt32
  S4_pstorerff_abs_Rt32
  S4_pstorerftnew_abs_Rt32
  S4_pstorerffnew_abs_Rt32
  S4_storeri_rr_Rs32
  S4_storeri_rr_Ru32
  S4_storeri_rr_Rt32
  S2_pstorerit_io_Rs32
  S2_pstorerit_io_Rt32
  S2_pstorerit_pi_Rx32
  S2_pstorerit_pi_Rt32
  S2_pstorerif_io_Rs32
  S2_pstorerif_io_Rt32
  S2_pstorerif_pi_Rx32
  S2_pstorerif_pi_Rt32
  S4_pstorerit_rr_Rs32
  S4_pstorerit_rr_Ru32
  S4_pstorerit_rr_Rt32
  S4_pstorerif_rr_Rs32
  S4_pstorerif_rr_Ru32
  S4_pstorerif_rr_Rt32
  S4_pstoreritnew_io_Rs32
  S4_pstoreritnew_io_Rt32
  S4_pstorerifnew_io_Rs32
  S4_pstorerifnew_io_Rt32
  S4_pstoreritnew_rr_Rs32
  S4_pstoreritnew_rr_Ru32
  S4_pstoreritnew_rr_Rt32
  S4_pstorerifnew_rr_Rs32
  S4_pstorerifnew_rr_Ru32
  S4_pstorerifnew_rr_Rt32
  S2_pstoreritnew_pi_Rx32
  S2_pstoreritnew_pi_Rt32
  S2_pstorerifnew_pi_Rx32
  S2_pstorerifnew_pi_Rt32
  S4_pstorerit_abs_Rt32
  S4_pstorerif_abs_Rt32
  S4_pstoreritnew_abs_Rt32
  S4_pstorerifnew_abs_Rt32
  S4_storerd_rr_Rs32
  S4_storerd_rr_Ru32
  S2_pstorerdt_io_Rs32
  S2_pstorerdt_pi_Rx32
  S2_pstorerdf_io_Rs32
  S2_pstorerdf_pi_Rx32
  S4_pstorerdt_rr_Rs32
  S4_pstorerdt_rr_Ru32
  S4_pstorerdf_rr_Rs32
  S4_pstorerdf_rr_Ru32
  S4_pstorerdtnew_io_Rs32
  S4_pstorerdfnew_io_Rs32
  S4_pstorerdtnew_rr_Rs32
  S4_pstorerdtnew_rr_Ru32
  S4_pstorerdfnew_rr_Rs32
  S4_pstorerdfnew_rr_Ru32
  S2_pstorerdtnew_pi_Rx32
  S2_pstorerdfnew_pi_Rx32
  S4_storerinew_rr_Rs32
  S4_storerinew_rr_Ru32
  S2_pstorerinewt_io_Rs32
  S2_pstorerinewt_pi_Rx32
  S2_pstorerinewf_io_Rs32
  S2_pstorerinewf_pi_Rx32
  S4_pstorerinewt_rr_Rs32
  S4_pstorerinewt_rr_Ru32
  S4_pstorerinewf_rr_Rs32
  S4_pstorerinewf_rr_Ru32
  S4_pstorerinewtnew_io_Rs32
  S4_pstorerinewfnew_io_Rs32
  S4_pstorerinewtnew_rr_Rs32
  S4_pstorerinewtnew_rr_Ru32
  S4_pstorerinewfnew_rr_Rs32
  S4_pstorerinewfnew_rr_Ru32
  S2_pstorerinewtnew_pi_Rx32
  S2_pstorerinewfnew_pi_Rx32
  S4_storerbnew_rr_Rs32
  S4_storerbnew_rr_Ru32
  S2_pstorerbnewt_io_Rs32
  S2_pstorerbnewt_pi_Rx32
  S2_pstorerbnewf_io_Rs32
  S2_pstorerbnewf_pi_Rx32
  S4_pstorerbnewt_rr_Rs32
  S4_pstorerbnewt_rr_Ru32
  S4_pstorerbnewf_rr_Rs32
  S4_pstorerbnewf_rr_Ru32
  S4_pstorerbnewtnew_io_Rs32
  S4_pstorerbnewfnew_io_Rs32
  S4_pstorerbnewtnew_rr_Rs32
  S4_pstorerbnewtnew_rr_Ru32
  S4_pstorerbnewfnew_rr_Rs32
  S4_pstorerbnewfnew_rr_Ru32
  S2_pstorerbnewtnew_pi_Rx32
  S2_pstorerbnewfnew_pi_Rx32
  S4_storerhnew_rr_Rs32
  S4_storerhnew_rr_Ru32
  S2_pstorerhnewt_io_Rs32
  S2_pstorerhnewt_pi_Rx32
  S2_pstorerhnewf_io_Rs32
  S2_pstorerhnewf_pi_Rx32
  S4_pstorerhnewt_rr_Rs32
  S4_pstorerhnewt_rr_Ru32
  S4_pstorerhnewf_rr_Rs32
  S4_pstorerhnewf_rr_Ru32
  S4_pstorerhnewtnew_io_Rs32
  S4_pstorerhnewfnew_io_Rs32
  S4_pstorerhnewtnew_rr_Rs32
  S4_pstorerhnewtnew_rr_Ru32
  S4_pstorerhnewfnew_rr_Rs32
  S4_pstorerhnewfnew_rr_Ru32
  S2_pstorerhnewtnew_pi_Rx32
  S2_pstorerhnewfnew_pi_Rx32
  L4_add_memopw_io_Rs32
  L4_add_memopw_io_Rt32
  L4_add_memopb_io_Rs32
  L4_add_memopb_io_Rt32
  L4_add_memoph_io_Rs32
  L4_add_memoph_io_Rt32
  L4_sub_memopw_io_Rs32
  L4_sub_memopw_io_Rt32
  L4_sub_memopb_io_Rs32
  L4_sub_memopb_io_Rt32
  L4_sub_memoph_io_Rs32
  L4_sub_memoph_io_Rt32
  L4_and_memopw_io_Rs32
  L4_and_memopw_io_Rt32
  L4_and_memopb_io_Rs32
  L4_and_memopb_io_Rt32
  L4_and_memoph_io_Rs32
  L4_and_memoph_io_Rt32
  L4_or_memopw_io_Rs32
  L4_or_memopw_io_Rt32
  L4_or_memopb_io_Rs32
  L4_or_memopb_io_Rt32
  L4_or_memoph_io_Rs32
  L4_or_memoph_io_Rt32
  L4_iadd_memopw_io_Rs32
  L4_iadd_memopb_io_Rs32
  L4_iadd_memoph_io_Rs32
  L4_isub_memopw_io_Rs32
  L4_isub_memopb_io_Rs32
  L4_isub_memoph_io_Rs32
  L4_iand_memopw_io_Rs32
  L4_iand_memopb_io_Rs32
  L4_iand_memoph_io_Rs32
  L4_ior_memopw_io_Rs32
  L4_ior_memopb_io_Rs32
  L4_ior_memoph_io_Rs32
  S4_storeirbt_io_Rs32
  S4_storeirbf_io_Rs32
  S4_storeirbtnew_io_Rs32
  S4_storeirbfnew_io_Rs32
  S4_storeirht_io_Rs32
  S4_storeirhf_io_Rs32
  S4_storeirhtnew_io_Rs32
  S4_storeirhfnew_io_Rs32
  S4_storeirit_io_Rs32
  S4_storeirif_io_Rs32
  S4_storeiritnew_io_Rs32
  S4_storeirifnew_io_Rs32
  S4_storeirb_io_Rs32
  S4_storeirh_io_Rs32
  S4_storeiri_io_Rs32
  L2_loadrubgp_Rd32
  L2_loadrbgp_Rd32
  L2_loadruhgp_Rd32
  L2_loadrhgp_Rd32
  L2_loadrigp_Rd32
  S2_storerbgp_Rt32
  S2_storerhgp_Rt32
  S2_storerfgp_Rt32
  S2_storerigp_Rt32
  C2_cmpeq_Rs32
  C2_cmpeq_Rt32
  C2_cmpgt_Rs32
  C2_cmpgt_Rt32
  C2_cmpgtu_Rs32
  C2_cmpgtu_Rt32
  A4_rcmpeqi_Rd32
  A4_rcmpeqi_Rs32
  A4_rcmpneqi_Rd32
  A4_rcmpneqi_Rs32
  A4_rcmpeq_Rd32
  A4_rcmpeq_Rs32
  A4_rcmpeq_Rt32
  A4_rcmpneq_Rd32
  A4_rcmpneq_Rs32
  A4_rcmpneq_Rt32
  C2_bitsset_Rs32
  C2_bitsset_Rt32
  C2_bitsclr_Rs32
  C2_bitsclr_Rt32
  C4_nbitsset_Rs32
  C4_nbitsset_Rt32
  C4_nbitsclr_Rs32
  C4_nbitsclr_Rt32
  C2_cmpeqi_Rs32
  C2_cmpgti_Rs32
  C2_cmpgtui_Rs32
  C2_bitsclri_Rs32
  C4_nbitsclri_Rs32
  C4_cmpneqi_Rs32
  C4_cmpltei_Rs32
  C4_cmplteui_Rs32
  C4_cmpneq_Rs32
  C4_cmpneq_Rt32
  C4_cmplte_Rs32
  C4_cmplte_Rt32
  C4_cmplteu_Rs32
  C4_cmplteu_Rt32
  C2_vitpack_Rd32
  C2_mux_Rd32
  C2_mux_Rs32
  C2_mux_Rt32
  C2_cmovenewit_Rd32
  C2_cmovenewif_Rd32
  C2_cmoveit_Rd32
  C2_cmoveif_Rd32
  C2_ccombinewnewt_Rs32
  C2_ccombinewnewt_Rt32
  C2_ccombinewnewf_Rs32
  C2_ccombinewnewf_Rt32
  C2_ccombinewt_Rs32
  C2_ccombinewt_Rt32
  C2_ccombinewf_Rs32
  C2_ccombinewf_Rt32
  C2_muxii_Rd32
  C2_muxir_Rd32
  C2_muxir_Rs32
  C2_muxri_Rd32
  C2_muxri_Rs32
  A4_cmpbeq_Rs32
  A4_cmpbeq_Rt32
  A4_cmpbeqi_Rs32
  A4_cmpbgtu_Rs32
  A4_cmpbgtu_Rt32
  A4_cmpbgtui_Rs32
  A4_cmpbgt_Rs32
  A4_cmpbgt_Rt32
  A4_cmpbgti_Rs32
  A4_cmpheq_Rs32
  A4_cmpheq_Rt32
  A4_cmphgt_Rs32
  A4_cmphgt_Rt32
  A4_cmphgtu_Rs32
  A4_cmphgtu_Rt32
  A4_cmpheqi_Rs32
  A4_cmphgti_Rs32
  A4_cmphgtui_Rs32
  A4_tlbmatch_Rt32
  C2_tfrpr_Rd32
  C2_tfrrp_Rs32
  M2_mpy_acc_hh_s0_Rx32
  M2_mpy_acc_hh_s0_Rs32
  M2_mpy_acc_hh_s0_Rt32
  M2_mpy_acc_hh_s1_Rx32
  M2_mpy_acc_hh_s1_Rs32
  M2_mpy_acc_hh_s1_Rt32
  M2_mpy_acc_hl_s0_Rx32
  M2_mpy_acc_hl_s0_Rs32
  M2_mpy_acc_hl_s0_Rt32
  M2_mpy_acc_hl_s1_Rx32
  M2_mpy_acc_hl_s1_Rs32
  M2_mpy_acc_hl_s1_Rt32
  M2_mpy_acc_lh_s0_Rx32
  M2_mpy_acc_lh_s0_Rs32
  M2_mpy_acc_lh_s0_Rt32
  M2_mpy_acc_lh_s1_Rx32
  M2_mpy_acc_lh_s1_Rs32
  M2_mpy_acc_lh_s1_Rt32
  M2_mpy_acc_ll_s0_Rx32
  M2_mpy_acc_ll_s0_Rs32
  M2_mpy_acc_ll_s0_Rt32
  M2_mpy_acc_ll_s1_Rx32
  M2_mpy_acc_ll_s1_Rs32
  M2_mpy_acc_ll_s1_Rt32
  M2_mpy_nac_hh_s0_Rx32
  M2_mpy_nac_hh_s0_Rs32
  M2_mpy_nac_hh_s0_Rt32
  M2_mpy_nac_hh_s1_Rx32
  M2_mpy_nac_hh_s1_Rs32
  M2_mpy_nac_hh_s1_Rt32
  M2_mpy_nac_hl_s0_Rx32
  M2_mpy_nac_hl_s0_Rs32
  M2_mpy_nac_hl_s0_Rt32
  M2_mpy_nac_hl_s1_Rx32
  M2_mpy_nac_hl_s1_Rs32
  M2_mpy_nac_hl_s1_Rt32
  M2_mpy_nac_lh_s0_Rx32
  M2_mpy_nac_lh_s0_Rs32
  M2_mpy_nac_lh_s0_Rt32
  M2_mpy_nac_lh_s1_Rx32
  M2_mpy_nac_lh_s1_Rs32
  M2_mpy_nac_lh_s1_Rt32
  M2_mpy_nac_ll_s0_Rx32
  M2_mpy_nac_ll_s0_Rs32
  M2_mpy_nac_ll_s0_Rt32
  M2_mpy_nac_ll_s1_Rx32
  M2_mpy_nac_ll_s1_Rs32
  M2_mpy_nac_ll_s1_Rt32
  M2_mpy_acc_sat_hh_s0_Rx32
  M2_mpy_acc_sat_hh_s0_Rs32
  M2_mpy_acc_sat_hh_s0_Rt32
  M2_mpy_acc_sat_hh_s1_Rx32
  M2_mpy_acc_sat_hh_s1_Rs32
  M2_mpy_acc_sat_hh_s1_Rt32
  M2_mpy_acc_sat_hl_s0_Rx32
  M2_mpy_acc_sat_hl_s0_Rs32
  M2_mpy_acc_sat_hl_s0_Rt32
  M2_mpy_acc_sat_hl_s1_Rx32
  M2_mpy_acc_sat_hl_s1_Rs32
  M2_mpy_acc_sat_hl_s1_Rt32
  M2_mpy_acc_sat_lh_s0_Rx32
  M2_mpy_acc_sat_lh_s0_Rs32
  M2_mpy_acc_sat_lh_s0_Rt32
  M2_mpy_acc_sat_lh_s1_Rx32
  M2_mpy_acc_sat_lh_s1_Rs32
  M2_mpy_acc_sat_lh_s1_Rt32
  M2_mpy_acc_sat_ll_s0_Rx32
  M2_mpy_acc_sat_ll_s0_Rs32
  M2_mpy_acc_sat_ll_s0_Rt32
  M2_mpy_acc_sat_ll_s1_Rx32
  M2_mpy_acc_sat_ll_s1_Rs32
  M2_mpy_acc_sat_ll_s1_Rt32
  M2_mpy_nac_sat_hh_s0_Rx32
  M2_mpy_nac_sat_hh_s0_Rs32
  M2_mpy_nac_sat_hh_s0_Rt32
  M2_mpy_nac_sat_hh_s1_Rx32
  M2_mpy_nac_sat_hh_s1_Rs32
  M2_mpy_nac_sat_hh_s1_Rt32
  M2_mpy_nac_sat_hl_s0_Rx32
  M2_mpy_nac_sat_hl_s0_Rs32
  M2_mpy_nac_sat_hl_s0_Rt32
  M2_mpy_nac_sat_hl_s1_Rx32
  M2_mpy_nac_sat_hl_s1_Rs32
  M2_mpy_nac_sat_hl_s1_Rt32
  M2_mpy_nac_sat_lh_s0_Rx32
  M2_mpy_nac_sat_lh_s0_Rs32
  M2_mpy_nac_sat_lh_s0_Rt32
  M2_mpy_nac_sat_lh_s1_Rx32
  M2_mpy_nac_sat_lh_s1_Rs32
  M2_mpy_nac_sat_lh_s1_Rt32
  M2_mpy_nac_sat_ll_s0_Rx32
  M2_mpy_nac_sat_ll_s0_Rs32
  M2_mpy_nac_sat_ll_s0_Rt32
  M2_mpy_nac_sat_ll_s1_Rx32
  M2_mpy_nac_sat_ll_s1_Rs32
  M2_mpy_nac_sat_ll_s1_Rt32
  M2_mpy_hh_s0_Rd32
  M2_mpy_hh_s0_Rs32
  M2_mpy_hh_s0_Rt32
  M2_mpy_hh_s1_Rd32
  M2_mpy_hh_s1_Rs32
  M2_mpy_hh_s1_Rt32
  M2_mpy_hl_s0_Rd32
  M2_mpy_hl_s0_Rs32
  M2_mpy_hl_s0_Rt32
  M2_mpy_hl_s1_Rd32
  M2_mpy_hl_s1_Rs32
  M2_mpy_hl_s1_Rt32
  M2_mpy_lh_s0_Rd32
  M2_mpy_lh_s0_Rs32
  M2_mpy_lh_s0_Rt32
  M2_mpy_lh_s1_Rd32
  M2_mpy_lh_s1_Rs32
  M2_mpy_lh_s1_Rt32
  M2_mpy_ll_s0_Rd32
  M2_mpy_ll_s0_Rs32
  M2_mpy_ll_s0_Rt32
  M2_mpy_ll_s1_Rd32
  M2_mpy_ll_s1_Rs32
  M2_mpy_ll_s1_Rt32
  M2_mpy_sat_hh_s0_Rd32
  M2_mpy_sat_hh_s0_Rs32
  M2_mpy_sat_hh_s0_Rt32
  M2_mpy_sat_hh_s1_Rd32
  M2_mpy_sat_hh_s1_Rs32
  M2_mpy_sat_hh_s1_Rt32
  M2_mpy_sat_hl_s0_Rd32
  M2_mpy_sat_hl_s0_Rs32
  M2_mpy_sat_hl_s0_Rt32
  M2_mpy_sat_hl_s1_Rd32
  M2_mpy_sat_hl_s1_Rs32
  M2_mpy_sat_hl_s1_Rt32
  M2_mpy_sat_lh_s0_Rd32
  M2_mpy_sat_lh_s0_Rs32
  M2_mpy_sat_lh_s0_Rt32
  M2_mpy_sat_lh_s1_Rd32
  M2_mpy_sat_lh_s1_Rs32
  M2_mpy_sat_lh_s1_Rt32
  M2_mpy_sat_ll_s0_Rd32
  M2_mpy_sat_ll_s0_Rs32
  M2_mpy_sat_ll_s0_Rt32
  M2_mpy_sat_ll_s1_Rd32
  M2_mpy_sat_ll_s1_Rs32
  M2_mpy_sat_ll_s1_Rt32
  M2_mpy_rnd_hh_s0_Rd32
  M2_mpy_rnd_hh_s0_Rs32
  M2_mpy_rnd_hh_s0_Rt32
  M2_mpy_rnd_hh_s1_Rd32
  M2_mpy_rnd_hh_s1_Rs32
  M2_mpy_rnd_hh_s1_Rt32
  M2_mpy_rnd_hl_s0_Rd32
  M2_mpy_rnd_hl_s0_Rs32
  M2_mpy_rnd_hl_s0_Rt32
  M2_mpy_rnd_hl_s1_Rd32
  M2_mpy_rnd_hl_s1_Rs32
  M2_mpy_rnd_hl_s1_Rt32
  M2_mpy_rnd_lh_s0_Rd32
  M2_mpy_rnd_lh_s0_Rs32
  M2_mpy_rnd_lh_s0_Rt32
  M2_mpy_rnd_lh_s1_Rd32
  M2_mpy_rnd_lh_s1_Rs32
  M2_mpy_rnd_lh_s1_Rt32
  M2_mpy_rnd_ll_s0_Rd32
  M2_mpy_rnd_ll_s0_Rs32
  M2_mpy_rnd_ll_s0_Rt32
  M2_mpy_rnd_ll_s1_Rd32
  M2_mpy_rnd_ll_s1_Rs32
  M2_mpy_rnd_ll_s1_Rt32
  M2_mpy_sat_rnd_hh_s0_Rd32
  M2_mpy_sat_rnd_hh_s0_Rs32
  M2_mpy_sat_rnd_hh_s0_Rt32
  M2_mpy_sat_rnd_hh_s1_Rd32
  M2_mpy_sat_rnd_hh_s1_Rs32
  M2_mpy_sat_rnd_hh_s1_Rt32
  M2_mpy_sat_rnd_hl_s0_Rd32
  M2_mpy_sat_rnd_hl_s0_Rs32
  M2_mpy_sat_rnd_hl_s0_Rt32
  M2_mpy_sat_rnd_hl_s1_Rd32
  M2_mpy_sat_rnd_hl_s1_Rs32
  M2_mpy_sat_rnd_hl_s1_Rt32
  M2_mpy_sat_rnd_lh_s0_Rd32
  M2_mpy_sat_rnd_lh_s0_Rs32
  M2_mpy_sat_rnd_lh_s0_Rt32
  M2_mpy_sat_rnd_lh_s1_Rd32
  M2_mpy_sat_rnd_lh_s1_Rs32
  M2_mpy_sat_rnd_lh_s1_Rt32
  M2_mpy_sat_rnd_ll_s0_Rd32
  M2_mpy_sat_rnd_ll_s0_Rs32
  M2_mpy_sat_rnd_ll_s0_Rt32
  M2_mpy_sat_rnd_ll_s1_Rd32
  M2_mpy_sat_rnd_ll_s1_Rs32
  M2_mpy_sat_rnd_ll_s1_Rt32
  M2_mpyd_acc_hh_s0_Rs32
  M2_mpyd_acc_hh_s0_Rt32
  M2_mpyd_acc_hh_s1_Rs32
  M2_mpyd_acc_hh_s1_Rt32
  M2_mpyd_acc_hl_s0_Rs32
  M2_mpyd_acc_hl_s0_Rt32
  M2_mpyd_acc_hl_s1_Rs32
  M2_mpyd_acc_hl_s1_Rt32
  M2_mpyd_acc_lh_s0_Rs32
  M2_mpyd_acc_lh_s0_Rt32
  M2_mpyd_acc_lh_s1_Rs32
  M2_mpyd_acc_lh_s1_Rt32
  M2_mpyd_acc_ll_s0_Rs32
  M2_mpyd_acc_ll_s0_Rt32
  M2_mpyd_acc_ll_s1_Rs32
  M2_mpyd_acc_ll_s1_Rt32
  M2_mpyd_nac_hh_s0_Rs32
  M2_mpyd_nac_hh_s0_Rt32
  M2_mpyd_nac_hh_s1_Rs32
  M2_mpyd_nac_hh_s1_Rt32
  M2_mpyd_nac_hl_s0_Rs32
  M2_mpyd_nac_hl_s0_Rt32
  M2_mpyd_nac_hl_s1_Rs32
  M2_mpyd_nac_hl_s1_Rt32
  M2_mpyd_nac_lh_s0_Rs32
  M2_mpyd_nac_lh_s0_Rt32
  M2_mpyd_nac_lh_s1_Rs32
  M2_mpyd_nac_lh_s1_Rt32
  M2_mpyd_nac_ll_s0_Rs32
  M2_mpyd_nac_ll_s0_Rt32
  M2_mpyd_nac_ll_s1_Rs32
  M2_mpyd_nac_ll_s1_Rt32
  M2_mpyd_hh_s0_Rs32
  M2_mpyd_hh_s0_Rt32
  M2_mpyd_hh_s1_Rs32
  M2_mpyd_hh_s1_Rt32
  M2_mpyd_hl_s0_Rs32
  M2_mpyd_hl_s0_Rt32
  M2_mpyd_hl_s1_Rs32
  M2_mpyd_hl_s1_Rt32
  M2_mpyd_lh_s0_Rs32
  M2_mpyd_lh_s0_Rt32
  M2_mpyd_lh_s1_Rs32
  M2_mpyd_lh_s1_Rt32
  M2_mpyd_ll_s0_Rs32
  M2_mpyd_ll_s0_Rt32
  M2_mpyd_ll_s1_Rs32
  M2_mpyd_ll_s1_Rt32
  M2_mpyd_rnd_hh_s0_Rs32
  M2_mpyd_rnd_hh_s0_Rt32
  M2_mpyd_rnd_hh_s1_Rs32
  M2_mpyd_rnd_hh_s1_Rt32
  M2_mpyd_rnd_hl_s0_Rs32
  M2_mpyd_rnd_hl_s0_Rt32
  M2_mpyd_rnd_hl_s1_Rs32
  M2_mpyd_rnd_hl_s1_Rt32
  M2_mpyd_rnd_lh_s0_Rs32
  M2_mpyd_rnd_lh_s0_Rt32
  M2_mpyd_rnd_lh_s1_Rs32
  M2_mpyd_rnd_lh_s1_Rt32
  M2_mpyd_rnd_ll_s0_Rs32
  M2_mpyd_rnd_ll_s0_Rt32
  M2_mpyd_rnd_ll_s1_Rs32
  M2_mpyd_rnd_ll_s1_Rt32
  M2_mpyu_acc_hh_s0_Rx32
  M2_mpyu_acc_hh_s0_Rs32
  M2_mpyu_acc_hh_s0_Rt32
  M2_mpyu_acc_hh_s1_Rx32
  M2_mpyu_acc_hh_s1_Rs32
  M2_mpyu_acc_hh_s1_Rt32
  M2_mpyu_acc_hl_s0_Rx32
  M2_mpyu_acc_hl_s0_Rs32
  M2_mpyu_acc_hl_s0_Rt32
  M2_mpyu_acc_hl_s1_Rx32
  M2_mpyu_acc_hl_s1_Rs32
  M2_mpyu_acc_hl_s1_Rt32
  M2_mpyu_acc_lh_s0_Rx32
  M2_mpyu_acc_lh_s0_Rs32
  M2_mpyu_acc_lh_s0_Rt32
  M2_mpyu_acc_lh_s1_Rx32
  M2_mpyu_acc_lh_s1_Rs32
  M2_mpyu_acc_lh_s1_Rt32
  M2_mpyu_acc_ll_s0_Rx32
  M2_mpyu_acc_ll_s0_Rs32
  M2_mpyu_acc_ll_s0_Rt32
  M2_mpyu_acc_ll_s1_Rx32
  M2_mpyu_acc_ll_s1_Rs32
  M2_mpyu_acc_ll_s1_Rt32
  M2_mpyu_nac_hh_s0_Rx32
  M2_mpyu_nac_hh_s0_Rs32
  M2_mpyu_nac_hh_s0_Rt32
  M2_mpyu_nac_hh_s1_Rx32
  M2_mpyu_nac_hh_s1_Rs32
  M2_mpyu_nac_hh_s1_Rt32
  M2_mpyu_nac_hl_s0_Rx32
  M2_mpyu_nac_hl_s0_Rs32
  M2_mpyu_nac_hl_s0_Rt32
  M2_mpyu_nac_hl_s1_Rx32
  M2_mpyu_nac_hl_s1_Rs32
  M2_mpyu_nac_hl_s1_Rt32
  M2_mpyu_nac_lh_s0_Rx32
  M2_mpyu_nac_lh_s0_Rs32
  M2_mpyu_nac_lh_s0_Rt32
  M2_mpyu_nac_lh_s1_Rx32
  M2_mpyu_nac_lh_s1_Rs32
  M2_mpyu_nac_lh_s1_Rt32
  M2_mpyu_nac_ll_s0_Rx32
  M2_mpyu_nac_ll_s0_Rs32
  M2_mpyu_nac_ll_s0_Rt32
  M2_mpyu_nac_ll_s1_Rx32
  M2_mpyu_nac_ll_s1_Rs32
  M2_mpyu_nac_ll_s1_Rt32
  M2_mpyu_hh_s0_Rd32
  M2_mpyu_hh_s0_Rs32
  M2_mpyu_hh_s0_Rt32
  M2_mpyu_hh_s1_Rd32
  M2_mpyu_hh_s1_Rs32
  M2_mpyu_hh_s1_Rt32
  M2_mpyu_hl_s0_Rd32
  M2_mpyu_hl_s0_Rs32
  M2_mpyu_hl_s0_Rt32
  M2_mpyu_hl_s1_Rd32
  M2_mpyu_hl_s1_Rs32
  M2_mpyu_hl_s1_Rt32
  M2_mpyu_lh_s0_Rd32
  M2_mpyu_lh_s0_Rs32
  M2_mpyu_lh_s0_Rt32
  M2_mpyu_lh_s1_Rd32
  M2_mpyu_lh_s1_Rs32
  M2_mpyu_lh_s1_Rt32
  M2_mpyu_ll_s0_Rd32
  M2_mpyu_ll_s0_Rs32
  M2_mpyu_ll_s0_Rt32
  M2_mpyu_ll_s1_Rd32
  M2_mpyu_ll_s1_Rs32
  M2_mpyu_ll_s1_Rt32
  M2_mpyud_acc_hh_s0_Rs32
  M2_mpyud_acc_hh_s0_Rt32
  M2_mpyud_acc_hh_s1_Rs32
  M2_mpyud_acc_hh_s1_Rt32
  M2_mpyud_acc_hl_s0_Rs32
  M2_mpyud_acc_hl_s0_Rt32
  M2_mpyud_acc_hl_s1_Rs32
  M2_mpyud_acc_hl_s1_Rt32
  M2_mpyud_acc_lh_s0_Rs32
  M2_mpyud_acc_lh_s0_Rt32
  M2_mpyud_acc_lh_s1_Rs32
  M2_mpyud_acc_lh_s1_Rt32
  M2_mpyud_acc_ll_s0_Rs32
  M2_mpyud_acc_ll_s0_Rt32
  M2_mpyud_acc_ll_s1_Rs32
  M2_mpyud_acc_ll_s1_Rt32
  M2_mpyud_nac_hh_s0_Rs32
  M2_mpyud_nac_hh_s0_Rt32
  M2_mpyud_nac_hh_s1_Rs32
  M2_mpyud_nac_hh_s1_Rt32
  M2_mpyud_nac_hl_s0_Rs32
  M2_mpyud_nac_hl_s0_Rt32
  M2_mpyud_nac_hl_s1_Rs32
  M2_mpyud_nac_hl_s1_Rt32
  M2_mpyud_nac_lh_s0_Rs32
  M2_mpyud_nac_lh_s0_Rt32
  M2_mpyud_nac_lh_s1_Rs32
  M2_mpyud_nac_lh_s1_Rt32
  M2_mpyud_nac_ll_s0_Rs32
  M2_mpyud_nac_ll_s0_Rt32
  M2_mpyud_nac_ll_s1_Rs32
  M2_mpyud_nac_ll_s1_Rt32
  M2_mpyud_hh_s0_Rs32
  M2_mpyud_hh_s0_Rt32
  M2_mpyud_hh_s1_Rs32
  M2_mpyud_hh_s1_Rt32
  M2_mpyud_hl_s0_Rs32
  M2_mpyud_hl_s0_Rt32
  M2_mpyud_hl_s1_Rs32
  M2_mpyud_hl_s1_Rt32
  M2_mpyud_lh_s0_Rs32
  M2_mpyud_lh_s0_Rt32
  M2_mpyud_lh_s1_Rs32
  M2_mpyud_lh_s1_Rt32
  M2_mpyud_ll_s0_Rs32
  M2_mpyud_ll_s0_Rt32
  M2_mpyud_ll_s1_Rs32
  M2_mpyud_ll_s1_Rt32
  M2_mpysip_Rd32
  M2_mpysip_Rs32
  M2_mpysin_Rd32
  M2_mpysin_Rs32
  M2_macsip_Rx32
  M2_macsip_Rs32
  M2_macsin_Rx32
  M2_macsin_Rs32
  M2_dpmpyss_s0_Rs32
  M2_dpmpyss_s0_Rt32
  M2_dpmpyss_acc_s0_Rs32
  M2_dpmpyss_acc_s0_Rt32
  M2_dpmpyss_nac_s0_Rs32
  M2_dpmpyss_nac_s0_Rt32
  M2_dpmpyuu_s0_Rs32
  M2_dpmpyuu_s0_Rt32
  M2_dpmpyuu_acc_s0_Rs32
  M2_dpmpyuu_acc_s0_Rt32
  M2_dpmpyuu_nac_s0_Rs32
  M2_dpmpyuu_nac_s0_Rt32
  M2_mpy_up_Rd32
  M2_mpy_up_Rs32
  M2_mpy_up_Rt32
  M2_mpy_up_s1_Rd32
  M2_mpy_up_s1_Rs32
  M2_mpy_up_s1_Rt32
  M2_mpy_up_s1_sat_Rd32
  M2_mpy_up_s1_sat_Rs32
  M2_mpy_up_s1_sat_Rt32
  M2_mpyu_up_Rd32
  M2_mpyu_up_Rs32
  M2_mpyu_up_Rt32
  M2_mpysu_up_Rd32
  M2_mpysu_up_Rs32
  M2_mpysu_up_Rt32
  M2_dpmpyss_rnd_s0_Rd32
  M2_dpmpyss_rnd_s0_Rs32
  M2_dpmpyss_rnd_s0_Rt32
  M4_mac_up_s1_sat_Rx32
  M4_mac_up_s1_sat_Rs32
  M4_mac_up_s1_sat_Rt32
  M4_nac_up_s1_sat_Rx32
  M4_nac_up_s1_sat_Rs32
  M4_nac_up_s1_sat_Rt32
  M2_mpyi_Rd32
  M2_mpyi_Rs32
  M2_mpyi_Rt32
  M2_maci_Rx32
  M2_maci_Rs32
  M2_maci_Rt32
  M2_mnaci_Rx32
  M2_mnaci_Rs32
  M2_mnaci_Rt32
  M2_acci_Rx32
  M2_acci_Rs32
  M2_acci_Rt32
  M2_accii_Rx32
  M2_accii_Rs32
  M2_nacci_Rx32
  M2_nacci_Rs32
  M2_nacci_Rt32
  M2_naccii_Rx32
  M2_naccii_Rs32
  M2_subacc_Rx32
  M2_subacc_Rt32
  M2_subacc_Rs32
  M4_mpyrr_addr_Ry32
  M4_mpyrr_addr_Ru32
  M4_mpyrr_addr_Rs32
  M4_mpyri_addr_u2_Rd32
  M4_mpyri_addr_u2_Ru32
  M4_mpyri_addr_u2_Rs32
  M4_mpyri_addr_Rd32
  M4_mpyri_addr_Ru32
  M4_mpyri_addr_Rs32
  M4_mpyri_addi_Rd32
  M4_mpyri_addi_Rs32
  M4_mpyrr_addi_Rd32
  M4_mpyrr_addi_Rs32
  M4_mpyrr_addi_Rt32
  M2_vmpy2s_s0_Rs32
  M2_vmpy2s_s0_Rt32
  M2_vmpy2s_s1_Rs32
  M2_vmpy2s_s1_Rt32
  M2_vmac2s_s0_Rs32
  M2_vmac2s_s0_Rt32
  M2_vmac2s_s1_Rs32
  M2_vmac2s_s1_Rt32
  M2_vmpy2su_s0_Rs32
  M2_vmpy2su_s0_Rt32
  M2_vmpy2su_s1_Rs32
  M2_vmpy2su_s1_Rt32
  M2_vmac2su_s0_Rs32
  M2_vmac2su_s0_Rt32
  M2_vmac2su_s1_Rs32
  M2_vmac2su_s1_Rt32
  M2_vmpy2s_s0pack_Rd32
  M2_vmpy2s_s0pack_Rs32
  M2_vmpy2s_s0pack_Rt32
  M2_vmpy2s_s1pack_Rd32
  M2_vmpy2s_s1pack_Rs32
  M2_vmpy2s_s1pack_Rt32
  M2_vmac2_Rs32
  M2_vmac2_Rt32
  M2_vdmpyrs_s0_Rd32
  M2_vdmpyrs_s1_Rd32
  M5_vmpybuu_Rs32
  M5_vmpybuu_Rt32
  M5_vmpybsu_Rs32
  M5_vmpybsu_Rt32
  M5_vmacbuu_Rs32
  M5_vmacbuu_Rt32
  M5_vmacbsu_Rs32
  M5_vmacbsu_Rt32
  M2_cmpyrs_s0_Rd32
  M2_cmpyrs_s0_Rs32
  M2_cmpyrs_s0_Rt32
  M2_cmpyrs_s1_Rd32
  M2_cmpyrs_s1_Rs32
  M2_cmpyrs_s1_Rt32
  M2_cmpyrsc_s0_Rd32
  M2_cmpyrsc_s0_Rs32
  M2_cmpyrsc_s0_Rt32
  M2_cmpyrsc_s1_Rd32
  M2_cmpyrsc_s1_Rs32
  M2_cmpyrsc_s1_Rt32
  M2_cmacs_s0_Rs32
  M2_cmacs_s0_Rt32
  M2_cmacs_s1_Rs32
  M2_cmacs_s1_Rt32
  M2_cmacsc_s0_Rs32
  M2_cmacsc_s0_Rt32
  M2_cmacsc_s1_Rs32
  M2_cmacsc_s1_Rt32
  M2_cmpys_s0_Rs32
  M2_cmpys_s0_Rt32
  M2_cmpys_s1_Rs32
  M2_cmpys_s1_Rt32
  M2_cmpysc_s0_Rs32
  M2_cmpysc_s0_Rt32
  M2_cmpysc_s1_Rs32
  M2_cmpysc_s1_Rt32
  M2_cnacs_s0_Rs32
  M2_cnacs_s0_Rt32
  M2_cnacs_s1_Rs32
  M2_cnacs_s1_Rt32
  M2_cnacsc_s0_Rs32
  M2_cnacsc_s0_Rt32
  M2_cnacsc_s1_Rs32
  M2_cnacsc_s1_Rt32
  M2_vrcmpys_s1rp_h_Rd32
  M2_vrcmpys_s1rp_l_Rd32
  M2_hmmpyl_rs1_Rd32
  M2_hmmpyl_rs1_Rs32
  M2_hmmpyl_rs1_Rt32
  M2_hmmpyh_rs1_Rd32
  M2_hmmpyh_rs1_Rs32
  M2_hmmpyh_rs1_Rt32
  M2_hmmpyl_s1_Rd32
  M2_hmmpyl_s1_Rs32
  M2_hmmpyl_s1_Rt32
  M2_hmmpyh_s1_Rd32
  M2_hmmpyh_s1_Rs32
  M2_hmmpyh_s1_Rt32
  M2_cmaci_s0_Rs32
  M2_cmaci_s0_Rt32
  M2_cmacr_s0_Rs32
  M2_cmacr_s0_Rt32
  M2_cmpyi_s0_Rs32
  M2_cmpyi_s0_Rt32
  M2_cmpyr_s0_Rs32
  M2_cmpyr_s0_Rt32
  M4_cmpyi_wh_Rd32
  M4_cmpyi_wh_Rt32
  M4_cmpyr_wh_Rd32
  M4_cmpyr_wh_Rt32
  M4_cmpyi_whc_Rd32
  M4_cmpyi_whc_Rt32
  M4_cmpyr_whc_Rd32
  M4_cmpyr_whc_Rt32
  S2_vcrotate_Rt32
  S4_vrcrotate_acc_Rt32
  S4_vrcrotate_Rt32
  S2_vcnegh_Rt32
  S2_vrcnegh_Rt32
  M4_pmpyw_Rs32
  M4_pmpyw_Rt32
  M4_vpmpyh_Rs32
  M4_vpmpyh_Rt32
  M4_pmpyw_acc_Rs32
  M4_pmpyw_acc_Rt32
  M4_vpmpyh_acc_Rs32
  M4_vpmpyh_acc_Rt32
  M7_wcmpyrw_Rd32
  M7_wcmpyrwc_Rd32
  M7_wcmpyiw_Rd32
  M7_wcmpyiwc_Rd32
  M7_wcmpyrw_rnd_Rd32
  M7_wcmpyrwc_rnd_Rd32
  M7_wcmpyiw_rnd_Rd32
  M7_wcmpyiwc_rnd_Rd32
  A2_add_Rd32
  A2_add_Rs32
  A2_add_Rt32
  A2_sub_Rd32
  A2_sub_Rt32
  A2_sub_Rs32
  A2_paddt_Rd32
  A2_paddt_Rs32
  A2_paddt_Rt32
  A2_paddf_Rd32
  A2_paddf_Rs32
  A2_paddf_Rt32
  A2_paddtnew_Rd32
  A2_paddtnew_Rs32
  A2_paddtnew_Rt32
  A2_paddfnew_Rd32
  A2_paddfnew_Rs32
  A2_paddfnew_Rt32
  A2_psubt_Rd32
  A2_psubt_Rt32
  A2_psubt_Rs32
  A2_psubf_Rd32
  A2_psubf_Rt32
  A2_psubf_Rs32
  A2_psubtnew_Rd32
  A2_psubtnew_Rt32
  A2_psubtnew_Rs32
  A2_psubfnew_Rd32
  A2_psubfnew_Rt32
  A2_psubfnew_Rs32
  A2_paddit_Rd32
  A2_paddit_Rs32
  A2_paddif_Rd32
  A2_paddif_Rs32
  A2_padditnew_Rd32
  A2_padditnew_Rs32
  A2_paddifnew_Rd32
  A2_paddifnew_Rs32
  A2_pxort_Rd32
  A2_pxort_Rs32
  A2_pxort_Rt32
  A2_pxorf_Rd32
  A2_pxorf_Rs32
  A2_pxorf_Rt32
  A2_pxortnew_Rd32
  A2_pxortnew_Rs32
  A2_pxortnew_Rt32
  A2_pxorfnew_Rd32
  A2_pxorfnew_Rs32
  A2_pxorfnew_Rt32
  A2_pandt_Rd32
  A2_pandt_Rs32
  A2_pandt_Rt32
  A2_pandf_Rd32
  A2_pandf_Rs32
  A2_pandf_Rt32
  A2_pandtnew_Rd32
  A2_pandtnew_Rs32
  A2_pandtnew_Rt32
  A2_pandfnew_Rd32
  A2_pandfnew_Rs32
  A2_pandfnew_Rt32
  A2_port_Rd32
  A2_port_Rs32
  A2_port_Rt32
  A2_porf_Rd32
  A2_porf_Rs32
  A2_porf_Rt32
  A2_portnew_Rd32
  A2_portnew_Rs32
  A2_portnew_Rt32
  A2_porfnew_Rd32
  A2_porfnew_Rs32
  A2_porfnew_Rt32
  A4_psxtbt_Rd32
  A4_psxtbt_Rs32
  A4_psxtbf_Rd32
  A4_psxtbf_Rs32
  A4_psxtbtnew_Rd32
  A4_psxtbtnew_Rs32
  A4_psxtbfnew_Rd32
  A4_psxtbfnew_Rs32
  A4_pzxtbt_Rd32
  A4_pzxtbt_Rs32
  A4_pzxtbf_Rd32
  A4_pzxtbf_Rs32
  A4_pzxtbtnew_Rd32
  A4_pzxtbtnew_Rs32
  A4_pzxtbfnew_Rd32
  A4_pzxtbfnew_Rs32
  A4_psxtht_Rd32
  A4_psxtht_Rs32
  A4_psxthf_Rd32
  A4_psxthf_Rs32
  A4_psxthtnew_Rd32
  A4_psxthtnew_Rs32
  A4_psxthfnew_Rd32
  A4_psxthfnew_Rs32
  A4_pzxtht_Rd32
  A4_pzxtht_Rs32
  A4_pzxthf_Rd32
  A4_pzxthf_Rs32
  A4_pzxthtnew_Rd32
  A4_pzxthtnew_Rs32
  A4_pzxthfnew_Rd32
  A4_pzxthfnew_Rs32
  A4_paslht_Rd32
  A4_paslht_Rs32
  A4_paslhf_Rd32
  A4_paslhf_Rs32
  A4_paslhtnew_Rd32
  A4_paslhtnew_Rs32
  A4_paslhfnew_Rd32
  A4_paslhfnew_Rs32
  A4_pasrht_Rd32
  A4_pasrht_Rs32
  A4_pasrhf_Rd32
  A4_pasrhf_Rs32
  A4_pasrhtnew_Rd32
  A4_pasrhtnew_Rs32
  A4_pasrhfnew_Rd32
  A4_pasrhfnew_Rs32
  A2_addsat_Rd32
  A2_addsat_Rs32
  A2_addsat_Rt32
  A2_subsat_Rd32
  A2_subsat_Rt32
  A2_subsat_Rs32
  A2_addi_Rd32
  A2_addi_Rs32
  C4_addipc_Rd32
  A2_addh_l16_ll_Rd32
  A2_addh_l16_ll_Rt32
  A2_addh_l16_ll_Rs32
  A2_addh_l16_hl_Rd32
  A2_addh_l16_hl_Rt32
  A2_addh_l16_hl_Rs32
  A2_addh_l16_sat_ll_Rd32
  A2_addh_l16_sat_ll_Rt32
  A2_addh_l16_sat_ll_Rs32
  A2_addh_l16_sat_hl_Rd32
  A2_addh_l16_sat_hl_Rt32
  A2_addh_l16_sat_hl_Rs32
  A2_subh_l16_ll_Rd32
  A2_subh_l16_ll_Rt32
  A2_subh_l16_ll_Rs32
  A2_subh_l16_hl_Rd32
  A2_subh_l16_hl_Rt32
  A2_subh_l16_hl_Rs32
  A2_subh_l16_sat_ll_Rd32
  A2_subh_l16_sat_ll_Rt32
  A2_subh_l16_sat_ll_Rs32
  A2_subh_l16_sat_hl_Rd32
  A2_subh_l16_sat_hl_Rt32
  A2_subh_l16_sat_hl_Rs32
  A2_addh_h16_ll_Rd32
  A2_addh_h16_ll_Rt32
  A2_addh_h16_ll_Rs32
  A2_addh_h16_lh_Rd32
  A2_addh_h16_lh_Rt32
  A2_addh_h16_lh_Rs32
  A2_addh_h16_hl_Rd32
  A2_addh_h16_hl_Rt32
  A2_addh_h16_hl_Rs32
  A2_addh_h16_hh_Rd32
  A2_addh_h16_hh_Rt32
  A2_addh_h16_hh_Rs32
  A2_addh_h16_sat_ll_Rd32
  A2_addh_h16_sat_ll_Rt32
  A2_addh_h16_sat_ll_Rs32
  A2_addh_h16_sat_lh_Rd32
  A2_addh_h16_sat_lh_Rt32
  A2_addh_h16_sat_lh_Rs32
  A2_addh_h16_sat_hl_Rd32
  A2_addh_h16_sat_hl_Rt32
  A2_addh_h16_sat_hl_Rs32
  A2_addh_h16_sat_hh_Rd32
  A2_addh_h16_sat_hh_Rt32
  A2_addh_h16_sat_hh_Rs32
  A2_subh_h16_ll_Rd32
  A2_subh_h16_ll_Rt32
  A2_subh_h16_ll_Rs32
  A2_subh_h16_lh_Rd32
  A2_subh_h16_lh_Rt32
  A2_subh_h16_lh_Rs32
  A2_subh_h16_hl_Rd32
  A2_subh_h16_hl_Rt32
  A2_subh_h16_hl_Rs32
  A2_subh_h16_hh_Rd32
  A2_subh_h16_hh_Rt32
  A2_subh_h16_hh_Rs32
  A2_subh_h16_sat_ll_Rd32
  A2_subh_h16_sat_ll_Rt32
  A2_subh_h16_sat_ll_Rs32
  A2_subh_h16_sat_lh_Rd32
  A2_subh_h16_sat_lh_Rt32
  A2_subh_h16_sat_lh_Rs32
  A2_subh_h16_sat_hl_Rd32
  A2_subh_h16_sat_hl_Rt32
  A2_subh_h16_sat_hl_Rs32
  A2_subh_h16_sat_hh_Rd32
  A2_subh_h16_sat_hh_Rt32
  A2_subh_h16_sat_hh_Rs32
  A2_aslh_Rd32
  A2_aslh_Rs32
  A2_asrh_Rd32
  A2_asrh_Rs32
  A2_negsat_Rd32
  A2_negsat_Rs32
  A2_abs_Rd32
  A2_abs_Rs32
  A2_abssat_Rd32
  A2_abssat_Rs32
  A2_max_Rd32
  A2_max_Rs32
  A2_max_Rt32
  A2_maxu_Rd32
  A2_maxu_Rs32
  A2_maxu_Rt32
  A2_min_Rd32
  A2_min_Rt32
  A2_min_Rs32
  A2_minu_Rd32
  A2_minu_Rt32
  A2_minu_Rs32
  A2_tfr_Rd32
  A2_tfr_Rs32
  A2_tfrsi_Rd32
  A2_sxtb_Rd32
  A2_sxtb_Rs32
  A2_zxth_Rd32
  A2_zxth_Rs32
  A2_sxth_Rd32
  A2_sxth_Rs32
  A2_combinew_Rs32
  A2_combinew_Rt32
  A4_combineri_Rs32
  A4_combineir_Rs32
  A2_combine_hh_Rd32
  A2_combine_hh_Rt32
  A2_combine_hh_Rs32
  A2_combine_hl_Rd32
  A2_combine_hl_Rt32
  A2_combine_hl_Rs32
  A2_combine_lh_Rd32
  A2_combine_lh_Rt32
  A2_combine_lh_Rs32
  A2_combine_ll_Rd32
  A2_combine_ll_Rt32
  A2_combine_ll_Rs32
  A2_tfril_Rx32
  A2_tfrih_Rx32
  A2_tfrcrr_Rd32
  A2_tfrrcr_Rs32
  A2_and_Rd32
  A2_and_Rs32
  A2_and_Rt32
  A2_or_Rd32
  A2_or_Rs32
  A2_or_Rt32
  A2_xor_Rd32
  A2_xor_Rs32
  A2_xor_Rt32
  M2_xor_xacc_Rx32
  M2_xor_xacc_Rs32
  M2_xor_xacc_Rt32
  A4_andn_Rd32
  A4_andn_Rt32
  A4_andn_Rs32
  A4_orn_Rd32
  A4_orn_Rt32
  A4_orn_Rs32
  S4_addaddi_Rd32
  S4_addaddi_Rs32
  S4_addaddi_Ru32
  S4_subaddi_Rd32
  S4_subaddi_Rs32
  S4_subaddi_Ru32
  M4_and_and_Rx32
  M4_and_and_Rs32
  M4_and_and_Rt32
  M4_and_andn_Rx32
  M4_and_andn_Rs32
  M4_and_andn_Rt32
  M4_and_or_Rx32
  M4_and_or_Rs32
  M4_and_or_Rt32
  M4_and_xor_Rx32
  M4_and_xor_Rs32
  M4_and_xor_Rt32
  M4_or_and_Rx32
  M4_or_and_Rs32
  M4_or_and_Rt32
  M4_or_andn_Rx32
  M4_or_andn_Rs32
  M4_or_andn_Rt32
  M4_or_or_Rx32
  M4_or_or_Rs32
  M4_or_or_Rt32
  M4_or_xor_Rx32
  M4_or_xor_Rs32
  M4_or_xor_Rt32
  S4_or_andix_Rx32
  S4_or_andix_Ru32
  S4_or_andi_Rx32
  S4_or_andi_Rs32
  S4_or_ori_Rx32
  S4_or_ori_Rs32
  M4_xor_and_Rx32
  M4_xor_and_Rs32
  M4_xor_and_Rt32
  M4_xor_or_Rx32
  M4_xor_or_Rs32
  M4_xor_or_Rt32
  M4_xor_andn_Rx32
  M4_xor_andn_Rs32
  M4_xor_andn_Rt32
  A2_subri_Rd32
  A2_subri_Rs32
  A2_andir_Rd32
  A2_andir_Rs32
  A2_orir_Rd32
  A2_orir_Rs32
  A2_sxtw_Rs32
  A2_sat_Rd32
  A2_roundsat_Rd32
  A2_sath_Rd32
  A2_sath_Rs32
  A2_satuh_Rd32
  A2_satuh_Rs32
  A2_satub_Rd32
  A2_satub_Rs32
  A2_satb_Rd32
  A2_satb_Rs32
  A5_vaddhubs_Rd32
  A2_svavgh_Rd32
  A2_svavgh_Rs32
  A2_svavgh_Rt32
  A2_svavghs_Rd32
  A2_svavghs_Rs32
  A2_svavghs_Rt32
  A2_svnavgh_Rd32
  A2_svnavgh_Rt32
  A2_svnavgh_Rs32
  A2_svaddh_Rd32
  A2_svaddh_Rs32
  A2_svaddh_Rt32
  A2_svaddhs_Rd32
  A2_svaddhs_Rs32
  A2_svaddhs_Rt32
  A2_svadduhs_Rd32
  A2_svadduhs_Rs32
  A2_svadduhs_Rt32
  A2_svsubh_Rd32
  A2_svsubh_Rt32
  A2_svsubh_Rs32
  A2_svsubhs_Rd32
  A2_svsubhs_Rt32
  A2_svsubhs_Rs32
  A2_svsubuhs_Rd32
  A2_svsubuhs_Rt32
  A2_svsubuhs_Rs32
  M2_vraddh_Rd32
  M2_vradduh_Rd32
  A4_round_ri_Rd32
  A4_round_ri_Rs32
  A4_round_rr_Rd32
  A4_round_rr_Rs32
  A4_round_rr_Rt32
  A4_round_ri_sat_Rd32
  A4_round_ri_sat_Rs32
  A4_round_rr_sat_Rd32
  A4_round_rr_sat_Rs32
  A4_round_rr_sat_Rt32
  A4_cround_ri_Rd32
  A4_cround_ri_Rs32
  A4_cround_rr_Rd32
  A4_cround_rr_Rs32
  A4_cround_rr_Rt32
  A7_croundd_rr_Rt32
  A7_clip_Rd32
  A7_clip_Rs32
  A4_vrminh_Ru32
  A4_vrmaxh_Ru32
  A4_vrminuh_Ru32
  A4_vrmaxuh_Ru32
  A4_vrminw_Ru32
  A4_vrmaxw_Ru32
  A4_vrminuw_Ru32
  A4_vrmaxuw_Ru32
  A4_modwrapu_Rd32
  A4_modwrapu_Rs32
  A4_modwrapu_Rt32
  F2_sfadd_Rd32
  F2_sfadd_Rs32
  F2_sfadd_Rt32
  F2_sfsub_Rd32
  F2_sfsub_Rs32
  F2_sfsub_Rt32
  F2_sfmpy_Rd32
  F2_sfmpy_Rs32
  F2_sfmpy_Rt32
  F2_sffma_Rx32
  F2_sffma_Rs32
  F2_sffma_Rt32
  F2_sffma_sc_Rx32
  F2_sffma_sc_Rs32
  F2_sffma_sc_Rt32
  F2_sffms_Rx32
  F2_sffms_Rs32
  F2_sffms_Rt32
  F2_sffma_lib_Rx32
  F2_sffma_lib_Rs32
  F2_sffma_lib_Rt32
  F2_sffms_lib_Rx32
  F2_sffms_lib_Rs32
  F2_sffms_lib_Rt32
  F2_sfcmpeq_Rs32
  F2_sfcmpeq_Rt32
  F2_sfcmpgt_Rs32
  F2_sfcmpgt_Rt32
  F2_sfcmpge_Rs32
  F2_sfcmpge_Rt32
  F2_sfcmpuo_Rs32
  F2_sfcmpuo_Rt32
  F2_sfmax_Rd32
  F2_sfmax_Rs32
  F2_sfmax_Rt32
  F2_sfmin_Rd32
  F2_sfmin_Rs32
  F2_sfmin_Rt32
  F2_sfclass_Rs32
  F2_sfimm_p_Rd32
  F2_sfimm_n_Rd32
  F2_sfrecipa_Rd32
  F2_sfrecipa_Rs32
  F2_sfrecipa_Rt32
  F2_sffixupn_Rd32
  F2_sffixupn_Rs32
  F2_sffixupn_Rt32
  F2_sffixupd_Rd32
  F2_sffixupd_Rs32
  F2_sffixupd_Rt32
  F2_sfinvsqrta_Rd32
  F2_sfinvsqrta_Rs32
  F2_sffixupr_Rd32
  F2_sffixupr_Rs32
  F2_conv_sf2df_Rs32
  F2_conv_df2sf_Rd32
  F2_conv_uw2sf_Rd32
  F2_conv_uw2sf_Rs32
  F2_conv_uw2df_Rs32
  F2_conv_w2sf_Rd32
  F2_conv_w2sf_Rs32
  F2_conv_w2df_Rs32
  F2_conv_ud2sf_Rd32
  F2_conv_d2sf_Rd32
  F2_conv_sf2uw_Rd32
  F2_conv_sf2uw_Rs32
  F2_conv_sf2w_Rd32
  F2_conv_sf2w_Rs32
  F2_conv_sf2ud_Rs32
  F2_conv_sf2d_Rs32
  F2_conv_df2uw_Rd32
  F2_conv_df2w_Rd32
  F2_conv_sf2uw_chop_Rd32
  F2_conv_sf2uw_chop_Rs32
  F2_conv_sf2w_chop_Rd32
  F2_conv_sf2w_chop_Rs32
  F2_conv_sf2ud_chop_Rs32
  F2_conv_sf2d_chop_Rs32
  F2_conv_df2uw_chop_Rd32
  F2_conv_df2w_chop_Rd32
  S2_asr_r_r_Rd32
  S2_asr_r_r_Rs32
  S2_asr_r_r_Rt32
  S2_asl_r_r_Rd32
  S2_asl_r_r_Rs32
  S2_asl_r_r_Rt32
  S2_lsr_r_r_Rd32
  S2_lsr_r_r_Rs32
  S2_lsr_r_r_Rt32
  S2_lsl_r_r_Rd32
  S2_lsl_r_r_Rs32
  S2_lsl_r_r_Rt32
  S2_asr_r_p_Rt32
  S2_asl_r_p_Rt32
  S2_lsr_r_p_Rt32
  S2_lsl_r_p_Rt32
  S2_asr_r_r_acc_Rx32
  S2_asr_r_r_acc_Rs32
  S2_asr_r_r_acc_Rt32
  S2_asl_r_r_acc_Rx32
  S2_asl_r_r_acc_Rs32
  S2_asl_r_r_acc_Rt32
  S2_lsr_r_r_acc_Rx32
  S2_lsr_r_r_acc_Rs32
  S2_lsr_r_r_acc_Rt32
  S2_lsl_r_r_acc_Rx32
  S2_lsl_r_r_acc_Rs32
  S2_lsl_r_r_acc_Rt32
  S2_asr_r_p_acc_Rt32
  S2_asl_r_p_acc_Rt32
  S2_lsr_r_p_acc_Rt32
  S2_lsl_r_p_acc_Rt32
  S2_asr_r_r_nac_Rx32
  S2_asr_r_r_nac_Rs32
  S2_asr_r_r_nac_Rt32
  S2_asl_r_r_nac_Rx32
  S2_asl_r_r_nac_Rs32
  S2_asl_r_r_nac_Rt32
  S2_lsr_r_r_nac_Rx32
  S2_lsr_r_r_nac_Rs32
  S2_lsr_r_r_nac_Rt32
  S2_lsl_r_r_nac_Rx32
  S2_lsl_r_r_nac_Rs32
  S2_lsl_r_r_nac_Rt32
  S2_asr_r_p_nac_Rt32
  S2_asl_r_p_nac_Rt32
  S2_lsr_r_p_nac_Rt32
  S2_lsl_r_p_nac_Rt32
  S2_asr_r_r_and_Rx32
  S2_asr_r_r_and_Rs32
  S2_asr_r_r_and_Rt32
  S2_asl_r_r_and_Rx32
  S2_asl_r_r_and_Rs32
  S2_asl_r_r_and_Rt32
  S2_lsr_r_r_and_Rx32
  S2_lsr_r_r_and_Rs32
  S2_lsr_r_r_and_Rt32
  S2_lsl_r_r_and_Rx32
  S2_lsl_r_r_and_Rs32
  S2_lsl_r_r_and_Rt32
  S2_asr_r_r_or_Rx32
  S2_asr_r_r_or_Rs32
  S2_asr_r_r_or_Rt32
  S2_asl_r_r_or_Rx32
  S2_asl_r_r_or_Rs32
  S2_asl_r_r_or_Rt32
  S2_lsr_r_r_or_Rx32
  S2_lsr_r_r_or_Rs32
  S2_lsr_r_r_or_Rt32
  S2_lsl_r_r_or_Rx32
  S2_lsl_r_r_or_Rs32
  S2_lsl_r_r_or_Rt32
  S2_asr_r_p_and_Rt32
  S2_asl_r_p_and_Rt32
  S2_lsr_r_p_and_Rt32
  S2_lsl_r_p_and_Rt32
  S2_asr_r_p_or_Rt32
  S2_asl_r_p_or_Rt32
  S2_lsr_r_p_or_Rt32
  S2_lsl_r_p_or_Rt32
  S2_asr_r_p_xor_Rt32
  S2_asl_r_p_xor_Rt32
  S2_lsr_r_p_xor_Rt32
  S2_lsl_r_p_xor_Rt32
  S2_asr_r_r_sat_Rd32
  S2_asr_r_r_sat_Rs32
  S2_asr_r_r_sat_Rt32
  S2_asl_r_r_sat_Rd32
  S2_asl_r_r_sat_Rs32
  S2_asl_r_r_sat_Rt32
  S2_asr_i_r_Rd32
  S2_asr_i_r_Rs32
  S2_lsr_i_r_Rd32
  S2_lsr_i_r_Rs32
  S2_asl_i_r_Rd32
  S2_asl_i_r_Rs32
  S6_rol_i_r_Rd32
  S6_rol_i_r_Rs32
  S2_asr_i_r_acc_Rx32
  S2_asr_i_r_acc_Rs32
  S2_lsr_i_r_acc_Rx32
  S2_lsr_i_r_acc_Rs32
  S2_asl_i_r_acc_Rx32
  S2_asl_i_r_acc_Rs32
  S6_rol_i_r_acc_Rx32
  S6_rol_i_r_acc_Rs32
  S2_asr_i_r_nac_Rx32
  S2_asr_i_r_nac_Rs32
  S2_lsr_i_r_nac_Rx32
  S2_lsr_i_r_nac_Rs32
  S2_asl_i_r_nac_Rx32
  S2_asl_i_r_nac_Rs32
  S6_rol_i_r_nac_Rx32
  S6_rol_i_r_nac_Rs32
  S2_lsr_i_r_xacc_Rx32
  S2_lsr_i_r_xacc_Rs32
  S2_asl_i_r_xacc_Rx32
  S2_asl_i_r_xacc_Rs32
  S6_rol_i_r_xacc_Rx32
  S6_rol_i_r_xacc_Rs32
  S2_asr_i_r_and_Rx32
  S2_asr_i_r_and_Rs32
  S2_lsr_i_r_and_Rx32
  S2_lsr_i_r_and_Rs32
  S2_asl_i_r_and_Rx32
  S2_asl_i_r_and_Rs32
  S6_rol_i_r_and_Rx32
  S6_rol_i_r_and_Rs32
  S2_asr_i_r_or_Rx32
  S2_asr_i_r_or_Rs32
  S2_lsr_i_r_or_Rx32
  S2_lsr_i_r_or_Rs32
  S2_asl_i_r_or_Rx32
  S2_asl_i_r_or_Rs32
  S6_rol_i_r_or_Rx32
  S6_rol_i_r_or_Rs32
  S2_asl_i_r_sat_Rd32
  S2_asl_i_r_sat_Rs32
  S2_asr_i_r_rnd_Rd32
  S2_asr_i_r_rnd_Rs32
  S4_lsli_Rd32
  S4_lsli_Rt32
  S2_addasl_rrri_Rd32
  S2_addasl_rrri_Rt32
  S2_addasl_rrri_Rs32
  S4_andi_asl_ri_Rx32
  S4_ori_asl_ri_Rx32
  S4_addi_asl_ri_Rx32
  S4_subi_asl_ri_Rx32
  S4_andi_lsr_ri_Rx32
  S4_ori_lsr_ri_Rx32
  S4_addi_lsr_ri_Rx32
  S4_subi_lsr_ri_Rx32
  S2_vsplatrh_Rs32
  S2_vsplatrb_Rd32
  S2_vsplatrb_Rs32
  S6_vsplatrbp_Rs32
  S2_insert_Rx32
  S2_insert_Rs32
  S2_tableidxb_Rx32
  S2_tableidxb_Rs32
  S2_tableidxh_Rx32
  S2_tableidxh_Rs32
  S2_tableidxw_Rx32
  S2_tableidxw_Rs32
  S2_tableidxd_Rx32
  S2_tableidxd_Rs32
  A4_bitspliti_Rs32
  A4_bitsplit_Rs32
  A4_bitsplit_Rt32
  S4_extract_Rd32
  S4_extract_Rs32
  S2_extractu_Rd32
  S2_extractu_Rs32
  S2_mask_Rd32
  S2_insert_rp_Rx32
  S2_insert_rp_Rs32
  S4_extract_rp_Rd32
  S4_extract_rp_Rs32
  S2_extractu_rp_Rd32
  S2_extractu_rp_Rs32
  S2_tstbit_i_Rs32
  S4_ntstbit_i_Rs32
  S2_setbit_i_Rd32
  S2_setbit_i_Rs32
  S2_togglebit_i_Rd32
  S2_togglebit_i_Rs32
  S2_clrbit_i_Rd32
  S2_clrbit_i_Rs32
  S2_tstbit_r_Rs32
  S2_tstbit_r_Rt32
  S4_ntstbit_r_Rs32
  S4_ntstbit_r_Rt32
  S2_setbit_r_Rd32
  S2_setbit_r_Rs32
  S2_setbit_r_Rt32
  S2_togglebit_r_Rd32
  S2_togglebit_r_Rs32
  S2_togglebit_r_Rt32
  S2_clrbit_r_Rd32
  S2_clrbit_r_Rs32
  S2_clrbit_r_Rt32
  S2_asr_r_vh_Rt32
  S5_asrhub_rnd_sat_Rd32
  S5_asrhub_sat_Rd32
  S2_asl_r_vh_Rt32
  S2_lsr_r_vh_Rt32
  S2_lsl_r_vh_Rt32
  S2_asr_i_svw_trun_Rd32
  S2_asr_r_svw_trun_Rd32
  S2_asr_r_svw_trun_Rt32
  S2_asr_r_vw_Rt32
  S2_asl_r_vw_Rt32
  S2_lsr_r_vw_Rt32
  S2_lsl_r_vw_Rt32
  S2_vrndpackwh_Rd32
  S2_vrndpackwhs_Rd32
  S2_vsxtbh_Rs32
  S2_vzxtbh_Rs32
  S2_vsathub_Rd32
  S2_svsathub_Rd32
  S2_svsathub_Rs32
  S2_svsathb_Rd32
  S2_svsathb_Rs32
  S2_vsathb_Rd32
  S2_vtrunohb_Rd32
  S2_vtrunehb_Rd32
  S2_vsxthw_Rs32
  S2_vzxthw_Rs32
  S2_vsatwh_Rd32
  S2_vsatwuh_Rd32
  S2_packhl_Rs32
  S2_packhl_Rt32
  A2_swiz_Rd32
  A2_swiz_Rs32
  S5_popcountp_Rd32
  S4_parity_Rd32
  S4_parity_Rs32
  S4_parity_Rt32
  S2_parityp_Rd32
  S2_clbnorm_Rd32
  S2_clbnorm_Rs32
  S4_clbaddi_Rd32
  S4_clbaddi_Rs32
  S4_clbpnorm_Rd32
  S4_clbpaddi_Rd32
  S2_clb_Rd32
  S2_clb_Rs32
  S2_cl0_Rd32
  S2_cl0_Rs32
  S2_cl1_Rd32
  S2_cl1_Rs32
  S2_clbp_Rd32
  S2_cl0p_Rd32
  S2_cl1p_Rd32
  S2_brev_Rd32
  S2_brev_Rs32
  S2_ct0_Rd32
  S2_ct0_Rs32
  S2_ct1_Rd32
  S2_ct1_Rs32
  S2_ct0p_Rd32
  S2_ct1p_Rd32
  J2_trap1_Rx32
  Y2_swi_Rs32
  Y2_cswi_Rs32
  Y2_ciad_Rs32
  Y4_siad_Rs32
  Y2_iassignr_Rd32
  Y2_iassignr_Rs32
  Y2_iassignw_Rs32
  Y2_getimask_Rd32
  Y2_getimask_Rs32
  Y2_setimask_Rs32
  Y2_tlbw_Rt32
  Y5_ctlbw_Rd32
  Y5_ctlbw_Rt32
  Y5_tlboc_Rd32
  Y2_tlbr_Rs32
  Y2_tlbp_Rd32
  Y2_tlbp_Rs32
  Y5_tlbasidi_Rs32
  Y2_crswap0_Rx32
  Y4_crswap1_Rx32
  Y2_tfrscrr_Rd32
  Y2_tfrsrcr_Rs32
  G4_tfrgcrr_Rd32
  G4_tfrgrcr_Rs32
  Y2_setprio_Rs32
  Y6_diag_Rs32
  Y4_trace_Rs32
  Y2_stop_Rs32
  Y4_nmi_Rs32
  Y2_start_Rs32
  Y2_wait_Rs32
  Y2_resume_Rs32
  Y2_ictagr_Rd32
  Y2_ictagr_Rs32
  Y2_ictagw_Rs32
  Y2_ictagw_Rt32
  Y2_icdataw_Rs32
  Y2_icdataw_Rt32
  Y2_icdatar_Rd32
  Y2_icdatar_Rs32
  Y2_icinva_Rs32
  Y2_icinvidx_Rs32
  Y2_dcfetchbo_Rs32
  Y2_dczeroa_Rs32
  Y2_dccleana_Rs32
  Y2_dccleanidx_Rs32
  Y2_dccleaninva_Rs32
  Y2_dccleaninvidx_Rs32
  Y2_dcinva_Rs32
  Y2_dcinvidx_Rs32
  Y2_dctagr_Rd32
  Y2_dctagr_Rs32
  Y2_dctagw_Rs32
  Y2_dctagw_Rt32
  Y4_l2tagw_Rs32
  Y4_l2tagw_Rt32
  Y4_l2tagr_Rd32
  Y4_l2tagr_Rs32
  Y2_l2cleaninvidx_Rs32
  Y5_l2cleanidx_Rs32
  Y5_l2invidx_Rs32
  Y4_l2fetch_Rs32
  Y4_l2fetch_Rt32
  Y5_l2fetch_Rs32
  Y5_l2locka_Rs32
  Y5_l2unlocka_Rs32
] [
  R0  R1  R2  R3  R4  R5  R6  R7
  R8  R9  R10 R11 R12 R13 R14 R15
  R16 R17 R18 R19 R20 R21 R22 R23
  R24 R25 R26 R27 R28 R29 R30 R31
];

attach variables [
  L2_loadrd_io_Rdd32
  L4_loadrd_ur_Rdd32
  L4_loadrd_ap_Rdd32
  L2_loadrd_pr_Rdd32
  L2_loadrd_pbr_Rdd32
  L2_loadrd_pi_Rdd32
  L2_loadrd_pci_Rdd32
  L2_loadrd_pcr_Rdd32
  L2_loadbzw4_io_Rdd32
  L4_loadbzw4_ur_Rdd32
  L4_loadbzw4_ap_Rdd32
  L2_loadbzw4_pr_Rdd32
  L2_loadbzw4_pbr_Rdd32
  L2_loadbzw4_pi_Rdd32
  L2_loadbzw4_pci_Rdd32
  L2_loadbzw4_pcr_Rdd32
  L2_loadbsw4_io_Rdd32
  L4_loadbsw4_ur_Rdd32
  L4_loadbsw4_ap_Rdd32
  L2_loadbsw4_pr_Rdd32
  L2_loadbsw4_pbr_Rdd32
  L2_loadbsw4_pi_Rdd32
  L2_loadbsw4_pci_Rdd32
  L2_loadbsw4_pcr_Rdd32
  L2_loadalignh_io_Ryy32
  L4_loadalignh_ur_Ryy32
  L4_loadalignh_ap_Ryy32
  L2_loadalignh_pr_Ryy32
  L2_loadalignh_pbr_Ryy32
  L2_loadalignh_pi_Ryy32
  L2_loadalignh_pci_Ryy32
  L2_loadalignh_pcr_Ryy32
  L2_loadalignb_io_Ryy32
  L4_loadalignb_ur_Ryy32
  L4_loadalignb_ap_Ryy32
  L2_loadalignb_pr_Ryy32
  L2_loadalignb_pbr_Ryy32
  L2_loadalignb_pi_Ryy32
  L2_loadalignb_pci_Ryy32
  L2_loadalignb_pcr_Ryy32
  S2_storerd_io_Rtt32
  S2_storerd_pi_Rtt32
  S4_storerd_ap_Rtt32
  S2_storerd_pr_Rtt32
  S4_storerd_ur_Rtt32
  S2_storerd_pbr_Rtt32
  S2_storerd_pci_Rtt32
  S2_storerd_pcr_Rtt32
  L2_deallocframe_Rdd32
  L4_return_Rdd32
  L4_return_t_Rdd32
  L4_return_f_Rdd32
  L4_return_tnew_pt_Rdd32
  L4_return_fnew_pt_Rdd32
  L4_return_tnew_pnt_Rdd32
  L4_return_fnew_pnt_Rdd32
  L4_loadd_locked_Rdd32
  S4_stored_locked_Rtt32
  L4_loadrd_rr_Rdd32
  L2_ploadrdt_io_Rdd32
  L2_ploadrdt_pi_Rdd32
  L2_ploadrdf_io_Rdd32
  L2_ploadrdf_pi_Rdd32
  L2_ploadrdtnew_io_Rdd32
  L2_ploadrdfnew_io_Rdd32
  L4_ploadrdt_rr_Rdd32
  L4_ploadrdf_rr_Rdd32
  L4_ploadrdtnew_rr_Rdd32
  L4_ploadrdfnew_rr_Rdd32
  L2_ploadrdtnew_pi_Rdd32
  L2_ploadrdfnew_pi_Rdd32
  L4_ploadrdt_abs_Rdd32
  L4_ploadrdf_abs_Rdd32
  L4_ploadrdtnew_abs_Rdd32
  L4_ploadrdfnew_abs_Rdd32
  S4_storerd_rr_Rtt32
  S2_pstorerdt_io_Rtt32
  S2_pstorerdt_pi_Rtt32
  S2_pstorerdf_io_Rtt32
  S2_pstorerdf_pi_Rtt32
  S4_pstorerdt_rr_Rtt32
  S4_pstorerdf_rr_Rtt32
  S4_pstorerdtnew_io_Rtt32
  S4_pstorerdfnew_io_Rtt32
  S4_pstorerdtnew_rr_Rtt32
  S4_pstorerdfnew_rr_Rtt32
  S2_pstorerdtnew_pi_Rtt32
  S2_pstorerdfnew_pi_Rtt32
  S4_pstorerdt_abs_Rtt32
  S4_pstorerdf_abs_Rtt32
  S4_pstorerdtnew_abs_Rtt32
  S4_pstorerdfnew_abs_Rtt32
  L2_loadrdgp_Rdd32
  S2_storerdgp_Rtt32
  C2_cmpeqp_Rss32
  C2_cmpeqp_Rtt32
  C2_cmpgtp_Rss32
  C2_cmpgtp_Rtt32
  C2_cmpgtup_Rss32
  C2_cmpgtup_Rtt32
  C2_ccombinewnewt_Rdd32
  C2_ccombinewnewf_Rdd32
  C2_ccombinewt_Rdd32
  C2_ccombinewf_Rdd32
  C2_vmux_Rdd32
  C2_vmux_Rss32
  C2_vmux_Rtt32
  C2_mask_Rdd32
  A2_vcmpbeq_Rss32
  A2_vcmpbeq_Rtt32
  A4_vcmpbeqi_Rss32
  A4_vcmpbeq_any_Rss32
  A4_vcmpbeq_any_Rtt32
  A6_vcmpbeq_notany_Rss32
  A6_vcmpbeq_notany_Rtt32
  A2_vcmpbgtu_Rss32
  A2_vcmpbgtu_Rtt32
  A4_vcmpbgtui_Rss32
  A4_vcmpbgt_Rss32
  A4_vcmpbgt_Rtt32
  A4_vcmpbgti_Rss32
  A2_vcmpheq_Rss32
  A2_vcmpheq_Rtt32
  A2_vcmphgt_Rss32
  A2_vcmphgt_Rtt32
  A2_vcmphgtu_Rss32
  A2_vcmphgtu_Rtt32
  A4_vcmpheqi_Rss32
  A4_vcmphgti_Rss32
  A4_vcmphgtui_Rss32
  A2_vcmpweq_Rss32
  A2_vcmpweq_Rtt32
  A2_vcmpwgt_Rss32
  A2_vcmpwgt_Rtt32
  A2_vcmpwgtu_Rss32
  A2_vcmpwgtu_Rtt32
  A4_vcmpweqi_Rss32
  A4_vcmpwgti_Rss32
  A4_vcmpwgtui_Rss32
  A4_boundscheck_hi_Rss32
  A4_boundscheck_hi_Rtt32
  A4_boundscheck_lo_Rss32
  A4_boundscheck_lo_Rtt32
  A4_tlbmatch_Rss32
  M2_mpyd_acc_hh_s0_Rxx32
  M2_mpyd_acc_hh_s1_Rxx32
  M2_mpyd_acc_hl_s0_Rxx32
  M2_mpyd_acc_hl_s1_Rxx32
  M2_mpyd_acc_lh_s0_Rxx32
  M2_mpyd_acc_lh_s1_Rxx32
  M2_mpyd_acc_ll_s0_Rxx32
  M2_mpyd_acc_ll_s1_Rxx32
  M2_mpyd_nac_hh_s0_Rxx32
  M2_mpyd_nac_hh_s1_Rxx32
  M2_mpyd_nac_hl_s0_Rxx32
  M2_mpyd_nac_hl_s1_Rxx32
  M2_mpyd_nac_lh_s0_Rxx32
  M2_mpyd_nac_lh_s1_Rxx32
  M2_mpyd_nac_ll_s0_Rxx32
  M2_mpyd_nac_ll_s1_Rxx32
  M2_mpyd_hh_s0_Rdd32
  M2_mpyd_hh_s1_Rdd32
  M2_mpyd_hl_s0_Rdd32
  M2_mpyd_hl_s1_Rdd32
  M2_mpyd_lh_s0_Rdd32
  M2_mpyd_lh_s1_Rdd32
  M2_mpyd_ll_s0_Rdd32
  M2_mpyd_ll_s1_Rdd32
  M2_mpyd_rnd_hh_s0_Rdd32
  M2_mpyd_rnd_hh_s1_Rdd32
  M2_mpyd_rnd_hl_s0_Rdd32
  M2_mpyd_rnd_hl_s1_Rdd32
  M2_mpyd_rnd_lh_s0_Rdd32
  M2_mpyd_rnd_lh_s1_Rdd32
  M2_mpyd_rnd_ll_s0_Rdd32
  M2_mpyd_rnd_ll_s1_Rdd32
  M2_mpyud_acc_hh_s0_Rxx32
  M2_mpyud_acc_hh_s1_Rxx32
  M2_mpyud_acc_hl_s0_Rxx32
  M2_mpyud_acc_hl_s1_Rxx32
  M2_mpyud_acc_lh_s0_Rxx32
  M2_mpyud_acc_lh_s1_Rxx32
  M2_mpyud_acc_ll_s0_Rxx32
  M2_mpyud_acc_ll_s1_Rxx32
  M2_mpyud_nac_hh_s0_Rxx32
  M2_mpyud_nac_hh_s1_Rxx32
  M2_mpyud_nac_hl_s0_Rxx32
  M2_mpyud_nac_hl_s1_Rxx32
  M2_mpyud_nac_lh_s0_Rxx32
  M2_mpyud_nac_lh_s1_Rxx32
  M2_mpyud_nac_ll_s0_Rxx32
  M2_mpyud_nac_ll_s1_Rxx32
  M2_mpyud_hh_s0_Rdd32
  M2_mpyud_hh_s1_Rdd32
  M2_mpyud_hl_s0_Rdd32
  M2_mpyud_hl_s1_Rdd32
  M2_mpyud_lh_s0_Rdd32
  M2_mpyud_lh_s1_Rdd32
  M2_mpyud_ll_s0_Rdd32
  M2_mpyud_ll_s1_Rdd32
  M2_dpmpyss_s0_Rdd32
  M2_dpmpyss_acc_s0_Rxx32
  M2_dpmpyss_nac_s0_Rxx32
  M2_dpmpyuu_s0_Rdd32
  M2_dpmpyuu_acc_s0_Rxx32
  M2_dpmpyuu_nac_s0_Rxx32
  M2_vmpy2s_s0_Rdd32
  M2_vmpy2s_s1_Rdd32
  M2_vmac2s_s0_Rxx32
  M2_vmac2s_s1_Rxx32
  M2_vmpy2su_s0_Rdd32
  M2_vmpy2su_s1_Rdd32
  M2_vmac2su_s0_Rxx32
  M2_vmac2su_s1_Rxx32
  M2_vmac2_Rxx32
  M2_vmpy2es_s0_Rdd32
  M2_vmpy2es_s0_Rss32
  M2_vmpy2es_s0_Rtt32
  M2_vmpy2es_s1_Rdd32
  M2_vmpy2es_s1_Rss32
  M2_vmpy2es_s1_Rtt32
  M2_vmac2es_s0_Rxx32
  M2_vmac2es_s0_Rss32
  M2_vmac2es_s0_Rtt32
  M2_vmac2es_s1_Rxx32
  M2_vmac2es_s1_Rss32
  M2_vmac2es_s1_Rtt32
  M2_vmac2es_Rxx32
  M2_vmac2es_Rss32
  M2_vmac2es_Rtt32
  M2_vrmac_s0_Rxx32
  M2_vrmac_s0_Rss32
  M2_vrmac_s0_Rtt32
  M2_vrmpy_s0_Rdd32
  M2_vrmpy_s0_Rss32
  M2_vrmpy_s0_Rtt32
  M2_vdmpyrs_s0_Rss32
  M2_vdmpyrs_s0_Rtt32
  M2_vdmpyrs_s1_Rss32
  M2_vdmpyrs_s1_Rtt32
  M5_vrmpybuu_Rdd32
  M5_vrmpybuu_Rss32
  M5_vrmpybuu_Rtt32
  M5_vrmacbuu_Rxx32
  M5_vrmacbuu_Rss32
  M5_vrmacbuu_Rtt32
  M5_vrmpybsu_Rdd32
  M5_vrmpybsu_Rss32
  M5_vrmpybsu_Rtt32
  M5_vrmacbsu_Rxx32
  M5_vrmacbsu_Rss32
  M5_vrmacbsu_Rtt32
  M5_vmpybuu_Rdd32
  M5_vmpybsu_Rdd32
  M5_vmacbuu_Rxx32
  M5_vmacbsu_Rxx32
  M5_vdmpybsu_Rdd32
  M5_vdmpybsu_Rss32
  M5_vdmpybsu_Rtt32
  M5_vdmacbsu_Rxx32
  M5_vdmacbsu_Rss32
  M5_vdmacbsu_Rtt32
  M2_vdmacs_s0_Rxx32
  M2_vdmacs_s0_Rss32
  M2_vdmacs_s0_Rtt32
  M2_vdmacs_s1_Rxx32
  M2_vdmacs_s1_Rss32
  M2_vdmacs_s1_Rtt32
  M2_vdmpys_s0_Rdd32
  M2_vdmpys_s0_Rss32
  M2_vdmpys_s0_Rtt32
  M2_vdmpys_s1_Rdd32
  M2_vdmpys_s1_Rss32
  M2_vdmpys_s1_Rtt32
  M2_cmacs_s0_Rxx32
  M2_cmacs_s1_Rxx32
  M2_cmacsc_s0_Rxx32
  M2_cmacsc_s1_Rxx32
  M2_cmpys_s0_Rdd32
  M2_cmpys_s1_Rdd32
  M2_cmpysc_s0_Rdd32
  M2_cmpysc_s1_Rdd32
  M2_cnacs_s0_Rxx32
  M2_cnacs_s1_Rxx32
  M2_cnacsc_s0_Rxx32
  M2_cnacsc_s1_Rxx32
  M2_vrcmpys_s1_h_Rdd32
  M2_vrcmpys_s1_h_Rss32
  M2_vrcmpys_s1_h_Rtt32
  M2_vrcmpys_s1_l_Rdd32
  M2_vrcmpys_s1_l_Rss32
  M2_vrcmpys_s1_l_Rtt32
  M2_vrcmpys_acc_s1_h_Rxx32
  M2_vrcmpys_acc_s1_h_Rss32
  M2_vrcmpys_acc_s1_h_Rtt32
  M2_vrcmpys_acc_s1_l_Rxx32
  M2_vrcmpys_acc_s1_l_Rss32
  M2_vrcmpys_acc_s1_l_Rtt32
  M2_vrcmpys_s1rp_h_Rss32
  M2_vrcmpys_s1rp_h_Rtt32
  M2_vrcmpys_s1rp_l_Rss32
  M2_vrcmpys_s1rp_l_Rtt32
  M2_mmacls_s0_Rxx32
  M2_mmacls_s0_Rss32
  M2_mmacls_s0_Rtt32
  M2_mmacls_s1_Rxx32
  M2_mmacls_s1_Rss32
  M2_mmacls_s1_Rtt32
  M2_mmachs_s0_Rxx32
  M2_mmachs_s0_Rss32
  M2_mmachs_s0_Rtt32
  M2_mmachs_s1_Rxx32
  M2_mmachs_s1_Rss32
  M2_mmachs_s1_Rtt32
  M2_mmpyl_s0_Rdd32
  M2_mmpyl_s0_Rss32
  M2_mmpyl_s0_Rtt32
  M2_mmpyl_s1_Rdd32
  M2_mmpyl_s1_Rss32
  M2_mmpyl_s1_Rtt32
  M2_mmpyh_s0_Rdd32
  M2_mmpyh_s0_Rss32
  M2_mmpyh_s0_Rtt32
  M2_mmpyh_s1_Rdd32
  M2_mmpyh_s1_Rss32
  M2_mmpyh_s1_Rtt32
  M2_mmacls_rs0_Rxx32
  M2_mmacls_rs0_Rss32
  M2_mmacls_rs0_Rtt32
  M2_mmacls_rs1_Rxx32
  M2_mmacls_rs1_Rss32
  M2_mmacls_rs1_Rtt32
  M2_mmachs_rs0_Rxx32
  M2_mmachs_rs0_Rss32
  M2_mmachs_rs0_Rtt32
  M2_mmachs_rs1_Rxx32
  M2_mmachs_rs1_Rss32
  M2_mmachs_rs1_Rtt32
  M2_mmpyl_rs0_Rdd32
  M2_mmpyl_rs0_Rss32
  M2_mmpyl_rs0_Rtt32
  M2_mmpyl_rs1_Rdd32
  M2_mmpyl_rs1_Rss32
  M2_mmpyl_rs1_Rtt32
  M2_mmpyh_rs0_Rdd32
  M2_mmpyh_rs0_Rss32
  M2_mmpyh_rs0_Rtt32
  M2_mmpyh_rs1_Rdd32
  M2_mmpyh_rs1_Rss32
  M2_mmpyh_rs1_Rtt32
  M4_vrmpyeh_s0_Rdd32
  M4_vrmpyeh_s0_Rss32
  M4_vrmpyeh_s0_Rtt32
  M4_vrmpyeh_s1_Rdd32
  M4_vrmpyeh_s1_Rss32
  M4_vrmpyeh_s1_Rtt32
  M4_vrmpyeh_acc_s0_Rxx32
  M4_vrmpyeh_acc_s0_Rss32
  M4_vrmpyeh_acc_s0_Rtt32
  M4_vrmpyeh_acc_s1_Rxx32
  M4_vrmpyeh_acc_s1_Rss32
  M4_vrmpyeh_acc_s1_Rtt32
  M4_vrmpyoh_s0_Rdd32
  M4_vrmpyoh_s0_Rss32
  M4_vrmpyoh_s0_Rtt32
  M4_vrmpyoh_s1_Rdd32
  M4_vrmpyoh_s1_Rss32
  M4_vrmpyoh_s1_Rtt32
  M4_vrmpyoh_acc_s0_Rxx32
  M4_vrmpyoh_acc_s0_Rss32
  M4_vrmpyoh_acc_s0_Rtt32
  M4_vrmpyoh_acc_s1_Rxx32
  M4_vrmpyoh_acc_s1_Rss32
  M4_vrmpyoh_acc_s1_Rtt32
  M2_mmaculs_s0_Rxx32
  M2_mmaculs_s0_Rss32
  M2_mmaculs_s0_Rtt32
  M2_mmaculs_s1_Rxx32
  M2_mmaculs_s1_Rss32
  M2_mmaculs_s1_Rtt32
  M2_mmacuhs_s0_Rxx32
  M2_mmacuhs_s0_Rss32
  M2_mmacuhs_s0_Rtt32
  M2_mmacuhs_s1_Rxx32
  M2_mmacuhs_s1_Rss32
  M2_mmacuhs_s1_Rtt32
  M2_mmpyul_s0_Rdd32
  M2_mmpyul_s0_Rss32
  M2_mmpyul_s0_Rtt32
  M2_mmpyul_s1_Rdd32
  M2_mmpyul_s1_Rss32
  M2_mmpyul_s1_Rtt32
  M2_mmpyuh_s0_Rdd32
  M2_mmpyuh_s0_Rss32
  M2_mmpyuh_s0_Rtt32
  M2_mmpyuh_s1_Rdd32
  M2_mmpyuh_s1_Rss32
  M2_mmpyuh_s1_Rtt32
  M2_mmaculs_rs0_Rxx32
  M2_mmaculs_rs0_Rss32
  M2_mmaculs_rs0_Rtt32
  M2_mmaculs_rs1_Rxx32
  M2_mmaculs_rs1_Rss32
  M2_mmaculs_rs1_Rtt32
  M2_mmacuhs_rs0_Rxx32
  M2_mmacuhs_rs0_Rss32
  M2_mmacuhs_rs0_Rtt32
  M2_mmacuhs_rs1_Rxx32
  M2_mmacuhs_rs1_Rss32
  M2_mmacuhs_rs1_Rtt32
  M2_mmpyul_rs0_Rdd32
  M2_mmpyul_rs0_Rss32
  M2_mmpyul_rs0_Rtt32
  M2_mmpyul_rs1_Rdd32
  M2_mmpyul_rs1_Rss32
  M2_mmpyul_rs1_Rtt32
  M2_mmpyuh_rs0_Rdd32
  M2_mmpyuh_rs0_Rss32
  M2_mmpyuh_rs0_Rtt32
  M2_mmpyuh_rs1_Rdd32
  M2_mmpyuh_rs1_Rss32
  M2_mmpyuh_rs1_Rtt32
  M2_vrcmaci_s0_Rxx32
  M2_vrcmaci_s0_Rss32
  M2_vrcmaci_s0_Rtt32
  M2_vrcmacr_s0_Rxx32
  M2_vrcmacr_s0_Rss32
  M2_vrcmacr_s0_Rtt32
  M2_vrcmaci_s0c_Rxx32
  M2_vrcmaci_s0c_Rss32
  M2_vrcmaci_s0c_Rtt32
  M2_vrcmacr_s0c_Rxx32
  M2_vrcmacr_s0c_Rss32
  M2_vrcmacr_s0c_Rtt32
  M2_cmaci_s0_Rxx32
  M2_cmacr_s0_Rxx32
  M2_vrcmpyi_s0_Rdd32
  M2_vrcmpyi_s0_Rss32
  M2_vrcmpyi_s0_Rtt32
  M2_vrcmpyr_s0_Rdd32
  M2_vrcmpyr_s0_Rss32
  M2_vrcmpyr_s0_Rtt32
  M2_vrcmpyi_s0c_Rdd32
  M2_vrcmpyi_s0c_Rss32
  M2_vrcmpyi_s0c_Rtt32
  M2_vrcmpyr_s0c_Rdd32
  M2_vrcmpyr_s0c_Rss32
  M2_vrcmpyr_s0c_Rtt32
  M2_cmpyi_s0_Rdd32
  M2_cmpyr_s0_Rdd32
  M4_cmpyi_wh_Rss32
  M4_cmpyr_wh_Rss32
  M4_cmpyi_whc_Rss32
  M4_cmpyr_whc_Rss32
  M2_vcmpy_s0_sat_i_Rdd32
  M2_vcmpy_s0_sat_i_Rss32
  M2_vcmpy_s0_sat_i_Rtt32
  M2_vcmpy_s0_sat_r_Rdd32
  M2_vcmpy_s0_sat_r_Rss32
  M2_vcmpy_s0_sat_r_Rtt32
  M2_vcmpy_s1_sat_i_Rdd32
  M2_vcmpy_s1_sat_i_Rss32
  M2_vcmpy_s1_sat_i_Rtt32
  M2_vcmpy_s1_sat_r_Rdd32
  M2_vcmpy_s1_sat_r_Rss32
  M2_vcmpy_s1_sat_r_Rtt32
  M2_vcmac_s0_sat_i_Rxx32
  M2_vcmac_s0_sat_i_Rss32
  M2_vcmac_s0_sat_i_Rtt32
  M2_vcmac_s0_sat_r_Rxx32
  M2_vcmac_s0_sat_r_Rss32
  M2_vcmac_s0_sat_r_Rtt32
  S2_vcrotate_Rdd32
  S2_vcrotate_Rss32
  S4_vrcrotate_acc_Rxx32
  S4_vrcrotate_acc_Rss32
  S4_vrcrotate_Rdd32
  S4_vrcrotate_Rss32
  S2_vcnegh_Rdd32
  S2_vcnegh_Rss32
  S2_vrcnegh_Rxx32
  S2_vrcnegh_Rss32
  M4_pmpyw_Rdd32
  M4_vpmpyh_Rdd32
  M4_pmpyw_acc_Rxx32
  M4_vpmpyh_acc_Rxx32
  M7_dcmpyrw_Rdd32
  M7_dcmpyrw_Rss32
  M7_dcmpyrw_Rtt32
  M7_dcmpyrw_acc_Rxx32
  M7_dcmpyrw_acc_Rss32
  M7_dcmpyrw_acc_Rtt32
  M7_dcmpyrwc_Rdd32
  M7_dcmpyrwc_Rss32
  M7_dcmpyrwc_Rtt32
  M7_dcmpyrwc_acc_Rxx32
  M7_dcmpyrwc_acc_Rss32
  M7_dcmpyrwc_acc_Rtt32
  M7_dcmpyiw_Rdd32
  M7_dcmpyiw_Rss32
  M7_dcmpyiw_Rtt32
  M7_dcmpyiw_acc_Rxx32
  M7_dcmpyiw_acc_Rss32
  M7_dcmpyiw_acc_Rtt32
  M7_dcmpyiwc_Rdd32
  M7_dcmpyiwc_Rss32
  M7_dcmpyiwc_Rtt32
  M7_dcmpyiwc_acc_Rxx32
  M7_dcmpyiwc_acc_Rss32
  M7_dcmpyiwc_acc_Rtt32
  M7_wcmpyrw_Rss32
  M7_wcmpyrw_Rtt32
  M7_wcmpyrwc_Rss32
  M7_wcmpyrwc_Rtt32
  M7_wcmpyiw_Rss32
  M7_wcmpyiw_Rtt32
  M7_wcmpyiwc_Rss32
  M7_wcmpyiwc_Rtt32
  M7_wcmpyrw_rnd_Rss32
  M7_wcmpyrw_rnd_Rtt32
  M7_wcmpyrwc_rnd_Rss32
  M7_wcmpyrwc_rnd_Rtt32
  M7_wcmpyiw_rnd_Rss32
  M7_wcmpyiw_rnd_Rtt32
  M7_wcmpyiwc_rnd_Rss32
  M7_wcmpyiwc_rnd_Rtt32
  A2_addp_Rdd32
  A2_addp_Rss32
  A2_addp_Rtt32
  A2_addpsat_Rdd32
  A2_addpsat_Rss32
  A2_addpsat_Rtt32
  A2_addspl_Rdd32
  A2_addspl_Rss32
  A2_addspl_Rtt32
  A2_addsph_Rdd32
  A2_addsph_Rss32
  A2_addsph_Rtt32
  A2_subp_Rdd32
  A2_subp_Rtt32
  A2_subp_Rss32
  A4_addp_c_Rdd32
  A4_addp_c_Rss32
  A4_addp_c_Rtt32
  A4_subp_c_Rdd32
  A4_subp_c_Rss32
  A4_subp_c_Rtt32
  A2_vconj_Rdd32
  A2_vconj_Rss32
  A2_negp_Rdd32
  A2_negp_Rss32
  A2_absp_Rdd32
  A2_absp_Rss32
  A2_maxp_Rdd32
  A2_maxp_Rss32
  A2_maxp_Rtt32
  A2_maxup_Rdd32
  A2_maxup_Rss32
  A2_maxup_Rtt32
  A2_minp_Rdd32
  A2_minp_Rtt32
  A2_minp_Rss32
  A2_minup_Rdd32
  A2_minup_Rtt32
  A2_minup_Rss32
  A2_combinew_Rdd32
  A4_combineri_Rdd32
  A4_combineir_Rdd32
  A2_combineii_Rdd32
  A4_combineii_Rdd32
  A4_tfrcpp_Rdd32
  A4_tfrpcp_Rss32
  M4_xor_xacc_Rxx32
  M4_xor_xacc_Rss32
  M4_xor_xacc_Rtt32
  A4_andnp_Rdd32
  A4_andnp_Rtt32
  A4_andnp_Rss32
  A4_ornp_Rdd32
  A4_ornp_Rtt32
  A4_ornp_Rss32
  A2_andp_Rdd32
  A2_andp_Rss32
  A2_andp_Rtt32
  A2_orp_Rdd32
  A2_orp_Rss32
  A2_orp_Rtt32
  A2_xorp_Rdd32
  A2_xorp_Rss32
  A2_xorp_Rtt32
  A2_notp_Rdd32
  A2_notp_Rss32
  A2_sxtw_Rdd32
  A2_sat_Rss32
  A2_roundsat_Rss32
  A2_vaddub_Rdd32
  A2_vaddub_Rss32
  A2_vaddub_Rtt32
  A2_vaddubs_Rdd32
  A2_vaddubs_Rss32
  A2_vaddubs_Rtt32
  A2_vaddh_Rdd32
  A2_vaddh_Rss32
  A2_vaddh_Rtt32
  A2_vaddhs_Rdd32
  A2_vaddhs_Rss32
  A2_vaddhs_Rtt32
  A2_vadduhs_Rdd32
  A2_vadduhs_Rss32
  A2_vadduhs_Rtt32
  A5_vaddhubs_Rss32
  A5_vaddhubs_Rtt32
  A2_vaddw_Rdd32
  A2_vaddw_Rss32
  A2_vaddw_Rtt32
  A2_vaddws_Rdd32
  A2_vaddws_Rss32
  A2_vaddws_Rtt32
  S4_vxaddsubw_Rdd32
  S4_vxaddsubw_Rss32
  S4_vxaddsubw_Rtt32
  S4_vxsubaddw_Rdd32
  S4_vxsubaddw_Rss32
  S4_vxsubaddw_Rtt32
  S4_vxaddsubh_Rdd32
  S4_vxaddsubh_Rss32
  S4_vxaddsubh_Rtt32
  S4_vxsubaddh_Rdd32
  S4_vxsubaddh_Rss32
  S4_vxsubaddh_Rtt32
  S4_vxaddsubhr_Rdd32
  S4_vxaddsubhr_Rss32
  S4_vxaddsubhr_Rtt32
  S4_vxsubaddhr_Rdd32
  S4_vxsubaddhr_Rss32
  S4_vxsubaddhr_Rtt32
  A2_vraddub_Rdd32
  A2_vraddub_Rss32
  A2_vraddub_Rtt32
  A2_vraddub_acc_Rxx32
  A2_vraddub_acc_Rss32
  A2_vraddub_acc_Rtt32
  M2_vraddh_Rss32
  M2_vraddh_Rtt32
  M2_vradduh_Rss32
  M2_vradduh_Rtt32
  A2_vsubub_Rdd32
  A2_vsubub_Rtt32
  A2_vsubub_Rss32
  A2_vsububs_Rdd32
  A2_vsububs_Rtt32
  A2_vsububs_Rss32
  A2_vsubh_Rdd32
  A2_vsubh_Rtt32
  A2_vsubh_Rss32
  A2_vsubhs_Rdd32
  A2_vsubhs_Rtt32
  A2_vsubhs_Rss32
  A2_vsubuhs_Rdd32
  A2_vsubuhs_Rtt32
  A2_vsubuhs_Rss32
  A2_vsubw_Rdd32
  A2_vsubw_Rtt32
  A2_vsubw_Rss32
  A2_vsubws_Rdd32
  A2_vsubws_Rtt32
  A2_vsubws_Rss32
  A2_vabsh_Rdd32
  A2_vabsh_Rss32
  A2_vabshsat_Rdd32
  A2_vabshsat_Rss32
  A2_vabsw_Rdd32
  A2_vabsw_Rss32
  A2_vabswsat_Rdd32
  A2_vabswsat_Rss32
  M2_vabsdiffw_Rdd32
  M2_vabsdiffw_Rtt32
  M2_vabsdiffw_Rss32
  M2_vabsdiffh_Rdd32
  M2_vabsdiffh_Rtt32
  M2_vabsdiffh_Rss32
  M6_vabsdiffb_Rdd32
  M6_vabsdiffb_Rtt32
  M6_vabsdiffb_Rss32
  M6_vabsdiffub_Rdd32
  M6_vabsdiffub_Rtt32
  M6_vabsdiffub_Rss32
  A2_vrsadub_Rdd32
  A2_vrsadub_Rss32
  A2_vrsadub_Rtt32
  A2_vrsadub_acc_Rxx32
  A2_vrsadub_acc_Rss32
  A2_vrsadub_acc_Rtt32
  A2_vavgub_Rdd32
  A2_vavgub_Rss32
  A2_vavgub_Rtt32
  A2_vavguh_Rdd32
  A2_vavguh_Rss32
  A2_vavguh_Rtt32
  A2_vavgh_Rdd32
  A2_vavgh_Rss32
  A2_vavgh_Rtt32
  A2_vnavgh_Rdd32
  A2_vnavgh_Rtt32
  A2_vnavgh_Rss32
  A2_vavgw_Rdd32
  A2_vavgw_Rss32
  A2_vavgw_Rtt32
  A2_vnavgw_Rdd32
  A2_vnavgw_Rtt32
  A2_vnavgw_Rss32
  A2_vavgwr_Rdd32
  A2_vavgwr_Rss32
  A2_vavgwr_Rtt32
  A2_vnavgwr_Rdd32
  A2_vnavgwr_Rtt32
  A2_vnavgwr_Rss32
  A2_vavgwcr_Rdd32
  A2_vavgwcr_Rss32
  A2_vavgwcr_Rtt32
  A2_vnavgwcr_Rdd32
  A2_vnavgwcr_Rtt32
  A2_vnavgwcr_Rss32
  A2_vavghcr_Rdd32
  A2_vavghcr_Rss32
  A2_vavghcr_Rtt32
  A2_vnavghcr_Rdd32
  A2_vnavghcr_Rtt32
  A2_vnavghcr_Rss32
  A2_vavguw_Rdd32
  A2_vavguw_Rss32
  A2_vavguw_Rtt32
  A2_vavguwr_Rdd32
  A2_vavguwr_Rss32
  A2_vavguwr_Rtt32
  A2_vavgubr_Rdd32
  A2_vavgubr_Rss32
  A2_vavgubr_Rtt32
  A2_vavguhr_Rdd32
  A2_vavguhr_Rss32
  A2_vavguhr_Rtt32
  A2_vavghr_Rdd32
  A2_vavghr_Rss32
  A2_vavghr_Rtt32
  A2_vnavghr_Rdd32
  A2_vnavghr_Rtt32
  A2_vnavghr_Rss32
  A7_croundd_ri_Rdd32
  A7_croundd_ri_Rss32
  A7_croundd_rr_Rdd32
  A7_croundd_rr_Rss32
  A7_vclip_Rdd32
  A7_vclip_Rss32
  A4_vrminh_Rxx32
  A4_vrminh_Rss32
  A4_vrmaxh_Rxx32
  A4_vrmaxh_Rss32
  A4_vrminuh_Rxx32
  A4_vrminuh_Rss32
  A4_vrmaxuh_Rxx32
  A4_vrmaxuh_Rss32
  A4_vrminw_Rxx32
  A4_vrminw_Rss32
  A4_vrmaxw_Rxx32
  A4_vrmaxw_Rss32
  A4_vrminuw_Rxx32
  A4_vrminuw_Rss32
  A4_vrmaxuw_Rxx32
  A4_vrmaxuw_Rss32
  A2_vminb_Rdd32
  A2_vminb_Rtt32
  A2_vminb_Rss32
  A2_vmaxb_Rdd32
  A2_vmaxb_Rtt32
  A2_vmaxb_Rss32
  A2_vminub_Rdd32
  A2_vminub_Rtt32
  A2_vminub_Rss32
  A2_vmaxub_Rdd32
  A2_vmaxub_Rtt32
  A2_vmaxub_Rss32
  A2_vminh_Rdd32
  A2_vminh_Rtt32
  A2_vminh_Rss32
  A2_vmaxh_Rdd32
  A2_vmaxh_Rtt32
  A2_vmaxh_Rss32
  A2_vminuh_Rdd32
  A2_vminuh_Rtt32
  A2_vminuh_Rss32
  A2_vmaxuh_Rdd32
  A2_vmaxuh_Rtt32
  A2_vmaxuh_Rss32
  A2_vminw_Rdd32
  A2_vminw_Rtt32
  A2_vminw_Rss32
  A2_vmaxw_Rdd32
  A2_vmaxw_Rtt32
  A2_vmaxw_Rss32
  A2_vminuw_Rdd32
  A2_vminuw_Rtt32
  A2_vminuw_Rss32
  A2_vmaxuw_Rdd32
  A2_vmaxuw_Rtt32
  A2_vmaxuw_Rss32
  A5_ACS_Rxx32
  A5_ACS_Rss32
  A5_ACS_Rtt32
  A6_vminub_RdP_Rdd32
  A6_vminub_RdP_Rtt32
  A6_vminub_RdP_Rss32
  F2_dfadd_Rdd32
  F2_dfadd_Rss32
  F2_dfadd_Rtt32
  F2_dfsub_Rdd32
  F2_dfsub_Rss32
  F2_dfsub_Rtt32
  F2_dfmax_Rdd32
  F2_dfmax_Rss32
  F2_dfmax_Rtt32
  F2_dfmin_Rdd32
  F2_dfmin_Rss32
  F2_dfmin_Rtt32
  F2_dfmpyfix_Rdd32
  F2_dfmpyfix_Rss32
  F2_dfmpyfix_Rtt32
  F2_dfmpyll_Rdd32
  F2_dfmpyll_Rss32
  F2_dfmpyll_Rtt32
  F2_dfmpylh_Rxx32
  F2_dfmpylh_Rss32
  F2_dfmpylh_Rtt32
  F2_dfmpyhh_Rxx32
  F2_dfmpyhh_Rss32
  F2_dfmpyhh_Rtt32
  F2_dfcmpeq_Rss32
  F2_dfcmpeq_Rtt32
  F2_dfcmpgt_Rss32
  F2_dfcmpgt_Rtt32
  F2_dfcmpge_Rss32
  F2_dfcmpge_Rtt32
  F2_dfcmpuo_Rss32
  F2_dfcmpuo_Rtt32
  F2_dfclass_Rss32
  F2_dfimm_p_Rdd32
  F2_dfimm_n_Rdd32
  F2_conv_sf2df_Rdd32
  F2_conv_df2sf_Rss32
  F2_conv_uw2df_Rdd32
  F2_conv_w2df_Rdd32
  F2_conv_ud2sf_Rss32
  F2_conv_ud2df_Rdd32
  F2_conv_ud2df_Rss32
  F2_conv_d2sf_Rss32
  F2_conv_d2df_Rdd32
  F2_conv_d2df_Rss32
  F2_conv_sf2ud_Rdd32
  F2_conv_sf2d_Rdd32
  F2_conv_df2uw_Rss32
  F2_conv_df2w_Rss32
  F2_conv_df2ud_Rdd32
  F2_conv_df2ud_Rss32
  F2_conv_df2d_Rdd32
  F2_conv_df2d_Rss32
  F2_conv_sf2ud_chop_Rdd32
  F2_conv_sf2d_chop_Rdd32
  F2_conv_df2uw_chop_Rss32
  F2_conv_df2w_chop_Rss32
  F2_conv_df2ud_chop_Rdd32
  F2_conv_df2ud_chop_Rss32
  F2_conv_df2d_chop_Rdd32
  F2_conv_df2d_chop_Rss32
  S2_asr_r_p_Rdd32
  S2_asr_r_p_Rss32
  S2_asl_r_p_Rdd32
  S2_asl_r_p_Rss32
  S2_lsr_r_p_Rdd32
  S2_lsr_r_p_Rss32
  S2_lsl_r_p_Rdd32
  S2_lsl_r_p_Rss32
  S2_asr_r_p_acc_Rxx32
  S2_asr_r_p_acc_Rss32
  S2_asl_r_p_acc_Rxx32
  S2_asl_r_p_acc_Rss32
  S2_lsr_r_p_acc_Rxx32
  S2_lsr_r_p_acc_Rss32
  S2_lsl_r_p_acc_Rxx32
  S2_lsl_r_p_acc_Rss32
  S2_asr_r_p_nac_Rxx32
  S2_asr_r_p_nac_Rss32
  S2_asl_r_p_nac_Rxx32
  S2_asl_r_p_nac_Rss32
  S2_lsr_r_p_nac_Rxx32
  S2_lsr_r_p_nac_Rss32
  S2_lsl_r_p_nac_Rxx32
  S2_lsl_r_p_nac_Rss32
  S2_asr_r_p_and_Rxx32
  S2_asr_r_p_and_Rss32
  S2_asl_r_p_and_Rxx32
  S2_asl_r_p_and_Rss32
  S2_lsr_r_p_and_Rxx32
  S2_lsr_r_p_and_Rss32
  S2_lsl_r_p_and_Rxx32
  S2_lsl_r_p_and_Rss32
  S2_asr_r_p_or_Rxx32
  S2_asr_r_p_or_Rss32
  S2_asl_r_p_or_Rxx32
  S2_asl_r_p_or_Rss32
  S2_lsr_r_p_or_Rxx32
  S2_lsr_r_p_or_Rss32
  S2_lsl_r_p_or_Rxx32
  S2_lsl_r_p_or_Rss32
  S2_asr_r_p_xor_Rxx32
  S2_asr_r_p_xor_Rss32
  S2_asl_r_p_xor_Rxx32
  S2_asl_r_p_xor_Rss32
  S2_lsr_r_p_xor_Rxx32
  S2_lsr_r_p_xor_Rss32
  S2_lsl_r_p_xor_Rxx32
  S2_lsl_r_p_xor_Rss32
  S2_asr_i_p_Rdd32
  S2_asr_i_p_Rss32
  S2_lsr_i_p_Rdd32
  S2_lsr_i_p_Rss32
  S2_asl_i_p_Rdd32
  S2_asl_i_p_Rss32
  S6_rol_i_p_Rdd32
  S6_rol_i_p_Rss32
  S2_asr_i_p_acc_Rxx32
  S2_asr_i_p_acc_Rss32
  S2_lsr_i_p_acc_Rxx32
  S2_lsr_i_p_acc_Rss32
  S2_asl_i_p_acc_Rxx32
  S2_asl_i_p_acc_Rss32
  S6_rol_i_p_acc_Rxx32
  S6_rol_i_p_acc_Rss32
  S2_asr_i_p_nac_Rxx32
  S2_asr_i_p_nac_Rss32
  S2_lsr_i_p_nac_Rxx32
  S2_lsr_i_p_nac_Rss32
  S2_asl_i_p_nac_Rxx32
  S2_asl_i_p_nac_Rss32
  S6_rol_i_p_nac_Rxx32
  S6_rol_i_p_nac_Rss32
  S2_lsr_i_p_xacc_Rxx32
  S2_lsr_i_p_xacc_Rss32
  S2_asl_i_p_xacc_Rxx32
  S2_asl_i_p_xacc_Rss32
  S6_rol_i_p_xacc_Rxx32
  S6_rol_i_p_xacc_Rss32
  S2_asr_i_p_and_Rxx32
  S2_asr_i_p_and_Rss32
  S2_lsr_i_p_and_Rxx32
  S2_lsr_i_p_and_Rss32
  S2_asl_i_p_and_Rxx32
  S2_asl_i_p_and_Rss32
  S6_rol_i_p_and_Rxx32
  S6_rol_i_p_and_Rss32
  S2_asr_i_p_or_Rxx32
  S2_asr_i_p_or_Rss32
  S2_lsr_i_p_or_Rxx32
  S2_lsr_i_p_or_Rss32
  S2_asl_i_p_or_Rxx32
  S2_asl_i_p_or_Rss32
  S6_rol_i_p_or_Rxx32
  S6_rol_i_p_or_Rss32
  S2_asr_i_p_rnd_Rdd32
  S2_asr_i_p_rnd_Rss32
  S2_valignib_Rdd32
  S2_valignib_Rtt32
  S2_valignib_Rss32
  S2_valignrb_Rdd32
  S2_valignrb_Rtt32
  S2_valignrb_Rss32
  S2_vspliceib_Rdd32
  S2_vspliceib_Rss32
  S2_vspliceib_Rtt32
  S2_vsplicerb_Rdd32
  S2_vsplicerb_Rss32
  S2_vsplicerb_Rtt32
  S2_vsplatrh_Rdd32
  S6_vsplatrbp_Rdd32
  A4_bitspliti_Rdd32
  A4_bitsplit_Rdd32
  S2_insertp_Rxx32
  S2_insertp_Rss32
  S4_extractp_Rdd32
  S4_extractp_Rss32
  S2_extractup_Rdd32
  S2_extractup_Rss32
  S2_insert_rp_Rtt32
  S4_extract_rp_Rtt32
  S2_extractu_rp_Rtt32
  S2_insertp_rp_Rxx32
  S2_insertp_rp_Rss32
  S2_insertp_rp_Rtt32
  S4_extractp_rp_Rdd32
  S4_extractp_rp_Rss32
  S4_extractp_rp_Rtt32
  S2_extractup_rp_Rdd32
  S2_extractup_rp_Rss32
  S2_extractup_rp_Rtt32
  S2_asr_i_vh_Rdd32
  S2_asr_i_vh_Rss32
  S2_lsr_i_vh_Rdd32
  S2_lsr_i_vh_Rss32
  S2_asl_i_vh_Rdd32
  S2_asl_i_vh_Rss32
  S2_asr_r_vh_Rdd32
  S2_asr_r_vh_Rss32
  S5_asrhub_rnd_sat_Rss32
  S5_asrhub_sat_Rss32
  S5_vasrhrnd_Rdd32
  S5_vasrhrnd_Rss32
  S2_asl_r_vh_Rdd32
  S2_asl_r_vh_Rss32
  S2_lsr_r_vh_Rdd32
  S2_lsr_r_vh_Rss32
  S2_lsl_r_vh_Rdd32
  S2_lsl_r_vh_Rss32
  S2_asr_i_vw_Rdd32
  S2_asr_i_vw_Rss32
  S2_asr_i_svw_trun_Rss32
  S2_asr_r_svw_trun_Rss32
  S2_lsr_i_vw_Rdd32
  S2_lsr_i_vw_Rss32
  S2_asl_i_vw_Rdd32
  S2_asl_i_vw_Rss32
  S2_asr_r_vw_Rdd32
  S2_asr_r_vw_Rss32
  S2_asl_r_vw_Rdd32
  S2_asl_r_vw_Rss32
  S2_lsr_r_vw_Rdd32
  S2_lsr_r_vw_Rss32
  S2_lsl_r_vw_Rdd32
  S2_lsl_r_vw_Rss32
  S2_vrndpackwh_Rss32
  S2_vrndpackwhs_Rss32
  S2_vsxtbh_Rdd32
  S2_vzxtbh_Rdd32
  S2_vsathub_Rss32
  S2_vsathb_Rss32
  S2_vtrunohb_Rss32
  S2_vtrunewh_Rdd32
  S2_vtrunewh_Rss32
  S2_vtrunewh_Rtt32
  S2_vtrunowh_Rdd32
  S2_vtrunowh_Rss32
  S2_vtrunowh_Rtt32
  S2_vtrunehb_Rss32
  S6_vtrunehb_ppp_Rdd32
  S6_vtrunehb_ppp_Rss32
  S6_vtrunehb_ppp_Rtt32
  S6_vtrunohb_ppp_Rdd32
  S6_vtrunohb_ppp_Rss32
  S6_vtrunohb_ppp_Rtt32
  S2_vsxthw_Rdd32
  S2_vzxthw_Rdd32
  S2_vsatwh_Rss32
  S2_vsatwuh_Rss32
  S2_packhl_Rdd32
  S2_vsathub_nopack_Rdd32
  S2_vsathub_nopack_Rss32
  S2_vsathb_nopack_Rdd32
  S2_vsathb_nopack_Rss32
  S2_vsatwh_nopack_Rdd32
  S2_vsatwh_nopack_Rss32
  S2_vsatwuh_nopack_Rdd32
  S2_vsatwuh_nopack_Rss32
  S2_shuffob_Rdd32
  S2_shuffob_Rtt32
  S2_shuffob_Rss32
  S2_shuffeb_Rdd32
  S2_shuffeb_Rss32
  S2_shuffeb_Rtt32
  S2_shuffoh_Rdd32
  S2_shuffoh_Rtt32
  S2_shuffoh_Rss32
  S2_shuffeh_Rdd32
  S2_shuffeh_Rss32
  S2_shuffeh_Rtt32
  S5_popcountp_Rss32
  S2_parityp_Rss32
  S2_parityp_Rtt32
  S2_lfsp_Rdd32
  S2_lfsp_Rss32
  S2_lfsp_Rtt32
  S4_clbpnorm_Rss32
  S4_clbpaddi_Rss32
  S2_cabacdecbin_Rdd32
  S2_cabacdecbin_Rss32
  S2_cabacdecbin_Rtt32
  S2_clbp_Rss32
  S2_cl0p_Rss32
  S2_cl1p_Rss32
  S2_brevp_Rdd32
  S2_brevp_Rss32
  S2_ct0p_Rss32
  S2_ct1p_Rss32
  S2_interleave_Rdd32
  S2_interleave_Rss32
  S2_deinterleave_Rdd32
  S2_deinterleave_Rss32
  Y2_tlbw_Rss32
  Y5_ctlbw_Rss32
  Y5_tlboc_Rss32
  Y2_tlbr_Rdd32
  Y4_crswap10_Rxx32
  Y4_tfrscpp_Rdd32
  Y4_tfrspcp_Rss32
  G4_tfrgcpp_Rdd32
  G4_tfrgpcp_Rss32
  Y6_diag0_Rss32
  Y6_diag0_Rtt32
  Y6_diag1_Rss32
  Y6_diag1_Rtt32
  Y5_l2fetch_Rtt32
  Y6_l2gcleanpa_Rtt32
  Y6_l2gcleaninvpa_Rtt32
] [
  R1R0   _ R3R2   _ R5R4   _ R7R6   _
  R9R8   _ R11R10 _ R13R12 _ R15R14 _
  R17R16 _ R19R18 _ R21R20 _ R23R22 _
  R25R24 _ R27R26 _ R29R28 _ R31R30 _
];

attach variables [
  J4_cmpeqi_tp0_jump_nt_Rs16
  J4_cmpeqi_fp0_jump_nt_Rs16
  J4_cmpeqi_tp0_jump_t_Rs16
  J4_cmpeqi_fp0_jump_t_Rs16
  J4_cmpeqi_tp1_jump_nt_Rs16
  J4_cmpeqi_fp1_jump_nt_Rs16
  J4_cmpeqi_tp1_jump_t_Rs16
  J4_cmpeqi_fp1_jump_t_Rs16
  J4_cmpgti_tp0_jump_nt_Rs16
  J4_cmpgti_fp0_jump_nt_Rs16
  J4_cmpgti_tp0_jump_t_Rs16
  J4_cmpgti_fp0_jump_t_Rs16
  J4_cmpgti_tp1_jump_nt_Rs16
  J4_cmpgti_fp1_jump_nt_Rs16
  J4_cmpgti_tp1_jump_t_Rs16
  J4_cmpgti_fp1_jump_t_Rs16
  J4_cmpgtui_tp0_jump_nt_Rs16
  J4_cmpgtui_fp0_jump_nt_Rs16
  J4_cmpgtui_tp0_jump_t_Rs16
  J4_cmpgtui_fp0_jump_t_Rs16
  J4_cmpgtui_tp1_jump_nt_Rs16
  J4_cmpgtui_fp1_jump_nt_Rs16
  J4_cmpgtui_tp1_jump_t_Rs16
  J4_cmpgtui_fp1_jump_t_Rs16
  J4_cmpeqn1_tp0_jump_nt_Rs16
  J4_cmpeqn1_fp0_jump_nt_Rs16
  J4_cmpeqn1_tp0_jump_t_Rs16
  J4_cmpeqn1_fp0_jump_t_Rs16
  J4_cmpeqn1_tp1_jump_nt_Rs16
  J4_cmpeqn1_fp1_jump_nt_Rs16
  J4_cmpeqn1_tp1_jump_t_Rs16
  J4_cmpeqn1_fp1_jump_t_Rs16
  J4_cmpgtn1_tp0_jump_nt_Rs16
  J4_cmpgtn1_fp0_jump_nt_Rs16
  J4_cmpgtn1_tp0_jump_t_Rs16
  J4_cmpgtn1_fp0_jump_t_Rs16
  J4_cmpgtn1_tp1_jump_nt_Rs16
  J4_cmpgtn1_fp1_jump_nt_Rs16
  J4_cmpgtn1_tp1_jump_t_Rs16
  J4_cmpgtn1_fp1_jump_t_Rs16
  J4_tstbit0_tp0_jump_nt_Rs16
  J4_tstbit0_fp0_jump_nt_Rs16
  J4_tstbit0_tp0_jump_t_Rs16
  J4_tstbit0_fp0_jump_t_Rs16
  J4_tstbit0_tp1_jump_nt_Rs16
  J4_tstbit0_fp1_jump_nt_Rs16
  J4_tstbit0_tp1_jump_t_Rs16
  J4_tstbit0_fp1_jump_t_Rs16
  J4_cmpeq_tp0_jump_nt_Rs16
  J4_cmpeq_tp0_jump_nt_Rt16
  J4_cmpeq_fp0_jump_nt_Rs16
  J4_cmpeq_fp0_jump_nt_Rt16
  J4_cmpeq_tp0_jump_t_Rs16
  J4_cmpeq_tp0_jump_t_Rt16
  J4_cmpeq_fp0_jump_t_Rs16
  J4_cmpeq_fp0_jump_t_Rt16
  J4_cmpeq_tp1_jump_nt_Rs16
  J4_cmpeq_tp1_jump_nt_Rt16
  J4_cmpeq_fp1_jump_nt_Rs16
  J4_cmpeq_fp1_jump_nt_Rt16
  J4_cmpeq_tp1_jump_t_Rs16
  J4_cmpeq_tp1_jump_t_Rt16
  J4_cmpeq_fp1_jump_t_Rs16
  J4_cmpeq_fp1_jump_t_Rt16
  J4_cmpgt_tp0_jump_nt_Rs16
  J4_cmpgt_tp0_jump_nt_Rt16
  J4_cmpgt_fp0_jump_nt_Rs16
  J4_cmpgt_fp0_jump_nt_Rt16
  J4_cmpgt_tp0_jump_t_Rs16
  J4_cmpgt_tp0_jump_t_Rt16
  J4_cmpgt_fp0_jump_t_Rs16
  J4_cmpgt_fp0_jump_t_Rt16
  J4_cmpgt_tp1_jump_nt_Rs16
  J4_cmpgt_tp1_jump_nt_Rt16
  J4_cmpgt_fp1_jump_nt_Rs16
  J4_cmpgt_fp1_jump_nt_Rt16
  J4_cmpgt_tp1_jump_t_Rs16
  J4_cmpgt_tp1_jump_t_Rt16
  J4_cmpgt_fp1_jump_t_Rs16
  J4_cmpgt_fp1_jump_t_Rt16
  J4_cmpgtu_tp0_jump_nt_Rs16
  J4_cmpgtu_tp0_jump_nt_Rt16
  J4_cmpgtu_fp0_jump_nt_Rs16
  J4_cmpgtu_fp0_jump_nt_Rt16
  J4_cmpgtu_tp0_jump_t_Rs16
  J4_cmpgtu_tp0_jump_t_Rt16
  J4_cmpgtu_fp0_jump_t_Rs16
  J4_cmpgtu_fp0_jump_t_Rt16
  J4_cmpgtu_tp1_jump_nt_Rs16
  J4_cmpgtu_tp1_jump_nt_Rt16
  J4_cmpgtu_fp1_jump_nt_Rs16
  J4_cmpgtu_fp1_jump_nt_Rt16
  J4_cmpgtu_tp1_jump_t_Rs16
  J4_cmpgtu_tp1_jump_t_Rt16
  J4_cmpgtu_fp1_jump_t_Rs16
  J4_cmpgtu_fp1_jump_t_Rt16
  J4_jumpseti_Rd16
  J4_jumpsetr_Rd16
  J4_jumpsetr_Rs16
  SA1_addi_Rx16
  SA1_tfr_Rd16
  SA1_tfr_Rs16
  SA1_seti_Rd16
  SA1_setin1_Rd16
  SA1_clrtnew_Rd16
  SA1_clrfnew_Rd16
  SA1_clrt_Rd16
  SA1_clrf_Rd16
  SA1_addsp_Rd16
  SA1_inc_Rd16
  SA1_inc_Rs16
  SA1_dec_Rd16
  SA1_dec_Rs16
  SA1_addrx_Rx16
  SA1_addrx_Rs16
  SA1_zxtb_Rd16
  SA1_zxtb_Rs16
  SA1_and1_Rd16
  SA1_and1_Rs16
  SA1_sxtb_Rd16
  SA1_sxtb_Rs16
  SA1_zxth_Rd16
  SA1_zxth_Rs16
  SA1_sxth_Rd16
  SA1_sxth_Rs16
  SA1_combinezr_Rs16
  SA1_combinerz_Rs16
  SA1_cmpeqi_Rs16
  SL1_loadri_io_Rd16
  SL1_loadri_io_Rs16
  SL1_loadrub_io_Rd16
  SL1_loadrub_io_Rs16
  SL2_loadrh_io_Rd16
  SL2_loadrh_io_Rs16
  SL2_loadruh_io_Rd16
  SL2_loadruh_io_Rs16
  SL2_loadrb_io_Rd16
  SL2_loadrb_io_Rs16
  SL2_loadri_sp_Rd16
  SS1_storew_io_Rs16
  SS1_storew_io_Rt16
  SS1_storeb_io_Rs16
  SS1_storeb_io_Rt16
  SS2_storeh_io_Rs16
  SS2_storeh_io_Rt16
  SS2_storew_sp_Rt16
  SS2_storewi0_Rs16
  SS2_storebi0_Rs16
  SS2_storewi1_Rs16
  SS2_storebi1_Rs16
] [
  R0  R1  R2  R3  R4  R5  R6  R7
  R16 R17 R18 R19 R20 R21 R22 R23
];

attach variables [
  SA1_combinezr_Rdd8
  SA1_combinerz_Rdd8
  SA1_combine0i_Rdd8
  SA1_combine1i_Rdd8
  SA1_combine2i_Rdd8
  SA1_combine3i_Rdd8
  SL2_loadrd_sp_Rdd8
  SS2_stored_sp_Rtt8
] [
  R1R0    R3R2    R5R4    R7R6  
  R17R16  R19R18  R21R20  R23R22
];

attach variables [
  A2_tfrcrr_Cs32
  A2_tfrrcr_Cd32
] [
  C0  C1  C2  C3  C4  C5  C6  C7
  C8  C9  C10 C11 C12 C13 C14 C15
  C16 C17 C18 C19 C20 C21 C22 C23
  C24 C25 C26 C27 C28 C29 C30 C31
];

attach variables [
  A4_tfrcpp_Css32
  A4_tfrpcp_Cdd32
] [
  C1C0   _ C3C2   _ C5C4   _ C7C6   _
  C9C8   _ C11C10 _ C13C12 _ C15C14 _
  C17C16 _ C19C18 _ C21C20 _ C23C22 _
  C25C24 _ C27C26 _ C29C28 _ C31C30 _
];

attach variables [
  G4_tfrgcrr_Gs32
  G4_tfrgrcr_Gd32
] [
  G0  G1  G2  G3  G4  G5  G6  G7
  G8  G9  G10 G11 G12 G13 G14 G15
  G16 G17 G18 G19 G20 G21 G22 G23
  G24 G25 G26 G27 G28 G29 G30 G31
];

attach variables [
  G4_tfrgcpp_Gss32
  G4_tfrgpcp_Gdd32
] [
  G1G0   _ G3G2   _ G5G4   _ G7G6   _
  G9G8   _ G11G10 _ G13G12 _ G15G14 _
  G17G16 _ G19G18 _ G21G20 _ G23G22 _
  G25G24 _ G27G26 _ G29G28 _ G31G30 _
];

attach variables [
  Y2_tfrscrr_Ss128
  Y2_tfrsrcr_Sd128
] [
  S0   S1   S2   S3   S4   S5   S6   S7
  S8   S9   S10  S11  S12  S13  S14  S15
  S16  S17  S18  S19  S20  S21  S22  S23
  S24  S25  S26  S27  S28  S29  S30  S31
  S32  S33  S34  S35  S36  S37  S38  S39
  S40  S41  S42  S43  S44  S45  S46  S47
  S48  S49  S50  S51  S52  S53  S54  S55
  S56  S57  S58  S59  S60  S61  S62  S63
  S64  S65  S66  S67  S68  S69  S70  S71
  S72  S73  S74  S75  S76  S77  S78  S79
  S80  S81  S82  S83  S84  S85  S86  S87
  S88  S89  S90  S91  S92  S93  S94  S95
  S96  S97  S98  S99  S100 S101 S102 S103
  S104 S105 S106 S107 S108 S109 S110 S111
  S112 S113 S114 S115 S116 S117 S118 S119
  S120 S121 S122 S123 S124 S125 S126 S127
];

attach variables [
  Y4_tfrscpp_Sss128
  Y4_tfrspcp_Sdd128
] [
  S1S0      _ S3S2      _ S5S4      _ S7S6      _
  S9S8      _ S11S10    _ S13S12    _ S15S14    _
  S17S16    _ S19S18    _ S21S20    _ S23S22    _
  S25S24    _ S27S26    _ S29S28    _ S31S30    _
  S33S32    _ S35S34    _ S37S36    _ S39S38    _
  S41S40    _ S43S42    _ S45S44    _ S47S46    _
  S49S48    _ S51S50    _ S53S52    _ S55S54    _
  S57S56    _ S59S58    _ S61S60    _ S63S62    _
  S65S64    _ S67S66    _ S69S68    _ S71S70    _
  S73S72    _ S75S74    _ S77S76    _ S79S78    _
  S81S80    _ S83S82    _ S85S84    _ S87S86    _
  S89S88    _ S91S90    _ S93S92    _ S95S94    _
  S97S96    _ S99S98    _ S101S100  _ S103S102  _
  S105S104  _ S107S106  _ S109S108  _ S111S110  _
  S113S112  _ S115S114  _ S117S116  _ S119S118  _
  S121S120  _ S123S122  _ S125S124  _ S127S126  _
];

attach variables [
  J2_jumpt_Pu4
  J2_jumpf_Pu4
  J2_jumptpt_Pu4
  J2_jumpfpt_Pu4
  J2_jumprt_Pu4
  J2_jumprf_Pu4
  J2_jumprtpt_Pu4
  J2_jumprfpt_Pu4
  J2_jumptnew_Pu4
  J2_jumpfnew_Pu4
  J2_jumptnewpt_Pu4
  J2_jumpfnewpt_Pu4
  J2_jumprtnew_Pu4
  J2_jumprfnew_Pu4
  J2_jumprtnewpt_Pu4
  J2_jumprfnewpt_Pu4
  J2_callt_Pu4
  J2_callf_Pu4
  J2_callrt_Pu4
  J2_callrf_Pu4
  L4_return_t_Pv4
  L4_return_f_Pv4
  L4_return_tnew_pt_Pv4
  L4_return_fnew_pt_Pv4
  L4_return_tnew_pnt_Pv4
  L4_return_fnew_pnt_Pv4
  S2_storew_locked_Pd4
  S4_stored_locked_Pd4
  L2_ploadrubt_io_Pt4
  L2_ploadrubt_pi_Pt4
  L2_ploadrubf_io_Pt4
  L2_ploadrubf_pi_Pt4
  L2_ploadrubtnew_io_Pt4
  L2_ploadrubfnew_io_Pt4
  L4_ploadrubt_rr_Pv4
  L4_ploadrubf_rr_Pv4
  L4_ploadrubtnew_rr_Pv4
  L4_ploadrubfnew_rr_Pv4
  L2_ploadrubtnew_pi_Pt4
  L2_ploadrubfnew_pi_Pt4
  L4_ploadrubt_abs_Pt4
  L4_ploadrubf_abs_Pt4
  L4_ploadrubtnew_abs_Pt4
  L4_ploadrubfnew_abs_Pt4
  L2_ploadrbt_io_Pt4
  L2_ploadrbt_pi_Pt4
  L2_ploadrbf_io_Pt4
  L2_ploadrbf_pi_Pt4
  L2_ploadrbtnew_io_Pt4
  L2_ploadrbfnew_io_Pt4
  L4_ploadrbt_rr_Pv4
  L4_ploadrbf_rr_Pv4
  L4_ploadrbtnew_rr_Pv4
  L4_ploadrbfnew_rr_Pv4
  L2_ploadrbtnew_pi_Pt4
  L2_ploadrbfnew_pi_Pt4
  L4_ploadrbt_abs_Pt4
  L4_ploadrbf_abs_Pt4
  L4_ploadrbtnew_abs_Pt4
  L4_ploadrbfnew_abs_Pt4
  L2_ploadruht_io_Pt4
  L2_ploadruht_pi_Pt4
  L2_ploadruhf_io_Pt4
  L2_ploadruhf_pi_Pt4
  L2_ploadruhtnew_io_Pt4
  L2_ploadruhfnew_io_Pt4
  L4_ploadruht_rr_Pv4
  L4_ploadruhf_rr_Pv4
  L4_ploadruhtnew_rr_Pv4
  L4_ploadruhfnew_rr_Pv4
  L2_ploadruhtnew_pi_Pt4
  L2_ploadruhfnew_pi_Pt4
  L4_ploadruht_abs_Pt4
  L4_ploadruhf_abs_Pt4
  L4_ploadruhtnew_abs_Pt4
  L4_ploadruhfnew_abs_Pt4
  L2_ploadrht_io_Pt4
  L2_ploadrht_pi_Pt4
  L2_ploadrhf_io_Pt4
  L2_ploadrhf_pi_Pt4
  L2_ploadrhtnew_io_Pt4
  L2_ploadrhfnew_io_Pt4
  L4_ploadrht_rr_Pv4
  L4_ploadrhf_rr_Pv4
  L4_ploadrhtnew_rr_Pv4
  L4_ploadrhfnew_rr_Pv4
  L2_ploadrhtnew_pi_Pt4
  L2_ploadrhfnew_pi_Pt4
  L4_ploadrht_abs_Pt4
  L4_ploadrhf_abs_Pt4
  L4_ploadrhtnew_abs_Pt4
  L4_ploadrhfnew_abs_Pt4
  L2_ploadrit_io_Pt4
  L2_ploadrit_pi_Pt4
  L2_ploadrif_io_Pt4
  L2_ploadrif_pi_Pt4
  L2_ploadritnew_io_Pt4
  L2_ploadrifnew_io_Pt4
  L4_ploadrit_rr_Pv4
  L4_ploadrif_rr_Pv4
  L4_ploadritnew_rr_Pv4
  L4_ploadrifnew_rr_Pv4
  L2_ploadritnew_pi_Pt4
  L2_ploadrifnew_pi_Pt4
  L4_ploadrit_abs_Pt4
  L4_ploadrif_abs_Pt4
  L4_ploadritnew_abs_Pt4
  L4_ploadrifnew_abs_Pt4
  L2_ploadrdt_io_Pt4
  L2_ploadrdt_pi_Pt4
  L2_ploadrdf_io_Pt4
  L2_ploadrdf_pi_Pt4
  L2_ploadrdtnew_io_Pt4
  L2_ploadrdfnew_io_Pt4
  L4_ploadrdt_rr_Pv4
  L4_ploadrdf_rr_Pv4
  L4_ploadrdtnew_rr_Pv4
  L4_ploadrdfnew_rr_Pv4
  L2_ploadrdtnew_pi_Pt4
  L2_ploadrdfnew_pi_Pt4
  L4_ploadrdt_abs_Pt4
  L4_ploadrdf_abs_Pt4
  L4_ploadrdtnew_abs_Pt4
  L4_ploadrdfnew_abs_Pt4
  S2_pstorerbt_io_Pv4
  S2_pstorerbt_pi_Pv4
  S2_pstorerbf_io_Pv4
  S2_pstorerbf_pi_Pv4
  S4_pstorerbt_rr_Pv4
  S4_pstorerbf_rr_Pv4
  S4_pstorerbtnew_io_Pv4
  S4_pstorerbfnew_io_Pv4
  S4_pstorerbtnew_rr_Pv4
  S4_pstorerbfnew_rr_Pv4
  S2_pstorerbtnew_pi_Pv4
  S2_pstorerbfnew_pi_Pv4
  S4_pstorerbt_abs_Pv4
  S4_pstorerbf_abs_Pv4
  S4_pstorerbtnew_abs_Pv4
  S4_pstorerbfnew_abs_Pv4
  S2_pstorerht_io_Pv4
  S2_pstorerht_pi_Pv4
  S2_pstorerhf_io_Pv4
  S2_pstorerhf_pi_Pv4
  S4_pstorerht_rr_Pv4
  S4_pstorerhf_rr_Pv4
  S4_pstorerhtnew_io_Pv4
  S4_pstorerhfnew_io_Pv4
  S4_pstorerhtnew_rr_Pv4
  S4_pstorerhfnew_rr_Pv4
  S2_pstorerhtnew_pi_Pv4
  S2_pstorerhfnew_pi_Pv4
  S4_pstorerht_abs_Pv4
  S4_pstorerhf_abs_Pv4
  S4_pstorerhtnew_abs_Pv4
  S4_pstorerhfnew_abs_Pv4
  S2_pstorerft_io_Pv4
  S2_pstorerft_pi_Pv4
  S2_pstorerff_io_Pv4
  S2_pstorerff_pi_Pv4
  S4_pstorerft_rr_Pv4
  S4_pstorerff_rr_Pv4
  S4_pstorerftnew_io_Pv4
  S4_pstorerffnew_io_Pv4
  S4_pstorerftnew_rr_Pv4
  S4_pstorerffnew_rr_Pv4
  S2_pstorerftnew_pi_Pv4
  S2_pstorerffnew_pi_Pv4
  S4_pstorerft_abs_Pv4
  S4_pstorerff_abs_Pv4
  S4_pstorerftnew_abs_Pv4
  S4_pstorerffnew_abs_Pv4
  S2_pstorerit_io_Pv4
  S2_pstorerit_pi_Pv4
  S2_pstorerif_io_Pv4
  S2_pstorerif_pi_Pv4
  S4_pstorerit_rr_Pv4
  S4_pstorerif_rr_Pv4
  S4_pstoreritnew_io_Pv4
  S4_pstorerifnew_io_Pv4
  S4_pstoreritnew_rr_Pv4
  S4_pstorerifnew_rr_Pv4
  S2_pstoreritnew_pi_Pv4
  S2_pstorerifnew_pi_Pv4
  S4_pstorerit_abs_Pv4
  S4_pstorerif_abs_Pv4
  S4_pstoreritnew_abs_Pv4
  S4_pstorerifnew_abs_Pv4
  S2_pstorerdt_io_Pv4
  S2_pstorerdt_pi_Pv4
  S2_pstorerdf_io_Pv4
  S2_pstorerdf_pi_Pv4
  S4_pstorerdt_rr_Pv4
  S4_pstorerdf_rr_Pv4
  S4_pstorerdtnew_io_Pv4
  S4_pstorerdfnew_io_Pv4
  S4_pstorerdtnew_rr_Pv4
  S4_pstorerdfnew_rr_Pv4
  S2_pstorerdtnew_pi_Pv4
  S2_pstorerdfnew_pi_Pv4
  S4_pstorerdt_abs_Pv4
  S4_pstorerdf_abs_Pv4
  S4_pstorerdtnew_abs_Pv4
  S4_pstorerdfnew_abs_Pv4
  S2_pstorerinewt_io_Pv4
  S2_pstorerinewt_pi_Pv4
  S2_pstorerinewf_io_Pv4
  S2_pstorerinewf_pi_Pv4
  S4_pstorerinewt_rr_Pv4
  S4_pstorerinewf_rr_Pv4
  S4_pstorerinewtnew_io_Pv4
  S4_pstorerinewfnew_io_Pv4
  S4_pstorerinewtnew_rr_Pv4
  S4_pstorerinewfnew_rr_Pv4
  S2_pstorerinewtnew_pi_Pv4
  S2_pstorerinewfnew_pi_Pv4
  S4_pstorerinewt_abs_Pv4
  S4_pstorerinewf_abs_Pv4
  S4_pstorerinewtnew_abs_Pv4
  S4_pstorerinewfnew_abs_Pv4
  S2_pstorerbnewt_io_Pv4
  S2_pstorerbnewt_pi_Pv4
  S2_pstorerbnewf_io_Pv4
  S2_pstorerbnewf_pi_Pv4
  S4_pstorerbnewt_rr_Pv4
  S4_pstorerbnewf_rr_Pv4
  S4_pstorerbnewtnew_io_Pv4
  S4_pstorerbnewfnew_io_Pv4
  S4_pstorerbnewtnew_rr_Pv4
  S4_pstorerbnewfnew_rr_Pv4
  S2_pstorerbnewtnew_pi_Pv4
  S2_pstorerbnewfnew_pi_Pv4
  S4_pstorerbnewt_abs_Pv4
  S4_pstorerbnewf_abs_Pv4
  S4_pstorerbnewtnew_abs_Pv4
  S4_pstorerbnewfnew_abs_Pv4
  S2_pstorerhnewt_io_Pv4
  S2_pstorerhnewt_pi_Pv4
  S2_pstorerhnewf_io_Pv4
  S2_pstorerhnewf_pi_Pv4
  S4_pstorerhnewt_rr_Pv4
  S4_pstorerhnewf_rr_Pv4
  S4_pstorerhnewtnew_io_Pv4
  S4_pstorerhnewfnew_io_Pv4
  S4_pstorerhnewtnew_rr_Pv4
  S4_pstorerhnewfnew_rr_Pv4
  S2_pstorerhnewtnew_pi_Pv4
  S2_pstorerhnewfnew_pi_Pv4
  S4_pstorerhnewt_abs_Pv4
  S4_pstorerhnewf_abs_Pv4
  S4_pstorerhnewtnew_abs_Pv4
  S4_pstorerhnewfnew_abs_Pv4
  S4_storeirbt_io_Pv4
  S4_storeirbf_io_Pv4
  S4_storeirbtnew_io_Pv4
  S4_storeirbfnew_io_Pv4
  S4_storeirht_io_Pv4
  S4_storeirhf_io_Pv4
  S4_storeirhtnew_io_Pv4
  S4_storeirhfnew_io_Pv4
  S4_storeirit_io_Pv4
  S4_storeirif_io_Pv4
  S4_storeiritnew_io_Pv4
  S4_storeirifnew_io_Pv4
  C2_cmpeq_Pd4
  C2_cmpgt_Pd4
  C2_cmpgtu_Pd4
  C2_cmpeqp_Pd4
  C2_cmpgtp_Pd4
  C2_cmpgtup_Pd4
  C2_bitsset_Pd4
  C2_bitsclr_Pd4
  C4_nbitsset_Pd4
  C4_nbitsclr_Pd4
  C2_cmpeqi_Pd4
  C2_cmpgti_Pd4
  C2_cmpgtui_Pd4
  C2_bitsclri_Pd4
  C4_nbitsclri_Pd4
  C4_cmpneqi_Pd4
  C4_cmpltei_Pd4
  C4_cmplteui_Pd4
  C4_cmpneq_Pd4
  C4_cmplte_Pd4
  C4_cmplteu_Pd4
  C2_and_Pd4
  C2_and_Pt4
  C2_and_Ps4
  C2_or_Pd4
  C2_or_Pt4
  C2_or_Ps4
  C2_xor_Pd4
  C2_xor_Ps4
  C2_xor_Pt4
  C2_andn_Pd4
  C2_andn_Pt4
  C2_andn_Ps4
  C2_not_Pd4
  C2_not_Ps4
  C2_orn_Pd4
  C2_orn_Pt4
  C2_orn_Ps4
  C4_and_and_Pd4
  C4_and_and_Ps4
  C4_and_and_Pt4
  C4_and_and_Pu4
  C4_and_or_Pd4
  C4_and_or_Ps4
  C4_and_or_Pt4
  C4_and_or_Pu4
  C4_or_and_Pd4
  C4_or_and_Ps4
  C4_or_and_Pt4
  C4_or_and_Pu4
  C4_or_or_Pd4
  C4_or_or_Ps4
  C4_or_or_Pt4
  C4_or_or_Pu4
  C4_and_andn_Pd4
  C4_and_andn_Ps4
  C4_and_andn_Pt4
  C4_and_andn_Pu4
  C4_and_orn_Pd4
  C4_and_orn_Ps4
  C4_and_orn_Pt4
  C4_and_orn_Pu4
  C4_or_andn_Pd4
  C4_or_andn_Ps4
  C4_or_andn_Pt4
  C4_or_andn_Pu4
  C4_or_orn_Pd4
  C4_or_orn_Ps4
  C4_or_orn_Pt4
  C4_or_orn_Pu4
  C2_any8_Pd4
  C2_any8_Ps4
  C2_all8_Pd4
  C2_all8_Ps4
  C2_vitpack_Ps4
  C2_vitpack_Pt4
  C2_mux_Pu4
  C2_cmovenewit_Pu4
  C2_cmovenewif_Pu4
  C2_cmoveit_Pu4
  C2_cmoveif_Pu4
  C2_ccombinewnewt_Pu4
  C2_ccombinewnewf_Pu4
  C2_ccombinewt_Pu4
  C2_ccombinewf_Pu4
  C2_muxii_Pu4
  C2_muxir_Pu4
  C2_muxri_Pu4
  C2_vmux_Pu4
  C2_mask_Pt4
  A2_vcmpbeq_Pd4
  A4_vcmpbeqi_Pd4
  A4_vcmpbeq_any_Pd4
  A6_vcmpbeq_notany_Pd4
  A2_vcmpbgtu_Pd4
  A4_vcmpbgtui_Pd4
  A4_vcmpbgt_Pd4
  A4_vcmpbgti_Pd4
  A4_cmpbeq_Pd4
  A4_cmpbeqi_Pd4
  A4_cmpbgtu_Pd4
  A4_cmpbgtui_Pd4
  A4_cmpbgt_Pd4
  A4_cmpbgti_Pd4
  A2_vcmpheq_Pd4
  A2_vcmphgt_Pd4
  A2_vcmphgtu_Pd4
  A4_vcmpheqi_Pd4
  A4_vcmphgti_Pd4
  A4_vcmphgtui_Pd4
  A4_cmpheq_Pd4
  A4_cmphgt_Pd4
  A4_cmphgtu_Pd4
  A4_cmpheqi_Pd4
  A4_cmphgti_Pd4
  A4_cmphgtui_Pd4
  A2_vcmpweq_Pd4
  A2_vcmpwgt_Pd4
  A2_vcmpwgtu_Pd4
  A4_vcmpweqi_Pd4
  A4_vcmpwgti_Pd4
  A4_vcmpwgtui_Pd4
  A4_boundscheck_hi_Pd4
  A4_boundscheck_lo_Pd4
  A4_tlbmatch_Pd4
  C2_tfrpr_Ps4
  C2_tfrrp_Pd4
  C4_fastcorner9_Pd4
  C4_fastcorner9_Ps4
  C4_fastcorner9_Pt4
  C4_fastcorner9_not_Pd4
  C4_fastcorner9_not_Ps4
  C4_fastcorner9_not_Pt4
  A2_paddt_Pu4
  A2_paddf_Pu4
  A2_paddtnew_Pu4
  A2_paddfnew_Pu4
  A2_psubt_Pu4
  A2_psubf_Pu4
  A2_psubtnew_Pu4
  A2_psubfnew_Pu4
  A2_paddit_Pu4
  A2_paddif_Pu4
  A2_padditnew_Pu4
  A2_paddifnew_Pu4
  A2_pxort_Pu4
  A2_pxorf_Pu4
  A2_pxortnew_Pu4
  A2_pxorfnew_Pu4
  A2_pandt_Pu4
  A2_pandf_Pu4
  A2_pandtnew_Pu4
  A2_pandfnew_Pu4
  A2_port_Pu4
  A2_porf_Pu4
  A2_portnew_Pu4
  A2_porfnew_Pu4
  A4_psxtbt_Pu4
  A4_psxtbf_Pu4
  A4_psxtbtnew_Pu4
  A4_psxtbfnew_Pu4
  A4_pzxtbt_Pu4
  A4_pzxtbf_Pu4
  A4_pzxtbtnew_Pu4
  A4_pzxtbfnew_Pu4
  A4_psxtht_Pu4
  A4_psxthf_Pu4
  A4_psxthtnew_Pu4
  A4_psxthfnew_Pu4
  A4_pzxtht_Pu4
  A4_pzxthf_Pu4
  A4_pzxthtnew_Pu4
  A4_pzxthfnew_Pu4
  A4_paslht_Pu4
  A4_paslhf_Pu4
  A4_paslhtnew_Pu4
  A4_paslhfnew_Pu4
  A4_pasrht_Pu4
  A4_pasrhf_Pu4
  A4_pasrhtnew_Pu4
  A4_pasrhfnew_Pu4
  A4_addp_c_Px4
  A4_subp_c_Px4
  A5_ACS_Pe4
  A6_vminub_RdP_Pe4
  F2_sffma_sc_Pu4
  F2_sfcmpeq_Pd4
  F2_sfcmpgt_Pd4
  F2_sfcmpge_Pd4
  F2_sfcmpuo_Pd4
  F2_sfclass_Pd4
  F2_sfrecipa_Pe4
  F2_sfinvsqrta_Pe4
  F2_dfcmpeq_Pd4
  F2_dfcmpgt_Pd4
  F2_dfcmpge_Pd4
  F2_dfcmpuo_Pd4
  F2_dfclass_Pd4
  S2_valignrb_Pu4
  S2_vsplicerb_Pu4
  S2_tstbit_i_Pd4
  S4_ntstbit_i_Pd4
  S2_tstbit_r_Pd4
  S4_ntstbit_r_Pd4
  Y2_setimask_Pt4
  Y2_setprio_Pt4
  Y5_l2locka_Pd4
] [
  P0  P1  P2  P3
];

attach variables [
  L2_loadrub_pr_Mu2
  L2_loadrub_pbr_Mu2
  L2_loadrub_pci_Mu2
  L2_loadrub_pcr_Mu2
  L2_loadrb_pr_Mu2
  L2_loadrb_pbr_Mu2
  L2_loadrb_pci_Mu2
  L2_loadrb_pcr_Mu2
  L2_loadruh_pr_Mu2
  L2_loadruh_pbr_Mu2
  L2_loadruh_pci_Mu2
  L2_loadruh_pcr_Mu2
  L2_loadrh_pr_Mu2
  L2_loadrh_pbr_Mu2
  L2_loadrh_pci_Mu2
  L2_loadrh_pcr_Mu2
  L2_loadri_pr_Mu2
  L2_loadri_pbr_Mu2
  L2_loadri_pci_Mu2
  L2_loadri_pcr_Mu2
  L2_loadrd_pr_Mu2
  L2_loadrd_pbr_Mu2
  L2_loadrd_pci_Mu2
  L2_loadrd_pcr_Mu2
  L2_loadbzw2_pr_Mu2
  L2_loadbzw2_pbr_Mu2
  L2_loadbzw2_pci_Mu2
  L2_loadbzw2_pcr_Mu2
  L2_loadbzw4_pr_Mu2
  L2_loadbzw4_pbr_Mu2
  L2_loadbzw4_pci_Mu2
  L2_loadbzw4_pcr_Mu2
  L2_loadbsw2_pr_Mu2
  L2_loadbsw2_pbr_Mu2
  L2_loadbsw2_pci_Mu2
  L2_loadbsw2_pcr_Mu2
  L2_loadbsw4_pr_Mu2
  L2_loadbsw4_pbr_Mu2
  L2_loadbsw4_pci_Mu2
  L2_loadbsw4_pcr_Mu2
  L2_loadalignh_pr_Mu2
  L2_loadalignh_pbr_Mu2
  L2_loadalignh_pci_Mu2
  L2_loadalignh_pcr_Mu2
  L2_loadalignb_pr_Mu2
  L2_loadalignb_pbr_Mu2
  L2_loadalignb_pci_Mu2
  L2_loadalignb_pcr_Mu2
  S2_storerb_pr_Mu2
  S2_storerb_pbr_Mu2
  S2_storerb_pci_Mu2
  S2_storerb_pcr_Mu2
  S2_storerh_pr_Mu2
  S2_storerh_pbr_Mu2
  S2_storerh_pci_Mu2
  S2_storerh_pcr_Mu2
  S2_storerf_pr_Mu2
  S2_storerf_pbr_Mu2
  S2_storerf_pci_Mu2
  S2_storerf_pcr_Mu2
  S2_storeri_pr_Mu2
  S2_storeri_pbr_Mu2
  S2_storeri_pci_Mu2
  S2_storeri_pcr_Mu2
  S2_storerd_pr_Mu2
  S2_storerd_pbr_Mu2
  S2_storerd_pci_Mu2
  S2_storerd_pcr_Mu2
  S2_storerinew_pr_Mu2
  S2_storerinew_pbr_Mu2
  S2_storerinew_pci_Mu2
  S2_storerinew_pcr_Mu2
  S2_storerbnew_pr_Mu2
  S2_storerbnew_pbr_Mu2
  S2_storerbnew_pci_Mu2
  S2_storerbnew_pcr_Mu2
  S2_storerhnew_pr_Mu2
  S2_storerhnew_pbr_Mu2
  S2_storerhnew_pci_Mu2
  S2_storerhnew_pcr_Mu2
] [
  C6  C7
];

attach variables [
  A2_combinew_Rdd32_lo
  A2_combineii_Rdd32_lo
  A4_combineri_Rdd32_lo
  A4_combineir_Rdd32_lo
  A4_combineii_Rdd32_lo
  C2_ccombinewnewt_Rdd32_lo
  C2_ccombinewnewf_Rdd32_lo
  C2_ccombinewt_Rdd32_lo
  C2_ccombinewf_Rdd32_lo
] [
  R0  _ R2  _ R4  _ R6  _
  R8  _ R10 _ R12 _ R14 _
  R16 _ R18 _ R20 _ R22 _
  R24 _ R26 _ R28 _ R30 _
];

attach variables [
  A2_combinew_Rdd32_hi
  A2_combineii_Rdd32_hi
  A4_combineri_Rdd32_hi
  A4_combineir_Rdd32_hi
  A4_combineii_Rdd32_hi
  C2_ccombinewnewt_Rdd32_hi
  C2_ccombinewnewf_Rdd32_hi
  C2_ccombinewt_Rdd32_hi
  C2_ccombinewf_Rdd32_hi
] [
  R1  _ R3  _ R5  _ R7  _
  R9  _ R11 _ R13 _ R15 _
  R17 _ R19 _ R21 _ R23 _
  R25 _ R27 _ R29 _ R31 _
];
attach variables [
  SA1_combinezr_Rdd8_lo
  SA1_combinerz_Rdd8_lo
  SA1_combine0i_Rdd8_lo
  SA1_combine1i_Rdd8_lo
  SA1_combine2i_Rdd8_lo
  SA1_combine3i_Rdd8_lo
] [
  R0   R2   R4   R6
  R16  R18  R20  R22
];

attach variables [
  SA1_combinezr_Rdd8_hi
  SA1_combinerz_Rdd8_hi
  SA1_combine0i_Rdd8_hi
  SA1_combine1i_Rdd8_hi
  SA1_combine2i_Rdd8_hi
  SA1_combine3i_Rdd8_hi
] [
  R1   R3   R5   R7
  R17  R19  R21  R23
];

J2_jump_r22_2: reloc is                       J2_jump_r22_2_0 & J2_jump_r22_2_1 [ reloc = pkt_start + ((((J2_jump_r22_2_0 << 0) + (J2_jump_r22_2_1 << 13)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J2_jump_r22_2: reloc is immext = 0xffffffff & J2_jump_r22_2_0 & J2_jump_r22_2_1 [ reloc = pkt_start + (((J2_jump_r22_2_0 << 0) + (J2_jump_r22_2_1 << 13)) << 2); ] { export *[ram]:4 reloc; }

J2_jumpt_r15_2: reloc is                       J2_jumpt_r15_2_0 & J2_jumpt_r15_2_1 & J2_jumpt_r15_2_2 & J2_jumpt_r15_2_3 [ reloc = pkt_start + ((((((J2_jumpt_r15_2_0 << 0) + (J2_jumpt_r15_2_1 << 7)) + (J2_jumpt_r15_2_2 << 8)) + (J2_jumpt_r15_2_3 << 13)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J2_jumpt_r15_2: reloc is immext = 0xffffffff & J2_jumpt_r15_2_0 & J2_jumpt_r15_2_1 & J2_jumpt_r15_2_2 & J2_jumpt_r15_2_3 [ reloc = pkt_start + (((((J2_jumpt_r15_2_0 << 0) + (J2_jumpt_r15_2_1 << 7)) + (J2_jumpt_r15_2_2 << 8)) + (J2_jumpt_r15_2_3 << 13)) << 2); ] { export *[ram]:4 reloc; }

J2_jumpf_r15_2: reloc is                       J2_jumpf_r15_2_0 & J2_jumpf_r15_2_1 & J2_jumpf_r15_2_2 & J2_jumpf_r15_2_3 [ reloc = pkt_start + ((((((J2_jumpf_r15_2_0 << 0) + (J2_jumpf_r15_2_1 << 7)) + (J2_jumpf_r15_2_2 << 8)) + (J2_jumpf_r15_2_3 << 13)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J2_jumpf_r15_2: reloc is immext = 0xffffffff & J2_jumpf_r15_2_0 & J2_jumpf_r15_2_1 & J2_jumpf_r15_2_2 & J2_jumpf_r15_2_3 [ reloc = pkt_start + (((((J2_jumpf_r15_2_0 << 0) + (J2_jumpf_r15_2_1 << 7)) + (J2_jumpf_r15_2_2 << 8)) + (J2_jumpf_r15_2_3 << 13)) << 2); ] { export *[ram]:4 reloc; }

J2_jumptpt_r15_2: reloc is                       J2_jumptpt_r15_2_0 & J2_jumptpt_r15_2_1 & J2_jumptpt_r15_2_2 & J2_jumptpt_r15_2_3 [ reloc = pkt_start + ((((((J2_jumptpt_r15_2_0 << 0) + (J2_jumptpt_r15_2_1 << 7)) + (J2_jumptpt_r15_2_2 << 8)) + (J2_jumptpt_r15_2_3 << 13)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J2_jumptpt_r15_2: reloc is immext = 0xffffffff & J2_jumptpt_r15_2_0 & J2_jumptpt_r15_2_1 & J2_jumptpt_r15_2_2 & J2_jumptpt_r15_2_3 [ reloc = pkt_start + (((((J2_jumptpt_r15_2_0 << 0) + (J2_jumptpt_r15_2_1 << 7)) + (J2_jumptpt_r15_2_2 << 8)) + (J2_jumptpt_r15_2_3 << 13)) << 2); ] { export *[ram]:4 reloc; }

J2_jumpfpt_r15_2: reloc is                       J2_jumpfpt_r15_2_0 & J2_jumpfpt_r15_2_1 & J2_jumpfpt_r15_2_2 & J2_jumpfpt_r15_2_3 [ reloc = pkt_start + ((((((J2_jumpfpt_r15_2_0 << 0) + (J2_jumpfpt_r15_2_1 << 7)) + (J2_jumpfpt_r15_2_2 << 8)) + (J2_jumpfpt_r15_2_3 << 13)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J2_jumpfpt_r15_2: reloc is immext = 0xffffffff & J2_jumpfpt_r15_2_0 & J2_jumpfpt_r15_2_1 & J2_jumpfpt_r15_2_2 & J2_jumpfpt_r15_2_3 [ reloc = pkt_start + (((((J2_jumpfpt_r15_2_0 << 0) + (J2_jumpfpt_r15_2_1 << 7)) + (J2_jumpfpt_r15_2_2 << 8)) + (J2_jumpfpt_r15_2_3 << 13)) << 2); ] { export *[ram]:4 reloc; }

J2_jumptnew_r15_2: reloc is                       J2_jumptnew_r15_2_0 & J2_jumptnew_r15_2_1 & J2_jumptnew_r15_2_2 & J2_jumptnew_r15_2_3 [ reloc = pkt_start + ((((((J2_jumptnew_r15_2_0 << 0) + (J2_jumptnew_r15_2_1 << 7)) + (J2_jumptnew_r15_2_2 << 8)) + (J2_jumptnew_r15_2_3 << 13)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J2_jumptnew_r15_2: reloc is immext = 0xffffffff & J2_jumptnew_r15_2_0 & J2_jumptnew_r15_2_1 & J2_jumptnew_r15_2_2 & J2_jumptnew_r15_2_3 [ reloc = pkt_start + (((((J2_jumptnew_r15_2_0 << 0) + (J2_jumptnew_r15_2_1 << 7)) + (J2_jumptnew_r15_2_2 << 8)) + (J2_jumptnew_r15_2_3 << 13)) << 2); ] { export *[ram]:4 reloc; }

J2_jumpfnew_r15_2: reloc is                       J2_jumpfnew_r15_2_0 & J2_jumpfnew_r15_2_1 & J2_jumpfnew_r15_2_2 & J2_jumpfnew_r15_2_3 [ reloc = pkt_start + ((((((J2_jumpfnew_r15_2_0 << 0) + (J2_jumpfnew_r15_2_1 << 7)) + (J2_jumpfnew_r15_2_2 << 8)) + (J2_jumpfnew_r15_2_3 << 13)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J2_jumpfnew_r15_2: reloc is immext = 0xffffffff & J2_jumpfnew_r15_2_0 & J2_jumpfnew_r15_2_1 & J2_jumpfnew_r15_2_2 & J2_jumpfnew_r15_2_3 [ reloc = pkt_start + (((((J2_jumpfnew_r15_2_0 << 0) + (J2_jumpfnew_r15_2_1 << 7)) + (J2_jumpfnew_r15_2_2 << 8)) + (J2_jumpfnew_r15_2_3 << 13)) << 2); ] { export *[ram]:4 reloc; }

J2_jumptnewpt_r15_2: reloc is                       J2_jumptnewpt_r15_2_0 & J2_jumptnewpt_r15_2_1 & J2_jumptnewpt_r15_2_2 & J2_jumptnewpt_r15_2_3 [ reloc = pkt_start + ((((((J2_jumptnewpt_r15_2_0 << 0) + (J2_jumptnewpt_r15_2_1 << 7)) + (J2_jumptnewpt_r15_2_2 << 8)) + (J2_jumptnewpt_r15_2_3 << 13)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J2_jumptnewpt_r15_2: reloc is immext = 0xffffffff & J2_jumptnewpt_r15_2_0 & J2_jumptnewpt_r15_2_1 & J2_jumptnewpt_r15_2_2 & J2_jumptnewpt_r15_2_3 [ reloc = pkt_start + (((((J2_jumptnewpt_r15_2_0 << 0) + (J2_jumptnewpt_r15_2_1 << 7)) + (J2_jumptnewpt_r15_2_2 << 8)) + (J2_jumptnewpt_r15_2_3 << 13)) << 2); ] { export *[ram]:4 reloc; }

J2_jumpfnewpt_r15_2: reloc is                       J2_jumpfnewpt_r15_2_0 & J2_jumpfnewpt_r15_2_1 & J2_jumpfnewpt_r15_2_2 & J2_jumpfnewpt_r15_2_3 [ reloc = pkt_start + ((((((J2_jumpfnewpt_r15_2_0 << 0) + (J2_jumpfnewpt_r15_2_1 << 7)) + (J2_jumpfnewpt_r15_2_2 << 8)) + (J2_jumpfnewpt_r15_2_3 << 13)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J2_jumpfnewpt_r15_2: reloc is immext = 0xffffffff & J2_jumpfnewpt_r15_2_0 & J2_jumpfnewpt_r15_2_1 & J2_jumpfnewpt_r15_2_2 & J2_jumpfnewpt_r15_2_3 [ reloc = pkt_start + (((((J2_jumpfnewpt_r15_2_0 << 0) + (J2_jumpfnewpt_r15_2_1 << 7)) + (J2_jumpfnewpt_r15_2_2 << 8)) + (J2_jumpfnewpt_r15_2_3 << 13)) << 2); ] { export *[ram]:4 reloc; }

J2_jumprz_r13_2: reloc is J2_jumprz_r13_2_0 & J2_jumprz_r13_2_1 & J2_jumprz_r13_2_2 [ reloc = pkt_start + ((((J2_jumprz_r13_2_0 << 0) + (J2_jumprz_r13_2_1 << 11)) + (J2_jumprz_r13_2_2 << 12)) << 2); ] { export *[ram]:4 reloc; }

J2_jumprnz_r13_2: reloc is J2_jumprnz_r13_2_0 & J2_jumprnz_r13_2_1 & J2_jumprnz_r13_2_2 [ reloc = pkt_start + ((((J2_jumprnz_r13_2_0 << 0) + (J2_jumprnz_r13_2_1 << 11)) + (J2_jumprnz_r13_2_2 << 12)) << 2); ] { export *[ram]:4 reloc; }

J2_jumprzpt_r13_2: reloc is J2_jumprzpt_r13_2_0 & J2_jumprzpt_r13_2_1 & J2_jumprzpt_r13_2_2 [ reloc = pkt_start + ((((J2_jumprzpt_r13_2_0 << 0) + (J2_jumprzpt_r13_2_1 << 11)) + (J2_jumprzpt_r13_2_2 << 12)) << 2); ] { export *[ram]:4 reloc; }

J2_jumprnzpt_r13_2: reloc is J2_jumprnzpt_r13_2_0 & J2_jumprnzpt_r13_2_1 & J2_jumprnzpt_r13_2_2 [ reloc = pkt_start + ((((J2_jumprnzpt_r13_2_0 << 0) + (J2_jumprnzpt_r13_2_1 << 11)) + (J2_jumprnzpt_r13_2_2 << 12)) << 2); ] { export *[ram]:4 reloc; }

J2_jumprgtez_r13_2: reloc is J2_jumprgtez_r13_2_0 & J2_jumprgtez_r13_2_1 & J2_jumprgtez_r13_2_2 [ reloc = pkt_start + ((((J2_jumprgtez_r13_2_0 << 0) + (J2_jumprgtez_r13_2_1 << 11)) + (J2_jumprgtez_r13_2_2 << 12)) << 2); ] { export *[ram]:4 reloc; }

J2_jumprgtezpt_r13_2: reloc is J2_jumprgtezpt_r13_2_0 & J2_jumprgtezpt_r13_2_1 & J2_jumprgtezpt_r13_2_2 [ reloc = pkt_start + ((((J2_jumprgtezpt_r13_2_0 << 0) + (J2_jumprgtezpt_r13_2_1 << 11)) + (J2_jumprgtezpt_r13_2_2 << 12)) << 2); ] { export *[ram]:4 reloc; }

J2_jumprltez_r13_2: reloc is J2_jumprltez_r13_2_0 & J2_jumprltez_r13_2_1 & J2_jumprltez_r13_2_2 [ reloc = pkt_start + ((((J2_jumprltez_r13_2_0 << 0) + (J2_jumprltez_r13_2_1 << 11)) + (J2_jumprltez_r13_2_2 << 12)) << 2); ] { export *[ram]:4 reloc; }

J2_jumprltezpt_r13_2: reloc is J2_jumprltezpt_r13_2_0 & J2_jumprltezpt_r13_2_1 & J2_jumprltezpt_r13_2_2 [ reloc = pkt_start + ((((J2_jumprltezpt_r13_2_0 << 0) + (J2_jumprltezpt_r13_2_1 << 11)) + (J2_jumprltezpt_r13_2_2 << 12)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqi_tp0_jump_nt_U5: reloc is J4_cmpeqi_tp0_jump_nt_U5_0 [ reloc = J4_cmpeqi_tp0_jump_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpeqi_tp0_jump_nt_r9_2: reloc is                       J4_cmpeqi_tp0_jump_nt_r9_2_0 & J4_cmpeqi_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqi_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpeqi_tp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqi_tp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeqi_tp0_jump_nt_r9_2_0 & J4_cmpeqi_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqi_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpeqi_tp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqi_fp0_jump_nt_U5: reloc is J4_cmpeqi_fp0_jump_nt_U5_0 [ reloc = J4_cmpeqi_fp0_jump_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpeqi_fp0_jump_nt_r9_2: reloc is                       J4_cmpeqi_fp0_jump_nt_r9_2_0 & J4_cmpeqi_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqi_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpeqi_fp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqi_fp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeqi_fp0_jump_nt_r9_2_0 & J4_cmpeqi_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqi_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpeqi_fp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqi_tp0_jump_t_U5: reloc is J4_cmpeqi_tp0_jump_t_U5_0 [ reloc = J4_cmpeqi_tp0_jump_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpeqi_tp0_jump_t_r9_2: reloc is                       J4_cmpeqi_tp0_jump_t_r9_2_0 & J4_cmpeqi_tp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqi_tp0_jump_t_r9_2_0 << 0) + (J4_cmpeqi_tp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqi_tp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeqi_tp0_jump_t_r9_2_0 & J4_cmpeqi_tp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqi_tp0_jump_t_r9_2_0 << 0) + (J4_cmpeqi_tp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqi_fp0_jump_t_U5: reloc is J4_cmpeqi_fp0_jump_t_U5_0 [ reloc = J4_cmpeqi_fp0_jump_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpeqi_fp0_jump_t_r9_2: reloc is                       J4_cmpeqi_fp0_jump_t_r9_2_0 & J4_cmpeqi_fp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqi_fp0_jump_t_r9_2_0 << 0) + (J4_cmpeqi_fp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqi_fp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeqi_fp0_jump_t_r9_2_0 & J4_cmpeqi_fp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqi_fp0_jump_t_r9_2_0 << 0) + (J4_cmpeqi_fp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqi_tp1_jump_nt_U5: reloc is J4_cmpeqi_tp1_jump_nt_U5_0 [ reloc = J4_cmpeqi_tp1_jump_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpeqi_tp1_jump_nt_r9_2: reloc is                       J4_cmpeqi_tp1_jump_nt_r9_2_0 & J4_cmpeqi_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqi_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpeqi_tp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqi_tp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeqi_tp1_jump_nt_r9_2_0 & J4_cmpeqi_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqi_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpeqi_tp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqi_fp1_jump_nt_U5: reloc is J4_cmpeqi_fp1_jump_nt_U5_0 [ reloc = J4_cmpeqi_fp1_jump_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpeqi_fp1_jump_nt_r9_2: reloc is                       J4_cmpeqi_fp1_jump_nt_r9_2_0 & J4_cmpeqi_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqi_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpeqi_fp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqi_fp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeqi_fp1_jump_nt_r9_2_0 & J4_cmpeqi_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqi_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpeqi_fp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqi_tp1_jump_t_U5: reloc is J4_cmpeqi_tp1_jump_t_U5_0 [ reloc = J4_cmpeqi_tp1_jump_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpeqi_tp1_jump_t_r9_2: reloc is                       J4_cmpeqi_tp1_jump_t_r9_2_0 & J4_cmpeqi_tp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqi_tp1_jump_t_r9_2_0 << 0) + (J4_cmpeqi_tp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqi_tp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeqi_tp1_jump_t_r9_2_0 & J4_cmpeqi_tp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqi_tp1_jump_t_r9_2_0 << 0) + (J4_cmpeqi_tp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqi_fp1_jump_t_U5: reloc is J4_cmpeqi_fp1_jump_t_U5_0 [ reloc = J4_cmpeqi_fp1_jump_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpeqi_fp1_jump_t_r9_2: reloc is                       J4_cmpeqi_fp1_jump_t_r9_2_0 & J4_cmpeqi_fp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqi_fp1_jump_t_r9_2_0 << 0) + (J4_cmpeqi_fp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqi_fp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeqi_fp1_jump_t_r9_2_0 & J4_cmpeqi_fp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqi_fp1_jump_t_r9_2_0 << 0) + (J4_cmpeqi_fp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgti_tp0_jump_nt_U5: reloc is J4_cmpgti_tp0_jump_nt_U5_0 [ reloc = J4_cmpgti_tp0_jump_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgti_tp0_jump_nt_r9_2: reloc is                       J4_cmpgti_tp0_jump_nt_r9_2_0 & J4_cmpgti_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgti_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpgti_tp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgti_tp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgti_tp0_jump_nt_r9_2_0 & J4_cmpgti_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgti_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpgti_tp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgti_fp0_jump_nt_U5: reloc is J4_cmpgti_fp0_jump_nt_U5_0 [ reloc = J4_cmpgti_fp0_jump_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgti_fp0_jump_nt_r9_2: reloc is                       J4_cmpgti_fp0_jump_nt_r9_2_0 & J4_cmpgti_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgti_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpgti_fp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgti_fp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgti_fp0_jump_nt_r9_2_0 & J4_cmpgti_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgti_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpgti_fp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgti_tp0_jump_t_U5: reloc is J4_cmpgti_tp0_jump_t_U5_0 [ reloc = J4_cmpgti_tp0_jump_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgti_tp0_jump_t_r9_2: reloc is                       J4_cmpgti_tp0_jump_t_r9_2_0 & J4_cmpgti_tp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgti_tp0_jump_t_r9_2_0 << 0) + (J4_cmpgti_tp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgti_tp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgti_tp0_jump_t_r9_2_0 & J4_cmpgti_tp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgti_tp0_jump_t_r9_2_0 << 0) + (J4_cmpgti_tp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgti_fp0_jump_t_U5: reloc is J4_cmpgti_fp0_jump_t_U5_0 [ reloc = J4_cmpgti_fp0_jump_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgti_fp0_jump_t_r9_2: reloc is                       J4_cmpgti_fp0_jump_t_r9_2_0 & J4_cmpgti_fp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgti_fp0_jump_t_r9_2_0 << 0) + (J4_cmpgti_fp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgti_fp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgti_fp0_jump_t_r9_2_0 & J4_cmpgti_fp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgti_fp0_jump_t_r9_2_0 << 0) + (J4_cmpgti_fp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgti_tp1_jump_nt_U5: reloc is J4_cmpgti_tp1_jump_nt_U5_0 [ reloc = J4_cmpgti_tp1_jump_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgti_tp1_jump_nt_r9_2: reloc is                       J4_cmpgti_tp1_jump_nt_r9_2_0 & J4_cmpgti_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgti_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpgti_tp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgti_tp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgti_tp1_jump_nt_r9_2_0 & J4_cmpgti_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgti_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpgti_tp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgti_fp1_jump_nt_U5: reloc is J4_cmpgti_fp1_jump_nt_U5_0 [ reloc = J4_cmpgti_fp1_jump_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgti_fp1_jump_nt_r9_2: reloc is                       J4_cmpgti_fp1_jump_nt_r9_2_0 & J4_cmpgti_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgti_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpgti_fp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgti_fp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgti_fp1_jump_nt_r9_2_0 & J4_cmpgti_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgti_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpgti_fp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgti_tp1_jump_t_U5: reloc is J4_cmpgti_tp1_jump_t_U5_0 [ reloc = J4_cmpgti_tp1_jump_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgti_tp1_jump_t_r9_2: reloc is                       J4_cmpgti_tp1_jump_t_r9_2_0 & J4_cmpgti_tp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgti_tp1_jump_t_r9_2_0 << 0) + (J4_cmpgti_tp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgti_tp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgti_tp1_jump_t_r9_2_0 & J4_cmpgti_tp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgti_tp1_jump_t_r9_2_0 << 0) + (J4_cmpgti_tp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgti_fp1_jump_t_U5: reloc is J4_cmpgti_fp1_jump_t_U5_0 [ reloc = J4_cmpgti_fp1_jump_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgti_fp1_jump_t_r9_2: reloc is                       J4_cmpgti_fp1_jump_t_r9_2_0 & J4_cmpgti_fp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgti_fp1_jump_t_r9_2_0 << 0) + (J4_cmpgti_fp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgti_fp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgti_fp1_jump_t_r9_2_0 & J4_cmpgti_fp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgti_fp1_jump_t_r9_2_0 << 0) + (J4_cmpgti_fp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtui_tp0_jump_nt_U5: reloc is J4_cmpgtui_tp0_jump_nt_U5_0 [ reloc = J4_cmpgtui_tp0_jump_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgtui_tp0_jump_nt_r9_2: reloc is                       J4_cmpgtui_tp0_jump_nt_r9_2_0 & J4_cmpgtui_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtui_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpgtui_tp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtui_tp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtui_tp0_jump_nt_r9_2_0 & J4_cmpgtui_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtui_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpgtui_tp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtui_fp0_jump_nt_U5: reloc is J4_cmpgtui_fp0_jump_nt_U5_0 [ reloc = J4_cmpgtui_fp0_jump_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgtui_fp0_jump_nt_r9_2: reloc is                       J4_cmpgtui_fp0_jump_nt_r9_2_0 & J4_cmpgtui_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtui_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpgtui_fp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtui_fp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtui_fp0_jump_nt_r9_2_0 & J4_cmpgtui_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtui_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpgtui_fp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtui_tp0_jump_t_U5: reloc is J4_cmpgtui_tp0_jump_t_U5_0 [ reloc = J4_cmpgtui_tp0_jump_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgtui_tp0_jump_t_r9_2: reloc is                       J4_cmpgtui_tp0_jump_t_r9_2_0 & J4_cmpgtui_tp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtui_tp0_jump_t_r9_2_0 << 0) + (J4_cmpgtui_tp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtui_tp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtui_tp0_jump_t_r9_2_0 & J4_cmpgtui_tp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtui_tp0_jump_t_r9_2_0 << 0) + (J4_cmpgtui_tp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtui_fp0_jump_t_U5: reloc is J4_cmpgtui_fp0_jump_t_U5_0 [ reloc = J4_cmpgtui_fp0_jump_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgtui_fp0_jump_t_r9_2: reloc is                       J4_cmpgtui_fp0_jump_t_r9_2_0 & J4_cmpgtui_fp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtui_fp0_jump_t_r9_2_0 << 0) + (J4_cmpgtui_fp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtui_fp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtui_fp0_jump_t_r9_2_0 & J4_cmpgtui_fp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtui_fp0_jump_t_r9_2_0 << 0) + (J4_cmpgtui_fp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtui_tp1_jump_nt_U5: reloc is J4_cmpgtui_tp1_jump_nt_U5_0 [ reloc = J4_cmpgtui_tp1_jump_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgtui_tp1_jump_nt_r9_2: reloc is                       J4_cmpgtui_tp1_jump_nt_r9_2_0 & J4_cmpgtui_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtui_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpgtui_tp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtui_tp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtui_tp1_jump_nt_r9_2_0 & J4_cmpgtui_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtui_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpgtui_tp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtui_fp1_jump_nt_U5: reloc is J4_cmpgtui_fp1_jump_nt_U5_0 [ reloc = J4_cmpgtui_fp1_jump_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgtui_fp1_jump_nt_r9_2: reloc is                       J4_cmpgtui_fp1_jump_nt_r9_2_0 & J4_cmpgtui_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtui_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpgtui_fp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtui_fp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtui_fp1_jump_nt_r9_2_0 & J4_cmpgtui_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtui_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpgtui_fp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtui_tp1_jump_t_U5: reloc is J4_cmpgtui_tp1_jump_t_U5_0 [ reloc = J4_cmpgtui_tp1_jump_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgtui_tp1_jump_t_r9_2: reloc is                       J4_cmpgtui_tp1_jump_t_r9_2_0 & J4_cmpgtui_tp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtui_tp1_jump_t_r9_2_0 << 0) + (J4_cmpgtui_tp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtui_tp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtui_tp1_jump_t_r9_2_0 & J4_cmpgtui_tp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtui_tp1_jump_t_r9_2_0 << 0) + (J4_cmpgtui_tp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtui_fp1_jump_t_U5: reloc is J4_cmpgtui_fp1_jump_t_U5_0 [ reloc = J4_cmpgtui_fp1_jump_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgtui_fp1_jump_t_r9_2: reloc is                       J4_cmpgtui_fp1_jump_t_r9_2_0 & J4_cmpgtui_fp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtui_fp1_jump_t_r9_2_0 << 0) + (J4_cmpgtui_fp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtui_fp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtui_fp1_jump_t_r9_2_0 & J4_cmpgtui_fp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtui_fp1_jump_t_r9_2_0 << 0) + (J4_cmpgtui_fp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqn1_tp0_jump_nt_r9_2: reloc is                       J4_cmpeqn1_tp0_jump_nt_r9_2_0 & J4_cmpeqn1_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqn1_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpeqn1_tp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqn1_tp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeqn1_tp0_jump_nt_r9_2_0 & J4_cmpeqn1_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqn1_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpeqn1_tp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqn1_fp0_jump_nt_r9_2: reloc is                       J4_cmpeqn1_fp0_jump_nt_r9_2_0 & J4_cmpeqn1_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqn1_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpeqn1_fp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqn1_fp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeqn1_fp0_jump_nt_r9_2_0 & J4_cmpeqn1_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqn1_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpeqn1_fp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqn1_tp0_jump_t_r9_2: reloc is                       J4_cmpeqn1_tp0_jump_t_r9_2_0 & J4_cmpeqn1_tp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqn1_tp0_jump_t_r9_2_0 << 0) + (J4_cmpeqn1_tp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqn1_tp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeqn1_tp0_jump_t_r9_2_0 & J4_cmpeqn1_tp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqn1_tp0_jump_t_r9_2_0 << 0) + (J4_cmpeqn1_tp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqn1_fp0_jump_t_r9_2: reloc is                       J4_cmpeqn1_fp0_jump_t_r9_2_0 & J4_cmpeqn1_fp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqn1_fp0_jump_t_r9_2_0 << 0) + (J4_cmpeqn1_fp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqn1_fp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeqn1_fp0_jump_t_r9_2_0 & J4_cmpeqn1_fp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqn1_fp0_jump_t_r9_2_0 << 0) + (J4_cmpeqn1_fp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqn1_tp1_jump_nt_r9_2: reloc is                       J4_cmpeqn1_tp1_jump_nt_r9_2_0 & J4_cmpeqn1_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqn1_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpeqn1_tp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqn1_tp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeqn1_tp1_jump_nt_r9_2_0 & J4_cmpeqn1_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqn1_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpeqn1_tp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqn1_fp1_jump_nt_r9_2: reloc is                       J4_cmpeqn1_fp1_jump_nt_r9_2_0 & J4_cmpeqn1_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqn1_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpeqn1_fp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqn1_fp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeqn1_fp1_jump_nt_r9_2_0 & J4_cmpeqn1_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqn1_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpeqn1_fp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqn1_tp1_jump_t_r9_2: reloc is                       J4_cmpeqn1_tp1_jump_t_r9_2_0 & J4_cmpeqn1_tp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqn1_tp1_jump_t_r9_2_0 << 0) + (J4_cmpeqn1_tp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqn1_tp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeqn1_tp1_jump_t_r9_2_0 & J4_cmpeqn1_tp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqn1_tp1_jump_t_r9_2_0 << 0) + (J4_cmpeqn1_tp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqn1_fp1_jump_t_r9_2: reloc is                       J4_cmpeqn1_fp1_jump_t_r9_2_0 & J4_cmpeqn1_fp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqn1_fp1_jump_t_r9_2_0 << 0) + (J4_cmpeqn1_fp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqn1_fp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeqn1_fp1_jump_t_r9_2_0 & J4_cmpeqn1_fp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqn1_fp1_jump_t_r9_2_0 << 0) + (J4_cmpeqn1_fp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtn1_tp0_jump_nt_r9_2: reloc is                       J4_cmpgtn1_tp0_jump_nt_r9_2_0 & J4_cmpgtn1_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtn1_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpgtn1_tp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtn1_tp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtn1_tp0_jump_nt_r9_2_0 & J4_cmpgtn1_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtn1_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpgtn1_tp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtn1_fp0_jump_nt_r9_2: reloc is                       J4_cmpgtn1_fp0_jump_nt_r9_2_0 & J4_cmpgtn1_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtn1_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpgtn1_fp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtn1_fp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtn1_fp0_jump_nt_r9_2_0 & J4_cmpgtn1_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtn1_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpgtn1_fp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtn1_tp0_jump_t_r9_2: reloc is                       J4_cmpgtn1_tp0_jump_t_r9_2_0 & J4_cmpgtn1_tp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtn1_tp0_jump_t_r9_2_0 << 0) + (J4_cmpgtn1_tp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtn1_tp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtn1_tp0_jump_t_r9_2_0 & J4_cmpgtn1_tp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtn1_tp0_jump_t_r9_2_0 << 0) + (J4_cmpgtn1_tp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtn1_fp0_jump_t_r9_2: reloc is                       J4_cmpgtn1_fp0_jump_t_r9_2_0 & J4_cmpgtn1_fp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtn1_fp0_jump_t_r9_2_0 << 0) + (J4_cmpgtn1_fp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtn1_fp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtn1_fp0_jump_t_r9_2_0 & J4_cmpgtn1_fp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtn1_fp0_jump_t_r9_2_0 << 0) + (J4_cmpgtn1_fp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtn1_tp1_jump_nt_r9_2: reloc is                       J4_cmpgtn1_tp1_jump_nt_r9_2_0 & J4_cmpgtn1_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtn1_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpgtn1_tp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtn1_tp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtn1_tp1_jump_nt_r9_2_0 & J4_cmpgtn1_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtn1_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpgtn1_tp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtn1_fp1_jump_nt_r9_2: reloc is                       J4_cmpgtn1_fp1_jump_nt_r9_2_0 & J4_cmpgtn1_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtn1_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpgtn1_fp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtn1_fp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtn1_fp1_jump_nt_r9_2_0 & J4_cmpgtn1_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtn1_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpgtn1_fp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtn1_tp1_jump_t_r9_2: reloc is                       J4_cmpgtn1_tp1_jump_t_r9_2_0 & J4_cmpgtn1_tp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtn1_tp1_jump_t_r9_2_0 << 0) + (J4_cmpgtn1_tp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtn1_tp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtn1_tp1_jump_t_r9_2_0 & J4_cmpgtn1_tp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtn1_tp1_jump_t_r9_2_0 << 0) + (J4_cmpgtn1_tp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtn1_fp1_jump_t_r9_2: reloc is                       J4_cmpgtn1_fp1_jump_t_r9_2_0 & J4_cmpgtn1_fp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtn1_fp1_jump_t_r9_2_0 << 0) + (J4_cmpgtn1_fp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtn1_fp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtn1_fp1_jump_t_r9_2_0 & J4_cmpgtn1_fp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtn1_fp1_jump_t_r9_2_0 << 0) + (J4_cmpgtn1_fp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_tstbit0_tp0_jump_nt_r9_2: reloc is                       J4_tstbit0_tp0_jump_nt_r9_2_0 & J4_tstbit0_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_tstbit0_tp0_jump_nt_r9_2_0 << 0) + (J4_tstbit0_tp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_tstbit0_tp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_tstbit0_tp0_jump_nt_r9_2_0 & J4_tstbit0_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_tstbit0_tp0_jump_nt_r9_2_0 << 0) + (J4_tstbit0_tp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_tstbit0_fp0_jump_nt_r9_2: reloc is                       J4_tstbit0_fp0_jump_nt_r9_2_0 & J4_tstbit0_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_tstbit0_fp0_jump_nt_r9_2_0 << 0) + (J4_tstbit0_fp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_tstbit0_fp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_tstbit0_fp0_jump_nt_r9_2_0 & J4_tstbit0_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_tstbit0_fp0_jump_nt_r9_2_0 << 0) + (J4_tstbit0_fp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_tstbit0_tp0_jump_t_r9_2: reloc is                       J4_tstbit0_tp0_jump_t_r9_2_0 & J4_tstbit0_tp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_tstbit0_tp0_jump_t_r9_2_0 << 0) + (J4_tstbit0_tp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_tstbit0_tp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_tstbit0_tp0_jump_t_r9_2_0 & J4_tstbit0_tp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_tstbit0_tp0_jump_t_r9_2_0 << 0) + (J4_tstbit0_tp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_tstbit0_fp0_jump_t_r9_2: reloc is                       J4_tstbit0_fp0_jump_t_r9_2_0 & J4_tstbit0_fp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_tstbit0_fp0_jump_t_r9_2_0 << 0) + (J4_tstbit0_fp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_tstbit0_fp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_tstbit0_fp0_jump_t_r9_2_0 & J4_tstbit0_fp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_tstbit0_fp0_jump_t_r9_2_0 << 0) + (J4_tstbit0_fp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_tstbit0_tp1_jump_nt_r9_2: reloc is                       J4_tstbit0_tp1_jump_nt_r9_2_0 & J4_tstbit0_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_tstbit0_tp1_jump_nt_r9_2_0 << 0) + (J4_tstbit0_tp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_tstbit0_tp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_tstbit0_tp1_jump_nt_r9_2_0 & J4_tstbit0_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_tstbit0_tp1_jump_nt_r9_2_0 << 0) + (J4_tstbit0_tp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_tstbit0_fp1_jump_nt_r9_2: reloc is                       J4_tstbit0_fp1_jump_nt_r9_2_0 & J4_tstbit0_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_tstbit0_fp1_jump_nt_r9_2_0 << 0) + (J4_tstbit0_fp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_tstbit0_fp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_tstbit0_fp1_jump_nt_r9_2_0 & J4_tstbit0_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_tstbit0_fp1_jump_nt_r9_2_0 << 0) + (J4_tstbit0_fp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_tstbit0_tp1_jump_t_r9_2: reloc is                       J4_tstbit0_tp1_jump_t_r9_2_0 & J4_tstbit0_tp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_tstbit0_tp1_jump_t_r9_2_0 << 0) + (J4_tstbit0_tp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_tstbit0_tp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_tstbit0_tp1_jump_t_r9_2_0 & J4_tstbit0_tp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_tstbit0_tp1_jump_t_r9_2_0 << 0) + (J4_tstbit0_tp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_tstbit0_fp1_jump_t_r9_2: reloc is                       J4_tstbit0_fp1_jump_t_r9_2_0 & J4_tstbit0_fp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_tstbit0_fp1_jump_t_r9_2_0 << 0) + (J4_tstbit0_fp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_tstbit0_fp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_tstbit0_fp1_jump_t_r9_2_0 & J4_tstbit0_fp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_tstbit0_fp1_jump_t_r9_2_0 << 0) + (J4_tstbit0_fp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeq_tp0_jump_nt_r9_2: reloc is                       J4_cmpeq_tp0_jump_nt_r9_2_0 & J4_cmpeq_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeq_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpeq_tp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeq_tp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeq_tp0_jump_nt_r9_2_0 & J4_cmpeq_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeq_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpeq_tp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeq_fp0_jump_nt_r9_2: reloc is                       J4_cmpeq_fp0_jump_nt_r9_2_0 & J4_cmpeq_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeq_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpeq_fp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeq_fp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeq_fp0_jump_nt_r9_2_0 & J4_cmpeq_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeq_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpeq_fp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeq_tp0_jump_t_r9_2: reloc is                       J4_cmpeq_tp0_jump_t_r9_2_0 & J4_cmpeq_tp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeq_tp0_jump_t_r9_2_0 << 0) + (J4_cmpeq_tp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeq_tp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeq_tp0_jump_t_r9_2_0 & J4_cmpeq_tp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeq_tp0_jump_t_r9_2_0 << 0) + (J4_cmpeq_tp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeq_fp0_jump_t_r9_2: reloc is                       J4_cmpeq_fp0_jump_t_r9_2_0 & J4_cmpeq_fp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeq_fp0_jump_t_r9_2_0 << 0) + (J4_cmpeq_fp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeq_fp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeq_fp0_jump_t_r9_2_0 & J4_cmpeq_fp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeq_fp0_jump_t_r9_2_0 << 0) + (J4_cmpeq_fp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeq_tp1_jump_nt_r9_2: reloc is                       J4_cmpeq_tp1_jump_nt_r9_2_0 & J4_cmpeq_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeq_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpeq_tp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeq_tp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeq_tp1_jump_nt_r9_2_0 & J4_cmpeq_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeq_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpeq_tp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeq_fp1_jump_nt_r9_2: reloc is                       J4_cmpeq_fp1_jump_nt_r9_2_0 & J4_cmpeq_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeq_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpeq_fp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeq_fp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeq_fp1_jump_nt_r9_2_0 & J4_cmpeq_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeq_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpeq_fp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeq_tp1_jump_t_r9_2: reloc is                       J4_cmpeq_tp1_jump_t_r9_2_0 & J4_cmpeq_tp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeq_tp1_jump_t_r9_2_0 << 0) + (J4_cmpeq_tp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeq_tp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeq_tp1_jump_t_r9_2_0 & J4_cmpeq_tp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeq_tp1_jump_t_r9_2_0 << 0) + (J4_cmpeq_tp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeq_fp1_jump_t_r9_2: reloc is                       J4_cmpeq_fp1_jump_t_r9_2_0 & J4_cmpeq_fp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeq_fp1_jump_t_r9_2_0 << 0) + (J4_cmpeq_fp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeq_fp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeq_fp1_jump_t_r9_2_0 & J4_cmpeq_fp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeq_fp1_jump_t_r9_2_0 << 0) + (J4_cmpeq_fp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgt_tp0_jump_nt_r9_2: reloc is                       J4_cmpgt_tp0_jump_nt_r9_2_0 & J4_cmpgt_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgt_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpgt_tp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgt_tp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgt_tp0_jump_nt_r9_2_0 & J4_cmpgt_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgt_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpgt_tp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgt_fp0_jump_nt_r9_2: reloc is                       J4_cmpgt_fp0_jump_nt_r9_2_0 & J4_cmpgt_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgt_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpgt_fp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgt_fp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgt_fp0_jump_nt_r9_2_0 & J4_cmpgt_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgt_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpgt_fp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgt_tp0_jump_t_r9_2: reloc is                       J4_cmpgt_tp0_jump_t_r9_2_0 & J4_cmpgt_tp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgt_tp0_jump_t_r9_2_0 << 0) + (J4_cmpgt_tp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgt_tp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgt_tp0_jump_t_r9_2_0 & J4_cmpgt_tp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgt_tp0_jump_t_r9_2_0 << 0) + (J4_cmpgt_tp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgt_fp0_jump_t_r9_2: reloc is                       J4_cmpgt_fp0_jump_t_r9_2_0 & J4_cmpgt_fp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgt_fp0_jump_t_r9_2_0 << 0) + (J4_cmpgt_fp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgt_fp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgt_fp0_jump_t_r9_2_0 & J4_cmpgt_fp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgt_fp0_jump_t_r9_2_0 << 0) + (J4_cmpgt_fp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgt_tp1_jump_nt_r9_2: reloc is                       J4_cmpgt_tp1_jump_nt_r9_2_0 & J4_cmpgt_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgt_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpgt_tp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgt_tp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgt_tp1_jump_nt_r9_2_0 & J4_cmpgt_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgt_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpgt_tp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgt_fp1_jump_nt_r9_2: reloc is                       J4_cmpgt_fp1_jump_nt_r9_2_0 & J4_cmpgt_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgt_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpgt_fp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgt_fp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgt_fp1_jump_nt_r9_2_0 & J4_cmpgt_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgt_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpgt_fp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgt_tp1_jump_t_r9_2: reloc is                       J4_cmpgt_tp1_jump_t_r9_2_0 & J4_cmpgt_tp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgt_tp1_jump_t_r9_2_0 << 0) + (J4_cmpgt_tp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgt_tp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgt_tp1_jump_t_r9_2_0 & J4_cmpgt_tp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgt_tp1_jump_t_r9_2_0 << 0) + (J4_cmpgt_tp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgt_fp1_jump_t_r9_2: reloc is                       J4_cmpgt_fp1_jump_t_r9_2_0 & J4_cmpgt_fp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgt_fp1_jump_t_r9_2_0 << 0) + (J4_cmpgt_fp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgt_fp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgt_fp1_jump_t_r9_2_0 & J4_cmpgt_fp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgt_fp1_jump_t_r9_2_0 << 0) + (J4_cmpgt_fp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtu_tp0_jump_nt_r9_2: reloc is                       J4_cmpgtu_tp0_jump_nt_r9_2_0 & J4_cmpgtu_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtu_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpgtu_tp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtu_tp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtu_tp0_jump_nt_r9_2_0 & J4_cmpgtu_tp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtu_tp0_jump_nt_r9_2_0 << 0) + (J4_cmpgtu_tp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtu_fp0_jump_nt_r9_2: reloc is                       J4_cmpgtu_fp0_jump_nt_r9_2_0 & J4_cmpgtu_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtu_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpgtu_fp0_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtu_fp0_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtu_fp0_jump_nt_r9_2_0 & J4_cmpgtu_fp0_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtu_fp0_jump_nt_r9_2_0 << 0) + (J4_cmpgtu_fp0_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtu_tp0_jump_t_r9_2: reloc is                       J4_cmpgtu_tp0_jump_t_r9_2_0 & J4_cmpgtu_tp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtu_tp0_jump_t_r9_2_0 << 0) + (J4_cmpgtu_tp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtu_tp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtu_tp0_jump_t_r9_2_0 & J4_cmpgtu_tp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtu_tp0_jump_t_r9_2_0 << 0) + (J4_cmpgtu_tp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtu_fp0_jump_t_r9_2: reloc is                       J4_cmpgtu_fp0_jump_t_r9_2_0 & J4_cmpgtu_fp0_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtu_fp0_jump_t_r9_2_0 << 0) + (J4_cmpgtu_fp0_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtu_fp0_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtu_fp0_jump_t_r9_2_0 & J4_cmpgtu_fp0_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtu_fp0_jump_t_r9_2_0 << 0) + (J4_cmpgtu_fp0_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtu_tp1_jump_nt_r9_2: reloc is                       J4_cmpgtu_tp1_jump_nt_r9_2_0 & J4_cmpgtu_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtu_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpgtu_tp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtu_tp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtu_tp1_jump_nt_r9_2_0 & J4_cmpgtu_tp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtu_tp1_jump_nt_r9_2_0 << 0) + (J4_cmpgtu_tp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtu_fp1_jump_nt_r9_2: reloc is                       J4_cmpgtu_fp1_jump_nt_r9_2_0 & J4_cmpgtu_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtu_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpgtu_fp1_jump_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtu_fp1_jump_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtu_fp1_jump_nt_r9_2_0 & J4_cmpgtu_fp1_jump_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtu_fp1_jump_nt_r9_2_0 << 0) + (J4_cmpgtu_fp1_jump_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtu_tp1_jump_t_r9_2: reloc is                       J4_cmpgtu_tp1_jump_t_r9_2_0 & J4_cmpgtu_tp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtu_tp1_jump_t_r9_2_0 << 0) + (J4_cmpgtu_tp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtu_tp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtu_tp1_jump_t_r9_2_0 & J4_cmpgtu_tp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtu_tp1_jump_t_r9_2_0 << 0) + (J4_cmpgtu_tp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtu_fp1_jump_t_r9_2: reloc is                       J4_cmpgtu_fp1_jump_t_r9_2_0 & J4_cmpgtu_fp1_jump_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtu_fp1_jump_t_r9_2_0 << 0) + (J4_cmpgtu_fp1_jump_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtu_fp1_jump_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtu_fp1_jump_t_r9_2_0 & J4_cmpgtu_fp1_jump_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtu_fp1_jump_t_r9_2_0 << 0) + (J4_cmpgtu_fp1_jump_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_jumpseti_U6: reloc is J4_jumpseti_U6_0 [ reloc = J4_jumpseti_U6_0 << 0; ] { export *[const]:4 reloc; }

J4_jumpseti_r9_2: reloc is                       J4_jumpseti_r9_2_0 & J4_jumpseti_r9_2_1 [ reloc = pkt_start + ((((J4_jumpseti_r9_2_0 << 0) + (J4_jumpseti_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_jumpseti_r9_2: reloc is immext = 0xffffffff & J4_jumpseti_r9_2_0 & J4_jumpseti_r9_2_1 [ reloc = pkt_start + (((J4_jumpseti_r9_2_0 << 0) + (J4_jumpseti_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_jumpsetr_r9_2: reloc is                       J4_jumpsetr_r9_2_0 & J4_jumpsetr_r9_2_1 [ reloc = pkt_start + ((((J4_jumpsetr_r9_2_0 << 0) + (J4_jumpsetr_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_jumpsetr_r9_2: reloc is immext = 0xffffffff & J4_jumpsetr_r9_2_0 & J4_jumpsetr_r9_2_1 [ reloc = pkt_start + (((J4_jumpsetr_r9_2_0 << 0) + (J4_jumpsetr_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqi_t_jumpnv_t_U5: reloc is J4_cmpeqi_t_jumpnv_t_U5_0 [ reloc = J4_cmpeqi_t_jumpnv_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpeqi_t_jumpnv_t_r9_2: reloc is                       J4_cmpeqi_t_jumpnv_t_r9_2_0 & J4_cmpeqi_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqi_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpeqi_t_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqi_t_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeqi_t_jumpnv_t_r9_2_0 & J4_cmpeqi_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqi_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpeqi_t_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqi_t_jumpnv_nt_U5: reloc is J4_cmpeqi_t_jumpnv_nt_U5_0 [ reloc = J4_cmpeqi_t_jumpnv_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpeqi_t_jumpnv_nt_r9_2: reloc is                       J4_cmpeqi_t_jumpnv_nt_r9_2_0 & J4_cmpeqi_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqi_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpeqi_t_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqi_t_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeqi_t_jumpnv_nt_r9_2_0 & J4_cmpeqi_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqi_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpeqi_t_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqi_f_jumpnv_t_U5: reloc is J4_cmpeqi_f_jumpnv_t_U5_0 [ reloc = J4_cmpeqi_f_jumpnv_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpeqi_f_jumpnv_t_r9_2: reloc is                       J4_cmpeqi_f_jumpnv_t_r9_2_0 & J4_cmpeqi_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqi_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpeqi_f_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqi_f_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeqi_f_jumpnv_t_r9_2_0 & J4_cmpeqi_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqi_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpeqi_f_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqi_f_jumpnv_nt_U5: reloc is J4_cmpeqi_f_jumpnv_nt_U5_0 [ reloc = J4_cmpeqi_f_jumpnv_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpeqi_f_jumpnv_nt_r9_2: reloc is                       J4_cmpeqi_f_jumpnv_nt_r9_2_0 & J4_cmpeqi_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqi_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpeqi_f_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqi_f_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeqi_f_jumpnv_nt_r9_2_0 & J4_cmpeqi_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqi_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpeqi_f_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgti_t_jumpnv_t_U5: reloc is J4_cmpgti_t_jumpnv_t_U5_0 [ reloc = J4_cmpgti_t_jumpnv_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgti_t_jumpnv_t_r9_2: reloc is                       J4_cmpgti_t_jumpnv_t_r9_2_0 & J4_cmpgti_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgti_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpgti_t_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgti_t_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgti_t_jumpnv_t_r9_2_0 & J4_cmpgti_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgti_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpgti_t_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgti_t_jumpnv_nt_U5: reloc is J4_cmpgti_t_jumpnv_nt_U5_0 [ reloc = J4_cmpgti_t_jumpnv_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgti_t_jumpnv_nt_r9_2: reloc is                       J4_cmpgti_t_jumpnv_nt_r9_2_0 & J4_cmpgti_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgti_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgti_t_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgti_t_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgti_t_jumpnv_nt_r9_2_0 & J4_cmpgti_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgti_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgti_t_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgti_f_jumpnv_t_U5: reloc is J4_cmpgti_f_jumpnv_t_U5_0 [ reloc = J4_cmpgti_f_jumpnv_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgti_f_jumpnv_t_r9_2: reloc is                       J4_cmpgti_f_jumpnv_t_r9_2_0 & J4_cmpgti_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgti_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpgti_f_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgti_f_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgti_f_jumpnv_t_r9_2_0 & J4_cmpgti_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgti_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpgti_f_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgti_f_jumpnv_nt_U5: reloc is J4_cmpgti_f_jumpnv_nt_U5_0 [ reloc = J4_cmpgti_f_jumpnv_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgti_f_jumpnv_nt_r9_2: reloc is                       J4_cmpgti_f_jumpnv_nt_r9_2_0 & J4_cmpgti_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgti_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgti_f_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgti_f_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgti_f_jumpnv_nt_r9_2_0 & J4_cmpgti_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgti_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgti_f_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtui_t_jumpnv_t_U5: reloc is J4_cmpgtui_t_jumpnv_t_U5_0 [ reloc = J4_cmpgtui_t_jumpnv_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgtui_t_jumpnv_t_r9_2: reloc is                       J4_cmpgtui_t_jumpnv_t_r9_2_0 & J4_cmpgtui_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtui_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpgtui_t_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtui_t_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtui_t_jumpnv_t_r9_2_0 & J4_cmpgtui_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtui_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpgtui_t_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtui_t_jumpnv_nt_U5: reloc is J4_cmpgtui_t_jumpnv_nt_U5_0 [ reloc = J4_cmpgtui_t_jumpnv_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgtui_t_jumpnv_nt_r9_2: reloc is                       J4_cmpgtui_t_jumpnv_nt_r9_2_0 & J4_cmpgtui_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtui_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgtui_t_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtui_t_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtui_t_jumpnv_nt_r9_2_0 & J4_cmpgtui_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtui_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgtui_t_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtui_f_jumpnv_t_U5: reloc is J4_cmpgtui_f_jumpnv_t_U5_0 [ reloc = J4_cmpgtui_f_jumpnv_t_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgtui_f_jumpnv_t_r9_2: reloc is                       J4_cmpgtui_f_jumpnv_t_r9_2_0 & J4_cmpgtui_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtui_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpgtui_f_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtui_f_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtui_f_jumpnv_t_r9_2_0 & J4_cmpgtui_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtui_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpgtui_f_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtui_f_jumpnv_nt_U5: reloc is J4_cmpgtui_f_jumpnv_nt_U5_0 [ reloc = J4_cmpgtui_f_jumpnv_nt_U5_0 << 0; ] { export *[const]:4 reloc; }

J4_cmpgtui_f_jumpnv_nt_r9_2: reloc is                       J4_cmpgtui_f_jumpnv_nt_r9_2_0 & J4_cmpgtui_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtui_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgtui_f_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtui_f_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtui_f_jumpnv_nt_r9_2_0 & J4_cmpgtui_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtui_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgtui_f_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqn1_t_jumpnv_t_r9_2: reloc is                       J4_cmpeqn1_t_jumpnv_t_r9_2_0 & J4_cmpeqn1_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqn1_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpeqn1_t_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqn1_t_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeqn1_t_jumpnv_t_r9_2_0 & J4_cmpeqn1_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqn1_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpeqn1_t_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqn1_t_jumpnv_nt_r9_2: reloc is                       J4_cmpeqn1_t_jumpnv_nt_r9_2_0 & J4_cmpeqn1_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqn1_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpeqn1_t_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqn1_t_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeqn1_t_jumpnv_nt_r9_2_0 & J4_cmpeqn1_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqn1_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpeqn1_t_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqn1_f_jumpnv_t_r9_2: reloc is                       J4_cmpeqn1_f_jumpnv_t_r9_2_0 & J4_cmpeqn1_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqn1_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpeqn1_f_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqn1_f_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeqn1_f_jumpnv_t_r9_2_0 & J4_cmpeqn1_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqn1_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpeqn1_f_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeqn1_f_jumpnv_nt_r9_2: reloc is                       J4_cmpeqn1_f_jumpnv_nt_r9_2_0 & J4_cmpeqn1_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeqn1_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpeqn1_f_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeqn1_f_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeqn1_f_jumpnv_nt_r9_2_0 & J4_cmpeqn1_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeqn1_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpeqn1_f_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtn1_t_jumpnv_t_r9_2: reloc is                       J4_cmpgtn1_t_jumpnv_t_r9_2_0 & J4_cmpgtn1_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtn1_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpgtn1_t_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtn1_t_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtn1_t_jumpnv_t_r9_2_0 & J4_cmpgtn1_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtn1_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpgtn1_t_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtn1_t_jumpnv_nt_r9_2: reloc is                       J4_cmpgtn1_t_jumpnv_nt_r9_2_0 & J4_cmpgtn1_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtn1_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgtn1_t_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtn1_t_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtn1_t_jumpnv_nt_r9_2_0 & J4_cmpgtn1_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtn1_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgtn1_t_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtn1_f_jumpnv_t_r9_2: reloc is                       J4_cmpgtn1_f_jumpnv_t_r9_2_0 & J4_cmpgtn1_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtn1_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpgtn1_f_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtn1_f_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtn1_f_jumpnv_t_r9_2_0 & J4_cmpgtn1_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtn1_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpgtn1_f_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtn1_f_jumpnv_nt_r9_2: reloc is                       J4_cmpgtn1_f_jumpnv_nt_r9_2_0 & J4_cmpgtn1_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtn1_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgtn1_f_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtn1_f_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtn1_f_jumpnv_nt_r9_2_0 & J4_cmpgtn1_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtn1_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgtn1_f_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_tstbit0_t_jumpnv_t_r9_2: reloc is                       J4_tstbit0_t_jumpnv_t_r9_2_0 & J4_tstbit0_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_tstbit0_t_jumpnv_t_r9_2_0 << 0) + (J4_tstbit0_t_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_tstbit0_t_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_tstbit0_t_jumpnv_t_r9_2_0 & J4_tstbit0_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_tstbit0_t_jumpnv_t_r9_2_0 << 0) + (J4_tstbit0_t_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_tstbit0_t_jumpnv_nt_r9_2: reloc is                       J4_tstbit0_t_jumpnv_nt_r9_2_0 & J4_tstbit0_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_tstbit0_t_jumpnv_nt_r9_2_0 << 0) + (J4_tstbit0_t_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_tstbit0_t_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_tstbit0_t_jumpnv_nt_r9_2_0 & J4_tstbit0_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_tstbit0_t_jumpnv_nt_r9_2_0 << 0) + (J4_tstbit0_t_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_tstbit0_f_jumpnv_t_r9_2: reloc is                       J4_tstbit0_f_jumpnv_t_r9_2_0 & J4_tstbit0_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_tstbit0_f_jumpnv_t_r9_2_0 << 0) + (J4_tstbit0_f_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_tstbit0_f_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_tstbit0_f_jumpnv_t_r9_2_0 & J4_tstbit0_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_tstbit0_f_jumpnv_t_r9_2_0 << 0) + (J4_tstbit0_f_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_tstbit0_f_jumpnv_nt_r9_2: reloc is                       J4_tstbit0_f_jumpnv_nt_r9_2_0 & J4_tstbit0_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_tstbit0_f_jumpnv_nt_r9_2_0 << 0) + (J4_tstbit0_f_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_tstbit0_f_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_tstbit0_f_jumpnv_nt_r9_2_0 & J4_tstbit0_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_tstbit0_f_jumpnv_nt_r9_2_0 << 0) + (J4_tstbit0_f_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeq_t_jumpnv_t_r9_2: reloc is                       J4_cmpeq_t_jumpnv_t_r9_2_0 & J4_cmpeq_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeq_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpeq_t_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeq_t_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeq_t_jumpnv_t_r9_2_0 & J4_cmpeq_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeq_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpeq_t_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeq_t_jumpnv_nt_r9_2: reloc is                       J4_cmpeq_t_jumpnv_nt_r9_2_0 & J4_cmpeq_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeq_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpeq_t_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeq_t_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeq_t_jumpnv_nt_r9_2_0 & J4_cmpeq_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeq_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpeq_t_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgt_t_jumpnv_t_r9_2: reloc is                       J4_cmpgt_t_jumpnv_t_r9_2_0 & J4_cmpgt_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgt_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpgt_t_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgt_t_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgt_t_jumpnv_t_r9_2_0 & J4_cmpgt_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgt_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpgt_t_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgt_t_jumpnv_nt_r9_2: reloc is                       J4_cmpgt_t_jumpnv_nt_r9_2_0 & J4_cmpgt_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgt_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgt_t_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgt_t_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgt_t_jumpnv_nt_r9_2_0 & J4_cmpgt_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgt_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgt_t_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtu_t_jumpnv_t_r9_2: reloc is                       J4_cmpgtu_t_jumpnv_t_r9_2_0 & J4_cmpgtu_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtu_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpgtu_t_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtu_t_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtu_t_jumpnv_t_r9_2_0 & J4_cmpgtu_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtu_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpgtu_t_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtu_t_jumpnv_nt_r9_2: reloc is                       J4_cmpgtu_t_jumpnv_nt_r9_2_0 & J4_cmpgtu_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtu_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgtu_t_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtu_t_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtu_t_jumpnv_nt_r9_2_0 & J4_cmpgtu_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtu_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgtu_t_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmplt_t_jumpnv_t_r9_2: reloc is                       J4_cmplt_t_jumpnv_t_r9_2_0 & J4_cmplt_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmplt_t_jumpnv_t_r9_2_0 << 0) + (J4_cmplt_t_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmplt_t_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmplt_t_jumpnv_t_r9_2_0 & J4_cmplt_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmplt_t_jumpnv_t_r9_2_0 << 0) + (J4_cmplt_t_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmplt_t_jumpnv_nt_r9_2: reloc is                       J4_cmplt_t_jumpnv_nt_r9_2_0 & J4_cmplt_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmplt_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmplt_t_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmplt_t_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmplt_t_jumpnv_nt_r9_2_0 & J4_cmplt_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmplt_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmplt_t_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpltu_t_jumpnv_t_r9_2: reloc is                       J4_cmpltu_t_jumpnv_t_r9_2_0 & J4_cmpltu_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpltu_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpltu_t_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpltu_t_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpltu_t_jumpnv_t_r9_2_0 & J4_cmpltu_t_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpltu_t_jumpnv_t_r9_2_0 << 0) + (J4_cmpltu_t_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpltu_t_jumpnv_nt_r9_2: reloc is                       J4_cmpltu_t_jumpnv_nt_r9_2_0 & J4_cmpltu_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpltu_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpltu_t_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpltu_t_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpltu_t_jumpnv_nt_r9_2_0 & J4_cmpltu_t_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpltu_t_jumpnv_nt_r9_2_0 << 0) + (J4_cmpltu_t_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeq_f_jumpnv_t_r9_2: reloc is                       J4_cmpeq_f_jumpnv_t_r9_2_0 & J4_cmpeq_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeq_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpeq_f_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeq_f_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpeq_f_jumpnv_t_r9_2_0 & J4_cmpeq_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpeq_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpeq_f_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpeq_f_jumpnv_nt_r9_2: reloc is                       J4_cmpeq_f_jumpnv_nt_r9_2_0 & J4_cmpeq_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpeq_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpeq_f_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpeq_f_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpeq_f_jumpnv_nt_r9_2_0 & J4_cmpeq_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpeq_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpeq_f_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgt_f_jumpnv_t_r9_2: reloc is                       J4_cmpgt_f_jumpnv_t_r9_2_0 & J4_cmpgt_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgt_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpgt_f_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgt_f_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgt_f_jumpnv_t_r9_2_0 & J4_cmpgt_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgt_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpgt_f_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgt_f_jumpnv_nt_r9_2: reloc is                       J4_cmpgt_f_jumpnv_nt_r9_2_0 & J4_cmpgt_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgt_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgt_f_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgt_f_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgt_f_jumpnv_nt_r9_2_0 & J4_cmpgt_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgt_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgt_f_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtu_f_jumpnv_t_r9_2: reloc is                       J4_cmpgtu_f_jumpnv_t_r9_2_0 & J4_cmpgtu_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtu_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpgtu_f_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtu_f_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpgtu_f_jumpnv_t_r9_2_0 & J4_cmpgtu_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtu_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpgtu_f_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpgtu_f_jumpnv_nt_r9_2: reloc is                       J4_cmpgtu_f_jumpnv_nt_r9_2_0 & J4_cmpgtu_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpgtu_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgtu_f_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpgtu_f_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpgtu_f_jumpnv_nt_r9_2_0 & J4_cmpgtu_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpgtu_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpgtu_f_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmplt_f_jumpnv_t_r9_2: reloc is                       J4_cmplt_f_jumpnv_t_r9_2_0 & J4_cmplt_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmplt_f_jumpnv_t_r9_2_0 << 0) + (J4_cmplt_f_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmplt_f_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmplt_f_jumpnv_t_r9_2_0 & J4_cmplt_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmplt_f_jumpnv_t_r9_2_0 << 0) + (J4_cmplt_f_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmplt_f_jumpnv_nt_r9_2: reloc is                       J4_cmplt_f_jumpnv_nt_r9_2_0 & J4_cmplt_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmplt_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmplt_f_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmplt_f_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmplt_f_jumpnv_nt_r9_2_0 & J4_cmplt_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmplt_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmplt_f_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpltu_f_jumpnv_t_r9_2: reloc is                       J4_cmpltu_f_jumpnv_t_r9_2_0 & J4_cmpltu_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + ((((J4_cmpltu_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpltu_f_jumpnv_t_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpltu_f_jumpnv_t_r9_2: reloc is immext = 0xffffffff & J4_cmpltu_f_jumpnv_t_r9_2_0 & J4_cmpltu_f_jumpnv_t_r9_2_1 [ reloc = pkt_start + (((J4_cmpltu_f_jumpnv_t_r9_2_0 << 0) + (J4_cmpltu_f_jumpnv_t_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J4_cmpltu_f_jumpnv_nt_r9_2: reloc is                       J4_cmpltu_f_jumpnv_nt_r9_2_0 & J4_cmpltu_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + ((((J4_cmpltu_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpltu_f_jumpnv_nt_r9_2_1 << 7)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J4_cmpltu_f_jumpnv_nt_r9_2: reloc is immext = 0xffffffff & J4_cmpltu_f_jumpnv_nt_r9_2_0 & J4_cmpltu_f_jumpnv_nt_r9_2_1 [ reloc = pkt_start + (((J4_cmpltu_f_jumpnv_nt_r9_2_0 << 0) + (J4_cmpltu_f_jumpnv_nt_r9_2_1 << 7)) << 2); ] { export *[ram]:4 reloc; }

J2_call_r22_2: reloc is                       J2_call_r22_2_0 & J2_call_r22_2_1 [ reloc = pkt_start + ((((J2_call_r22_2_0 << 0) + (J2_call_r22_2_1 << 13)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J2_call_r22_2: reloc is immext = 0xffffffff & J2_call_r22_2_0 & J2_call_r22_2_1 [ reloc = pkt_start + (((J2_call_r22_2_0 << 0) + (J2_call_r22_2_1 << 13)) << 2); ] { export *[ram]:4 reloc; }

J2_callt_r15_2: reloc is                       J2_callt_r15_2_0 & J2_callt_r15_2_1 & J2_callt_r15_2_2 & J2_callt_r15_2_3 [ reloc = pkt_start + ((((((J2_callt_r15_2_0 << 0) + (J2_callt_r15_2_1 << 7)) + (J2_callt_r15_2_2 << 8)) + (J2_callt_r15_2_3 << 13)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J2_callt_r15_2: reloc is immext = 0xffffffff & J2_callt_r15_2_0 & J2_callt_r15_2_1 & J2_callt_r15_2_2 & J2_callt_r15_2_3 [ reloc = pkt_start + (((((J2_callt_r15_2_0 << 0) + (J2_callt_r15_2_1 << 7)) + (J2_callt_r15_2_2 << 8)) + (J2_callt_r15_2_3 << 13)) << 2); ] { export *[ram]:4 reloc; }

J2_callf_r15_2: reloc is                       J2_callf_r15_2_0 & J2_callf_r15_2_1 & J2_callf_r15_2_2 & J2_callf_r15_2_3 [ reloc = pkt_start + ((((((J2_callf_r15_2_0 << 0) + (J2_callf_r15_2_1 << 7)) + (J2_callf_r15_2_2 << 8)) + (J2_callf_r15_2_3 << 13)) & 0b111111) | immext); ] { export *[ram]:4 reloc; }
J2_callf_r15_2: reloc is immext = 0xffffffff & J2_callf_r15_2_0 & J2_callf_r15_2_1 & J2_callf_r15_2_2 & J2_callf_r15_2_3 [ reloc = pkt_start + (((((J2_callf_r15_2_0 << 0) + (J2_callf_r15_2_1 << 7)) + (J2_callf_r15_2_2 << 8)) + (J2_callf_r15_2_3 << 13)) << 2); ] { export *[ram]:4 reloc; }

J2_loop0r_r7_2: reloc is                       J2_loop0r_r7_2_0 & J2_loop0r_r7_2_1 [ reloc = pkt_start + ((((J2_loop0r_r7_2_0 << 0) + (J2_loop0r_r7_2_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
J2_loop0r_r7_2: reloc is immext = 0xffffffff & J2_loop0r_r7_2_0 & J2_loop0r_r7_2_1 [ reloc = pkt_start + (((J2_loop0r_r7_2_0 << 0) + (J2_loop0r_r7_2_1 << 2)) << 2); ] { export *[const]:4 reloc; }

J2_loop1r_r7_2: reloc is                       J2_loop1r_r7_2_0 & J2_loop1r_r7_2_1 [ reloc = pkt_start + ((((J2_loop1r_r7_2_0 << 0) + (J2_loop1r_r7_2_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
J2_loop1r_r7_2: reloc is immext = 0xffffffff & J2_loop1r_r7_2_0 & J2_loop1r_r7_2_1 [ reloc = pkt_start + (((J2_loop1r_r7_2_0 << 0) + (J2_loop1r_r7_2_1 << 2)) << 2); ] { export *[const]:4 reloc; }

J2_loop0i_r7_2: reloc is                       J2_loop0i_r7_2_0 & J2_loop0i_r7_2_1 [ reloc = pkt_start + ((((J2_loop0i_r7_2_0 << 0) + (J2_loop0i_r7_2_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
J2_loop0i_r7_2: reloc is immext = 0xffffffff & J2_loop0i_r7_2_0 & J2_loop0i_r7_2_1 [ reloc = pkt_start + (((J2_loop0i_r7_2_0 << 0) + (J2_loop0i_r7_2_1 << 2)) << 2); ] { export *[const]:4 reloc; }

J2_loop0i_U10: reloc is J2_loop0i_U10_0 & J2_loop0i_U10_1 & J2_loop0i_U10_2 [ reloc = ((J2_loop0i_U10_0 << 0) + (J2_loop0i_U10_1 << 2)) + (J2_loop0i_U10_2 << 5); ] { export *[const]:4 reloc; }

J2_loop1i_r7_2: reloc is                       J2_loop1i_r7_2_0 & J2_loop1i_r7_2_1 [ reloc = pkt_start + ((((J2_loop1i_r7_2_0 << 0) + (J2_loop1i_r7_2_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
J2_loop1i_r7_2: reloc is immext = 0xffffffff & J2_loop1i_r7_2_0 & J2_loop1i_r7_2_1 [ reloc = pkt_start + (((J2_loop1i_r7_2_0 << 0) + (J2_loop1i_r7_2_1 << 2)) << 2); ] { export *[const]:4 reloc; }

J2_loop1i_U10: reloc is J2_loop1i_U10_0 & J2_loop1i_U10_1 & J2_loop1i_U10_2 [ reloc = ((J2_loop1i_U10_0 << 0) + (J2_loop1i_U10_1 << 2)) + (J2_loop1i_U10_2 << 5); ] { export *[const]:4 reloc; }

J2_ploop1sr_r7_2: reloc is                       J2_ploop1sr_r7_2_0 & J2_ploop1sr_r7_2_1 [ reloc = pkt_start + ((((J2_ploop1sr_r7_2_0 << 0) + (J2_ploop1sr_r7_2_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
J2_ploop1sr_r7_2: reloc is immext = 0xffffffff & J2_ploop1sr_r7_2_0 & J2_ploop1sr_r7_2_1 [ reloc = pkt_start + (((J2_ploop1sr_r7_2_0 << 0) + (J2_ploop1sr_r7_2_1 << 2)) << 2); ] { export *[const]:4 reloc; }

J2_ploop1si_r7_2: reloc is                       J2_ploop1si_r7_2_0 & J2_ploop1si_r7_2_1 [ reloc = pkt_start + ((((J2_ploop1si_r7_2_0 << 0) + (J2_ploop1si_r7_2_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
J2_ploop1si_r7_2: reloc is immext = 0xffffffff & J2_ploop1si_r7_2_0 & J2_ploop1si_r7_2_1 [ reloc = pkt_start + (((J2_ploop1si_r7_2_0 << 0) + (J2_ploop1si_r7_2_1 << 2)) << 2); ] { export *[const]:4 reloc; }

J2_ploop1si_U10: reloc is J2_ploop1si_U10_0 & J2_ploop1si_U10_1 & J2_ploop1si_U10_2 [ reloc = ((J2_ploop1si_U10_0 << 0) + (J2_ploop1si_U10_1 << 2)) + (J2_ploop1si_U10_2 << 5); ] { export *[const]:4 reloc; }

J2_ploop2sr_r7_2: reloc is                       J2_ploop2sr_r7_2_0 & J2_ploop2sr_r7_2_1 [ reloc = pkt_start + ((((J2_ploop2sr_r7_2_0 << 0) + (J2_ploop2sr_r7_2_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
J2_ploop2sr_r7_2: reloc is immext = 0xffffffff & J2_ploop2sr_r7_2_0 & J2_ploop2sr_r7_2_1 [ reloc = pkt_start + (((J2_ploop2sr_r7_2_0 << 0) + (J2_ploop2sr_r7_2_1 << 2)) << 2); ] { export *[const]:4 reloc; }

J2_ploop2si_r7_2: reloc is                       J2_ploop2si_r7_2_0 & J2_ploop2si_r7_2_1 [ reloc = pkt_start + ((((J2_ploop2si_r7_2_0 << 0) + (J2_ploop2si_r7_2_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
J2_ploop2si_r7_2: reloc is immext = 0xffffffff & J2_ploop2si_r7_2_0 & J2_ploop2si_r7_2_1 [ reloc = pkt_start + (((J2_ploop2si_r7_2_0 << 0) + (J2_ploop2si_r7_2_1 << 2)) << 2); ] { export *[const]:4 reloc; }

J2_ploop2si_U10: reloc is J2_ploop2si_U10_0 & J2_ploop2si_U10_1 & J2_ploop2si_U10_2 [ reloc = ((J2_ploop2si_U10_0 << 0) + (J2_ploop2si_U10_1 << 2)) + (J2_ploop2si_U10_2 << 5); ] { export *[const]:4 reloc; }

J2_ploop3sr_r7_2: reloc is                       J2_ploop3sr_r7_2_0 & J2_ploop3sr_r7_2_1 [ reloc = pkt_start + ((((J2_ploop3sr_r7_2_0 << 0) + (J2_ploop3sr_r7_2_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
J2_ploop3sr_r7_2: reloc is immext = 0xffffffff & J2_ploop3sr_r7_2_0 & J2_ploop3sr_r7_2_1 [ reloc = pkt_start + (((J2_ploop3sr_r7_2_0 << 0) + (J2_ploop3sr_r7_2_1 << 2)) << 2); ] { export *[const]:4 reloc; }

J2_ploop3si_r7_2: reloc is                       J2_ploop3si_r7_2_0 & J2_ploop3si_r7_2_1 [ reloc = pkt_start + ((((J2_ploop3si_r7_2_0 << 0) + (J2_ploop3si_r7_2_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
J2_ploop3si_r7_2: reloc is immext = 0xffffffff & J2_ploop3si_r7_2_0 & J2_ploop3si_r7_2_1 [ reloc = pkt_start + (((J2_ploop3si_r7_2_0 << 0) + (J2_ploop3si_r7_2_1 << 2)) << 2); ] { export *[const]:4 reloc; }

J2_ploop3si_U10: reloc is J2_ploop3si_U10_0 & J2_ploop3si_U10_1 & J2_ploop3si_U10_2 [ reloc = ((J2_ploop3si_U10_0 << 0) + (J2_ploop3si_U10_1 << 2)) + (J2_ploop3si_U10_2 << 5); ] { export *[const]:4 reloc; }

L2_loadrub_io_s11_0: reloc is                       L2_loadrub_io_s11_0_0 & L2_loadrub_io_s11_0_1 [ reloc = ((((L2_loadrub_io_s11_0_0 << 0) + (L2_loadrub_io_s11_0_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadrub_io_s11_0: reloc is immext = 0xffffffff & L2_loadrub_io_s11_0_0 & L2_loadrub_io_s11_0_1 [ reloc = (L2_loadrub_io_s11_0_0 << 0) + (L2_loadrub_io_s11_0_1 << 9); ] { export *[const]:4 reloc; }

L4_loadrub_ur_u2: reloc is L4_loadrub_ur_u2_0 & L4_loadrub_ur_u2_1 [ reloc = (L4_loadrub_ur_u2_0 << 0) + (L4_loadrub_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_loadrub_ur_U6: reloc is                       L4_loadrub_ur_U6_0 & L4_loadrub_ur_U6_1 [ reloc = ((((L4_loadrub_ur_U6_0 << 0) + (L4_loadrub_ur_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadrub_ur_U6: reloc is immext = 0xffffffff & L4_loadrub_ur_U6_0 & L4_loadrub_ur_U6_1 [ reloc = (L4_loadrub_ur_U6_0 << 0) + (L4_loadrub_ur_U6_1 << 2); ] { export *[const]:4 reloc; }

L4_loadrub_ap_U6: reloc is                       L4_loadrub_ap_U6_0 & L4_loadrub_ap_U6_1 [ reloc = ((((L4_loadrub_ap_U6_0 << 0) + (L4_loadrub_ap_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadrub_ap_U6: reloc is immext = 0xffffffff & L4_loadrub_ap_U6_0 & L4_loadrub_ap_U6_1 [ reloc = (L4_loadrub_ap_U6_0 << 0) + (L4_loadrub_ap_U6_1 << 2); ] { export *[const]:4 reloc; }

L2_loadrub_pi_s4_0: reloc is L2_loadrub_pi_s4_0_0 [ reloc = L2_loadrub_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

L2_loadrub_pci_s4_0: reloc is L2_loadrub_pci_s4_0_0 [ reloc = L2_loadrub_pci_s4_0_0 << 0; ] { export *[const]:4 reloc; }

L2_loadrb_io_s11_0: reloc is                       L2_loadrb_io_s11_0_0 & L2_loadrb_io_s11_0_1 [ reloc = ((((L2_loadrb_io_s11_0_0 << 0) + (L2_loadrb_io_s11_0_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadrb_io_s11_0: reloc is immext = 0xffffffff & L2_loadrb_io_s11_0_0 & L2_loadrb_io_s11_0_1 [ reloc = (L2_loadrb_io_s11_0_0 << 0) + (L2_loadrb_io_s11_0_1 << 9); ] { export *[const]:4 reloc; }

L4_loadrb_ur_u2: reloc is L4_loadrb_ur_u2_0 & L4_loadrb_ur_u2_1 [ reloc = (L4_loadrb_ur_u2_0 << 0) + (L4_loadrb_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_loadrb_ur_U6: reloc is                       L4_loadrb_ur_U6_0 & L4_loadrb_ur_U6_1 [ reloc = ((((L4_loadrb_ur_U6_0 << 0) + (L4_loadrb_ur_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadrb_ur_U6: reloc is immext = 0xffffffff & L4_loadrb_ur_U6_0 & L4_loadrb_ur_U6_1 [ reloc = (L4_loadrb_ur_U6_0 << 0) + (L4_loadrb_ur_U6_1 << 2); ] { export *[const]:4 reloc; }

L4_loadrb_ap_U6: reloc is                       L4_loadrb_ap_U6_0 & L4_loadrb_ap_U6_1 [ reloc = ((((L4_loadrb_ap_U6_0 << 0) + (L4_loadrb_ap_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadrb_ap_U6: reloc is immext = 0xffffffff & L4_loadrb_ap_U6_0 & L4_loadrb_ap_U6_1 [ reloc = (L4_loadrb_ap_U6_0 << 0) + (L4_loadrb_ap_U6_1 << 2); ] { export *[const]:4 reloc; }

L2_loadrb_pi_s4_0: reloc is L2_loadrb_pi_s4_0_0 [ reloc = L2_loadrb_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

L2_loadrb_pci_s4_0: reloc is L2_loadrb_pci_s4_0_0 [ reloc = L2_loadrb_pci_s4_0_0 << 0; ] { export *[const]:4 reloc; }

L2_loadruh_io_s11_1: reloc is                       L2_loadruh_io_s11_1_0 & L2_loadruh_io_s11_1_1 [ reloc = ((((L2_loadruh_io_s11_1_0 << 0) + (L2_loadruh_io_s11_1_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadruh_io_s11_1: reloc is immext = 0xffffffff & L2_loadruh_io_s11_1_0 & L2_loadruh_io_s11_1_1 [ reloc = ((L2_loadruh_io_s11_1_0 << 0) + (L2_loadruh_io_s11_1_1 << 9)) << 1; ] { export *[const]:4 reloc; }

L4_loadruh_ur_u2: reloc is L4_loadruh_ur_u2_0 & L4_loadruh_ur_u2_1 [ reloc = (L4_loadruh_ur_u2_0 << 0) + (L4_loadruh_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_loadruh_ur_U6: reloc is                       L4_loadruh_ur_U6_0 & L4_loadruh_ur_U6_1 [ reloc = ((((L4_loadruh_ur_U6_0 << 0) + (L4_loadruh_ur_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadruh_ur_U6: reloc is immext = 0xffffffff & L4_loadruh_ur_U6_0 & L4_loadruh_ur_U6_1 [ reloc = (L4_loadruh_ur_U6_0 << 0) + (L4_loadruh_ur_U6_1 << 2); ] { export *[const]:4 reloc; }

L4_loadruh_ap_U6: reloc is                       L4_loadruh_ap_U6_0 & L4_loadruh_ap_U6_1 [ reloc = ((((L4_loadruh_ap_U6_0 << 0) + (L4_loadruh_ap_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadruh_ap_U6: reloc is immext = 0xffffffff & L4_loadruh_ap_U6_0 & L4_loadruh_ap_U6_1 [ reloc = (L4_loadruh_ap_U6_0 << 0) + (L4_loadruh_ap_U6_1 << 2); ] { export *[const]:4 reloc; }

L2_loadruh_pi_s4_1: reloc is L2_loadruh_pi_s4_1_0 [ reloc = (L2_loadruh_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_loadruh_pci_s4_1: reloc is L2_loadruh_pci_s4_1_0 [ reloc = (L2_loadruh_pci_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_loadrh_io_s11_1: reloc is                       L2_loadrh_io_s11_1_0 & L2_loadrh_io_s11_1_1 [ reloc = ((((L2_loadrh_io_s11_1_0 << 0) + (L2_loadrh_io_s11_1_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadrh_io_s11_1: reloc is immext = 0xffffffff & L2_loadrh_io_s11_1_0 & L2_loadrh_io_s11_1_1 [ reloc = ((L2_loadrh_io_s11_1_0 << 0) + (L2_loadrh_io_s11_1_1 << 9)) << 1; ] { export *[const]:4 reloc; }

L4_loadrh_ur_u2: reloc is L4_loadrh_ur_u2_0 & L4_loadrh_ur_u2_1 [ reloc = (L4_loadrh_ur_u2_0 << 0) + (L4_loadrh_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_loadrh_ur_U6: reloc is                       L4_loadrh_ur_U6_0 & L4_loadrh_ur_U6_1 [ reloc = ((((L4_loadrh_ur_U6_0 << 0) + (L4_loadrh_ur_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadrh_ur_U6: reloc is immext = 0xffffffff & L4_loadrh_ur_U6_0 & L4_loadrh_ur_U6_1 [ reloc = (L4_loadrh_ur_U6_0 << 0) + (L4_loadrh_ur_U6_1 << 2); ] { export *[const]:4 reloc; }

L4_loadrh_ap_U6: reloc is                       L4_loadrh_ap_U6_0 & L4_loadrh_ap_U6_1 [ reloc = ((((L4_loadrh_ap_U6_0 << 0) + (L4_loadrh_ap_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadrh_ap_U6: reloc is immext = 0xffffffff & L4_loadrh_ap_U6_0 & L4_loadrh_ap_U6_1 [ reloc = (L4_loadrh_ap_U6_0 << 0) + (L4_loadrh_ap_U6_1 << 2); ] { export *[const]:4 reloc; }

L2_loadrh_pi_s4_1: reloc is L2_loadrh_pi_s4_1_0 [ reloc = (L2_loadrh_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_loadrh_pci_s4_1: reloc is L2_loadrh_pci_s4_1_0 [ reloc = (L2_loadrh_pci_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_loadri_io_s11_2: reloc is                       L2_loadri_io_s11_2_0 & L2_loadri_io_s11_2_1 [ reloc = ((((L2_loadri_io_s11_2_0 << 0) + (L2_loadri_io_s11_2_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadri_io_s11_2: reloc is immext = 0xffffffff & L2_loadri_io_s11_2_0 & L2_loadri_io_s11_2_1 [ reloc = ((L2_loadri_io_s11_2_0 << 0) + (L2_loadri_io_s11_2_1 << 9)) << 2; ] { export *[const]:4 reloc; }

L4_loadri_ur_u2: reloc is L4_loadri_ur_u2_0 & L4_loadri_ur_u2_1 [ reloc = (L4_loadri_ur_u2_0 << 0) + (L4_loadri_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_loadri_ur_U6: reloc is                       L4_loadri_ur_U6_0 & L4_loadri_ur_U6_1 [ reloc = ((((L4_loadri_ur_U6_0 << 0) + (L4_loadri_ur_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadri_ur_U6: reloc is immext = 0xffffffff & L4_loadri_ur_U6_0 & L4_loadri_ur_U6_1 [ reloc = (L4_loadri_ur_U6_0 << 0) + (L4_loadri_ur_U6_1 << 2); ] { export *[const]:4 reloc; }

L4_loadri_ap_U6: reloc is                       L4_loadri_ap_U6_0 & L4_loadri_ap_U6_1 [ reloc = ((((L4_loadri_ap_U6_0 << 0) + (L4_loadri_ap_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadri_ap_U6: reloc is immext = 0xffffffff & L4_loadri_ap_U6_0 & L4_loadri_ap_U6_1 [ reloc = (L4_loadri_ap_U6_0 << 0) + (L4_loadri_ap_U6_1 << 2); ] { export *[const]:4 reloc; }

L2_loadri_pi_s4_2: reloc is L2_loadri_pi_s4_2_0 [ reloc = (L2_loadri_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L2_loadri_pci_s4_2: reloc is L2_loadri_pci_s4_2_0 [ reloc = (L2_loadri_pci_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L2_loadrd_io_s11_3: reloc is                       L2_loadrd_io_s11_3_0 & L2_loadrd_io_s11_3_1 [ reloc = ((((L2_loadrd_io_s11_3_0 << 0) + (L2_loadrd_io_s11_3_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadrd_io_s11_3: reloc is immext = 0xffffffff & L2_loadrd_io_s11_3_0 & L2_loadrd_io_s11_3_1 [ reloc = ((L2_loadrd_io_s11_3_0 << 0) + (L2_loadrd_io_s11_3_1 << 9)) << 3; ] { export *[const]:4 reloc; }

L4_loadrd_ur_u2: reloc is L4_loadrd_ur_u2_0 & L4_loadrd_ur_u2_1 [ reloc = (L4_loadrd_ur_u2_0 << 0) + (L4_loadrd_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_loadrd_ur_U6: reloc is                       L4_loadrd_ur_U6_0 & L4_loadrd_ur_U6_1 [ reloc = ((((L4_loadrd_ur_U6_0 << 0) + (L4_loadrd_ur_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadrd_ur_U6: reloc is immext = 0xffffffff & L4_loadrd_ur_U6_0 & L4_loadrd_ur_U6_1 [ reloc = (L4_loadrd_ur_U6_0 << 0) + (L4_loadrd_ur_U6_1 << 2); ] { export *[const]:4 reloc; }

L4_loadrd_ap_U6: reloc is                       L4_loadrd_ap_U6_0 & L4_loadrd_ap_U6_1 [ reloc = ((((L4_loadrd_ap_U6_0 << 0) + (L4_loadrd_ap_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadrd_ap_U6: reloc is immext = 0xffffffff & L4_loadrd_ap_U6_0 & L4_loadrd_ap_U6_1 [ reloc = (L4_loadrd_ap_U6_0 << 0) + (L4_loadrd_ap_U6_1 << 2); ] { export *[const]:4 reloc; }

L2_loadrd_pi_s4_3: reloc is L2_loadrd_pi_s4_3_0 [ reloc = (L2_loadrd_pi_s4_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

L2_loadrd_pci_s4_3: reloc is L2_loadrd_pci_s4_3_0 [ reloc = (L2_loadrd_pci_s4_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

L2_loadbzw2_io_s11_1: reloc is                       L2_loadbzw2_io_s11_1_0 & L2_loadbzw2_io_s11_1_1 [ reloc = ((((L2_loadbzw2_io_s11_1_0 << 0) + (L2_loadbzw2_io_s11_1_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadbzw2_io_s11_1: reloc is immext = 0xffffffff & L2_loadbzw2_io_s11_1_0 & L2_loadbzw2_io_s11_1_1 [ reloc = ((L2_loadbzw2_io_s11_1_0 << 0) + (L2_loadbzw2_io_s11_1_1 << 9)) << 1; ] { export *[const]:4 reloc; }

L4_loadbzw2_ur_u2: reloc is L4_loadbzw2_ur_u2_0 & L4_loadbzw2_ur_u2_1 [ reloc = (L4_loadbzw2_ur_u2_0 << 0) + (L4_loadbzw2_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_loadbzw2_ur_U6: reloc is                       L4_loadbzw2_ur_U6_0 & L4_loadbzw2_ur_U6_1 [ reloc = ((((L4_loadbzw2_ur_U6_0 << 0) + (L4_loadbzw2_ur_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadbzw2_ur_U6: reloc is immext = 0xffffffff & L4_loadbzw2_ur_U6_0 & L4_loadbzw2_ur_U6_1 [ reloc = (L4_loadbzw2_ur_U6_0 << 0) + (L4_loadbzw2_ur_U6_1 << 2); ] { export *[const]:4 reloc; }

L4_loadbzw2_ap_U6: reloc is                       L4_loadbzw2_ap_U6_0 & L4_loadbzw2_ap_U6_1 [ reloc = ((((L4_loadbzw2_ap_U6_0 << 0) + (L4_loadbzw2_ap_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadbzw2_ap_U6: reloc is immext = 0xffffffff & L4_loadbzw2_ap_U6_0 & L4_loadbzw2_ap_U6_1 [ reloc = (L4_loadbzw2_ap_U6_0 << 0) + (L4_loadbzw2_ap_U6_1 << 2); ] { export *[const]:4 reloc; }

L2_loadbzw2_pi_s4_1: reloc is L2_loadbzw2_pi_s4_1_0 [ reloc = (L2_loadbzw2_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_loadbzw2_pci_s4_1: reloc is L2_loadbzw2_pci_s4_1_0 [ reloc = (L2_loadbzw2_pci_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_loadbzw4_io_s11_2: reloc is                       L2_loadbzw4_io_s11_2_0 & L2_loadbzw4_io_s11_2_1 [ reloc = ((((L2_loadbzw4_io_s11_2_0 << 0) + (L2_loadbzw4_io_s11_2_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadbzw4_io_s11_2: reloc is immext = 0xffffffff & L2_loadbzw4_io_s11_2_0 & L2_loadbzw4_io_s11_2_1 [ reloc = ((L2_loadbzw4_io_s11_2_0 << 0) + (L2_loadbzw4_io_s11_2_1 << 9)) << 2; ] { export *[const]:4 reloc; }

L4_loadbzw4_ur_u2: reloc is L4_loadbzw4_ur_u2_0 & L4_loadbzw4_ur_u2_1 [ reloc = (L4_loadbzw4_ur_u2_0 << 0) + (L4_loadbzw4_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_loadbzw4_ur_U6: reloc is                       L4_loadbzw4_ur_U6_0 & L4_loadbzw4_ur_U6_1 [ reloc = ((((L4_loadbzw4_ur_U6_0 << 0) + (L4_loadbzw4_ur_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadbzw4_ur_U6: reloc is immext = 0xffffffff & L4_loadbzw4_ur_U6_0 & L4_loadbzw4_ur_U6_1 [ reloc = (L4_loadbzw4_ur_U6_0 << 0) + (L4_loadbzw4_ur_U6_1 << 2); ] { export *[const]:4 reloc; }

L4_loadbzw4_ap_U6: reloc is                       L4_loadbzw4_ap_U6_0 & L4_loadbzw4_ap_U6_1 [ reloc = ((((L4_loadbzw4_ap_U6_0 << 0) + (L4_loadbzw4_ap_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadbzw4_ap_U6: reloc is immext = 0xffffffff & L4_loadbzw4_ap_U6_0 & L4_loadbzw4_ap_U6_1 [ reloc = (L4_loadbzw4_ap_U6_0 << 0) + (L4_loadbzw4_ap_U6_1 << 2); ] { export *[const]:4 reloc; }

L2_loadbzw4_pi_s4_2: reloc is L2_loadbzw4_pi_s4_2_0 [ reloc = (L2_loadbzw4_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L2_loadbzw4_pci_s4_2: reloc is L2_loadbzw4_pci_s4_2_0 [ reloc = (L2_loadbzw4_pci_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L2_loadbsw2_io_s11_1: reloc is                       L2_loadbsw2_io_s11_1_0 & L2_loadbsw2_io_s11_1_1 [ reloc = ((((L2_loadbsw2_io_s11_1_0 << 0) + (L2_loadbsw2_io_s11_1_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadbsw2_io_s11_1: reloc is immext = 0xffffffff & L2_loadbsw2_io_s11_1_0 & L2_loadbsw2_io_s11_1_1 [ reloc = ((L2_loadbsw2_io_s11_1_0 << 0) + (L2_loadbsw2_io_s11_1_1 << 9)) << 1; ] { export *[const]:4 reloc; }

L4_loadbsw2_ur_u2: reloc is L4_loadbsw2_ur_u2_0 & L4_loadbsw2_ur_u2_1 [ reloc = (L4_loadbsw2_ur_u2_0 << 0) + (L4_loadbsw2_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_loadbsw2_ur_U6: reloc is                       L4_loadbsw2_ur_U6_0 & L4_loadbsw2_ur_U6_1 [ reloc = ((((L4_loadbsw2_ur_U6_0 << 0) + (L4_loadbsw2_ur_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadbsw2_ur_U6: reloc is immext = 0xffffffff & L4_loadbsw2_ur_U6_0 & L4_loadbsw2_ur_U6_1 [ reloc = (L4_loadbsw2_ur_U6_0 << 0) + (L4_loadbsw2_ur_U6_1 << 2); ] { export *[const]:4 reloc; }

L4_loadbsw2_ap_U6: reloc is                       L4_loadbsw2_ap_U6_0 & L4_loadbsw2_ap_U6_1 [ reloc = ((((L4_loadbsw2_ap_U6_0 << 0) + (L4_loadbsw2_ap_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadbsw2_ap_U6: reloc is immext = 0xffffffff & L4_loadbsw2_ap_U6_0 & L4_loadbsw2_ap_U6_1 [ reloc = (L4_loadbsw2_ap_U6_0 << 0) + (L4_loadbsw2_ap_U6_1 << 2); ] { export *[const]:4 reloc; }

L2_loadbsw2_pi_s4_1: reloc is L2_loadbsw2_pi_s4_1_0 [ reloc = (L2_loadbsw2_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_loadbsw2_pci_s4_1: reloc is L2_loadbsw2_pci_s4_1_0 [ reloc = (L2_loadbsw2_pci_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_loadbsw4_io_s11_2: reloc is                       L2_loadbsw4_io_s11_2_0 & L2_loadbsw4_io_s11_2_1 [ reloc = ((((L2_loadbsw4_io_s11_2_0 << 0) + (L2_loadbsw4_io_s11_2_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadbsw4_io_s11_2: reloc is immext = 0xffffffff & L2_loadbsw4_io_s11_2_0 & L2_loadbsw4_io_s11_2_1 [ reloc = ((L2_loadbsw4_io_s11_2_0 << 0) + (L2_loadbsw4_io_s11_2_1 << 9)) << 2; ] { export *[const]:4 reloc; }

L4_loadbsw4_ur_u2: reloc is L4_loadbsw4_ur_u2_0 & L4_loadbsw4_ur_u2_1 [ reloc = (L4_loadbsw4_ur_u2_0 << 0) + (L4_loadbsw4_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_loadbsw4_ur_U6: reloc is                       L4_loadbsw4_ur_U6_0 & L4_loadbsw4_ur_U6_1 [ reloc = ((((L4_loadbsw4_ur_U6_0 << 0) + (L4_loadbsw4_ur_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadbsw4_ur_U6: reloc is immext = 0xffffffff & L4_loadbsw4_ur_U6_0 & L4_loadbsw4_ur_U6_1 [ reloc = (L4_loadbsw4_ur_U6_0 << 0) + (L4_loadbsw4_ur_U6_1 << 2); ] { export *[const]:4 reloc; }

L4_loadbsw4_ap_U6: reloc is                       L4_loadbsw4_ap_U6_0 & L4_loadbsw4_ap_U6_1 [ reloc = ((((L4_loadbsw4_ap_U6_0 << 0) + (L4_loadbsw4_ap_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadbsw4_ap_U6: reloc is immext = 0xffffffff & L4_loadbsw4_ap_U6_0 & L4_loadbsw4_ap_U6_1 [ reloc = (L4_loadbsw4_ap_U6_0 << 0) + (L4_loadbsw4_ap_U6_1 << 2); ] { export *[const]:4 reloc; }

L2_loadbsw4_pi_s4_2: reloc is L2_loadbsw4_pi_s4_2_0 [ reloc = (L2_loadbsw4_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L2_loadbsw4_pci_s4_2: reloc is L2_loadbsw4_pci_s4_2_0 [ reloc = (L2_loadbsw4_pci_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L2_loadalignh_io_s11_1: reloc is                       L2_loadalignh_io_s11_1_0 & L2_loadalignh_io_s11_1_1 [ reloc = ((((L2_loadalignh_io_s11_1_0 << 0) + (L2_loadalignh_io_s11_1_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadalignh_io_s11_1: reloc is immext = 0xffffffff & L2_loadalignh_io_s11_1_0 & L2_loadalignh_io_s11_1_1 [ reloc = ((L2_loadalignh_io_s11_1_0 << 0) + (L2_loadalignh_io_s11_1_1 << 9)) << 1; ] { export *[const]:4 reloc; }

L4_loadalignh_ur_u2: reloc is L4_loadalignh_ur_u2_0 & L4_loadalignh_ur_u2_1 [ reloc = (L4_loadalignh_ur_u2_0 << 0) + (L4_loadalignh_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_loadalignh_ur_U6: reloc is                       L4_loadalignh_ur_U6_0 & L4_loadalignh_ur_U6_1 [ reloc = ((((L4_loadalignh_ur_U6_0 << 0) + (L4_loadalignh_ur_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadalignh_ur_U6: reloc is immext = 0xffffffff & L4_loadalignh_ur_U6_0 & L4_loadalignh_ur_U6_1 [ reloc = (L4_loadalignh_ur_U6_0 << 0) + (L4_loadalignh_ur_U6_1 << 2); ] { export *[const]:4 reloc; }

L4_loadalignh_ap_U6: reloc is                       L4_loadalignh_ap_U6_0 & L4_loadalignh_ap_U6_1 [ reloc = ((((L4_loadalignh_ap_U6_0 << 0) + (L4_loadalignh_ap_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadalignh_ap_U6: reloc is immext = 0xffffffff & L4_loadalignh_ap_U6_0 & L4_loadalignh_ap_U6_1 [ reloc = (L4_loadalignh_ap_U6_0 << 0) + (L4_loadalignh_ap_U6_1 << 2); ] { export *[const]:4 reloc; }

L2_loadalignh_pi_s4_1: reloc is L2_loadalignh_pi_s4_1_0 [ reloc = (L2_loadalignh_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_loadalignh_pci_s4_1: reloc is L2_loadalignh_pci_s4_1_0 [ reloc = (L2_loadalignh_pci_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_loadalignb_io_s11_0: reloc is                       L2_loadalignb_io_s11_0_0 & L2_loadalignb_io_s11_0_1 [ reloc = ((((L2_loadalignb_io_s11_0_0 << 0) + (L2_loadalignb_io_s11_0_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadalignb_io_s11_0: reloc is immext = 0xffffffff & L2_loadalignb_io_s11_0_0 & L2_loadalignb_io_s11_0_1 [ reloc = (L2_loadalignb_io_s11_0_0 << 0) + (L2_loadalignb_io_s11_0_1 << 9); ] { export *[const]:4 reloc; }

L4_loadalignb_ur_u2: reloc is L4_loadalignb_ur_u2_0 & L4_loadalignb_ur_u2_1 [ reloc = (L4_loadalignb_ur_u2_0 << 0) + (L4_loadalignb_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_loadalignb_ur_U6: reloc is                       L4_loadalignb_ur_U6_0 & L4_loadalignb_ur_U6_1 [ reloc = ((((L4_loadalignb_ur_U6_0 << 0) + (L4_loadalignb_ur_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadalignb_ur_U6: reloc is immext = 0xffffffff & L4_loadalignb_ur_U6_0 & L4_loadalignb_ur_U6_1 [ reloc = (L4_loadalignb_ur_U6_0 << 0) + (L4_loadalignb_ur_U6_1 << 2); ] { export *[const]:4 reloc; }

L4_loadalignb_ap_U6: reloc is                       L4_loadalignb_ap_U6_0 & L4_loadalignb_ap_U6_1 [ reloc = ((((L4_loadalignb_ap_U6_0 << 0) + (L4_loadalignb_ap_U6_1 << 2)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_loadalignb_ap_U6: reloc is immext = 0xffffffff & L4_loadalignb_ap_U6_0 & L4_loadalignb_ap_U6_1 [ reloc = (L4_loadalignb_ap_U6_0 << 0) + (L4_loadalignb_ap_U6_1 << 2); ] { export *[const]:4 reloc; }

L2_loadalignb_pi_s4_0: reloc is L2_loadalignb_pi_s4_0_0 [ reloc = L2_loadalignb_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

L2_loadalignb_pci_s4_0: reloc is L2_loadalignb_pci_s4_0_0 [ reloc = L2_loadalignb_pci_s4_0_0 << 0; ] { export *[const]:4 reloc; }

S2_storerb_io_s11_0: reloc is                       S2_storerb_io_s11_0_0 & S2_storerb_io_s11_0_1 & S2_storerb_io_s11_0_2 [ reloc = (((((S2_storerb_io_s11_0_0 << 0) + (S2_storerb_io_s11_0_1 << 8)) + (S2_storerb_io_s11_0_2 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storerb_io_s11_0: reloc is immext = 0xffffffff & S2_storerb_io_s11_0_0 & S2_storerb_io_s11_0_1 & S2_storerb_io_s11_0_2 [ reloc = ((S2_storerb_io_s11_0_0 << 0) + (S2_storerb_io_s11_0_1 << 8)) + (S2_storerb_io_s11_0_2 << 9); ] { export *[const]:4 reloc; }

S2_storerb_pi_s4_0: reloc is S2_storerb_pi_s4_0_0 [ reloc = S2_storerb_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

S4_storerb_ap_U6: reloc is                       S4_storerb_ap_U6_0 [ reloc = (((S4_storerb_ap_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storerb_ap_U6: reloc is immext = 0xffffffff & S4_storerb_ap_U6_0 [ reloc = S4_storerb_ap_U6_0 << 0; ] { export *[const]:4 reloc; }

S4_storerb_ur_u2: reloc is S4_storerb_ur_u2_0 & S4_storerb_ur_u2_1 [ reloc = (S4_storerb_ur_u2_0 << 0) + (S4_storerb_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_storerb_ur_U6: reloc is                       S4_storerb_ur_U6_0 [ reloc = (((S4_storerb_ur_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storerb_ur_U6: reloc is immext = 0xffffffff & S4_storerb_ur_U6_0 [ reloc = S4_storerb_ur_U6_0 << 0; ] { export *[const]:4 reloc; }

S2_storerb_pci_s4_0: reloc is S2_storerb_pci_s4_0_0 [ reloc = S2_storerb_pci_s4_0_0 << 0; ] { export *[const]:4 reloc; }

S2_storerh_io_s11_1: reloc is                       S2_storerh_io_s11_1_0 & S2_storerh_io_s11_1_1 & S2_storerh_io_s11_1_2 [ reloc = (((((S2_storerh_io_s11_1_0 << 0) + (S2_storerh_io_s11_1_1 << 8)) + (S2_storerh_io_s11_1_2 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storerh_io_s11_1: reloc is immext = 0xffffffff & S2_storerh_io_s11_1_0 & S2_storerh_io_s11_1_1 & S2_storerh_io_s11_1_2 [ reloc = (((S2_storerh_io_s11_1_0 << 0) + (S2_storerh_io_s11_1_1 << 8)) + (S2_storerh_io_s11_1_2 << 9)) << 1; ] { export *[const]:4 reloc; }

S2_storerh_pi_s4_1: reloc is S2_storerh_pi_s4_1_0 [ reloc = (S2_storerh_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S4_storerh_ap_U6: reloc is                       S4_storerh_ap_U6_0 [ reloc = (((S4_storerh_ap_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storerh_ap_U6: reloc is immext = 0xffffffff & S4_storerh_ap_U6_0 [ reloc = S4_storerh_ap_U6_0 << 0; ] { export *[const]:4 reloc; }

S4_storerh_ur_u2: reloc is S4_storerh_ur_u2_0 & S4_storerh_ur_u2_1 [ reloc = (S4_storerh_ur_u2_0 << 0) + (S4_storerh_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_storerh_ur_U6: reloc is                       S4_storerh_ur_U6_0 [ reloc = (((S4_storerh_ur_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storerh_ur_U6: reloc is immext = 0xffffffff & S4_storerh_ur_U6_0 [ reloc = S4_storerh_ur_U6_0 << 0; ] { export *[const]:4 reloc; }

S2_storerh_pci_s4_1: reloc is S2_storerh_pci_s4_1_0 [ reloc = (S2_storerh_pci_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S2_storerf_io_s11_1: reloc is                       S2_storerf_io_s11_1_0 & S2_storerf_io_s11_1_1 & S2_storerf_io_s11_1_2 [ reloc = (((((S2_storerf_io_s11_1_0 << 0) + (S2_storerf_io_s11_1_1 << 8)) + (S2_storerf_io_s11_1_2 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storerf_io_s11_1: reloc is immext = 0xffffffff & S2_storerf_io_s11_1_0 & S2_storerf_io_s11_1_1 & S2_storerf_io_s11_1_2 [ reloc = (((S2_storerf_io_s11_1_0 << 0) + (S2_storerf_io_s11_1_1 << 8)) + (S2_storerf_io_s11_1_2 << 9)) << 1; ] { export *[const]:4 reloc; }

S2_storerf_pi_s4_1: reloc is S2_storerf_pi_s4_1_0 [ reloc = (S2_storerf_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S4_storerf_ap_U6: reloc is                       S4_storerf_ap_U6_0 [ reloc = (((S4_storerf_ap_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storerf_ap_U6: reloc is immext = 0xffffffff & S4_storerf_ap_U6_0 [ reloc = S4_storerf_ap_U6_0 << 0; ] { export *[const]:4 reloc; }

S4_storerf_ur_u2: reloc is S4_storerf_ur_u2_0 & S4_storerf_ur_u2_1 [ reloc = (S4_storerf_ur_u2_0 << 0) + (S4_storerf_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_storerf_ur_U6: reloc is                       S4_storerf_ur_U6_0 [ reloc = (((S4_storerf_ur_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storerf_ur_U6: reloc is immext = 0xffffffff & S4_storerf_ur_U6_0 [ reloc = S4_storerf_ur_U6_0 << 0; ] { export *[const]:4 reloc; }

S2_storerf_pci_s4_1: reloc is S2_storerf_pci_s4_1_0 [ reloc = (S2_storerf_pci_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S2_storeri_io_s11_2: reloc is                       S2_storeri_io_s11_2_0 & S2_storeri_io_s11_2_1 & S2_storeri_io_s11_2_2 [ reloc = (((((S2_storeri_io_s11_2_0 << 0) + (S2_storeri_io_s11_2_1 << 8)) + (S2_storeri_io_s11_2_2 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storeri_io_s11_2: reloc is immext = 0xffffffff & S2_storeri_io_s11_2_0 & S2_storeri_io_s11_2_1 & S2_storeri_io_s11_2_2 [ reloc = (((S2_storeri_io_s11_2_0 << 0) + (S2_storeri_io_s11_2_1 << 8)) + (S2_storeri_io_s11_2_2 << 9)) << 2; ] { export *[const]:4 reloc; }

S2_storeri_pi_s4_2: reloc is S2_storeri_pi_s4_2_0 [ reloc = (S2_storeri_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S4_storeri_ap_U6: reloc is                       S4_storeri_ap_U6_0 [ reloc = (((S4_storeri_ap_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeri_ap_U6: reloc is immext = 0xffffffff & S4_storeri_ap_U6_0 [ reloc = S4_storeri_ap_U6_0 << 0; ] { export *[const]:4 reloc; }

S4_storeri_ur_u2: reloc is S4_storeri_ur_u2_0 & S4_storeri_ur_u2_1 [ reloc = (S4_storeri_ur_u2_0 << 0) + (S4_storeri_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_storeri_ur_U6: reloc is                       S4_storeri_ur_U6_0 [ reloc = (((S4_storeri_ur_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeri_ur_U6: reloc is immext = 0xffffffff & S4_storeri_ur_U6_0 [ reloc = S4_storeri_ur_U6_0 << 0; ] { export *[const]:4 reloc; }

S2_storeri_pci_s4_2: reloc is S2_storeri_pci_s4_2_0 [ reloc = (S2_storeri_pci_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S2_storerd_io_s11_3: reloc is                       S2_storerd_io_s11_3_0 & S2_storerd_io_s11_3_1 & S2_storerd_io_s11_3_2 [ reloc = (((((S2_storerd_io_s11_3_0 << 0) + (S2_storerd_io_s11_3_1 << 8)) + (S2_storerd_io_s11_3_2 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storerd_io_s11_3: reloc is immext = 0xffffffff & S2_storerd_io_s11_3_0 & S2_storerd_io_s11_3_1 & S2_storerd_io_s11_3_2 [ reloc = (((S2_storerd_io_s11_3_0 << 0) + (S2_storerd_io_s11_3_1 << 8)) + (S2_storerd_io_s11_3_2 << 9)) << 3; ] { export *[const]:4 reloc; }

S2_storerd_pi_s4_3: reloc is S2_storerd_pi_s4_3_0 [ reloc = (S2_storerd_pi_s4_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

S4_storerd_ap_U6: reloc is                       S4_storerd_ap_U6_0 [ reloc = (((S4_storerd_ap_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storerd_ap_U6: reloc is immext = 0xffffffff & S4_storerd_ap_U6_0 [ reloc = S4_storerd_ap_U6_0 << 0; ] { export *[const]:4 reloc; }

S4_storerd_ur_u2: reloc is S4_storerd_ur_u2_0 & S4_storerd_ur_u2_1 [ reloc = (S4_storerd_ur_u2_0 << 0) + (S4_storerd_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_storerd_ur_U6: reloc is                       S4_storerd_ur_U6_0 [ reloc = (((S4_storerd_ur_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storerd_ur_U6: reloc is immext = 0xffffffff & S4_storerd_ur_U6_0 [ reloc = S4_storerd_ur_U6_0 << 0; ] { export *[const]:4 reloc; }

S2_storerd_pci_s4_3: reloc is S2_storerd_pci_s4_3_0 [ reloc = (S2_storerd_pci_s4_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

S2_storerinew_io_s11_2: reloc is                       S2_storerinew_io_s11_2_0 & S2_storerinew_io_s11_2_1 & S2_storerinew_io_s11_2_2 [ reloc = (((((S2_storerinew_io_s11_2_0 << 0) + (S2_storerinew_io_s11_2_1 << 8)) + (S2_storerinew_io_s11_2_2 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storerinew_io_s11_2: reloc is immext = 0xffffffff & S2_storerinew_io_s11_2_0 & S2_storerinew_io_s11_2_1 & S2_storerinew_io_s11_2_2 [ reloc = (((S2_storerinew_io_s11_2_0 << 0) + (S2_storerinew_io_s11_2_1 << 8)) + (S2_storerinew_io_s11_2_2 << 9)) << 2; ] { export *[const]:4 reloc; }

S2_storerinew_pi_s4_2: reloc is S2_storerinew_pi_s4_2_0 [ reloc = (S2_storerinew_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S4_storerinew_ap_U6: reloc is                       S4_storerinew_ap_U6_0 [ reloc = (((S4_storerinew_ap_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storerinew_ap_U6: reloc is immext = 0xffffffff & S4_storerinew_ap_U6_0 [ reloc = S4_storerinew_ap_U6_0 << 0; ] { export *[const]:4 reloc; }

S4_storerinew_ur_u2: reloc is S4_storerinew_ur_u2_0 & S4_storerinew_ur_u2_1 [ reloc = (S4_storerinew_ur_u2_0 << 0) + (S4_storerinew_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_storerinew_ur_U6: reloc is                       S4_storerinew_ur_U6_0 [ reloc = (((S4_storerinew_ur_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storerinew_ur_U6: reloc is immext = 0xffffffff & S4_storerinew_ur_U6_0 [ reloc = S4_storerinew_ur_U6_0 << 0; ] { export *[const]:4 reloc; }

S2_storerinew_pci_s4_2: reloc is S2_storerinew_pci_s4_2_0 [ reloc = (S2_storerinew_pci_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S2_storerbnew_io_s11_0: reloc is                       S2_storerbnew_io_s11_0_0 & S2_storerbnew_io_s11_0_1 & S2_storerbnew_io_s11_0_2 [ reloc = (((((S2_storerbnew_io_s11_0_0 << 0) + (S2_storerbnew_io_s11_0_1 << 8)) + (S2_storerbnew_io_s11_0_2 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storerbnew_io_s11_0: reloc is immext = 0xffffffff & S2_storerbnew_io_s11_0_0 & S2_storerbnew_io_s11_0_1 & S2_storerbnew_io_s11_0_2 [ reloc = ((S2_storerbnew_io_s11_0_0 << 0) + (S2_storerbnew_io_s11_0_1 << 8)) + (S2_storerbnew_io_s11_0_2 << 9); ] { export *[const]:4 reloc; }

S2_storerbnew_pi_s4_0: reloc is S2_storerbnew_pi_s4_0_0 [ reloc = S2_storerbnew_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

S4_storerbnew_ap_U6: reloc is                       S4_storerbnew_ap_U6_0 [ reloc = (((S4_storerbnew_ap_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storerbnew_ap_U6: reloc is immext = 0xffffffff & S4_storerbnew_ap_U6_0 [ reloc = S4_storerbnew_ap_U6_0 << 0; ] { export *[const]:4 reloc; }

S4_storerbnew_ur_u2: reloc is S4_storerbnew_ur_u2_0 & S4_storerbnew_ur_u2_1 [ reloc = (S4_storerbnew_ur_u2_0 << 0) + (S4_storerbnew_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_storerbnew_ur_U6: reloc is                       S4_storerbnew_ur_U6_0 [ reloc = (((S4_storerbnew_ur_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storerbnew_ur_U6: reloc is immext = 0xffffffff & S4_storerbnew_ur_U6_0 [ reloc = S4_storerbnew_ur_U6_0 << 0; ] { export *[const]:4 reloc; }

S2_storerbnew_pci_s4_0: reloc is S2_storerbnew_pci_s4_0_0 [ reloc = S2_storerbnew_pci_s4_0_0 << 0; ] { export *[const]:4 reloc; }

S2_storerhnew_io_s11_1: reloc is                       S2_storerhnew_io_s11_1_0 & S2_storerhnew_io_s11_1_1 & S2_storerhnew_io_s11_1_2 [ reloc = (((((S2_storerhnew_io_s11_1_0 << 0) + (S2_storerhnew_io_s11_1_1 << 8)) + (S2_storerhnew_io_s11_1_2 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storerhnew_io_s11_1: reloc is immext = 0xffffffff & S2_storerhnew_io_s11_1_0 & S2_storerhnew_io_s11_1_1 & S2_storerhnew_io_s11_1_2 [ reloc = (((S2_storerhnew_io_s11_1_0 << 0) + (S2_storerhnew_io_s11_1_1 << 8)) + (S2_storerhnew_io_s11_1_2 << 9)) << 1; ] { export *[const]:4 reloc; }

S2_storerhnew_pi_s4_1: reloc is S2_storerhnew_pi_s4_1_0 [ reloc = (S2_storerhnew_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S4_storerhnew_ap_U6: reloc is                       S4_storerhnew_ap_U6_0 [ reloc = (((S4_storerhnew_ap_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storerhnew_ap_U6: reloc is immext = 0xffffffff & S4_storerhnew_ap_U6_0 [ reloc = S4_storerhnew_ap_U6_0 << 0; ] { export *[const]:4 reloc; }

S4_storerhnew_ur_u2: reloc is S4_storerhnew_ur_u2_0 & S4_storerhnew_ur_u2_1 [ reloc = (S4_storerhnew_ur_u2_0 << 0) + (S4_storerhnew_ur_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_storerhnew_ur_U6: reloc is                       S4_storerhnew_ur_U6_0 [ reloc = (((S4_storerhnew_ur_U6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storerhnew_ur_U6: reloc is immext = 0xffffffff & S4_storerhnew_ur_U6_0 [ reloc = S4_storerhnew_ur_U6_0 << 0; ] { export *[const]:4 reloc; }

S2_storerhnew_pci_s4_1: reloc is S2_storerhnew_pci_s4_1_0 [ reloc = (S2_storerhnew_pci_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S2_allocframe_u11_3: reloc is S2_allocframe_u11_3_0 [ reloc = (S2_allocframe_u11_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

L4_loadrub_rr_u2: reloc is L4_loadrub_rr_u2_0 & L4_loadrub_rr_u2_1 [ reloc = (L4_loadrub_rr_u2_0 << 0) + (L4_loadrub_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L2_ploadrubt_io_u6_0: reloc is                       L2_ploadrubt_io_u6_0_0 [ reloc = (((L2_ploadrubt_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrubt_io_u6_0: reloc is immext = 0xffffffff & L2_ploadrubt_io_u6_0_0 [ reloc = L2_ploadrubt_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L2_ploadrubt_pi_s4_0: reloc is L2_ploadrubt_pi_s4_0_0 [ reloc = L2_ploadrubt_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

L2_ploadrubf_io_u6_0: reloc is                       L2_ploadrubf_io_u6_0_0 [ reloc = (((L2_ploadrubf_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrubf_io_u6_0: reloc is immext = 0xffffffff & L2_ploadrubf_io_u6_0_0 [ reloc = L2_ploadrubf_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L2_ploadrubf_pi_s4_0: reloc is L2_ploadrubf_pi_s4_0_0 [ reloc = L2_ploadrubf_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

L2_ploadrubtnew_io_u6_0: reloc is                       L2_ploadrubtnew_io_u6_0_0 [ reloc = (((L2_ploadrubtnew_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrubtnew_io_u6_0: reloc is immext = 0xffffffff & L2_ploadrubtnew_io_u6_0_0 [ reloc = L2_ploadrubtnew_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L2_ploadrubfnew_io_u6_0: reloc is                       L2_ploadrubfnew_io_u6_0_0 [ reloc = (((L2_ploadrubfnew_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrubfnew_io_u6_0: reloc is immext = 0xffffffff & L2_ploadrubfnew_io_u6_0_0 [ reloc = L2_ploadrubfnew_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L4_ploadrubt_rr_u2: reloc is L4_ploadrubt_rr_u2_0 & L4_ploadrubt_rr_u2_1 [ reloc = (L4_ploadrubt_rr_u2_0 << 0) + (L4_ploadrubt_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrubf_rr_u2: reloc is L4_ploadrubf_rr_u2_0 & L4_ploadrubf_rr_u2_1 [ reloc = (L4_ploadrubf_rr_u2_0 << 0) + (L4_ploadrubf_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrubtnew_rr_u2: reloc is L4_ploadrubtnew_rr_u2_0 & L4_ploadrubtnew_rr_u2_1 [ reloc = (L4_ploadrubtnew_rr_u2_0 << 0) + (L4_ploadrubtnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrubfnew_rr_u2: reloc is L4_ploadrubfnew_rr_u2_0 & L4_ploadrubfnew_rr_u2_1 [ reloc = (L4_ploadrubfnew_rr_u2_0 << 0) + (L4_ploadrubfnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L2_ploadrubtnew_pi_s4_0: reloc is L2_ploadrubtnew_pi_s4_0_0 [ reloc = L2_ploadrubtnew_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

L2_ploadrubfnew_pi_s4_0: reloc is L2_ploadrubfnew_pi_s4_0_0 [ reloc = L2_ploadrubfnew_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

L4_ploadrubt_abs_u6: reloc is                       L4_ploadrubt_abs_u6_0 & L4_ploadrubt_abs_u6_1 [ reloc = ((((L4_ploadrubt_abs_u6_0 << 0) + (L4_ploadrubt_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrubt_abs_u6: reloc is immext = 0xffffffff & L4_ploadrubt_abs_u6_0 & L4_ploadrubt_abs_u6_1 [ reloc = (L4_ploadrubt_abs_u6_0 << 0) + (L4_ploadrubt_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrubf_abs_u6: reloc is                       L4_ploadrubf_abs_u6_0 & L4_ploadrubf_abs_u6_1 [ reloc = ((((L4_ploadrubf_abs_u6_0 << 0) + (L4_ploadrubf_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrubf_abs_u6: reloc is immext = 0xffffffff & L4_ploadrubf_abs_u6_0 & L4_ploadrubf_abs_u6_1 [ reloc = (L4_ploadrubf_abs_u6_0 << 0) + (L4_ploadrubf_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrubtnew_abs_u6: reloc is                       L4_ploadrubtnew_abs_u6_0 & L4_ploadrubtnew_abs_u6_1 [ reloc = ((((L4_ploadrubtnew_abs_u6_0 << 0) + (L4_ploadrubtnew_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrubtnew_abs_u6: reloc is immext = 0xffffffff & L4_ploadrubtnew_abs_u6_0 & L4_ploadrubtnew_abs_u6_1 [ reloc = (L4_ploadrubtnew_abs_u6_0 << 0) + (L4_ploadrubtnew_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrubfnew_abs_u6: reloc is                       L4_ploadrubfnew_abs_u6_0 & L4_ploadrubfnew_abs_u6_1 [ reloc = ((((L4_ploadrubfnew_abs_u6_0 << 0) + (L4_ploadrubfnew_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrubfnew_abs_u6: reloc is immext = 0xffffffff & L4_ploadrubfnew_abs_u6_0 & L4_ploadrubfnew_abs_u6_1 [ reloc = (L4_ploadrubfnew_abs_u6_0 << 0) + (L4_ploadrubfnew_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_loadrb_rr_u2: reloc is L4_loadrb_rr_u2_0 & L4_loadrb_rr_u2_1 [ reloc = (L4_loadrb_rr_u2_0 << 0) + (L4_loadrb_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L2_ploadrbt_io_u6_0: reloc is                       L2_ploadrbt_io_u6_0_0 [ reloc = (((L2_ploadrbt_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrbt_io_u6_0: reloc is immext = 0xffffffff & L2_ploadrbt_io_u6_0_0 [ reloc = L2_ploadrbt_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L2_ploadrbt_pi_s4_0: reloc is L2_ploadrbt_pi_s4_0_0 [ reloc = L2_ploadrbt_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

L2_ploadrbf_io_u6_0: reloc is                       L2_ploadrbf_io_u6_0_0 [ reloc = (((L2_ploadrbf_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrbf_io_u6_0: reloc is immext = 0xffffffff & L2_ploadrbf_io_u6_0_0 [ reloc = L2_ploadrbf_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L2_ploadrbf_pi_s4_0: reloc is L2_ploadrbf_pi_s4_0_0 [ reloc = L2_ploadrbf_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

L2_ploadrbtnew_io_u6_0: reloc is                       L2_ploadrbtnew_io_u6_0_0 [ reloc = (((L2_ploadrbtnew_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrbtnew_io_u6_0: reloc is immext = 0xffffffff & L2_ploadrbtnew_io_u6_0_0 [ reloc = L2_ploadrbtnew_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L2_ploadrbfnew_io_u6_0: reloc is                       L2_ploadrbfnew_io_u6_0_0 [ reloc = (((L2_ploadrbfnew_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrbfnew_io_u6_0: reloc is immext = 0xffffffff & L2_ploadrbfnew_io_u6_0_0 [ reloc = L2_ploadrbfnew_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L4_ploadrbt_rr_u2: reloc is L4_ploadrbt_rr_u2_0 & L4_ploadrbt_rr_u2_1 [ reloc = (L4_ploadrbt_rr_u2_0 << 0) + (L4_ploadrbt_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrbf_rr_u2: reloc is L4_ploadrbf_rr_u2_0 & L4_ploadrbf_rr_u2_1 [ reloc = (L4_ploadrbf_rr_u2_0 << 0) + (L4_ploadrbf_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrbtnew_rr_u2: reloc is L4_ploadrbtnew_rr_u2_0 & L4_ploadrbtnew_rr_u2_1 [ reloc = (L4_ploadrbtnew_rr_u2_0 << 0) + (L4_ploadrbtnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrbfnew_rr_u2: reloc is L4_ploadrbfnew_rr_u2_0 & L4_ploadrbfnew_rr_u2_1 [ reloc = (L4_ploadrbfnew_rr_u2_0 << 0) + (L4_ploadrbfnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L2_ploadrbtnew_pi_s4_0: reloc is L2_ploadrbtnew_pi_s4_0_0 [ reloc = L2_ploadrbtnew_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

L2_ploadrbfnew_pi_s4_0: reloc is L2_ploadrbfnew_pi_s4_0_0 [ reloc = L2_ploadrbfnew_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

L4_ploadrbt_abs_u6: reloc is                       L4_ploadrbt_abs_u6_0 & L4_ploadrbt_abs_u6_1 [ reloc = ((((L4_ploadrbt_abs_u6_0 << 0) + (L4_ploadrbt_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrbt_abs_u6: reloc is immext = 0xffffffff & L4_ploadrbt_abs_u6_0 & L4_ploadrbt_abs_u6_1 [ reloc = (L4_ploadrbt_abs_u6_0 << 0) + (L4_ploadrbt_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrbf_abs_u6: reloc is                       L4_ploadrbf_abs_u6_0 & L4_ploadrbf_abs_u6_1 [ reloc = ((((L4_ploadrbf_abs_u6_0 << 0) + (L4_ploadrbf_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrbf_abs_u6: reloc is immext = 0xffffffff & L4_ploadrbf_abs_u6_0 & L4_ploadrbf_abs_u6_1 [ reloc = (L4_ploadrbf_abs_u6_0 << 0) + (L4_ploadrbf_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrbtnew_abs_u6: reloc is                       L4_ploadrbtnew_abs_u6_0 & L4_ploadrbtnew_abs_u6_1 [ reloc = ((((L4_ploadrbtnew_abs_u6_0 << 0) + (L4_ploadrbtnew_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrbtnew_abs_u6: reloc is immext = 0xffffffff & L4_ploadrbtnew_abs_u6_0 & L4_ploadrbtnew_abs_u6_1 [ reloc = (L4_ploadrbtnew_abs_u6_0 << 0) + (L4_ploadrbtnew_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrbfnew_abs_u6: reloc is                       L4_ploadrbfnew_abs_u6_0 & L4_ploadrbfnew_abs_u6_1 [ reloc = ((((L4_ploadrbfnew_abs_u6_0 << 0) + (L4_ploadrbfnew_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrbfnew_abs_u6: reloc is immext = 0xffffffff & L4_ploadrbfnew_abs_u6_0 & L4_ploadrbfnew_abs_u6_1 [ reloc = (L4_ploadrbfnew_abs_u6_0 << 0) + (L4_ploadrbfnew_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_loadruh_rr_u2: reloc is L4_loadruh_rr_u2_0 & L4_loadruh_rr_u2_1 [ reloc = (L4_loadruh_rr_u2_0 << 0) + (L4_loadruh_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L2_ploadruht_io_u6_1: reloc is                       L2_ploadruht_io_u6_1_0 [ reloc = (((L2_ploadruht_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadruht_io_u6_1: reloc is immext = 0xffffffff & L2_ploadruht_io_u6_1_0 [ reloc = (L2_ploadruht_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_ploadruht_pi_s4_1: reloc is L2_ploadruht_pi_s4_1_0 [ reloc = (L2_ploadruht_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_ploadruhf_io_u6_1: reloc is                       L2_ploadruhf_io_u6_1_0 [ reloc = (((L2_ploadruhf_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadruhf_io_u6_1: reloc is immext = 0xffffffff & L2_ploadruhf_io_u6_1_0 [ reloc = (L2_ploadruhf_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_ploadruhf_pi_s4_1: reloc is L2_ploadruhf_pi_s4_1_0 [ reloc = (L2_ploadruhf_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_ploadruhtnew_io_u6_1: reloc is                       L2_ploadruhtnew_io_u6_1_0 [ reloc = (((L2_ploadruhtnew_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadruhtnew_io_u6_1: reloc is immext = 0xffffffff & L2_ploadruhtnew_io_u6_1_0 [ reloc = (L2_ploadruhtnew_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_ploadruhfnew_io_u6_1: reloc is                       L2_ploadruhfnew_io_u6_1_0 [ reloc = (((L2_ploadruhfnew_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadruhfnew_io_u6_1: reloc is immext = 0xffffffff & L2_ploadruhfnew_io_u6_1_0 [ reloc = (L2_ploadruhfnew_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L4_ploadruht_rr_u2: reloc is L4_ploadruht_rr_u2_0 & L4_ploadruht_rr_u2_1 [ reloc = (L4_ploadruht_rr_u2_0 << 0) + (L4_ploadruht_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadruhf_rr_u2: reloc is L4_ploadruhf_rr_u2_0 & L4_ploadruhf_rr_u2_1 [ reloc = (L4_ploadruhf_rr_u2_0 << 0) + (L4_ploadruhf_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadruhtnew_rr_u2: reloc is L4_ploadruhtnew_rr_u2_0 & L4_ploadruhtnew_rr_u2_1 [ reloc = (L4_ploadruhtnew_rr_u2_0 << 0) + (L4_ploadruhtnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadruhfnew_rr_u2: reloc is L4_ploadruhfnew_rr_u2_0 & L4_ploadruhfnew_rr_u2_1 [ reloc = (L4_ploadruhfnew_rr_u2_0 << 0) + (L4_ploadruhfnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L2_ploadruhtnew_pi_s4_1: reloc is L2_ploadruhtnew_pi_s4_1_0 [ reloc = (L2_ploadruhtnew_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_ploadruhfnew_pi_s4_1: reloc is L2_ploadruhfnew_pi_s4_1_0 [ reloc = (L2_ploadruhfnew_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L4_ploadruht_abs_u6: reloc is                       L4_ploadruht_abs_u6_0 & L4_ploadruht_abs_u6_1 [ reloc = ((((L4_ploadruht_abs_u6_0 << 0) + (L4_ploadruht_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadruht_abs_u6: reloc is immext = 0xffffffff & L4_ploadruht_abs_u6_0 & L4_ploadruht_abs_u6_1 [ reloc = (L4_ploadruht_abs_u6_0 << 0) + (L4_ploadruht_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadruhf_abs_u6: reloc is                       L4_ploadruhf_abs_u6_0 & L4_ploadruhf_abs_u6_1 [ reloc = ((((L4_ploadruhf_abs_u6_0 << 0) + (L4_ploadruhf_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadruhf_abs_u6: reloc is immext = 0xffffffff & L4_ploadruhf_abs_u6_0 & L4_ploadruhf_abs_u6_1 [ reloc = (L4_ploadruhf_abs_u6_0 << 0) + (L4_ploadruhf_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadruhtnew_abs_u6: reloc is                       L4_ploadruhtnew_abs_u6_0 & L4_ploadruhtnew_abs_u6_1 [ reloc = ((((L4_ploadruhtnew_abs_u6_0 << 0) + (L4_ploadruhtnew_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadruhtnew_abs_u6: reloc is immext = 0xffffffff & L4_ploadruhtnew_abs_u6_0 & L4_ploadruhtnew_abs_u6_1 [ reloc = (L4_ploadruhtnew_abs_u6_0 << 0) + (L4_ploadruhtnew_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadruhfnew_abs_u6: reloc is                       L4_ploadruhfnew_abs_u6_0 & L4_ploadruhfnew_abs_u6_1 [ reloc = ((((L4_ploadruhfnew_abs_u6_0 << 0) + (L4_ploadruhfnew_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadruhfnew_abs_u6: reloc is immext = 0xffffffff & L4_ploadruhfnew_abs_u6_0 & L4_ploadruhfnew_abs_u6_1 [ reloc = (L4_ploadruhfnew_abs_u6_0 << 0) + (L4_ploadruhfnew_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_loadrh_rr_u2: reloc is L4_loadrh_rr_u2_0 & L4_loadrh_rr_u2_1 [ reloc = (L4_loadrh_rr_u2_0 << 0) + (L4_loadrh_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L2_ploadrht_io_u6_1: reloc is                       L2_ploadrht_io_u6_1_0 [ reloc = (((L2_ploadrht_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrht_io_u6_1: reloc is immext = 0xffffffff & L2_ploadrht_io_u6_1_0 [ reloc = (L2_ploadrht_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_ploadrht_pi_s4_1: reloc is L2_ploadrht_pi_s4_1_0 [ reloc = (L2_ploadrht_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_ploadrhf_io_u6_1: reloc is                       L2_ploadrhf_io_u6_1_0 [ reloc = (((L2_ploadrhf_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrhf_io_u6_1: reloc is immext = 0xffffffff & L2_ploadrhf_io_u6_1_0 [ reloc = (L2_ploadrhf_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_ploadrhf_pi_s4_1: reloc is L2_ploadrhf_pi_s4_1_0 [ reloc = (L2_ploadrhf_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_ploadrhtnew_io_u6_1: reloc is                       L2_ploadrhtnew_io_u6_1_0 [ reloc = (((L2_ploadrhtnew_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrhtnew_io_u6_1: reloc is immext = 0xffffffff & L2_ploadrhtnew_io_u6_1_0 [ reloc = (L2_ploadrhtnew_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_ploadrhfnew_io_u6_1: reloc is                       L2_ploadrhfnew_io_u6_1_0 [ reloc = (((L2_ploadrhfnew_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrhfnew_io_u6_1: reloc is immext = 0xffffffff & L2_ploadrhfnew_io_u6_1_0 [ reloc = (L2_ploadrhfnew_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L4_ploadrht_rr_u2: reloc is L4_ploadrht_rr_u2_0 & L4_ploadrht_rr_u2_1 [ reloc = (L4_ploadrht_rr_u2_0 << 0) + (L4_ploadrht_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrhf_rr_u2: reloc is L4_ploadrhf_rr_u2_0 & L4_ploadrhf_rr_u2_1 [ reloc = (L4_ploadrhf_rr_u2_0 << 0) + (L4_ploadrhf_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrhtnew_rr_u2: reloc is L4_ploadrhtnew_rr_u2_0 & L4_ploadrhtnew_rr_u2_1 [ reloc = (L4_ploadrhtnew_rr_u2_0 << 0) + (L4_ploadrhtnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrhfnew_rr_u2: reloc is L4_ploadrhfnew_rr_u2_0 & L4_ploadrhfnew_rr_u2_1 [ reloc = (L4_ploadrhfnew_rr_u2_0 << 0) + (L4_ploadrhfnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L2_ploadrhtnew_pi_s4_1: reloc is L2_ploadrhtnew_pi_s4_1_0 [ reloc = (L2_ploadrhtnew_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L2_ploadrhfnew_pi_s4_1: reloc is L2_ploadrhfnew_pi_s4_1_0 [ reloc = (L2_ploadrhfnew_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L4_ploadrht_abs_u6: reloc is                       L4_ploadrht_abs_u6_0 & L4_ploadrht_abs_u6_1 [ reloc = ((((L4_ploadrht_abs_u6_0 << 0) + (L4_ploadrht_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrht_abs_u6: reloc is immext = 0xffffffff & L4_ploadrht_abs_u6_0 & L4_ploadrht_abs_u6_1 [ reloc = (L4_ploadrht_abs_u6_0 << 0) + (L4_ploadrht_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrhf_abs_u6: reloc is                       L4_ploadrhf_abs_u6_0 & L4_ploadrhf_abs_u6_1 [ reloc = ((((L4_ploadrhf_abs_u6_0 << 0) + (L4_ploadrhf_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrhf_abs_u6: reloc is immext = 0xffffffff & L4_ploadrhf_abs_u6_0 & L4_ploadrhf_abs_u6_1 [ reloc = (L4_ploadrhf_abs_u6_0 << 0) + (L4_ploadrhf_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrhtnew_abs_u6: reloc is                       L4_ploadrhtnew_abs_u6_0 & L4_ploadrhtnew_abs_u6_1 [ reloc = ((((L4_ploadrhtnew_abs_u6_0 << 0) + (L4_ploadrhtnew_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrhtnew_abs_u6: reloc is immext = 0xffffffff & L4_ploadrhtnew_abs_u6_0 & L4_ploadrhtnew_abs_u6_1 [ reloc = (L4_ploadrhtnew_abs_u6_0 << 0) + (L4_ploadrhtnew_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrhfnew_abs_u6: reloc is                       L4_ploadrhfnew_abs_u6_0 & L4_ploadrhfnew_abs_u6_1 [ reloc = ((((L4_ploadrhfnew_abs_u6_0 << 0) + (L4_ploadrhfnew_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrhfnew_abs_u6: reloc is immext = 0xffffffff & L4_ploadrhfnew_abs_u6_0 & L4_ploadrhfnew_abs_u6_1 [ reloc = (L4_ploadrhfnew_abs_u6_0 << 0) + (L4_ploadrhfnew_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_loadri_rr_u2: reloc is L4_loadri_rr_u2_0 & L4_loadri_rr_u2_1 [ reloc = (L4_loadri_rr_u2_0 << 0) + (L4_loadri_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L2_ploadrit_io_u6_2: reloc is                       L2_ploadrit_io_u6_2_0 [ reloc = (((L2_ploadrit_io_u6_2_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrit_io_u6_2: reloc is immext = 0xffffffff & L2_ploadrit_io_u6_2_0 [ reloc = (L2_ploadrit_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L2_ploadrit_pi_s4_2: reloc is L2_ploadrit_pi_s4_2_0 [ reloc = (L2_ploadrit_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L2_ploadrif_io_u6_2: reloc is                       L2_ploadrif_io_u6_2_0 [ reloc = (((L2_ploadrif_io_u6_2_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrif_io_u6_2: reloc is immext = 0xffffffff & L2_ploadrif_io_u6_2_0 [ reloc = (L2_ploadrif_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L2_ploadrif_pi_s4_2: reloc is L2_ploadrif_pi_s4_2_0 [ reloc = (L2_ploadrif_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L2_ploadritnew_io_u6_2: reloc is                       L2_ploadritnew_io_u6_2_0 [ reloc = (((L2_ploadritnew_io_u6_2_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadritnew_io_u6_2: reloc is immext = 0xffffffff & L2_ploadritnew_io_u6_2_0 [ reloc = (L2_ploadritnew_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L2_ploadrifnew_io_u6_2: reloc is                       L2_ploadrifnew_io_u6_2_0 [ reloc = (((L2_ploadrifnew_io_u6_2_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrifnew_io_u6_2: reloc is immext = 0xffffffff & L2_ploadrifnew_io_u6_2_0 [ reloc = (L2_ploadrifnew_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L4_ploadrit_rr_u2: reloc is L4_ploadrit_rr_u2_0 & L4_ploadrit_rr_u2_1 [ reloc = (L4_ploadrit_rr_u2_0 << 0) + (L4_ploadrit_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrif_rr_u2: reloc is L4_ploadrif_rr_u2_0 & L4_ploadrif_rr_u2_1 [ reloc = (L4_ploadrif_rr_u2_0 << 0) + (L4_ploadrif_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadritnew_rr_u2: reloc is L4_ploadritnew_rr_u2_0 & L4_ploadritnew_rr_u2_1 [ reloc = (L4_ploadritnew_rr_u2_0 << 0) + (L4_ploadritnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrifnew_rr_u2: reloc is L4_ploadrifnew_rr_u2_0 & L4_ploadrifnew_rr_u2_1 [ reloc = (L4_ploadrifnew_rr_u2_0 << 0) + (L4_ploadrifnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L2_ploadritnew_pi_s4_2: reloc is L2_ploadritnew_pi_s4_2_0 [ reloc = (L2_ploadritnew_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L2_ploadrifnew_pi_s4_2: reloc is L2_ploadrifnew_pi_s4_2_0 [ reloc = (L2_ploadrifnew_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L4_ploadrit_abs_u6: reloc is                       L4_ploadrit_abs_u6_0 & L4_ploadrit_abs_u6_1 [ reloc = ((((L4_ploadrit_abs_u6_0 << 0) + (L4_ploadrit_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrit_abs_u6: reloc is immext = 0xffffffff & L4_ploadrit_abs_u6_0 & L4_ploadrit_abs_u6_1 [ reloc = (L4_ploadrit_abs_u6_0 << 0) + (L4_ploadrit_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrif_abs_u6: reloc is                       L4_ploadrif_abs_u6_0 & L4_ploadrif_abs_u6_1 [ reloc = ((((L4_ploadrif_abs_u6_0 << 0) + (L4_ploadrif_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrif_abs_u6: reloc is immext = 0xffffffff & L4_ploadrif_abs_u6_0 & L4_ploadrif_abs_u6_1 [ reloc = (L4_ploadrif_abs_u6_0 << 0) + (L4_ploadrif_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadritnew_abs_u6: reloc is                       L4_ploadritnew_abs_u6_0 & L4_ploadritnew_abs_u6_1 [ reloc = ((((L4_ploadritnew_abs_u6_0 << 0) + (L4_ploadritnew_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadritnew_abs_u6: reloc is immext = 0xffffffff & L4_ploadritnew_abs_u6_0 & L4_ploadritnew_abs_u6_1 [ reloc = (L4_ploadritnew_abs_u6_0 << 0) + (L4_ploadritnew_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrifnew_abs_u6: reloc is                       L4_ploadrifnew_abs_u6_0 & L4_ploadrifnew_abs_u6_1 [ reloc = ((((L4_ploadrifnew_abs_u6_0 << 0) + (L4_ploadrifnew_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrifnew_abs_u6: reloc is immext = 0xffffffff & L4_ploadrifnew_abs_u6_0 & L4_ploadrifnew_abs_u6_1 [ reloc = (L4_ploadrifnew_abs_u6_0 << 0) + (L4_ploadrifnew_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_loadrd_rr_u2: reloc is L4_loadrd_rr_u2_0 & L4_loadrd_rr_u2_1 [ reloc = (L4_loadrd_rr_u2_0 << 0) + (L4_loadrd_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L2_ploadrdt_io_u6_3: reloc is                       L2_ploadrdt_io_u6_3_0 [ reloc = (((L2_ploadrdt_io_u6_3_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrdt_io_u6_3: reloc is immext = 0xffffffff & L2_ploadrdt_io_u6_3_0 [ reloc = (L2_ploadrdt_io_u6_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

L2_ploadrdt_pi_s4_3: reloc is L2_ploadrdt_pi_s4_3_0 [ reloc = (L2_ploadrdt_pi_s4_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

L2_ploadrdf_io_u6_3: reloc is                       L2_ploadrdf_io_u6_3_0 [ reloc = (((L2_ploadrdf_io_u6_3_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrdf_io_u6_3: reloc is immext = 0xffffffff & L2_ploadrdf_io_u6_3_0 [ reloc = (L2_ploadrdf_io_u6_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

L2_ploadrdf_pi_s4_3: reloc is L2_ploadrdf_pi_s4_3_0 [ reloc = (L2_ploadrdf_pi_s4_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

L2_ploadrdtnew_io_u6_3: reloc is                       L2_ploadrdtnew_io_u6_3_0 [ reloc = (((L2_ploadrdtnew_io_u6_3_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrdtnew_io_u6_3: reloc is immext = 0xffffffff & L2_ploadrdtnew_io_u6_3_0 [ reloc = (L2_ploadrdtnew_io_u6_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

L2_ploadrdfnew_io_u6_3: reloc is                       L2_ploadrdfnew_io_u6_3_0 [ reloc = (((L2_ploadrdfnew_io_u6_3_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_ploadrdfnew_io_u6_3: reloc is immext = 0xffffffff & L2_ploadrdfnew_io_u6_3_0 [ reloc = (L2_ploadrdfnew_io_u6_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

L4_ploadrdt_rr_u2: reloc is L4_ploadrdt_rr_u2_0 & L4_ploadrdt_rr_u2_1 [ reloc = (L4_ploadrdt_rr_u2_0 << 0) + (L4_ploadrdt_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrdf_rr_u2: reloc is L4_ploadrdf_rr_u2_0 & L4_ploadrdf_rr_u2_1 [ reloc = (L4_ploadrdf_rr_u2_0 << 0) + (L4_ploadrdf_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrdtnew_rr_u2: reloc is L4_ploadrdtnew_rr_u2_0 & L4_ploadrdtnew_rr_u2_1 [ reloc = (L4_ploadrdtnew_rr_u2_0 << 0) + (L4_ploadrdtnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrdfnew_rr_u2: reloc is L4_ploadrdfnew_rr_u2_0 & L4_ploadrdfnew_rr_u2_1 [ reloc = (L4_ploadrdfnew_rr_u2_0 << 0) + (L4_ploadrdfnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

L2_ploadrdtnew_pi_s4_3: reloc is L2_ploadrdtnew_pi_s4_3_0 [ reloc = (L2_ploadrdtnew_pi_s4_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

L2_ploadrdfnew_pi_s4_3: reloc is L2_ploadrdfnew_pi_s4_3_0 [ reloc = (L2_ploadrdfnew_pi_s4_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

L4_ploadrdt_abs_u6: reloc is                       L4_ploadrdt_abs_u6_0 & L4_ploadrdt_abs_u6_1 [ reloc = ((((L4_ploadrdt_abs_u6_0 << 0) + (L4_ploadrdt_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrdt_abs_u6: reloc is immext = 0xffffffff & L4_ploadrdt_abs_u6_0 & L4_ploadrdt_abs_u6_1 [ reloc = (L4_ploadrdt_abs_u6_0 << 0) + (L4_ploadrdt_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrdf_abs_u6: reloc is                       L4_ploadrdf_abs_u6_0 & L4_ploadrdf_abs_u6_1 [ reloc = ((((L4_ploadrdf_abs_u6_0 << 0) + (L4_ploadrdf_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrdf_abs_u6: reloc is immext = 0xffffffff & L4_ploadrdf_abs_u6_0 & L4_ploadrdf_abs_u6_1 [ reloc = (L4_ploadrdf_abs_u6_0 << 0) + (L4_ploadrdf_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrdtnew_abs_u6: reloc is                       L4_ploadrdtnew_abs_u6_0 & L4_ploadrdtnew_abs_u6_1 [ reloc = ((((L4_ploadrdtnew_abs_u6_0 << 0) + (L4_ploadrdtnew_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrdtnew_abs_u6: reloc is immext = 0xffffffff & L4_ploadrdtnew_abs_u6_0 & L4_ploadrdtnew_abs_u6_1 [ reloc = (L4_ploadrdtnew_abs_u6_0 << 0) + (L4_ploadrdtnew_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

L4_ploadrdfnew_abs_u6: reloc is                       L4_ploadrdfnew_abs_u6_0 & L4_ploadrdfnew_abs_u6_1 [ reloc = ((((L4_ploadrdfnew_abs_u6_0 << 0) + (L4_ploadrdfnew_abs_u6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ploadrdfnew_abs_u6: reloc is immext = 0xffffffff & L4_ploadrdfnew_abs_u6_0 & L4_ploadrdfnew_abs_u6_1 [ reloc = (L4_ploadrdfnew_abs_u6_0 << 0) + (L4_ploadrdfnew_abs_u6_1 << 1); ] { export *[const]:4 reloc; }

S4_storerb_rr_u2: reloc is S4_storerb_rr_u2_0 & S4_storerb_rr_u2_1 [ reloc = (S4_storerb_rr_u2_0 << 0) + (S4_storerb_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstorerbt_io_u6_0: reloc is                       S2_pstorerbt_io_u6_0_0 & S2_pstorerbt_io_u6_0_1 [ reloc = ((((S2_pstorerbt_io_u6_0_0 << 0) + (S2_pstorerbt_io_u6_0_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerbt_io_u6_0: reloc is immext = 0xffffffff & S2_pstorerbt_io_u6_0_0 & S2_pstorerbt_io_u6_0_1 [ reloc = (S2_pstorerbt_io_u6_0_0 << 0) + (S2_pstorerbt_io_u6_0_1 << 5); ] { export *[const]:4 reloc; }

S2_pstorerbt_pi_s4_0: reloc is S2_pstorerbt_pi_s4_0_0 [ reloc = S2_pstorerbt_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

S2_pstorerbf_io_u6_0: reloc is                       S2_pstorerbf_io_u6_0_0 & S2_pstorerbf_io_u6_0_1 [ reloc = ((((S2_pstorerbf_io_u6_0_0 << 0) + (S2_pstorerbf_io_u6_0_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerbf_io_u6_0: reloc is immext = 0xffffffff & S2_pstorerbf_io_u6_0_0 & S2_pstorerbf_io_u6_0_1 [ reloc = (S2_pstorerbf_io_u6_0_0 << 0) + (S2_pstorerbf_io_u6_0_1 << 5); ] { export *[const]:4 reloc; }

S2_pstorerbf_pi_s4_0: reloc is S2_pstorerbf_pi_s4_0_0 [ reloc = S2_pstorerbf_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

S4_pstorerbt_rr_u2: reloc is S4_pstorerbt_rr_u2_0 & S4_pstorerbt_rr_u2_1 [ reloc = (S4_pstorerbt_rr_u2_0 << 0) + (S4_pstorerbt_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerbf_rr_u2: reloc is S4_pstorerbf_rr_u2_0 & S4_pstorerbf_rr_u2_1 [ reloc = (S4_pstorerbf_rr_u2_0 << 0) + (S4_pstorerbf_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerbtnew_io_u6_0: reloc is                       S4_pstorerbtnew_io_u6_0_0 & S4_pstorerbtnew_io_u6_0_1 [ reloc = ((((S4_pstorerbtnew_io_u6_0_0 << 0) + (S4_pstorerbtnew_io_u6_0_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerbtnew_io_u6_0: reloc is immext = 0xffffffff & S4_pstorerbtnew_io_u6_0_0 & S4_pstorerbtnew_io_u6_0_1 [ reloc = (S4_pstorerbtnew_io_u6_0_0 << 0) + (S4_pstorerbtnew_io_u6_0_1 << 5); ] { export *[const]:4 reloc; }

S4_pstorerbfnew_io_u6_0: reloc is                       S4_pstorerbfnew_io_u6_0_0 & S4_pstorerbfnew_io_u6_0_1 [ reloc = ((((S4_pstorerbfnew_io_u6_0_0 << 0) + (S4_pstorerbfnew_io_u6_0_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerbfnew_io_u6_0: reloc is immext = 0xffffffff & S4_pstorerbfnew_io_u6_0_0 & S4_pstorerbfnew_io_u6_0_1 [ reloc = (S4_pstorerbfnew_io_u6_0_0 << 0) + (S4_pstorerbfnew_io_u6_0_1 << 5); ] { export *[const]:4 reloc; }

S4_pstorerbtnew_rr_u2: reloc is S4_pstorerbtnew_rr_u2_0 & S4_pstorerbtnew_rr_u2_1 [ reloc = (S4_pstorerbtnew_rr_u2_0 << 0) + (S4_pstorerbtnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerbfnew_rr_u2: reloc is S4_pstorerbfnew_rr_u2_0 & S4_pstorerbfnew_rr_u2_1 [ reloc = (S4_pstorerbfnew_rr_u2_0 << 0) + (S4_pstorerbfnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstorerbtnew_pi_s4_0: reloc is S2_pstorerbtnew_pi_s4_0_0 [ reloc = S2_pstorerbtnew_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

S2_pstorerbfnew_pi_s4_0: reloc is S2_pstorerbfnew_pi_s4_0_0 [ reloc = S2_pstorerbfnew_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

S4_pstorerbt_abs_u6: reloc is                       S4_pstorerbt_abs_u6_0 & S4_pstorerbt_abs_u6_1 [ reloc = ((((S4_pstorerbt_abs_u6_0 << 0) + (S4_pstorerbt_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerbt_abs_u6: reloc is immext = 0xffffffff & S4_pstorerbt_abs_u6_0 & S4_pstorerbt_abs_u6_1 [ reloc = (S4_pstorerbt_abs_u6_0 << 0) + (S4_pstorerbt_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerbf_abs_u6: reloc is                       S4_pstorerbf_abs_u6_0 & S4_pstorerbf_abs_u6_1 [ reloc = ((((S4_pstorerbf_abs_u6_0 << 0) + (S4_pstorerbf_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerbf_abs_u6: reloc is immext = 0xffffffff & S4_pstorerbf_abs_u6_0 & S4_pstorerbf_abs_u6_1 [ reloc = (S4_pstorerbf_abs_u6_0 << 0) + (S4_pstorerbf_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerbtnew_abs_u6: reloc is                       S4_pstorerbtnew_abs_u6_0 & S4_pstorerbtnew_abs_u6_1 [ reloc = ((((S4_pstorerbtnew_abs_u6_0 << 0) + (S4_pstorerbtnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerbtnew_abs_u6: reloc is immext = 0xffffffff & S4_pstorerbtnew_abs_u6_0 & S4_pstorerbtnew_abs_u6_1 [ reloc = (S4_pstorerbtnew_abs_u6_0 << 0) + (S4_pstorerbtnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerbfnew_abs_u6: reloc is                       S4_pstorerbfnew_abs_u6_0 & S4_pstorerbfnew_abs_u6_1 [ reloc = ((((S4_pstorerbfnew_abs_u6_0 << 0) + (S4_pstorerbfnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerbfnew_abs_u6: reloc is immext = 0xffffffff & S4_pstorerbfnew_abs_u6_0 & S4_pstorerbfnew_abs_u6_1 [ reloc = (S4_pstorerbfnew_abs_u6_0 << 0) + (S4_pstorerbfnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_storerh_rr_u2: reloc is S4_storerh_rr_u2_0 & S4_storerh_rr_u2_1 [ reloc = (S4_storerh_rr_u2_0 << 0) + (S4_storerh_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstorerht_io_u6_1: reloc is                       S2_pstorerht_io_u6_1_0 & S2_pstorerht_io_u6_1_1 [ reloc = ((((S2_pstorerht_io_u6_1_0 << 0) + (S2_pstorerht_io_u6_1_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerht_io_u6_1: reloc is immext = 0xffffffff & S2_pstorerht_io_u6_1_0 & S2_pstorerht_io_u6_1_1 [ reloc = ((S2_pstorerht_io_u6_1_0 << 0) + (S2_pstorerht_io_u6_1_1 << 5)) << 1; ] { export *[const]:4 reloc; }

S2_pstorerht_pi_s4_1: reloc is S2_pstorerht_pi_s4_1_0 [ reloc = (S2_pstorerht_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S2_pstorerhf_io_u6_1: reloc is                       S2_pstorerhf_io_u6_1_0 & S2_pstorerhf_io_u6_1_1 [ reloc = ((((S2_pstorerhf_io_u6_1_0 << 0) + (S2_pstorerhf_io_u6_1_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerhf_io_u6_1: reloc is immext = 0xffffffff & S2_pstorerhf_io_u6_1_0 & S2_pstorerhf_io_u6_1_1 [ reloc = ((S2_pstorerhf_io_u6_1_0 << 0) + (S2_pstorerhf_io_u6_1_1 << 5)) << 1; ] { export *[const]:4 reloc; }

S2_pstorerhf_pi_s4_1: reloc is S2_pstorerhf_pi_s4_1_0 [ reloc = (S2_pstorerhf_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S4_pstorerht_rr_u2: reloc is S4_pstorerht_rr_u2_0 & S4_pstorerht_rr_u2_1 [ reloc = (S4_pstorerht_rr_u2_0 << 0) + (S4_pstorerht_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerhf_rr_u2: reloc is S4_pstorerhf_rr_u2_0 & S4_pstorerhf_rr_u2_1 [ reloc = (S4_pstorerhf_rr_u2_0 << 0) + (S4_pstorerhf_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerhtnew_io_u6_1: reloc is                       S4_pstorerhtnew_io_u6_1_0 & S4_pstorerhtnew_io_u6_1_1 [ reloc = ((((S4_pstorerhtnew_io_u6_1_0 << 0) + (S4_pstorerhtnew_io_u6_1_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerhtnew_io_u6_1: reloc is immext = 0xffffffff & S4_pstorerhtnew_io_u6_1_0 & S4_pstorerhtnew_io_u6_1_1 [ reloc = ((S4_pstorerhtnew_io_u6_1_0 << 0) + (S4_pstorerhtnew_io_u6_1_1 << 5)) << 1; ] { export *[const]:4 reloc; }

S4_pstorerhfnew_io_u6_1: reloc is                       S4_pstorerhfnew_io_u6_1_0 & S4_pstorerhfnew_io_u6_1_1 [ reloc = ((((S4_pstorerhfnew_io_u6_1_0 << 0) + (S4_pstorerhfnew_io_u6_1_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerhfnew_io_u6_1: reloc is immext = 0xffffffff & S4_pstorerhfnew_io_u6_1_0 & S4_pstorerhfnew_io_u6_1_1 [ reloc = ((S4_pstorerhfnew_io_u6_1_0 << 0) + (S4_pstorerhfnew_io_u6_1_1 << 5)) << 1; ] { export *[const]:4 reloc; }

S4_pstorerhtnew_rr_u2: reloc is S4_pstorerhtnew_rr_u2_0 & S4_pstorerhtnew_rr_u2_1 [ reloc = (S4_pstorerhtnew_rr_u2_0 << 0) + (S4_pstorerhtnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerhfnew_rr_u2: reloc is S4_pstorerhfnew_rr_u2_0 & S4_pstorerhfnew_rr_u2_1 [ reloc = (S4_pstorerhfnew_rr_u2_0 << 0) + (S4_pstorerhfnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstorerhtnew_pi_s4_1: reloc is S2_pstorerhtnew_pi_s4_1_0 [ reloc = (S2_pstorerhtnew_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S2_pstorerhfnew_pi_s4_1: reloc is S2_pstorerhfnew_pi_s4_1_0 [ reloc = (S2_pstorerhfnew_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S4_pstorerht_abs_u6: reloc is                       S4_pstorerht_abs_u6_0 & S4_pstorerht_abs_u6_1 [ reloc = ((((S4_pstorerht_abs_u6_0 << 0) + (S4_pstorerht_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerht_abs_u6: reloc is immext = 0xffffffff & S4_pstorerht_abs_u6_0 & S4_pstorerht_abs_u6_1 [ reloc = (S4_pstorerht_abs_u6_0 << 0) + (S4_pstorerht_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerhf_abs_u6: reloc is                       S4_pstorerhf_abs_u6_0 & S4_pstorerhf_abs_u6_1 [ reloc = ((((S4_pstorerhf_abs_u6_0 << 0) + (S4_pstorerhf_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerhf_abs_u6: reloc is immext = 0xffffffff & S4_pstorerhf_abs_u6_0 & S4_pstorerhf_abs_u6_1 [ reloc = (S4_pstorerhf_abs_u6_0 << 0) + (S4_pstorerhf_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerhtnew_abs_u6: reloc is                       S4_pstorerhtnew_abs_u6_0 & S4_pstorerhtnew_abs_u6_1 [ reloc = ((((S4_pstorerhtnew_abs_u6_0 << 0) + (S4_pstorerhtnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerhtnew_abs_u6: reloc is immext = 0xffffffff & S4_pstorerhtnew_abs_u6_0 & S4_pstorerhtnew_abs_u6_1 [ reloc = (S4_pstorerhtnew_abs_u6_0 << 0) + (S4_pstorerhtnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerhfnew_abs_u6: reloc is                       S4_pstorerhfnew_abs_u6_0 & S4_pstorerhfnew_abs_u6_1 [ reloc = ((((S4_pstorerhfnew_abs_u6_0 << 0) + (S4_pstorerhfnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerhfnew_abs_u6: reloc is immext = 0xffffffff & S4_pstorerhfnew_abs_u6_0 & S4_pstorerhfnew_abs_u6_1 [ reloc = (S4_pstorerhfnew_abs_u6_0 << 0) + (S4_pstorerhfnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_storerf_rr_u2: reloc is S4_storerf_rr_u2_0 & S4_storerf_rr_u2_1 [ reloc = (S4_storerf_rr_u2_0 << 0) + (S4_storerf_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstorerft_io_u6_1: reloc is                       S2_pstorerft_io_u6_1_0 & S2_pstorerft_io_u6_1_1 [ reloc = ((((S2_pstorerft_io_u6_1_0 << 0) + (S2_pstorerft_io_u6_1_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerft_io_u6_1: reloc is immext = 0xffffffff & S2_pstorerft_io_u6_1_0 & S2_pstorerft_io_u6_1_1 [ reloc = ((S2_pstorerft_io_u6_1_0 << 0) + (S2_pstorerft_io_u6_1_1 << 5)) << 1; ] { export *[const]:4 reloc; }

S2_pstorerft_pi_s4_1: reloc is S2_pstorerft_pi_s4_1_0 [ reloc = (S2_pstorerft_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S2_pstorerff_io_u6_1: reloc is                       S2_pstorerff_io_u6_1_0 & S2_pstorerff_io_u6_1_1 [ reloc = ((((S2_pstorerff_io_u6_1_0 << 0) + (S2_pstorerff_io_u6_1_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerff_io_u6_1: reloc is immext = 0xffffffff & S2_pstorerff_io_u6_1_0 & S2_pstorerff_io_u6_1_1 [ reloc = ((S2_pstorerff_io_u6_1_0 << 0) + (S2_pstorerff_io_u6_1_1 << 5)) << 1; ] { export *[const]:4 reloc; }

S2_pstorerff_pi_s4_1: reloc is S2_pstorerff_pi_s4_1_0 [ reloc = (S2_pstorerff_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S4_pstorerft_rr_u2: reloc is S4_pstorerft_rr_u2_0 & S4_pstorerft_rr_u2_1 [ reloc = (S4_pstorerft_rr_u2_0 << 0) + (S4_pstorerft_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerff_rr_u2: reloc is S4_pstorerff_rr_u2_0 & S4_pstorerff_rr_u2_1 [ reloc = (S4_pstorerff_rr_u2_0 << 0) + (S4_pstorerff_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerftnew_io_u6_1: reloc is                       S4_pstorerftnew_io_u6_1_0 & S4_pstorerftnew_io_u6_1_1 [ reloc = ((((S4_pstorerftnew_io_u6_1_0 << 0) + (S4_pstorerftnew_io_u6_1_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerftnew_io_u6_1: reloc is immext = 0xffffffff & S4_pstorerftnew_io_u6_1_0 & S4_pstorerftnew_io_u6_1_1 [ reloc = ((S4_pstorerftnew_io_u6_1_0 << 0) + (S4_pstorerftnew_io_u6_1_1 << 5)) << 1; ] { export *[const]:4 reloc; }

S4_pstorerffnew_io_u6_1: reloc is                       S4_pstorerffnew_io_u6_1_0 & S4_pstorerffnew_io_u6_1_1 [ reloc = ((((S4_pstorerffnew_io_u6_1_0 << 0) + (S4_pstorerffnew_io_u6_1_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerffnew_io_u6_1: reloc is immext = 0xffffffff & S4_pstorerffnew_io_u6_1_0 & S4_pstorerffnew_io_u6_1_1 [ reloc = ((S4_pstorerffnew_io_u6_1_0 << 0) + (S4_pstorerffnew_io_u6_1_1 << 5)) << 1; ] { export *[const]:4 reloc; }

S4_pstorerftnew_rr_u2: reloc is S4_pstorerftnew_rr_u2_0 & S4_pstorerftnew_rr_u2_1 [ reloc = (S4_pstorerftnew_rr_u2_0 << 0) + (S4_pstorerftnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerffnew_rr_u2: reloc is S4_pstorerffnew_rr_u2_0 & S4_pstorerffnew_rr_u2_1 [ reloc = (S4_pstorerffnew_rr_u2_0 << 0) + (S4_pstorerffnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstorerftnew_pi_s4_1: reloc is S2_pstorerftnew_pi_s4_1_0 [ reloc = (S2_pstorerftnew_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S2_pstorerffnew_pi_s4_1: reloc is S2_pstorerffnew_pi_s4_1_0 [ reloc = (S2_pstorerffnew_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S4_pstorerft_abs_u6: reloc is                       S4_pstorerft_abs_u6_0 & S4_pstorerft_abs_u6_1 [ reloc = ((((S4_pstorerft_abs_u6_0 << 0) + (S4_pstorerft_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerft_abs_u6: reloc is immext = 0xffffffff & S4_pstorerft_abs_u6_0 & S4_pstorerft_abs_u6_1 [ reloc = (S4_pstorerft_abs_u6_0 << 0) + (S4_pstorerft_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerff_abs_u6: reloc is                       S4_pstorerff_abs_u6_0 & S4_pstorerff_abs_u6_1 [ reloc = ((((S4_pstorerff_abs_u6_0 << 0) + (S4_pstorerff_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerff_abs_u6: reloc is immext = 0xffffffff & S4_pstorerff_abs_u6_0 & S4_pstorerff_abs_u6_1 [ reloc = (S4_pstorerff_abs_u6_0 << 0) + (S4_pstorerff_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerftnew_abs_u6: reloc is                       S4_pstorerftnew_abs_u6_0 & S4_pstorerftnew_abs_u6_1 [ reloc = ((((S4_pstorerftnew_abs_u6_0 << 0) + (S4_pstorerftnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerftnew_abs_u6: reloc is immext = 0xffffffff & S4_pstorerftnew_abs_u6_0 & S4_pstorerftnew_abs_u6_1 [ reloc = (S4_pstorerftnew_abs_u6_0 << 0) + (S4_pstorerftnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerffnew_abs_u6: reloc is                       S4_pstorerffnew_abs_u6_0 & S4_pstorerffnew_abs_u6_1 [ reloc = ((((S4_pstorerffnew_abs_u6_0 << 0) + (S4_pstorerffnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerffnew_abs_u6: reloc is immext = 0xffffffff & S4_pstorerffnew_abs_u6_0 & S4_pstorerffnew_abs_u6_1 [ reloc = (S4_pstorerffnew_abs_u6_0 << 0) + (S4_pstorerffnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_storeri_rr_u2: reloc is S4_storeri_rr_u2_0 & S4_storeri_rr_u2_1 [ reloc = (S4_storeri_rr_u2_0 << 0) + (S4_storeri_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstorerit_io_u6_2: reloc is                       S2_pstorerit_io_u6_2_0 & S2_pstorerit_io_u6_2_1 [ reloc = ((((S2_pstorerit_io_u6_2_0 << 0) + (S2_pstorerit_io_u6_2_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerit_io_u6_2: reloc is immext = 0xffffffff & S2_pstorerit_io_u6_2_0 & S2_pstorerit_io_u6_2_1 [ reloc = ((S2_pstorerit_io_u6_2_0 << 0) + (S2_pstorerit_io_u6_2_1 << 5)) << 2; ] { export *[const]:4 reloc; }

S2_pstorerit_pi_s4_2: reloc is S2_pstorerit_pi_s4_2_0 [ reloc = (S2_pstorerit_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S2_pstorerif_io_u6_2: reloc is                       S2_pstorerif_io_u6_2_0 & S2_pstorerif_io_u6_2_1 [ reloc = ((((S2_pstorerif_io_u6_2_0 << 0) + (S2_pstorerif_io_u6_2_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerif_io_u6_2: reloc is immext = 0xffffffff & S2_pstorerif_io_u6_2_0 & S2_pstorerif_io_u6_2_1 [ reloc = ((S2_pstorerif_io_u6_2_0 << 0) + (S2_pstorerif_io_u6_2_1 << 5)) << 2; ] { export *[const]:4 reloc; }

S2_pstorerif_pi_s4_2: reloc is S2_pstorerif_pi_s4_2_0 [ reloc = (S2_pstorerif_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S4_pstorerit_rr_u2: reloc is S4_pstorerit_rr_u2_0 & S4_pstorerit_rr_u2_1 [ reloc = (S4_pstorerit_rr_u2_0 << 0) + (S4_pstorerit_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerif_rr_u2: reloc is S4_pstorerif_rr_u2_0 & S4_pstorerif_rr_u2_1 [ reloc = (S4_pstorerif_rr_u2_0 << 0) + (S4_pstorerif_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstoreritnew_io_u6_2: reloc is                       S4_pstoreritnew_io_u6_2_0 & S4_pstoreritnew_io_u6_2_1 [ reloc = ((((S4_pstoreritnew_io_u6_2_0 << 0) + (S4_pstoreritnew_io_u6_2_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstoreritnew_io_u6_2: reloc is immext = 0xffffffff & S4_pstoreritnew_io_u6_2_0 & S4_pstoreritnew_io_u6_2_1 [ reloc = ((S4_pstoreritnew_io_u6_2_0 << 0) + (S4_pstoreritnew_io_u6_2_1 << 5)) << 2; ] { export *[const]:4 reloc; }

S4_pstorerifnew_io_u6_2: reloc is                       S4_pstorerifnew_io_u6_2_0 & S4_pstorerifnew_io_u6_2_1 [ reloc = ((((S4_pstorerifnew_io_u6_2_0 << 0) + (S4_pstorerifnew_io_u6_2_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerifnew_io_u6_2: reloc is immext = 0xffffffff & S4_pstorerifnew_io_u6_2_0 & S4_pstorerifnew_io_u6_2_1 [ reloc = ((S4_pstorerifnew_io_u6_2_0 << 0) + (S4_pstorerifnew_io_u6_2_1 << 5)) << 2; ] { export *[const]:4 reloc; }

S4_pstoreritnew_rr_u2: reloc is S4_pstoreritnew_rr_u2_0 & S4_pstoreritnew_rr_u2_1 [ reloc = (S4_pstoreritnew_rr_u2_0 << 0) + (S4_pstoreritnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerifnew_rr_u2: reloc is S4_pstorerifnew_rr_u2_0 & S4_pstorerifnew_rr_u2_1 [ reloc = (S4_pstorerifnew_rr_u2_0 << 0) + (S4_pstorerifnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstoreritnew_pi_s4_2: reloc is S2_pstoreritnew_pi_s4_2_0 [ reloc = (S2_pstoreritnew_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S2_pstorerifnew_pi_s4_2: reloc is S2_pstorerifnew_pi_s4_2_0 [ reloc = (S2_pstorerifnew_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S4_pstorerit_abs_u6: reloc is                       S4_pstorerit_abs_u6_0 & S4_pstorerit_abs_u6_1 [ reloc = ((((S4_pstorerit_abs_u6_0 << 0) + (S4_pstorerit_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerit_abs_u6: reloc is immext = 0xffffffff & S4_pstorerit_abs_u6_0 & S4_pstorerit_abs_u6_1 [ reloc = (S4_pstorerit_abs_u6_0 << 0) + (S4_pstorerit_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerif_abs_u6: reloc is                       S4_pstorerif_abs_u6_0 & S4_pstorerif_abs_u6_1 [ reloc = ((((S4_pstorerif_abs_u6_0 << 0) + (S4_pstorerif_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerif_abs_u6: reloc is immext = 0xffffffff & S4_pstorerif_abs_u6_0 & S4_pstorerif_abs_u6_1 [ reloc = (S4_pstorerif_abs_u6_0 << 0) + (S4_pstorerif_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstoreritnew_abs_u6: reloc is                       S4_pstoreritnew_abs_u6_0 & S4_pstoreritnew_abs_u6_1 [ reloc = ((((S4_pstoreritnew_abs_u6_0 << 0) + (S4_pstoreritnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstoreritnew_abs_u6: reloc is immext = 0xffffffff & S4_pstoreritnew_abs_u6_0 & S4_pstoreritnew_abs_u6_1 [ reloc = (S4_pstoreritnew_abs_u6_0 << 0) + (S4_pstoreritnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerifnew_abs_u6: reloc is                       S4_pstorerifnew_abs_u6_0 & S4_pstorerifnew_abs_u6_1 [ reloc = ((((S4_pstorerifnew_abs_u6_0 << 0) + (S4_pstorerifnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerifnew_abs_u6: reloc is immext = 0xffffffff & S4_pstorerifnew_abs_u6_0 & S4_pstorerifnew_abs_u6_1 [ reloc = (S4_pstorerifnew_abs_u6_0 << 0) + (S4_pstorerifnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_storerd_rr_u2: reloc is S4_storerd_rr_u2_0 & S4_storerd_rr_u2_1 [ reloc = (S4_storerd_rr_u2_0 << 0) + (S4_storerd_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstorerdt_io_u6_3: reloc is                       S2_pstorerdt_io_u6_3_0 & S2_pstorerdt_io_u6_3_1 [ reloc = ((((S2_pstorerdt_io_u6_3_0 << 0) + (S2_pstorerdt_io_u6_3_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerdt_io_u6_3: reloc is immext = 0xffffffff & S2_pstorerdt_io_u6_3_0 & S2_pstorerdt_io_u6_3_1 [ reloc = ((S2_pstorerdt_io_u6_3_0 << 0) + (S2_pstorerdt_io_u6_3_1 << 5)) << 3; ] { export *[const]:4 reloc; }

S2_pstorerdt_pi_s4_3: reloc is S2_pstorerdt_pi_s4_3_0 [ reloc = (S2_pstorerdt_pi_s4_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

S2_pstorerdf_io_u6_3: reloc is                       S2_pstorerdf_io_u6_3_0 & S2_pstorerdf_io_u6_3_1 [ reloc = ((((S2_pstorerdf_io_u6_3_0 << 0) + (S2_pstorerdf_io_u6_3_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerdf_io_u6_3: reloc is immext = 0xffffffff & S2_pstorerdf_io_u6_3_0 & S2_pstorerdf_io_u6_3_1 [ reloc = ((S2_pstorerdf_io_u6_3_0 << 0) + (S2_pstorerdf_io_u6_3_1 << 5)) << 3; ] { export *[const]:4 reloc; }

S2_pstorerdf_pi_s4_3: reloc is S2_pstorerdf_pi_s4_3_0 [ reloc = (S2_pstorerdf_pi_s4_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

S4_pstorerdt_rr_u2: reloc is S4_pstorerdt_rr_u2_0 & S4_pstorerdt_rr_u2_1 [ reloc = (S4_pstorerdt_rr_u2_0 << 0) + (S4_pstorerdt_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerdf_rr_u2: reloc is S4_pstorerdf_rr_u2_0 & S4_pstorerdf_rr_u2_1 [ reloc = (S4_pstorerdf_rr_u2_0 << 0) + (S4_pstorerdf_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerdtnew_io_u6_3: reloc is                       S4_pstorerdtnew_io_u6_3_0 & S4_pstorerdtnew_io_u6_3_1 [ reloc = ((((S4_pstorerdtnew_io_u6_3_0 << 0) + (S4_pstorerdtnew_io_u6_3_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerdtnew_io_u6_3: reloc is immext = 0xffffffff & S4_pstorerdtnew_io_u6_3_0 & S4_pstorerdtnew_io_u6_3_1 [ reloc = ((S4_pstorerdtnew_io_u6_3_0 << 0) + (S4_pstorerdtnew_io_u6_3_1 << 5)) << 3; ] { export *[const]:4 reloc; }

S4_pstorerdfnew_io_u6_3: reloc is                       S4_pstorerdfnew_io_u6_3_0 & S4_pstorerdfnew_io_u6_3_1 [ reloc = ((((S4_pstorerdfnew_io_u6_3_0 << 0) + (S4_pstorerdfnew_io_u6_3_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerdfnew_io_u6_3: reloc is immext = 0xffffffff & S4_pstorerdfnew_io_u6_3_0 & S4_pstorerdfnew_io_u6_3_1 [ reloc = ((S4_pstorerdfnew_io_u6_3_0 << 0) + (S4_pstorerdfnew_io_u6_3_1 << 5)) << 3; ] { export *[const]:4 reloc; }

S4_pstorerdtnew_rr_u2: reloc is S4_pstorerdtnew_rr_u2_0 & S4_pstorerdtnew_rr_u2_1 [ reloc = (S4_pstorerdtnew_rr_u2_0 << 0) + (S4_pstorerdtnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerdfnew_rr_u2: reloc is S4_pstorerdfnew_rr_u2_0 & S4_pstorerdfnew_rr_u2_1 [ reloc = (S4_pstorerdfnew_rr_u2_0 << 0) + (S4_pstorerdfnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstorerdtnew_pi_s4_3: reloc is S2_pstorerdtnew_pi_s4_3_0 [ reloc = (S2_pstorerdtnew_pi_s4_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

S2_pstorerdfnew_pi_s4_3: reloc is S2_pstorerdfnew_pi_s4_3_0 [ reloc = (S2_pstorerdfnew_pi_s4_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

S4_pstorerdt_abs_u6: reloc is                       S4_pstorerdt_abs_u6_0 & S4_pstorerdt_abs_u6_1 [ reloc = ((((S4_pstorerdt_abs_u6_0 << 0) + (S4_pstorerdt_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerdt_abs_u6: reloc is immext = 0xffffffff & S4_pstorerdt_abs_u6_0 & S4_pstorerdt_abs_u6_1 [ reloc = (S4_pstorerdt_abs_u6_0 << 0) + (S4_pstorerdt_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerdf_abs_u6: reloc is                       S4_pstorerdf_abs_u6_0 & S4_pstorerdf_abs_u6_1 [ reloc = ((((S4_pstorerdf_abs_u6_0 << 0) + (S4_pstorerdf_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerdf_abs_u6: reloc is immext = 0xffffffff & S4_pstorerdf_abs_u6_0 & S4_pstorerdf_abs_u6_1 [ reloc = (S4_pstorerdf_abs_u6_0 << 0) + (S4_pstorerdf_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerdtnew_abs_u6: reloc is                       S4_pstorerdtnew_abs_u6_0 & S4_pstorerdtnew_abs_u6_1 [ reloc = ((((S4_pstorerdtnew_abs_u6_0 << 0) + (S4_pstorerdtnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerdtnew_abs_u6: reloc is immext = 0xffffffff & S4_pstorerdtnew_abs_u6_0 & S4_pstorerdtnew_abs_u6_1 [ reloc = (S4_pstorerdtnew_abs_u6_0 << 0) + (S4_pstorerdtnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerdfnew_abs_u6: reloc is                       S4_pstorerdfnew_abs_u6_0 & S4_pstorerdfnew_abs_u6_1 [ reloc = ((((S4_pstorerdfnew_abs_u6_0 << 0) + (S4_pstorerdfnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerdfnew_abs_u6: reloc is immext = 0xffffffff & S4_pstorerdfnew_abs_u6_0 & S4_pstorerdfnew_abs_u6_1 [ reloc = (S4_pstorerdfnew_abs_u6_0 << 0) + (S4_pstorerdfnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_storerinew_rr_u2: reloc is S4_storerinew_rr_u2_0 & S4_storerinew_rr_u2_1 [ reloc = (S4_storerinew_rr_u2_0 << 0) + (S4_storerinew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstorerinewt_io_u6_2: reloc is                       S2_pstorerinewt_io_u6_2_0 & S2_pstorerinewt_io_u6_2_1 [ reloc = ((((S2_pstorerinewt_io_u6_2_0 << 0) + (S2_pstorerinewt_io_u6_2_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerinewt_io_u6_2: reloc is immext = 0xffffffff & S2_pstorerinewt_io_u6_2_0 & S2_pstorerinewt_io_u6_2_1 [ reloc = ((S2_pstorerinewt_io_u6_2_0 << 0) + (S2_pstorerinewt_io_u6_2_1 << 5)) << 2; ] { export *[const]:4 reloc; }

S2_pstorerinewt_pi_s4_2: reloc is S2_pstorerinewt_pi_s4_2_0 [ reloc = (S2_pstorerinewt_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S2_pstorerinewf_io_u6_2: reloc is                       S2_pstorerinewf_io_u6_2_0 & S2_pstorerinewf_io_u6_2_1 [ reloc = ((((S2_pstorerinewf_io_u6_2_0 << 0) + (S2_pstorerinewf_io_u6_2_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerinewf_io_u6_2: reloc is immext = 0xffffffff & S2_pstorerinewf_io_u6_2_0 & S2_pstorerinewf_io_u6_2_1 [ reloc = ((S2_pstorerinewf_io_u6_2_0 << 0) + (S2_pstorerinewf_io_u6_2_1 << 5)) << 2; ] { export *[const]:4 reloc; }

S2_pstorerinewf_pi_s4_2: reloc is S2_pstorerinewf_pi_s4_2_0 [ reloc = (S2_pstorerinewf_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S4_pstorerinewt_rr_u2: reloc is S4_pstorerinewt_rr_u2_0 & S4_pstorerinewt_rr_u2_1 [ reloc = (S4_pstorerinewt_rr_u2_0 << 0) + (S4_pstorerinewt_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerinewf_rr_u2: reloc is S4_pstorerinewf_rr_u2_0 & S4_pstorerinewf_rr_u2_1 [ reloc = (S4_pstorerinewf_rr_u2_0 << 0) + (S4_pstorerinewf_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerinewtnew_io_u6_2: reloc is                       S4_pstorerinewtnew_io_u6_2_0 & S4_pstorerinewtnew_io_u6_2_1 [ reloc = ((((S4_pstorerinewtnew_io_u6_2_0 << 0) + (S4_pstorerinewtnew_io_u6_2_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerinewtnew_io_u6_2: reloc is immext = 0xffffffff & S4_pstorerinewtnew_io_u6_2_0 & S4_pstorerinewtnew_io_u6_2_1 [ reloc = ((S4_pstorerinewtnew_io_u6_2_0 << 0) + (S4_pstorerinewtnew_io_u6_2_1 << 5)) << 2; ] { export *[const]:4 reloc; }

S4_pstorerinewfnew_io_u6_2: reloc is                       S4_pstorerinewfnew_io_u6_2_0 & S4_pstorerinewfnew_io_u6_2_1 [ reloc = ((((S4_pstorerinewfnew_io_u6_2_0 << 0) + (S4_pstorerinewfnew_io_u6_2_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerinewfnew_io_u6_2: reloc is immext = 0xffffffff & S4_pstorerinewfnew_io_u6_2_0 & S4_pstorerinewfnew_io_u6_2_1 [ reloc = ((S4_pstorerinewfnew_io_u6_2_0 << 0) + (S4_pstorerinewfnew_io_u6_2_1 << 5)) << 2; ] { export *[const]:4 reloc; }

S4_pstorerinewtnew_rr_u2: reloc is S4_pstorerinewtnew_rr_u2_0 & S4_pstorerinewtnew_rr_u2_1 [ reloc = (S4_pstorerinewtnew_rr_u2_0 << 0) + (S4_pstorerinewtnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerinewfnew_rr_u2: reloc is S4_pstorerinewfnew_rr_u2_0 & S4_pstorerinewfnew_rr_u2_1 [ reloc = (S4_pstorerinewfnew_rr_u2_0 << 0) + (S4_pstorerinewfnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstorerinewtnew_pi_s4_2: reloc is S2_pstorerinewtnew_pi_s4_2_0 [ reloc = (S2_pstorerinewtnew_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S2_pstorerinewfnew_pi_s4_2: reloc is S2_pstorerinewfnew_pi_s4_2_0 [ reloc = (S2_pstorerinewfnew_pi_s4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S4_pstorerinewt_abs_u6: reloc is                       S4_pstorerinewt_abs_u6_0 & S4_pstorerinewt_abs_u6_1 [ reloc = ((((S4_pstorerinewt_abs_u6_0 << 0) + (S4_pstorerinewt_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerinewt_abs_u6: reloc is immext = 0xffffffff & S4_pstorerinewt_abs_u6_0 & S4_pstorerinewt_abs_u6_1 [ reloc = (S4_pstorerinewt_abs_u6_0 << 0) + (S4_pstorerinewt_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerinewf_abs_u6: reloc is                       S4_pstorerinewf_abs_u6_0 & S4_pstorerinewf_abs_u6_1 [ reloc = ((((S4_pstorerinewf_abs_u6_0 << 0) + (S4_pstorerinewf_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerinewf_abs_u6: reloc is immext = 0xffffffff & S4_pstorerinewf_abs_u6_0 & S4_pstorerinewf_abs_u6_1 [ reloc = (S4_pstorerinewf_abs_u6_0 << 0) + (S4_pstorerinewf_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerinewtnew_abs_u6: reloc is                       S4_pstorerinewtnew_abs_u6_0 & S4_pstorerinewtnew_abs_u6_1 [ reloc = ((((S4_pstorerinewtnew_abs_u6_0 << 0) + (S4_pstorerinewtnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerinewtnew_abs_u6: reloc is immext = 0xffffffff & S4_pstorerinewtnew_abs_u6_0 & S4_pstorerinewtnew_abs_u6_1 [ reloc = (S4_pstorerinewtnew_abs_u6_0 << 0) + (S4_pstorerinewtnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerinewfnew_abs_u6: reloc is                       S4_pstorerinewfnew_abs_u6_0 & S4_pstorerinewfnew_abs_u6_1 [ reloc = ((((S4_pstorerinewfnew_abs_u6_0 << 0) + (S4_pstorerinewfnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerinewfnew_abs_u6: reloc is immext = 0xffffffff & S4_pstorerinewfnew_abs_u6_0 & S4_pstorerinewfnew_abs_u6_1 [ reloc = (S4_pstorerinewfnew_abs_u6_0 << 0) + (S4_pstorerinewfnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_storerbnew_rr_u2: reloc is S4_storerbnew_rr_u2_0 & S4_storerbnew_rr_u2_1 [ reloc = (S4_storerbnew_rr_u2_0 << 0) + (S4_storerbnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstorerbnewt_io_u6_0: reloc is                       S2_pstorerbnewt_io_u6_0_0 & S2_pstorerbnewt_io_u6_0_1 [ reloc = ((((S2_pstorerbnewt_io_u6_0_0 << 0) + (S2_pstorerbnewt_io_u6_0_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerbnewt_io_u6_0: reloc is immext = 0xffffffff & S2_pstorerbnewt_io_u6_0_0 & S2_pstorerbnewt_io_u6_0_1 [ reloc = (S2_pstorerbnewt_io_u6_0_0 << 0) + (S2_pstorerbnewt_io_u6_0_1 << 5); ] { export *[const]:4 reloc; }

S2_pstorerbnewt_pi_s4_0: reloc is S2_pstorerbnewt_pi_s4_0_0 [ reloc = S2_pstorerbnewt_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

S2_pstorerbnewf_io_u6_0: reloc is                       S2_pstorerbnewf_io_u6_0_0 & S2_pstorerbnewf_io_u6_0_1 [ reloc = ((((S2_pstorerbnewf_io_u6_0_0 << 0) + (S2_pstorerbnewf_io_u6_0_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerbnewf_io_u6_0: reloc is immext = 0xffffffff & S2_pstorerbnewf_io_u6_0_0 & S2_pstorerbnewf_io_u6_0_1 [ reloc = (S2_pstorerbnewf_io_u6_0_0 << 0) + (S2_pstorerbnewf_io_u6_0_1 << 5); ] { export *[const]:4 reloc; }

S2_pstorerbnewf_pi_s4_0: reloc is S2_pstorerbnewf_pi_s4_0_0 [ reloc = S2_pstorerbnewf_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

S4_pstorerbnewt_rr_u2: reloc is S4_pstorerbnewt_rr_u2_0 & S4_pstorerbnewt_rr_u2_1 [ reloc = (S4_pstorerbnewt_rr_u2_0 << 0) + (S4_pstorerbnewt_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerbnewf_rr_u2: reloc is S4_pstorerbnewf_rr_u2_0 & S4_pstorerbnewf_rr_u2_1 [ reloc = (S4_pstorerbnewf_rr_u2_0 << 0) + (S4_pstorerbnewf_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerbnewtnew_io_u6_0: reloc is                       S4_pstorerbnewtnew_io_u6_0_0 & S4_pstorerbnewtnew_io_u6_0_1 [ reloc = ((((S4_pstorerbnewtnew_io_u6_0_0 << 0) + (S4_pstorerbnewtnew_io_u6_0_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerbnewtnew_io_u6_0: reloc is immext = 0xffffffff & S4_pstorerbnewtnew_io_u6_0_0 & S4_pstorerbnewtnew_io_u6_0_1 [ reloc = (S4_pstorerbnewtnew_io_u6_0_0 << 0) + (S4_pstorerbnewtnew_io_u6_0_1 << 5); ] { export *[const]:4 reloc; }

S4_pstorerbnewfnew_io_u6_0: reloc is                       S4_pstorerbnewfnew_io_u6_0_0 & S4_pstorerbnewfnew_io_u6_0_1 [ reloc = ((((S4_pstorerbnewfnew_io_u6_0_0 << 0) + (S4_pstorerbnewfnew_io_u6_0_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerbnewfnew_io_u6_0: reloc is immext = 0xffffffff & S4_pstorerbnewfnew_io_u6_0_0 & S4_pstorerbnewfnew_io_u6_0_1 [ reloc = (S4_pstorerbnewfnew_io_u6_0_0 << 0) + (S4_pstorerbnewfnew_io_u6_0_1 << 5); ] { export *[const]:4 reloc; }

S4_pstorerbnewtnew_rr_u2: reloc is S4_pstorerbnewtnew_rr_u2_0 & S4_pstorerbnewtnew_rr_u2_1 [ reloc = (S4_pstorerbnewtnew_rr_u2_0 << 0) + (S4_pstorerbnewtnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerbnewfnew_rr_u2: reloc is S4_pstorerbnewfnew_rr_u2_0 & S4_pstorerbnewfnew_rr_u2_1 [ reloc = (S4_pstorerbnewfnew_rr_u2_0 << 0) + (S4_pstorerbnewfnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstorerbnewtnew_pi_s4_0: reloc is S2_pstorerbnewtnew_pi_s4_0_0 [ reloc = S2_pstorerbnewtnew_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

S2_pstorerbnewfnew_pi_s4_0: reloc is S2_pstorerbnewfnew_pi_s4_0_0 [ reloc = S2_pstorerbnewfnew_pi_s4_0_0 << 0; ] { export *[const]:4 reloc; }

S4_pstorerbnewt_abs_u6: reloc is                       S4_pstorerbnewt_abs_u6_0 & S4_pstorerbnewt_abs_u6_1 [ reloc = ((((S4_pstorerbnewt_abs_u6_0 << 0) + (S4_pstorerbnewt_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerbnewt_abs_u6: reloc is immext = 0xffffffff & S4_pstorerbnewt_abs_u6_0 & S4_pstorerbnewt_abs_u6_1 [ reloc = (S4_pstorerbnewt_abs_u6_0 << 0) + (S4_pstorerbnewt_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerbnewf_abs_u6: reloc is                       S4_pstorerbnewf_abs_u6_0 & S4_pstorerbnewf_abs_u6_1 [ reloc = ((((S4_pstorerbnewf_abs_u6_0 << 0) + (S4_pstorerbnewf_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerbnewf_abs_u6: reloc is immext = 0xffffffff & S4_pstorerbnewf_abs_u6_0 & S4_pstorerbnewf_abs_u6_1 [ reloc = (S4_pstorerbnewf_abs_u6_0 << 0) + (S4_pstorerbnewf_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerbnewtnew_abs_u6: reloc is                       S4_pstorerbnewtnew_abs_u6_0 & S4_pstorerbnewtnew_abs_u6_1 [ reloc = ((((S4_pstorerbnewtnew_abs_u6_0 << 0) + (S4_pstorerbnewtnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerbnewtnew_abs_u6: reloc is immext = 0xffffffff & S4_pstorerbnewtnew_abs_u6_0 & S4_pstorerbnewtnew_abs_u6_1 [ reloc = (S4_pstorerbnewtnew_abs_u6_0 << 0) + (S4_pstorerbnewtnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerbnewfnew_abs_u6: reloc is                       S4_pstorerbnewfnew_abs_u6_0 & S4_pstorerbnewfnew_abs_u6_1 [ reloc = ((((S4_pstorerbnewfnew_abs_u6_0 << 0) + (S4_pstorerbnewfnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerbnewfnew_abs_u6: reloc is immext = 0xffffffff & S4_pstorerbnewfnew_abs_u6_0 & S4_pstorerbnewfnew_abs_u6_1 [ reloc = (S4_pstorerbnewfnew_abs_u6_0 << 0) + (S4_pstorerbnewfnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_storerhnew_rr_u2: reloc is S4_storerhnew_rr_u2_0 & S4_storerhnew_rr_u2_1 [ reloc = (S4_storerhnew_rr_u2_0 << 0) + (S4_storerhnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstorerhnewt_io_u6_1: reloc is                       S2_pstorerhnewt_io_u6_1_0 & S2_pstorerhnewt_io_u6_1_1 [ reloc = ((((S2_pstorerhnewt_io_u6_1_0 << 0) + (S2_pstorerhnewt_io_u6_1_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerhnewt_io_u6_1: reloc is immext = 0xffffffff & S2_pstorerhnewt_io_u6_1_0 & S2_pstorerhnewt_io_u6_1_1 [ reloc = ((S2_pstorerhnewt_io_u6_1_0 << 0) + (S2_pstorerhnewt_io_u6_1_1 << 5)) << 1; ] { export *[const]:4 reloc; }

S2_pstorerhnewt_pi_s4_1: reloc is S2_pstorerhnewt_pi_s4_1_0 [ reloc = (S2_pstorerhnewt_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S2_pstorerhnewf_io_u6_1: reloc is                       S2_pstorerhnewf_io_u6_1_0 & S2_pstorerhnewf_io_u6_1_1 [ reloc = ((((S2_pstorerhnewf_io_u6_1_0 << 0) + (S2_pstorerhnewf_io_u6_1_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_pstorerhnewf_io_u6_1: reloc is immext = 0xffffffff & S2_pstorerhnewf_io_u6_1_0 & S2_pstorerhnewf_io_u6_1_1 [ reloc = ((S2_pstorerhnewf_io_u6_1_0 << 0) + (S2_pstorerhnewf_io_u6_1_1 << 5)) << 1; ] { export *[const]:4 reloc; }

S2_pstorerhnewf_pi_s4_1: reloc is S2_pstorerhnewf_pi_s4_1_0 [ reloc = (S2_pstorerhnewf_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S4_pstorerhnewt_rr_u2: reloc is S4_pstorerhnewt_rr_u2_0 & S4_pstorerhnewt_rr_u2_1 [ reloc = (S4_pstorerhnewt_rr_u2_0 << 0) + (S4_pstorerhnewt_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerhnewf_rr_u2: reloc is S4_pstorerhnewf_rr_u2_0 & S4_pstorerhnewf_rr_u2_1 [ reloc = (S4_pstorerhnewf_rr_u2_0 << 0) + (S4_pstorerhnewf_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerhnewtnew_io_u6_1: reloc is                       S4_pstorerhnewtnew_io_u6_1_0 & S4_pstorerhnewtnew_io_u6_1_1 [ reloc = ((((S4_pstorerhnewtnew_io_u6_1_0 << 0) + (S4_pstorerhnewtnew_io_u6_1_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerhnewtnew_io_u6_1: reloc is immext = 0xffffffff & S4_pstorerhnewtnew_io_u6_1_0 & S4_pstorerhnewtnew_io_u6_1_1 [ reloc = ((S4_pstorerhnewtnew_io_u6_1_0 << 0) + (S4_pstorerhnewtnew_io_u6_1_1 << 5)) << 1; ] { export *[const]:4 reloc; }

S4_pstorerhnewfnew_io_u6_1: reloc is                       S4_pstorerhnewfnew_io_u6_1_0 & S4_pstorerhnewfnew_io_u6_1_1 [ reloc = ((((S4_pstorerhnewfnew_io_u6_1_0 << 0) + (S4_pstorerhnewfnew_io_u6_1_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerhnewfnew_io_u6_1: reloc is immext = 0xffffffff & S4_pstorerhnewfnew_io_u6_1_0 & S4_pstorerhnewfnew_io_u6_1_1 [ reloc = ((S4_pstorerhnewfnew_io_u6_1_0 << 0) + (S4_pstorerhnewfnew_io_u6_1_1 << 5)) << 1; ] { export *[const]:4 reloc; }

S4_pstorerhnewtnew_rr_u2: reloc is S4_pstorerhnewtnew_rr_u2_0 & S4_pstorerhnewtnew_rr_u2_1 [ reloc = (S4_pstorerhnewtnew_rr_u2_0 << 0) + (S4_pstorerhnewtnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_pstorerhnewfnew_rr_u2: reloc is S4_pstorerhnewfnew_rr_u2_0 & S4_pstorerhnewfnew_rr_u2_1 [ reloc = (S4_pstorerhnewfnew_rr_u2_0 << 0) + (S4_pstorerhnewfnew_rr_u2_1 << 1); ] { export *[const]:4 reloc; }

S2_pstorerhnewtnew_pi_s4_1: reloc is S2_pstorerhnewtnew_pi_s4_1_0 [ reloc = (S2_pstorerhnewtnew_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S2_pstorerhnewfnew_pi_s4_1: reloc is S2_pstorerhnewfnew_pi_s4_1_0 [ reloc = (S2_pstorerhnewfnew_pi_s4_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S4_pstorerhnewt_abs_u6: reloc is                       S4_pstorerhnewt_abs_u6_0 & S4_pstorerhnewt_abs_u6_1 [ reloc = ((((S4_pstorerhnewt_abs_u6_0 << 0) + (S4_pstorerhnewt_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerhnewt_abs_u6: reloc is immext = 0xffffffff & S4_pstorerhnewt_abs_u6_0 & S4_pstorerhnewt_abs_u6_1 [ reloc = (S4_pstorerhnewt_abs_u6_0 << 0) + (S4_pstorerhnewt_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerhnewf_abs_u6: reloc is                       S4_pstorerhnewf_abs_u6_0 & S4_pstorerhnewf_abs_u6_1 [ reloc = ((((S4_pstorerhnewf_abs_u6_0 << 0) + (S4_pstorerhnewf_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerhnewf_abs_u6: reloc is immext = 0xffffffff & S4_pstorerhnewf_abs_u6_0 & S4_pstorerhnewf_abs_u6_1 [ reloc = (S4_pstorerhnewf_abs_u6_0 << 0) + (S4_pstorerhnewf_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerhnewtnew_abs_u6: reloc is                       S4_pstorerhnewtnew_abs_u6_0 & S4_pstorerhnewtnew_abs_u6_1 [ reloc = ((((S4_pstorerhnewtnew_abs_u6_0 << 0) + (S4_pstorerhnewtnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerhnewtnew_abs_u6: reloc is immext = 0xffffffff & S4_pstorerhnewtnew_abs_u6_0 & S4_pstorerhnewtnew_abs_u6_1 [ reloc = (S4_pstorerhnewtnew_abs_u6_0 << 0) + (S4_pstorerhnewtnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

S4_pstorerhnewfnew_abs_u6: reloc is                       S4_pstorerhnewfnew_abs_u6_0 & S4_pstorerhnewfnew_abs_u6_1 [ reloc = ((((S4_pstorerhnewfnew_abs_u6_0 << 0) + (S4_pstorerhnewfnew_abs_u6_1 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_pstorerhnewfnew_abs_u6: reloc is immext = 0xffffffff & S4_pstorerhnewfnew_abs_u6_0 & S4_pstorerhnewfnew_abs_u6_1 [ reloc = (S4_pstorerhnewfnew_abs_u6_0 << 0) + (S4_pstorerhnewfnew_abs_u6_1 << 4); ] { export *[const]:4 reloc; }

L4_add_memopw_io_u6_2: reloc is                       L4_add_memopw_io_u6_2_0 [ reloc = (((L4_add_memopw_io_u6_2_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_add_memopw_io_u6_2: reloc is immext = 0xffffffff & L4_add_memopw_io_u6_2_0 [ reloc = (L4_add_memopw_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L4_add_memopb_io_u6_0: reloc is                       L4_add_memopb_io_u6_0_0 [ reloc = (((L4_add_memopb_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_add_memopb_io_u6_0: reloc is immext = 0xffffffff & L4_add_memopb_io_u6_0_0 [ reloc = L4_add_memopb_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L4_add_memoph_io_u6_1: reloc is                       L4_add_memoph_io_u6_1_0 [ reloc = (((L4_add_memoph_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_add_memoph_io_u6_1: reloc is immext = 0xffffffff & L4_add_memoph_io_u6_1_0 [ reloc = (L4_add_memoph_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L4_sub_memopw_io_u6_2: reloc is                       L4_sub_memopw_io_u6_2_0 [ reloc = (((L4_sub_memopw_io_u6_2_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_sub_memopw_io_u6_2: reloc is immext = 0xffffffff & L4_sub_memopw_io_u6_2_0 [ reloc = (L4_sub_memopw_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L4_sub_memopb_io_u6_0: reloc is                       L4_sub_memopb_io_u6_0_0 [ reloc = (((L4_sub_memopb_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_sub_memopb_io_u6_0: reloc is immext = 0xffffffff & L4_sub_memopb_io_u6_0_0 [ reloc = L4_sub_memopb_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L4_sub_memoph_io_u6_1: reloc is                       L4_sub_memoph_io_u6_1_0 [ reloc = (((L4_sub_memoph_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_sub_memoph_io_u6_1: reloc is immext = 0xffffffff & L4_sub_memoph_io_u6_1_0 [ reloc = (L4_sub_memoph_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L4_and_memopw_io_u6_2: reloc is                       L4_and_memopw_io_u6_2_0 [ reloc = (((L4_and_memopw_io_u6_2_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_and_memopw_io_u6_2: reloc is immext = 0xffffffff & L4_and_memopw_io_u6_2_0 [ reloc = (L4_and_memopw_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L4_and_memopb_io_u6_0: reloc is                       L4_and_memopb_io_u6_0_0 [ reloc = (((L4_and_memopb_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_and_memopb_io_u6_0: reloc is immext = 0xffffffff & L4_and_memopb_io_u6_0_0 [ reloc = L4_and_memopb_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L4_and_memoph_io_u6_1: reloc is                       L4_and_memoph_io_u6_1_0 [ reloc = (((L4_and_memoph_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_and_memoph_io_u6_1: reloc is immext = 0xffffffff & L4_and_memoph_io_u6_1_0 [ reloc = (L4_and_memoph_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L4_or_memopw_io_u6_2: reloc is                       L4_or_memopw_io_u6_2_0 [ reloc = (((L4_or_memopw_io_u6_2_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_or_memopw_io_u6_2: reloc is immext = 0xffffffff & L4_or_memopw_io_u6_2_0 [ reloc = (L4_or_memopw_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L4_or_memopb_io_u6_0: reloc is                       L4_or_memopb_io_u6_0_0 [ reloc = (((L4_or_memopb_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_or_memopb_io_u6_0: reloc is immext = 0xffffffff & L4_or_memopb_io_u6_0_0 [ reloc = L4_or_memopb_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L4_or_memoph_io_u6_1: reloc is                       L4_or_memoph_io_u6_1_0 [ reloc = (((L4_or_memoph_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_or_memoph_io_u6_1: reloc is immext = 0xffffffff & L4_or_memoph_io_u6_1_0 [ reloc = (L4_or_memoph_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L4_iadd_memopw_io_u6_2: reloc is                       L4_iadd_memopw_io_u6_2_0 [ reloc = (((L4_iadd_memopw_io_u6_2_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_iadd_memopw_io_u6_2: reloc is immext = 0xffffffff & L4_iadd_memopw_io_u6_2_0 [ reloc = (L4_iadd_memopw_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L4_iadd_memopw_io_U5: reloc is L4_iadd_memopw_io_U5_0 [ reloc = L4_iadd_memopw_io_U5_0 << 0; ] { export *[const]:4 reloc; }

L4_iadd_memopb_io_u6_0: reloc is                       L4_iadd_memopb_io_u6_0_0 [ reloc = (((L4_iadd_memopb_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_iadd_memopb_io_u6_0: reloc is immext = 0xffffffff & L4_iadd_memopb_io_u6_0_0 [ reloc = L4_iadd_memopb_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L4_iadd_memopb_io_U5: reloc is L4_iadd_memopb_io_U5_0 [ reloc = L4_iadd_memopb_io_U5_0 << 0; ] { export *[const]:4 reloc; }

L4_iadd_memoph_io_u6_1: reloc is                       L4_iadd_memoph_io_u6_1_0 [ reloc = (((L4_iadd_memoph_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_iadd_memoph_io_u6_1: reloc is immext = 0xffffffff & L4_iadd_memoph_io_u6_1_0 [ reloc = (L4_iadd_memoph_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L4_iadd_memoph_io_U5: reloc is L4_iadd_memoph_io_U5_0 [ reloc = L4_iadd_memoph_io_U5_0 << 0; ] { export *[const]:4 reloc; }

L4_isub_memopw_io_u6_2: reloc is                       L4_isub_memopw_io_u6_2_0 [ reloc = (((L4_isub_memopw_io_u6_2_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_isub_memopw_io_u6_2: reloc is immext = 0xffffffff & L4_isub_memopw_io_u6_2_0 [ reloc = (L4_isub_memopw_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L4_isub_memopw_io_U5: reloc is L4_isub_memopw_io_U5_0 [ reloc = L4_isub_memopw_io_U5_0 << 0; ] { export *[const]:4 reloc; }

L4_isub_memopb_io_u6_0: reloc is                       L4_isub_memopb_io_u6_0_0 [ reloc = (((L4_isub_memopb_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_isub_memopb_io_u6_0: reloc is immext = 0xffffffff & L4_isub_memopb_io_u6_0_0 [ reloc = L4_isub_memopb_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L4_isub_memopb_io_U5: reloc is L4_isub_memopb_io_U5_0 [ reloc = L4_isub_memopb_io_U5_0 << 0; ] { export *[const]:4 reloc; }

L4_isub_memoph_io_u6_1: reloc is                       L4_isub_memoph_io_u6_1_0 [ reloc = (((L4_isub_memoph_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_isub_memoph_io_u6_1: reloc is immext = 0xffffffff & L4_isub_memoph_io_u6_1_0 [ reloc = (L4_isub_memoph_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L4_isub_memoph_io_U5: reloc is L4_isub_memoph_io_U5_0 [ reloc = L4_isub_memoph_io_U5_0 << 0; ] { export *[const]:4 reloc; }

L4_iand_memopw_io_u6_2: reloc is                       L4_iand_memopw_io_u6_2_0 [ reloc = (((L4_iand_memopw_io_u6_2_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_iand_memopw_io_u6_2: reloc is immext = 0xffffffff & L4_iand_memopw_io_u6_2_0 [ reloc = (L4_iand_memopw_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L4_iand_memopw_io_U5: reloc is L4_iand_memopw_io_U5_0 [ reloc = L4_iand_memopw_io_U5_0 << 0; ] { export *[const]:4 reloc; }

L4_iand_memopb_io_u6_0: reloc is                       L4_iand_memopb_io_u6_0_0 [ reloc = (((L4_iand_memopb_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_iand_memopb_io_u6_0: reloc is immext = 0xffffffff & L4_iand_memopb_io_u6_0_0 [ reloc = L4_iand_memopb_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L4_iand_memopb_io_U5: reloc is L4_iand_memopb_io_U5_0 [ reloc = L4_iand_memopb_io_U5_0 << 0; ] { export *[const]:4 reloc; }

L4_iand_memoph_io_u6_1: reloc is                       L4_iand_memoph_io_u6_1_0 [ reloc = (((L4_iand_memoph_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_iand_memoph_io_u6_1: reloc is immext = 0xffffffff & L4_iand_memoph_io_u6_1_0 [ reloc = (L4_iand_memoph_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L4_iand_memoph_io_U5: reloc is L4_iand_memoph_io_U5_0 [ reloc = L4_iand_memoph_io_U5_0 << 0; ] { export *[const]:4 reloc; }

L4_ior_memopw_io_u6_2: reloc is                       L4_ior_memopw_io_u6_2_0 [ reloc = (((L4_ior_memopw_io_u6_2_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ior_memopw_io_u6_2: reloc is immext = 0xffffffff & L4_ior_memopw_io_u6_2_0 [ reloc = (L4_ior_memopw_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

L4_ior_memopw_io_U5: reloc is L4_ior_memopw_io_U5_0 [ reloc = L4_ior_memopw_io_U5_0 << 0; ] { export *[const]:4 reloc; }

L4_ior_memopb_io_u6_0: reloc is                       L4_ior_memopb_io_u6_0_0 [ reloc = (((L4_ior_memopb_io_u6_0_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ior_memopb_io_u6_0: reloc is immext = 0xffffffff & L4_ior_memopb_io_u6_0_0 [ reloc = L4_ior_memopb_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

L4_ior_memopb_io_U5: reloc is L4_ior_memopb_io_U5_0 [ reloc = L4_ior_memopb_io_U5_0 << 0; ] { export *[const]:4 reloc; }

L4_ior_memoph_io_u6_1: reloc is                       L4_ior_memoph_io_u6_1_0 [ reloc = (((L4_ior_memoph_io_u6_1_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L4_ior_memoph_io_u6_1: reloc is immext = 0xffffffff & L4_ior_memoph_io_u6_1_0 [ reloc = (L4_ior_memoph_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

L4_ior_memoph_io_U5: reloc is L4_ior_memoph_io_U5_0 [ reloc = L4_ior_memoph_io_U5_0 << 0; ] { export *[const]:4 reloc; }

S4_storeirbt_io_u6_0: reloc is S4_storeirbt_io_u6_0_0 [ reloc = S4_storeirbt_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

S4_storeirbt_io_S6: reloc is                       S4_storeirbt_io_S6_0 & S4_storeirbt_io_S6_1 [ reloc = ((((S4_storeirbt_io_S6_0 << 0) + (S4_storeirbt_io_S6_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeirbt_io_S6: reloc is immext = 0xffffffff & S4_storeirbt_io_S6_0 & S4_storeirbt_io_S6_1 [ reloc = (S4_storeirbt_io_S6_0 << 0) + (S4_storeirbt_io_S6_1 << 5); ] { export *[const]:4 reloc; }

S4_storeirbf_io_u6_0: reloc is S4_storeirbf_io_u6_0_0 [ reloc = S4_storeirbf_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

S4_storeirbf_io_S6: reloc is                       S4_storeirbf_io_S6_0 & S4_storeirbf_io_S6_1 [ reloc = ((((S4_storeirbf_io_S6_0 << 0) + (S4_storeirbf_io_S6_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeirbf_io_S6: reloc is immext = 0xffffffff & S4_storeirbf_io_S6_0 & S4_storeirbf_io_S6_1 [ reloc = (S4_storeirbf_io_S6_0 << 0) + (S4_storeirbf_io_S6_1 << 5); ] { export *[const]:4 reloc; }

S4_storeirbtnew_io_u6_0: reloc is S4_storeirbtnew_io_u6_0_0 [ reloc = S4_storeirbtnew_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

S4_storeirbtnew_io_S6: reloc is                       S4_storeirbtnew_io_S6_0 & S4_storeirbtnew_io_S6_1 [ reloc = ((((S4_storeirbtnew_io_S6_0 << 0) + (S4_storeirbtnew_io_S6_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeirbtnew_io_S6: reloc is immext = 0xffffffff & S4_storeirbtnew_io_S6_0 & S4_storeirbtnew_io_S6_1 [ reloc = (S4_storeirbtnew_io_S6_0 << 0) + (S4_storeirbtnew_io_S6_1 << 5); ] { export *[const]:4 reloc; }

S4_storeirbfnew_io_u6_0: reloc is S4_storeirbfnew_io_u6_0_0 [ reloc = S4_storeirbfnew_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

S4_storeirbfnew_io_S6: reloc is                       S4_storeirbfnew_io_S6_0 & S4_storeirbfnew_io_S6_1 [ reloc = ((((S4_storeirbfnew_io_S6_0 << 0) + (S4_storeirbfnew_io_S6_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeirbfnew_io_S6: reloc is immext = 0xffffffff & S4_storeirbfnew_io_S6_0 & S4_storeirbfnew_io_S6_1 [ reloc = (S4_storeirbfnew_io_S6_0 << 0) + (S4_storeirbfnew_io_S6_1 << 5); ] { export *[const]:4 reloc; }

S4_storeirht_io_u6_1: reloc is S4_storeirht_io_u6_1_0 [ reloc = (S4_storeirht_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S4_storeirht_io_S6: reloc is                       S4_storeirht_io_S6_0 & S4_storeirht_io_S6_1 [ reloc = ((((S4_storeirht_io_S6_0 << 0) + (S4_storeirht_io_S6_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeirht_io_S6: reloc is immext = 0xffffffff & S4_storeirht_io_S6_0 & S4_storeirht_io_S6_1 [ reloc = (S4_storeirht_io_S6_0 << 0) + (S4_storeirht_io_S6_1 << 5); ] { export *[const]:4 reloc; }

S4_storeirhf_io_u6_1: reloc is S4_storeirhf_io_u6_1_0 [ reloc = (S4_storeirhf_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S4_storeirhf_io_S6: reloc is                       S4_storeirhf_io_S6_0 & S4_storeirhf_io_S6_1 [ reloc = ((((S4_storeirhf_io_S6_0 << 0) + (S4_storeirhf_io_S6_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeirhf_io_S6: reloc is immext = 0xffffffff & S4_storeirhf_io_S6_0 & S4_storeirhf_io_S6_1 [ reloc = (S4_storeirhf_io_S6_0 << 0) + (S4_storeirhf_io_S6_1 << 5); ] { export *[const]:4 reloc; }

S4_storeirhtnew_io_u6_1: reloc is S4_storeirhtnew_io_u6_1_0 [ reloc = (S4_storeirhtnew_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S4_storeirhtnew_io_S6: reloc is                       S4_storeirhtnew_io_S6_0 & S4_storeirhtnew_io_S6_1 [ reloc = ((((S4_storeirhtnew_io_S6_0 << 0) + (S4_storeirhtnew_io_S6_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeirhtnew_io_S6: reloc is immext = 0xffffffff & S4_storeirhtnew_io_S6_0 & S4_storeirhtnew_io_S6_1 [ reloc = (S4_storeirhtnew_io_S6_0 << 0) + (S4_storeirhtnew_io_S6_1 << 5); ] { export *[const]:4 reloc; }

S4_storeirhfnew_io_u6_1: reloc is S4_storeirhfnew_io_u6_1_0 [ reloc = (S4_storeirhfnew_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S4_storeirhfnew_io_S6: reloc is                       S4_storeirhfnew_io_S6_0 & S4_storeirhfnew_io_S6_1 [ reloc = ((((S4_storeirhfnew_io_S6_0 << 0) + (S4_storeirhfnew_io_S6_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeirhfnew_io_S6: reloc is immext = 0xffffffff & S4_storeirhfnew_io_S6_0 & S4_storeirhfnew_io_S6_1 [ reloc = (S4_storeirhfnew_io_S6_0 << 0) + (S4_storeirhfnew_io_S6_1 << 5); ] { export *[const]:4 reloc; }

S4_storeirit_io_u6_2: reloc is S4_storeirit_io_u6_2_0 [ reloc = (S4_storeirit_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S4_storeirit_io_S6: reloc is                       S4_storeirit_io_S6_0 & S4_storeirit_io_S6_1 [ reloc = ((((S4_storeirit_io_S6_0 << 0) + (S4_storeirit_io_S6_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeirit_io_S6: reloc is immext = 0xffffffff & S4_storeirit_io_S6_0 & S4_storeirit_io_S6_1 [ reloc = (S4_storeirit_io_S6_0 << 0) + (S4_storeirit_io_S6_1 << 5); ] { export *[const]:4 reloc; }

S4_storeirif_io_u6_2: reloc is S4_storeirif_io_u6_2_0 [ reloc = (S4_storeirif_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S4_storeirif_io_S6: reloc is                       S4_storeirif_io_S6_0 & S4_storeirif_io_S6_1 [ reloc = ((((S4_storeirif_io_S6_0 << 0) + (S4_storeirif_io_S6_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeirif_io_S6: reloc is immext = 0xffffffff & S4_storeirif_io_S6_0 & S4_storeirif_io_S6_1 [ reloc = (S4_storeirif_io_S6_0 << 0) + (S4_storeirif_io_S6_1 << 5); ] { export *[const]:4 reloc; }

S4_storeiritnew_io_u6_2: reloc is S4_storeiritnew_io_u6_2_0 [ reloc = (S4_storeiritnew_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S4_storeiritnew_io_S6: reloc is                       S4_storeiritnew_io_S6_0 & S4_storeiritnew_io_S6_1 [ reloc = ((((S4_storeiritnew_io_S6_0 << 0) + (S4_storeiritnew_io_S6_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeiritnew_io_S6: reloc is immext = 0xffffffff & S4_storeiritnew_io_S6_0 & S4_storeiritnew_io_S6_1 [ reloc = (S4_storeiritnew_io_S6_0 << 0) + (S4_storeiritnew_io_S6_1 << 5); ] { export *[const]:4 reloc; }

S4_storeirifnew_io_u6_2: reloc is S4_storeirifnew_io_u6_2_0 [ reloc = (S4_storeirifnew_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S4_storeirifnew_io_S6: reloc is                       S4_storeirifnew_io_S6_0 & S4_storeirifnew_io_S6_1 [ reloc = ((((S4_storeirifnew_io_S6_0 << 0) + (S4_storeirifnew_io_S6_1 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeirifnew_io_S6: reloc is immext = 0xffffffff & S4_storeirifnew_io_S6_0 & S4_storeirifnew_io_S6_1 [ reloc = (S4_storeirifnew_io_S6_0 << 0) + (S4_storeirifnew_io_S6_1 << 5); ] { export *[const]:4 reloc; }

S4_storeirb_io_u6_0: reloc is S4_storeirb_io_u6_0_0 [ reloc = S4_storeirb_io_u6_0_0 << 0; ] { export *[const]:4 reloc; }

S4_storeirb_io_S8: reloc is                       S4_storeirb_io_S8_0 & S4_storeirb_io_S8_1 [ reloc = ((((S4_storeirb_io_S8_0 << 0) + (S4_storeirb_io_S8_1 << 7)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeirb_io_S8: reloc is immext = 0xffffffff & S4_storeirb_io_S8_0 & S4_storeirb_io_S8_1 [ reloc = (S4_storeirb_io_S8_0 << 0) + (S4_storeirb_io_S8_1 << 7); ] { export *[const]:4 reloc; }

S4_storeirh_io_u6_1: reloc is S4_storeirh_io_u6_1_0 [ reloc = (S4_storeirh_io_u6_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

S4_storeirh_io_S8: reloc is                       S4_storeirh_io_S8_0 & S4_storeirh_io_S8_1 [ reloc = ((((S4_storeirh_io_S8_0 << 0) + (S4_storeirh_io_S8_1 << 7)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeirh_io_S8: reloc is immext = 0xffffffff & S4_storeirh_io_S8_0 & S4_storeirh_io_S8_1 [ reloc = (S4_storeirh_io_S8_0 << 0) + (S4_storeirh_io_S8_1 << 7); ] { export *[const]:4 reloc; }

S4_storeiri_io_u6_2: reloc is S4_storeiri_io_u6_2_0 [ reloc = (S4_storeiri_io_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

S4_storeiri_io_S8: reloc is                       S4_storeiri_io_S8_0 & S4_storeiri_io_S8_1 [ reloc = ((((S4_storeiri_io_S8_0 << 0) + (S4_storeiri_io_S8_1 << 7)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_storeiri_io_S8: reloc is immext = 0xffffffff & S4_storeiri_io_S8_0 & S4_storeiri_io_S8_1 [ reloc = (S4_storeiri_io_S8_0 << 0) + (S4_storeiri_io_S8_1 << 7); ] { export *[const]:4 reloc; }

L2_loadrubgp_u16_0: reloc is                       L2_loadrubgp_u16_0_0 & L2_loadrubgp_u16_0_1 & L2_loadrubgp_u16_0_2 [ reloc = (((((L2_loadrubgp_u16_0_0 << 0) + (L2_loadrubgp_u16_0_1 << 9)) + (L2_loadrubgp_u16_0_2 << 14)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadrubgp_u16_0: reloc is immext = 0xffffffff & L2_loadrubgp_u16_0_0 & L2_loadrubgp_u16_0_1 & L2_loadrubgp_u16_0_2 [ reloc = ((L2_loadrubgp_u16_0_0 << 0) + (L2_loadrubgp_u16_0_1 << 9)) + (L2_loadrubgp_u16_0_2 << 14); ] { export *[const]:4 reloc; }

L2_loadrbgp_u16_0: reloc is                       L2_loadrbgp_u16_0_0 & L2_loadrbgp_u16_0_1 & L2_loadrbgp_u16_0_2 [ reloc = (((((L2_loadrbgp_u16_0_0 << 0) + (L2_loadrbgp_u16_0_1 << 9)) + (L2_loadrbgp_u16_0_2 << 14)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadrbgp_u16_0: reloc is immext = 0xffffffff & L2_loadrbgp_u16_0_0 & L2_loadrbgp_u16_0_1 & L2_loadrbgp_u16_0_2 [ reloc = ((L2_loadrbgp_u16_0_0 << 0) + (L2_loadrbgp_u16_0_1 << 9)) + (L2_loadrbgp_u16_0_2 << 14); ] { export *[const]:4 reloc; }

L2_loadruhgp_u16_1: reloc is                       L2_loadruhgp_u16_1_0 & L2_loadruhgp_u16_1_1 & L2_loadruhgp_u16_1_2 [ reloc = (((((L2_loadruhgp_u16_1_0 << 0) + (L2_loadruhgp_u16_1_1 << 9)) + (L2_loadruhgp_u16_1_2 << 14)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadruhgp_u16_1: reloc is immext = 0xffffffff & L2_loadruhgp_u16_1_0 & L2_loadruhgp_u16_1_1 & L2_loadruhgp_u16_1_2 [ reloc = (((L2_loadruhgp_u16_1_0 << 0) + (L2_loadruhgp_u16_1_1 << 9)) + (L2_loadruhgp_u16_1_2 << 14)) << 1; ] { export *[const]:4 reloc; }

L2_loadrhgp_u16_1: reloc is                       L2_loadrhgp_u16_1_0 & L2_loadrhgp_u16_1_1 & L2_loadrhgp_u16_1_2 [ reloc = (((((L2_loadrhgp_u16_1_0 << 0) + (L2_loadrhgp_u16_1_1 << 9)) + (L2_loadrhgp_u16_1_2 << 14)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadrhgp_u16_1: reloc is immext = 0xffffffff & L2_loadrhgp_u16_1_0 & L2_loadrhgp_u16_1_1 & L2_loadrhgp_u16_1_2 [ reloc = (((L2_loadrhgp_u16_1_0 << 0) + (L2_loadrhgp_u16_1_1 << 9)) + (L2_loadrhgp_u16_1_2 << 14)) << 1; ] { export *[const]:4 reloc; }

L2_loadrigp_u16_2: reloc is                       L2_loadrigp_u16_2_0 & L2_loadrigp_u16_2_1 & L2_loadrigp_u16_2_2 [ reloc = (((((L2_loadrigp_u16_2_0 << 0) + (L2_loadrigp_u16_2_1 << 9)) + (L2_loadrigp_u16_2_2 << 14)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadrigp_u16_2: reloc is immext = 0xffffffff & L2_loadrigp_u16_2_0 & L2_loadrigp_u16_2_1 & L2_loadrigp_u16_2_2 [ reloc = (((L2_loadrigp_u16_2_0 << 0) + (L2_loadrigp_u16_2_1 << 9)) + (L2_loadrigp_u16_2_2 << 14)) << 2; ] { export *[const]:4 reloc; }

L2_loadrdgp_u16_3: reloc is                       L2_loadrdgp_u16_3_0 & L2_loadrdgp_u16_3_1 & L2_loadrdgp_u16_3_2 [ reloc = (((((L2_loadrdgp_u16_3_0 << 0) + (L2_loadrdgp_u16_3_1 << 9)) + (L2_loadrdgp_u16_3_2 << 14)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
L2_loadrdgp_u16_3: reloc is immext = 0xffffffff & L2_loadrdgp_u16_3_0 & L2_loadrdgp_u16_3_1 & L2_loadrdgp_u16_3_2 [ reloc = (((L2_loadrdgp_u16_3_0 << 0) + (L2_loadrdgp_u16_3_1 << 9)) + (L2_loadrdgp_u16_3_2 << 14)) << 3; ] { export *[const]:4 reloc; }

S2_storerbgp_u16_0: reloc is                       S2_storerbgp_u16_0_0 & S2_storerbgp_u16_0_1 & S2_storerbgp_u16_0_2 & S2_storerbgp_u16_0_3 [ reloc = ((((((S2_storerbgp_u16_0_0 << 0) + (S2_storerbgp_u16_0_1 << 8)) + (S2_storerbgp_u16_0_2 << 9)) + (S2_storerbgp_u16_0_3 << 14)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storerbgp_u16_0: reloc is immext = 0xffffffff & S2_storerbgp_u16_0_0 & S2_storerbgp_u16_0_1 & S2_storerbgp_u16_0_2 & S2_storerbgp_u16_0_3 [ reloc = (((S2_storerbgp_u16_0_0 << 0) + (S2_storerbgp_u16_0_1 << 8)) + (S2_storerbgp_u16_0_2 << 9)) + (S2_storerbgp_u16_0_3 << 14); ] { export *[const]:4 reloc; }

S2_storerhgp_u16_1: reloc is                       S2_storerhgp_u16_1_0 & S2_storerhgp_u16_1_1 & S2_storerhgp_u16_1_2 & S2_storerhgp_u16_1_3 [ reloc = ((((((S2_storerhgp_u16_1_0 << 0) + (S2_storerhgp_u16_1_1 << 8)) + (S2_storerhgp_u16_1_2 << 9)) + (S2_storerhgp_u16_1_3 << 14)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storerhgp_u16_1: reloc is immext = 0xffffffff & S2_storerhgp_u16_1_0 & S2_storerhgp_u16_1_1 & S2_storerhgp_u16_1_2 & S2_storerhgp_u16_1_3 [ reloc = ((((S2_storerhgp_u16_1_0 << 0) + (S2_storerhgp_u16_1_1 << 8)) + (S2_storerhgp_u16_1_2 << 9)) + (S2_storerhgp_u16_1_3 << 14)) << 1; ] { export *[const]:4 reloc; }

S2_storerfgp_u16_1: reloc is                       S2_storerfgp_u16_1_0 & S2_storerfgp_u16_1_1 & S2_storerfgp_u16_1_2 & S2_storerfgp_u16_1_3 [ reloc = ((((((S2_storerfgp_u16_1_0 << 0) + (S2_storerfgp_u16_1_1 << 8)) + (S2_storerfgp_u16_1_2 << 9)) + (S2_storerfgp_u16_1_3 << 14)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storerfgp_u16_1: reloc is immext = 0xffffffff & S2_storerfgp_u16_1_0 & S2_storerfgp_u16_1_1 & S2_storerfgp_u16_1_2 & S2_storerfgp_u16_1_3 [ reloc = ((((S2_storerfgp_u16_1_0 << 0) + (S2_storerfgp_u16_1_1 << 8)) + (S2_storerfgp_u16_1_2 << 9)) + (S2_storerfgp_u16_1_3 << 14)) << 1; ] { export *[const]:4 reloc; }

S2_storerigp_u16_2: reloc is                       S2_storerigp_u16_2_0 & S2_storerigp_u16_2_1 & S2_storerigp_u16_2_2 & S2_storerigp_u16_2_3 [ reloc = ((((((S2_storerigp_u16_2_0 << 0) + (S2_storerigp_u16_2_1 << 8)) + (S2_storerigp_u16_2_2 << 9)) + (S2_storerigp_u16_2_3 << 14)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storerigp_u16_2: reloc is immext = 0xffffffff & S2_storerigp_u16_2_0 & S2_storerigp_u16_2_1 & S2_storerigp_u16_2_2 & S2_storerigp_u16_2_3 [ reloc = ((((S2_storerigp_u16_2_0 << 0) + (S2_storerigp_u16_2_1 << 8)) + (S2_storerigp_u16_2_2 << 9)) + (S2_storerigp_u16_2_3 << 14)) << 2; ] { export *[const]:4 reloc; }

S2_storerdgp_u16_3: reloc is                       S2_storerdgp_u16_3_0 & S2_storerdgp_u16_3_1 & S2_storerdgp_u16_3_2 & S2_storerdgp_u16_3_3 [ reloc = ((((((S2_storerdgp_u16_3_0 << 0) + (S2_storerdgp_u16_3_1 << 8)) + (S2_storerdgp_u16_3_2 << 9)) + (S2_storerdgp_u16_3_3 << 14)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storerdgp_u16_3: reloc is immext = 0xffffffff & S2_storerdgp_u16_3_0 & S2_storerdgp_u16_3_1 & S2_storerdgp_u16_3_2 & S2_storerdgp_u16_3_3 [ reloc = ((((S2_storerdgp_u16_3_0 << 0) + (S2_storerdgp_u16_3_1 << 8)) + (S2_storerdgp_u16_3_2 << 9)) + (S2_storerdgp_u16_3_3 << 14)) << 3; ] { export *[const]:4 reloc; }

S2_storerinewgp_u16_2: reloc is                       S2_storerinewgp_u16_2_0 & S2_storerinewgp_u16_2_1 & S2_storerinewgp_u16_2_2 & S2_storerinewgp_u16_2_3 [ reloc = ((((((S2_storerinewgp_u16_2_0 << 0) + (S2_storerinewgp_u16_2_1 << 8)) + (S2_storerinewgp_u16_2_2 << 9)) + (S2_storerinewgp_u16_2_3 << 14)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storerinewgp_u16_2: reloc is immext = 0xffffffff & S2_storerinewgp_u16_2_0 & S2_storerinewgp_u16_2_1 & S2_storerinewgp_u16_2_2 & S2_storerinewgp_u16_2_3 [ reloc = ((((S2_storerinewgp_u16_2_0 << 0) + (S2_storerinewgp_u16_2_1 << 8)) + (S2_storerinewgp_u16_2_2 << 9)) + (S2_storerinewgp_u16_2_3 << 14)) << 2; ] { export *[const]:4 reloc; }

S2_storerbnewgp_u16_0: reloc is                       S2_storerbnewgp_u16_0_0 & S2_storerbnewgp_u16_0_1 & S2_storerbnewgp_u16_0_2 & S2_storerbnewgp_u16_0_3 [ reloc = ((((((S2_storerbnewgp_u16_0_0 << 0) + (S2_storerbnewgp_u16_0_1 << 8)) + (S2_storerbnewgp_u16_0_2 << 9)) + (S2_storerbnewgp_u16_0_3 << 14)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storerbnewgp_u16_0: reloc is immext = 0xffffffff & S2_storerbnewgp_u16_0_0 & S2_storerbnewgp_u16_0_1 & S2_storerbnewgp_u16_0_2 & S2_storerbnewgp_u16_0_3 [ reloc = (((S2_storerbnewgp_u16_0_0 << 0) + (S2_storerbnewgp_u16_0_1 << 8)) + (S2_storerbnewgp_u16_0_2 << 9)) + (S2_storerbnewgp_u16_0_3 << 14); ] { export *[const]:4 reloc; }

S2_storerhnewgp_u16_1: reloc is                       S2_storerhnewgp_u16_1_0 & S2_storerhnewgp_u16_1_1 & S2_storerhnewgp_u16_1_2 & S2_storerhnewgp_u16_1_3 [ reloc = ((((((S2_storerhnewgp_u16_1_0 << 0) + (S2_storerhnewgp_u16_1_1 << 8)) + (S2_storerhnewgp_u16_1_2 << 9)) + (S2_storerhnewgp_u16_1_3 << 14)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S2_storerhnewgp_u16_1: reloc is immext = 0xffffffff & S2_storerhnewgp_u16_1_0 & S2_storerhnewgp_u16_1_1 & S2_storerhnewgp_u16_1_2 & S2_storerhnewgp_u16_1_3 [ reloc = ((((S2_storerhnewgp_u16_1_0 << 0) + (S2_storerhnewgp_u16_1_1 << 8)) + (S2_storerhnewgp_u16_1_2 << 9)) + (S2_storerhnewgp_u16_1_3 << 14)) << 1; ] { export *[const]:4 reloc; }

A4_rcmpeqi_s8: reloc is                       A4_rcmpeqi_s8_0 [ reloc = (((A4_rcmpeqi_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A4_rcmpeqi_s8: reloc is immext = 0xffffffff & A4_rcmpeqi_s8_0 [ reloc = A4_rcmpeqi_s8_0 << 0; ] { export *[const]:4 reloc; }

A4_rcmpneqi_s8: reloc is                       A4_rcmpneqi_s8_0 [ reloc = (((A4_rcmpneqi_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A4_rcmpneqi_s8: reloc is immext = 0xffffffff & A4_rcmpneqi_s8_0 [ reloc = A4_rcmpneqi_s8_0 << 0; ] { export *[const]:4 reloc; }

C2_cmpeqi_s10: reloc is                       C2_cmpeqi_s10_0 & C2_cmpeqi_s10_1 [ reloc = ((((C2_cmpeqi_s10_0 << 0) + (C2_cmpeqi_s10_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
C2_cmpeqi_s10: reloc is immext = 0xffffffff & C2_cmpeqi_s10_0 & C2_cmpeqi_s10_1 [ reloc = (C2_cmpeqi_s10_0 << 0) + (C2_cmpeqi_s10_1 << 9); ] { export *[const]:4 reloc; }

C2_cmpgti_s10: reloc is                       C2_cmpgti_s10_0 & C2_cmpgti_s10_1 [ reloc = ((((C2_cmpgti_s10_0 << 0) + (C2_cmpgti_s10_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
C2_cmpgti_s10: reloc is immext = 0xffffffff & C2_cmpgti_s10_0 & C2_cmpgti_s10_1 [ reloc = (C2_cmpgti_s10_0 << 0) + (C2_cmpgti_s10_1 << 9); ] { export *[const]:4 reloc; }

C2_cmpgtui_u9: reloc is                       C2_cmpgtui_u9_0 [ reloc = (((C2_cmpgtui_u9_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
C2_cmpgtui_u9: reloc is immext = 0xffffffff & C2_cmpgtui_u9_0 [ reloc = C2_cmpgtui_u9_0 << 0; ] { export *[const]:4 reloc; }

C2_bitsclri_u6: reloc is C2_bitsclri_u6_0 [ reloc = C2_bitsclri_u6_0 << 0; ] { export *[const]:4 reloc; }

C4_nbitsclri_u6: reloc is C4_nbitsclri_u6_0 [ reloc = C4_nbitsclri_u6_0 << 0; ] { export *[const]:4 reloc; }

C4_cmpneqi_s10: reloc is                       C4_cmpneqi_s10_0 & C4_cmpneqi_s10_1 [ reloc = ((((C4_cmpneqi_s10_0 << 0) + (C4_cmpneqi_s10_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
C4_cmpneqi_s10: reloc is immext = 0xffffffff & C4_cmpneqi_s10_0 & C4_cmpneqi_s10_1 [ reloc = (C4_cmpneqi_s10_0 << 0) + (C4_cmpneqi_s10_1 << 9); ] { export *[const]:4 reloc; }

C4_cmpltei_s10: reloc is                       C4_cmpltei_s10_0 & C4_cmpltei_s10_1 [ reloc = ((((C4_cmpltei_s10_0 << 0) + (C4_cmpltei_s10_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
C4_cmpltei_s10: reloc is immext = 0xffffffff & C4_cmpltei_s10_0 & C4_cmpltei_s10_1 [ reloc = (C4_cmpltei_s10_0 << 0) + (C4_cmpltei_s10_1 << 9); ] { export *[const]:4 reloc; }

C4_cmplteui_u9: reloc is                       C4_cmplteui_u9_0 [ reloc = (((C4_cmplteui_u9_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
C4_cmplteui_u9: reloc is immext = 0xffffffff & C4_cmplteui_u9_0 [ reloc = C4_cmplteui_u9_0 << 0; ] { export *[const]:4 reloc; }

C2_cmovenewit_s12: reloc is                       C2_cmovenewit_s12_0 & C2_cmovenewit_s12_1 [ reloc = ((((C2_cmovenewit_s12_0 << 0) + (C2_cmovenewit_s12_1 << 8)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
C2_cmovenewit_s12: reloc is immext = 0xffffffff & C2_cmovenewit_s12_0 & C2_cmovenewit_s12_1 [ reloc = (C2_cmovenewit_s12_0 << 0) + (C2_cmovenewit_s12_1 << 8); ] { export *[const]:4 reloc; }

C2_cmovenewif_s12: reloc is                       C2_cmovenewif_s12_0 & C2_cmovenewif_s12_1 [ reloc = ((((C2_cmovenewif_s12_0 << 0) + (C2_cmovenewif_s12_1 << 8)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
C2_cmovenewif_s12: reloc is immext = 0xffffffff & C2_cmovenewif_s12_0 & C2_cmovenewif_s12_1 [ reloc = (C2_cmovenewif_s12_0 << 0) + (C2_cmovenewif_s12_1 << 8); ] { export *[const]:4 reloc; }

C2_cmoveit_s12: reloc is                       C2_cmoveit_s12_0 & C2_cmoveit_s12_1 [ reloc = ((((C2_cmoveit_s12_0 << 0) + (C2_cmoveit_s12_1 << 8)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
C2_cmoveit_s12: reloc is immext = 0xffffffff & C2_cmoveit_s12_0 & C2_cmoveit_s12_1 [ reloc = (C2_cmoveit_s12_0 << 0) + (C2_cmoveit_s12_1 << 8); ] { export *[const]:4 reloc; }

C2_cmoveif_s12: reloc is                       C2_cmoveif_s12_0 & C2_cmoveif_s12_1 [ reloc = ((((C2_cmoveif_s12_0 << 0) + (C2_cmoveif_s12_1 << 8)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
C2_cmoveif_s12: reloc is immext = 0xffffffff & C2_cmoveif_s12_0 & C2_cmoveif_s12_1 [ reloc = (C2_cmoveif_s12_0 << 0) + (C2_cmoveif_s12_1 << 8); ] { export *[const]:4 reloc; }

C2_muxii_s8: reloc is                       C2_muxii_s8_0 [ reloc = (((C2_muxii_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
C2_muxii_s8: reloc is immext = 0xffffffff & C2_muxii_s8_0 [ reloc = C2_muxii_s8_0 << 0; ] { export *[const]:4 reloc; }

C2_muxii_S8: reloc is C2_muxii_S8_0 & C2_muxii_S8_1 [ reloc = (C2_muxii_S8_0 << 0) + (C2_muxii_S8_1 << 1); ] { export *[const]:4 reloc; }

C2_muxir_s8: reloc is                       C2_muxir_s8_0 [ reloc = (((C2_muxir_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
C2_muxir_s8: reloc is immext = 0xffffffff & C2_muxir_s8_0 [ reloc = C2_muxir_s8_0 << 0; ] { export *[const]:4 reloc; }

C2_muxri_s8: reloc is                       C2_muxri_s8_0 [ reloc = (((C2_muxri_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
C2_muxri_s8: reloc is immext = 0xffffffff & C2_muxri_s8_0 [ reloc = C2_muxri_s8_0 << 0; ] { export *[const]:4 reloc; }

A4_vcmpbeqi_u8: reloc is A4_vcmpbeqi_u8_0 [ reloc = A4_vcmpbeqi_u8_0 << 0; ] { export *[const]:4 reloc; }

A4_vcmpbgtui_u7: reloc is A4_vcmpbgtui_u7_0 [ reloc = A4_vcmpbgtui_u7_0 << 0; ] { export *[const]:4 reloc; }

A4_vcmpbgti_s8: reloc is A4_vcmpbgti_s8_0 [ reloc = A4_vcmpbgti_s8_0 << 0; ] { export *[const]:4 reloc; }

A4_cmpbeqi_u8: reloc is A4_cmpbeqi_u8_0 [ reloc = A4_cmpbeqi_u8_0 << 0; ] { export *[const]:4 reloc; }

A4_cmpbgtui_u7: reloc is                       A4_cmpbgtui_u7_0 [ reloc = (((A4_cmpbgtui_u7_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A4_cmpbgtui_u7: reloc is immext = 0xffffffff & A4_cmpbgtui_u7_0 [ reloc = A4_cmpbgtui_u7_0 << 0; ] { export *[const]:4 reloc; }

A4_cmpbgti_s8: reloc is A4_cmpbgti_s8_0 [ reloc = A4_cmpbgti_s8_0 << 0; ] { export *[const]:4 reloc; }

A4_vcmpheqi_s8: reloc is A4_vcmpheqi_s8_0 [ reloc = A4_vcmpheqi_s8_0 << 0; ] { export *[const]:4 reloc; }

A4_vcmphgti_s8: reloc is A4_vcmphgti_s8_0 [ reloc = A4_vcmphgti_s8_0 << 0; ] { export *[const]:4 reloc; }

A4_vcmphgtui_u7: reloc is A4_vcmphgtui_u7_0 [ reloc = A4_vcmphgtui_u7_0 << 0; ] { export *[const]:4 reloc; }

A4_cmpheqi_s8: reloc is                       A4_cmpheqi_s8_0 [ reloc = (((A4_cmpheqi_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A4_cmpheqi_s8: reloc is immext = 0xffffffff & A4_cmpheqi_s8_0 [ reloc = A4_cmpheqi_s8_0 << 0; ] { export *[const]:4 reloc; }

A4_cmphgti_s8: reloc is                       A4_cmphgti_s8_0 [ reloc = (((A4_cmphgti_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A4_cmphgti_s8: reloc is immext = 0xffffffff & A4_cmphgti_s8_0 [ reloc = A4_cmphgti_s8_0 << 0; ] { export *[const]:4 reloc; }

A4_cmphgtui_u7: reloc is                       A4_cmphgtui_u7_0 [ reloc = (((A4_cmphgtui_u7_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A4_cmphgtui_u7: reloc is immext = 0xffffffff & A4_cmphgtui_u7_0 [ reloc = A4_cmphgtui_u7_0 << 0; ] { export *[const]:4 reloc; }

A4_vcmpweqi_s8: reloc is A4_vcmpweqi_s8_0 [ reloc = A4_vcmpweqi_s8_0 << 0; ] { export *[const]:4 reloc; }

A4_vcmpwgti_s8: reloc is A4_vcmpwgti_s8_0 [ reloc = A4_vcmpwgti_s8_0 << 0; ] { export *[const]:4 reloc; }

A4_vcmpwgtui_u7: reloc is A4_vcmpwgtui_u7_0 [ reloc = A4_vcmpwgtui_u7_0 << 0; ] { export *[const]:4 reloc; }

M2_mpysip_u8: reloc is                       M2_mpysip_u8_0 [ reloc = (((M2_mpysip_u8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
M2_mpysip_u8: reloc is immext = 0xffffffff & M2_mpysip_u8_0 [ reloc = M2_mpysip_u8_0 << 0; ] { export *[const]:4 reloc; }

M2_mpysin_u8: reloc is M2_mpysin_u8_0 [ reloc = M2_mpysin_u8_0 << 0; ] { export *[const]:4 reloc; }

M2_macsip_u8: reloc is                       M2_macsip_u8_0 [ reloc = (((M2_macsip_u8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
M2_macsip_u8: reloc is immext = 0xffffffff & M2_macsip_u8_0 [ reloc = M2_macsip_u8_0 << 0; ] { export *[const]:4 reloc; }

M2_macsin_u8: reloc is                       M2_macsin_u8_0 [ reloc = (((M2_macsin_u8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
M2_macsin_u8: reloc is immext = 0xffffffff & M2_macsin_u8_0 [ reloc = M2_macsin_u8_0 << 0; ] { export *[const]:4 reloc; }

M2_accii_s8: reloc is                       M2_accii_s8_0 [ reloc = (((M2_accii_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
M2_accii_s8: reloc is immext = 0xffffffff & M2_accii_s8_0 [ reloc = M2_accii_s8_0 << 0; ] { export *[const]:4 reloc; }

M2_naccii_s8: reloc is                       M2_naccii_s8_0 [ reloc = (((M2_naccii_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
M2_naccii_s8: reloc is immext = 0xffffffff & M2_naccii_s8_0 [ reloc = M2_naccii_s8_0 << 0; ] { export *[const]:4 reloc; }

M4_mpyri_addr_u2_u6_2: reloc is M4_mpyri_addr_u2_u6_2_0 & M4_mpyri_addr_u2_u6_2_1 & M4_mpyri_addr_u2_u6_2_2 [ reloc = (((M4_mpyri_addr_u2_u6_2_0 << 0) + (M4_mpyri_addr_u2_u6_2_1 << 3)) + (M4_mpyri_addr_u2_u6_2_2 << 4)) << 2; ] { export *[const]:4 reloc; }

M4_mpyri_addr_u6: reloc is                       M4_mpyri_addr_u6_0 & M4_mpyri_addr_u6_1 & M4_mpyri_addr_u6_2 [ reloc = (((((M4_mpyri_addr_u6_0 << 0) + (M4_mpyri_addr_u6_1 << 3)) + (M4_mpyri_addr_u6_2 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
M4_mpyri_addr_u6: reloc is immext = 0xffffffff & M4_mpyri_addr_u6_0 & M4_mpyri_addr_u6_1 & M4_mpyri_addr_u6_2 [ reloc = ((M4_mpyri_addr_u6_0 << 0) + (M4_mpyri_addr_u6_1 << 3)) + (M4_mpyri_addr_u6_2 << 4); ] { export *[const]:4 reloc; }

M4_mpyri_addi_u6: reloc is                       M4_mpyri_addi_u6_0 & M4_mpyri_addi_u6_1 & M4_mpyri_addi_u6_2 [ reloc = (((((M4_mpyri_addi_u6_0 << 0) + (M4_mpyri_addi_u6_1 << 3)) + (M4_mpyri_addi_u6_2 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
M4_mpyri_addi_u6: reloc is immext = 0xffffffff & M4_mpyri_addi_u6_0 & M4_mpyri_addi_u6_1 & M4_mpyri_addi_u6_2 [ reloc = ((M4_mpyri_addi_u6_0 << 0) + (M4_mpyri_addi_u6_1 << 3)) + (M4_mpyri_addi_u6_2 << 4); ] { export *[const]:4 reloc; }

M4_mpyri_addi_U6: reloc is M4_mpyri_addi_U6_0 & M4_mpyri_addi_U6_1 [ reloc = (M4_mpyri_addi_U6_0 << 0) + (M4_mpyri_addi_U6_1 << 5); ] { export *[const]:4 reloc; }

M4_mpyrr_addi_u6: reloc is                       M4_mpyrr_addi_u6_0 & M4_mpyrr_addi_u6_1 & M4_mpyrr_addi_u6_2 [ reloc = (((((M4_mpyrr_addi_u6_0 << 0) + (M4_mpyrr_addi_u6_1 << 3)) + (M4_mpyrr_addi_u6_2 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
M4_mpyrr_addi_u6: reloc is immext = 0xffffffff & M4_mpyrr_addi_u6_0 & M4_mpyrr_addi_u6_1 & M4_mpyrr_addi_u6_2 [ reloc = ((M4_mpyrr_addi_u6_0 << 0) + (M4_mpyrr_addi_u6_1 << 3)) + (M4_mpyrr_addi_u6_2 << 4); ] { export *[const]:4 reloc; }

S4_vrcrotate_acc_u2: reloc is S4_vrcrotate_acc_u2_0 & S4_vrcrotate_acc_u2_1 [ reloc = (S4_vrcrotate_acc_u2_0 << 0) + (S4_vrcrotate_acc_u2_1 << 1); ] { export *[const]:4 reloc; }

S4_vrcrotate_u2: reloc is S4_vrcrotate_u2_0 & S4_vrcrotate_u2_1 [ reloc = (S4_vrcrotate_u2_0 << 0) + (S4_vrcrotate_u2_1 << 1); ] { export *[const]:4 reloc; }

A2_paddit_s8: reloc is                       A2_paddit_s8_0 [ reloc = (((A2_paddit_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A2_paddit_s8: reloc is immext = 0xffffffff & A2_paddit_s8_0 [ reloc = A2_paddit_s8_0 << 0; ] { export *[const]:4 reloc; }

A2_paddif_s8: reloc is                       A2_paddif_s8_0 [ reloc = (((A2_paddif_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A2_paddif_s8: reloc is immext = 0xffffffff & A2_paddif_s8_0 [ reloc = A2_paddif_s8_0 << 0; ] { export *[const]:4 reloc; }

A2_padditnew_s8: reloc is                       A2_padditnew_s8_0 [ reloc = (((A2_padditnew_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A2_padditnew_s8: reloc is immext = 0xffffffff & A2_padditnew_s8_0 [ reloc = A2_padditnew_s8_0 << 0; ] { export *[const]:4 reloc; }

A2_paddifnew_s8: reloc is                       A2_paddifnew_s8_0 [ reloc = (((A2_paddifnew_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A2_paddifnew_s8: reloc is immext = 0xffffffff & A2_paddifnew_s8_0 [ reloc = A2_paddifnew_s8_0 << 0; ] { export *[const]:4 reloc; }

A2_addi_s16: reloc is                       A2_addi_s16_0 & A2_addi_s16_1 [ reloc = ((((A2_addi_s16_0 << 0) + (A2_addi_s16_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A2_addi_s16: reloc is immext = 0xffffffff & A2_addi_s16_0 & A2_addi_s16_1 [ reloc = (A2_addi_s16_0 << 0) + (A2_addi_s16_1 << 9); ] { export *[const]:4 reloc; }

C4_addipc_u6: reloc is                       C4_addipc_u6_0 [ reloc = (((C4_addipc_u6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
C4_addipc_u6: reloc is immext = 0xffffffff & C4_addipc_u6_0 [ reloc = C4_addipc_u6_0 << 0; ] { export *[const]:4 reloc; }

A2_tfrsi_s16: reloc is                       A2_tfrsi_s16_0 & A2_tfrsi_s16_1 & A2_tfrsi_s16_2 [ reloc = (((((A2_tfrsi_s16_0 << 0) + (A2_tfrsi_s16_1 << 9)) + (A2_tfrsi_s16_2 << 14)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A2_tfrsi_s16: reloc is immext = 0xffffffff & A2_tfrsi_s16_0 & A2_tfrsi_s16_1 & A2_tfrsi_s16_2 [ reloc = ((A2_tfrsi_s16_0 << 0) + (A2_tfrsi_s16_1 << 9)) + (A2_tfrsi_s16_2 << 14); ] { export *[const]:4 reloc; }

A4_combineri_s8: reloc is                       A4_combineri_s8_0 [ reloc = (((A4_combineri_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A4_combineri_s8: reloc is immext = 0xffffffff & A4_combineri_s8_0 [ reloc = A4_combineri_s8_0 << 0; ] { export *[const]:4 reloc; }

A4_combineir_s8: reloc is                       A4_combineir_s8_0 [ reloc = (((A4_combineir_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A4_combineir_s8: reloc is immext = 0xffffffff & A4_combineir_s8_0 [ reloc = A4_combineir_s8_0 << 0; ] { export *[const]:4 reloc; }

A2_combineii_s8: reloc is                       A2_combineii_s8_0 [ reloc = (((A2_combineii_s8_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A2_combineii_s8: reloc is immext = 0xffffffff & A2_combineii_s8_0 [ reloc = A2_combineii_s8_0 << 0; ] { export *[const]:4 reloc; }

A2_combineii_S8: reloc is A2_combineii_S8_0 & A2_combineii_S8_1 [ reloc = (A2_combineii_S8_0 << 0) + (A2_combineii_S8_1 << 1); ] { export *[const]:4 reloc; }

A4_combineii_s8: reloc is A4_combineii_s8_0 [ reloc = A4_combineii_s8_0 << 0; ] { export *[const]:4 reloc; }

A4_combineii_U6: reloc is                       A4_combineii_U6_0 & A4_combineii_U6_1 [ reloc = ((((A4_combineii_U6_0 << 0) + (A4_combineii_U6_1 << 1)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A4_combineii_U6: reloc is immext = 0xffffffff & A4_combineii_U6_0 & A4_combineii_U6_1 [ reloc = (A4_combineii_U6_0 << 0) + (A4_combineii_U6_1 << 1); ] { export *[const]:4 reloc; }

A2_tfril_u16: reloc is A2_tfril_u16_0 & A2_tfril_u16_1 [ reloc = (A2_tfril_u16_0 << 0) + (A2_tfril_u16_1 << 14); ] { export *[const]:4 reloc; }

A2_tfrih_u16: reloc is A2_tfrih_u16_0 & A2_tfrih_u16_1 [ reloc = (A2_tfrih_u16_0 << 0) + (A2_tfrih_u16_1 << 14); ] { export *[const]:4 reloc; }

S4_addaddi_s6: reloc is                       S4_addaddi_s6_0 & S4_addaddi_s6_1 & S4_addaddi_s6_2 [ reloc = (((((S4_addaddi_s6_0 << 0) + (S4_addaddi_s6_1 << 3)) + (S4_addaddi_s6_2 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_addaddi_s6: reloc is immext = 0xffffffff & S4_addaddi_s6_0 & S4_addaddi_s6_1 & S4_addaddi_s6_2 [ reloc = ((S4_addaddi_s6_0 << 0) + (S4_addaddi_s6_1 << 3)) + (S4_addaddi_s6_2 << 4); ] { export *[const]:4 reloc; }

S4_subaddi_s6: reloc is                       S4_subaddi_s6_0 & S4_subaddi_s6_1 & S4_subaddi_s6_2 [ reloc = (((((S4_subaddi_s6_0 << 0) + (S4_subaddi_s6_1 << 3)) + (S4_subaddi_s6_2 << 4)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_subaddi_s6: reloc is immext = 0xffffffff & S4_subaddi_s6_0 & S4_subaddi_s6_1 & S4_subaddi_s6_2 [ reloc = ((S4_subaddi_s6_0 << 0) + (S4_subaddi_s6_1 << 3)) + (S4_subaddi_s6_2 << 4); ] { export *[const]:4 reloc; }

S4_or_andix_s10: reloc is                       S4_or_andix_s10_0 & S4_or_andix_s10_1 [ reloc = ((((S4_or_andix_s10_0 << 0) + (S4_or_andix_s10_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_or_andix_s10: reloc is immext = 0xffffffff & S4_or_andix_s10_0 & S4_or_andix_s10_1 [ reloc = (S4_or_andix_s10_0 << 0) + (S4_or_andix_s10_1 << 9); ] { export *[const]:4 reloc; }

S4_or_andi_s10: reloc is                       S4_or_andi_s10_0 & S4_or_andi_s10_1 [ reloc = ((((S4_or_andi_s10_0 << 0) + (S4_or_andi_s10_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_or_andi_s10: reloc is immext = 0xffffffff & S4_or_andi_s10_0 & S4_or_andi_s10_1 [ reloc = (S4_or_andi_s10_0 << 0) + (S4_or_andi_s10_1 << 9); ] { export *[const]:4 reloc; }

S4_or_ori_s10: reloc is                       S4_or_ori_s10_0 & S4_or_ori_s10_1 [ reloc = ((((S4_or_ori_s10_0 << 0) + (S4_or_ori_s10_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_or_ori_s10: reloc is immext = 0xffffffff & S4_or_ori_s10_0 & S4_or_ori_s10_1 [ reloc = (S4_or_ori_s10_0 << 0) + (S4_or_ori_s10_1 << 9); ] { export *[const]:4 reloc; }

A2_subri_s10: reloc is                       A2_subri_s10_0 & A2_subri_s10_1 [ reloc = ((((A2_subri_s10_0 << 0) + (A2_subri_s10_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A2_subri_s10: reloc is immext = 0xffffffff & A2_subri_s10_0 & A2_subri_s10_1 [ reloc = (A2_subri_s10_0 << 0) + (A2_subri_s10_1 << 9); ] { export *[const]:4 reloc; }

A2_andir_s10: reloc is                       A2_andir_s10_0 & A2_andir_s10_1 [ reloc = ((((A2_andir_s10_0 << 0) + (A2_andir_s10_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A2_andir_s10: reloc is immext = 0xffffffff & A2_andir_s10_0 & A2_andir_s10_1 [ reloc = (A2_andir_s10_0 << 0) + (A2_andir_s10_1 << 9); ] { export *[const]:4 reloc; }

A2_orir_s10: reloc is                       A2_orir_s10_0 & A2_orir_s10_1 [ reloc = ((((A2_orir_s10_0 << 0) + (A2_orir_s10_1 << 9)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
A2_orir_s10: reloc is immext = 0xffffffff & A2_orir_s10_0 & A2_orir_s10_1 [ reloc = (A2_orir_s10_0 << 0) + (A2_orir_s10_1 << 9); ] { export *[const]:4 reloc; }

A4_round_ri_u5: reloc is A4_round_ri_u5_0 [ reloc = A4_round_ri_u5_0 << 0; ] { export *[const]:4 reloc; }

A4_round_ri_sat_u5: reloc is A4_round_ri_sat_u5_0 [ reloc = A4_round_ri_sat_u5_0 << 0; ] { export *[const]:4 reloc; }

A4_cround_ri_u5: reloc is A4_cround_ri_u5_0 [ reloc = A4_cround_ri_u5_0 << 0; ] { export *[const]:4 reloc; }

A7_croundd_ri_u6: reloc is A7_croundd_ri_u6_0 [ reloc = A7_croundd_ri_u6_0 << 0; ] { export *[const]:4 reloc; }

A7_clip_u5: reloc is A7_clip_u5_0 [ reloc = A7_clip_u5_0 << 0; ] { export *[const]:4 reloc; }

A7_vclip_u5: reloc is A7_vclip_u5_0 [ reloc = A7_vclip_u5_0 << 0; ] { export *[const]:4 reloc; }

F2_sfclass_u5: reloc is F2_sfclass_u5_0 [ reloc = F2_sfclass_u5_0 << 0; ] { export *[const]:4 reloc; }

F2_sfimm_p_u10: reloc is F2_sfimm_p_u10_0 & F2_sfimm_p_u10_1 [ reloc = (F2_sfimm_p_u10_0 << 0) + (F2_sfimm_p_u10_1 << 9); ] { export *[const]:4 reloc; }

F2_sfimm_n_u10: reloc is F2_sfimm_n_u10_0 & F2_sfimm_n_u10_1 [ reloc = (F2_sfimm_n_u10_0 << 0) + (F2_sfimm_n_u10_1 << 9); ] { export *[const]:4 reloc; }

F2_dfclass_u5: reloc is F2_dfclass_u5_0 [ reloc = F2_dfclass_u5_0 << 0; ] { export *[const]:4 reloc; }

F2_dfimm_p_u10: reloc is F2_dfimm_p_u10_0 & F2_dfimm_p_u10_1 [ reloc = (F2_dfimm_p_u10_0 << 0) + (F2_dfimm_p_u10_1 << 9); ] { export *[const]:4 reloc; }

F2_dfimm_n_u10: reloc is F2_dfimm_n_u10_0 & F2_dfimm_n_u10_1 [ reloc = (F2_dfimm_n_u10_0 << 0) + (F2_dfimm_n_u10_1 << 9); ] { export *[const]:4 reloc; }

S2_asr_i_r_u5: reloc is S2_asr_i_r_u5_0 [ reloc = S2_asr_i_r_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_lsr_i_r_u5: reloc is S2_lsr_i_r_u5_0 [ reloc = S2_lsr_i_r_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asl_i_r_u5: reloc is S2_asl_i_r_u5_0 [ reloc = S2_asl_i_r_u5_0 << 0; ] { export *[const]:4 reloc; }

S6_rol_i_r_u5: reloc is S6_rol_i_r_u5_0 [ reloc = S6_rol_i_r_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asr_i_p_u6: reloc is S2_asr_i_p_u6_0 [ reloc = S2_asr_i_p_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_lsr_i_p_u6: reloc is S2_lsr_i_p_u6_0 [ reloc = S2_lsr_i_p_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_asl_i_p_u6: reloc is S2_asl_i_p_u6_0 [ reloc = S2_asl_i_p_u6_0 << 0; ] { export *[const]:4 reloc; }

S6_rol_i_p_u6: reloc is S6_rol_i_p_u6_0 [ reloc = S6_rol_i_p_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_asr_i_r_acc_u5: reloc is S2_asr_i_r_acc_u5_0 [ reloc = S2_asr_i_r_acc_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_lsr_i_r_acc_u5: reloc is S2_lsr_i_r_acc_u5_0 [ reloc = S2_lsr_i_r_acc_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asl_i_r_acc_u5: reloc is S2_asl_i_r_acc_u5_0 [ reloc = S2_asl_i_r_acc_u5_0 << 0; ] { export *[const]:4 reloc; }

S6_rol_i_r_acc_u5: reloc is S6_rol_i_r_acc_u5_0 [ reloc = S6_rol_i_r_acc_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asr_i_p_acc_u6: reloc is S2_asr_i_p_acc_u6_0 [ reloc = S2_asr_i_p_acc_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_lsr_i_p_acc_u6: reloc is S2_lsr_i_p_acc_u6_0 [ reloc = S2_lsr_i_p_acc_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_asl_i_p_acc_u6: reloc is S2_asl_i_p_acc_u6_0 [ reloc = S2_asl_i_p_acc_u6_0 << 0; ] { export *[const]:4 reloc; }

S6_rol_i_p_acc_u6: reloc is S6_rol_i_p_acc_u6_0 [ reloc = S6_rol_i_p_acc_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_asr_i_r_nac_u5: reloc is S2_asr_i_r_nac_u5_0 [ reloc = S2_asr_i_r_nac_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_lsr_i_r_nac_u5: reloc is S2_lsr_i_r_nac_u5_0 [ reloc = S2_lsr_i_r_nac_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asl_i_r_nac_u5: reloc is S2_asl_i_r_nac_u5_0 [ reloc = S2_asl_i_r_nac_u5_0 << 0; ] { export *[const]:4 reloc; }

S6_rol_i_r_nac_u5: reloc is S6_rol_i_r_nac_u5_0 [ reloc = S6_rol_i_r_nac_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asr_i_p_nac_u6: reloc is S2_asr_i_p_nac_u6_0 [ reloc = S2_asr_i_p_nac_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_lsr_i_p_nac_u6: reloc is S2_lsr_i_p_nac_u6_0 [ reloc = S2_lsr_i_p_nac_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_asl_i_p_nac_u6: reloc is S2_asl_i_p_nac_u6_0 [ reloc = S2_asl_i_p_nac_u6_0 << 0; ] { export *[const]:4 reloc; }

S6_rol_i_p_nac_u6: reloc is S6_rol_i_p_nac_u6_0 [ reloc = S6_rol_i_p_nac_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_lsr_i_r_xacc_u5: reloc is S2_lsr_i_r_xacc_u5_0 [ reloc = S2_lsr_i_r_xacc_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asl_i_r_xacc_u5: reloc is S2_asl_i_r_xacc_u5_0 [ reloc = S2_asl_i_r_xacc_u5_0 << 0; ] { export *[const]:4 reloc; }

S6_rol_i_r_xacc_u5: reloc is S6_rol_i_r_xacc_u5_0 [ reloc = S6_rol_i_r_xacc_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_lsr_i_p_xacc_u6: reloc is S2_lsr_i_p_xacc_u6_0 [ reloc = S2_lsr_i_p_xacc_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_asl_i_p_xacc_u6: reloc is S2_asl_i_p_xacc_u6_0 [ reloc = S2_asl_i_p_xacc_u6_0 << 0; ] { export *[const]:4 reloc; }

S6_rol_i_p_xacc_u6: reloc is S6_rol_i_p_xacc_u6_0 [ reloc = S6_rol_i_p_xacc_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_asr_i_r_and_u5: reloc is S2_asr_i_r_and_u5_0 [ reloc = S2_asr_i_r_and_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_lsr_i_r_and_u5: reloc is S2_lsr_i_r_and_u5_0 [ reloc = S2_lsr_i_r_and_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asl_i_r_and_u5: reloc is S2_asl_i_r_and_u5_0 [ reloc = S2_asl_i_r_and_u5_0 << 0; ] { export *[const]:4 reloc; }

S6_rol_i_r_and_u5: reloc is S6_rol_i_r_and_u5_0 [ reloc = S6_rol_i_r_and_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asr_i_r_or_u5: reloc is S2_asr_i_r_or_u5_0 [ reloc = S2_asr_i_r_or_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_lsr_i_r_or_u5: reloc is S2_lsr_i_r_or_u5_0 [ reloc = S2_lsr_i_r_or_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asl_i_r_or_u5: reloc is S2_asl_i_r_or_u5_0 [ reloc = S2_asl_i_r_or_u5_0 << 0; ] { export *[const]:4 reloc; }

S6_rol_i_r_or_u5: reloc is S6_rol_i_r_or_u5_0 [ reloc = S6_rol_i_r_or_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asr_i_p_and_u6: reloc is S2_asr_i_p_and_u6_0 [ reloc = S2_asr_i_p_and_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_lsr_i_p_and_u6: reloc is S2_lsr_i_p_and_u6_0 [ reloc = S2_lsr_i_p_and_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_asl_i_p_and_u6: reloc is S2_asl_i_p_and_u6_0 [ reloc = S2_asl_i_p_and_u6_0 << 0; ] { export *[const]:4 reloc; }

S6_rol_i_p_and_u6: reloc is S6_rol_i_p_and_u6_0 [ reloc = S6_rol_i_p_and_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_asr_i_p_or_u6: reloc is S2_asr_i_p_or_u6_0 [ reloc = S2_asr_i_p_or_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_lsr_i_p_or_u6: reloc is S2_lsr_i_p_or_u6_0 [ reloc = S2_lsr_i_p_or_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_asl_i_p_or_u6: reloc is S2_asl_i_p_or_u6_0 [ reloc = S2_asl_i_p_or_u6_0 << 0; ] { export *[const]:4 reloc; }

S6_rol_i_p_or_u6: reloc is S6_rol_i_p_or_u6_0 [ reloc = S6_rol_i_p_or_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_asl_i_r_sat_u5: reloc is S2_asl_i_r_sat_u5_0 [ reloc = S2_asl_i_r_sat_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asr_i_r_rnd_u5: reloc is S2_asr_i_r_rnd_u5_0 [ reloc = S2_asr_i_r_rnd_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asr_i_p_rnd_u6: reloc is S2_asr_i_p_rnd_u6_0 [ reloc = S2_asr_i_p_rnd_u6_0 << 0; ] { export *[const]:4 reloc; }

S4_lsli_s6: reloc is S4_lsli_s6_0 & S4_lsli_s6_1 [ reloc = (S4_lsli_s6_0 << 0) + (S4_lsli_s6_1 << 1); ] { export *[const]:4 reloc; }

S2_addasl_rrri_u3: reloc is S2_addasl_rrri_u3_0 [ reloc = S2_addasl_rrri_u3_0 << 0; ] { export *[const]:4 reloc; }

S4_andi_asl_ri_u8: reloc is                       S4_andi_asl_ri_u8_0 & S4_andi_asl_ri_u8_1 & S4_andi_asl_ri_u8_2 & S4_andi_asl_ri_u8_3 [ reloc = ((((((S4_andi_asl_ri_u8_0 << 0) + (S4_andi_asl_ri_u8_1 << 1)) + (S4_andi_asl_ri_u8_2 << 4)) + (S4_andi_asl_ri_u8_3 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_andi_asl_ri_u8: reloc is immext = 0xffffffff & S4_andi_asl_ri_u8_0 & S4_andi_asl_ri_u8_1 & S4_andi_asl_ri_u8_2 & S4_andi_asl_ri_u8_3 [ reloc = (((S4_andi_asl_ri_u8_0 << 0) + (S4_andi_asl_ri_u8_1 << 1)) + (S4_andi_asl_ri_u8_2 << 4)) + (S4_andi_asl_ri_u8_3 << 5); ] { export *[const]:4 reloc; }

S4_andi_asl_ri_U5: reloc is S4_andi_asl_ri_U5_0 [ reloc = S4_andi_asl_ri_U5_0 << 0; ] { export *[const]:4 reloc; }

S4_ori_asl_ri_u8: reloc is                       S4_ori_asl_ri_u8_0 & S4_ori_asl_ri_u8_1 & S4_ori_asl_ri_u8_2 & S4_ori_asl_ri_u8_3 [ reloc = ((((((S4_ori_asl_ri_u8_0 << 0) + (S4_ori_asl_ri_u8_1 << 1)) + (S4_ori_asl_ri_u8_2 << 4)) + (S4_ori_asl_ri_u8_3 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_ori_asl_ri_u8: reloc is immext = 0xffffffff & S4_ori_asl_ri_u8_0 & S4_ori_asl_ri_u8_1 & S4_ori_asl_ri_u8_2 & S4_ori_asl_ri_u8_3 [ reloc = (((S4_ori_asl_ri_u8_0 << 0) + (S4_ori_asl_ri_u8_1 << 1)) + (S4_ori_asl_ri_u8_2 << 4)) + (S4_ori_asl_ri_u8_3 << 5); ] { export *[const]:4 reloc; }

S4_ori_asl_ri_U5: reloc is S4_ori_asl_ri_U5_0 [ reloc = S4_ori_asl_ri_U5_0 << 0; ] { export *[const]:4 reloc; }

S4_addi_asl_ri_u8: reloc is                       S4_addi_asl_ri_u8_0 & S4_addi_asl_ri_u8_1 & S4_addi_asl_ri_u8_2 & S4_addi_asl_ri_u8_3 [ reloc = ((((((S4_addi_asl_ri_u8_0 << 0) + (S4_addi_asl_ri_u8_1 << 1)) + (S4_addi_asl_ri_u8_2 << 4)) + (S4_addi_asl_ri_u8_3 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_addi_asl_ri_u8: reloc is immext = 0xffffffff & S4_addi_asl_ri_u8_0 & S4_addi_asl_ri_u8_1 & S4_addi_asl_ri_u8_2 & S4_addi_asl_ri_u8_3 [ reloc = (((S4_addi_asl_ri_u8_0 << 0) + (S4_addi_asl_ri_u8_1 << 1)) + (S4_addi_asl_ri_u8_2 << 4)) + (S4_addi_asl_ri_u8_3 << 5); ] { export *[const]:4 reloc; }

S4_addi_asl_ri_U5: reloc is S4_addi_asl_ri_U5_0 [ reloc = S4_addi_asl_ri_U5_0 << 0; ] { export *[const]:4 reloc; }

S4_subi_asl_ri_u8: reloc is                       S4_subi_asl_ri_u8_0 & S4_subi_asl_ri_u8_1 & S4_subi_asl_ri_u8_2 & S4_subi_asl_ri_u8_3 [ reloc = ((((((S4_subi_asl_ri_u8_0 << 0) + (S4_subi_asl_ri_u8_1 << 1)) + (S4_subi_asl_ri_u8_2 << 4)) + (S4_subi_asl_ri_u8_3 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_subi_asl_ri_u8: reloc is immext = 0xffffffff & S4_subi_asl_ri_u8_0 & S4_subi_asl_ri_u8_1 & S4_subi_asl_ri_u8_2 & S4_subi_asl_ri_u8_3 [ reloc = (((S4_subi_asl_ri_u8_0 << 0) + (S4_subi_asl_ri_u8_1 << 1)) + (S4_subi_asl_ri_u8_2 << 4)) + (S4_subi_asl_ri_u8_3 << 5); ] { export *[const]:4 reloc; }

S4_subi_asl_ri_U5: reloc is S4_subi_asl_ri_U5_0 [ reloc = S4_subi_asl_ri_U5_0 << 0; ] { export *[const]:4 reloc; }

S4_andi_lsr_ri_u8: reloc is                       S4_andi_lsr_ri_u8_0 & S4_andi_lsr_ri_u8_1 & S4_andi_lsr_ri_u8_2 & S4_andi_lsr_ri_u8_3 [ reloc = ((((((S4_andi_lsr_ri_u8_0 << 0) + (S4_andi_lsr_ri_u8_1 << 1)) + (S4_andi_lsr_ri_u8_2 << 4)) + (S4_andi_lsr_ri_u8_3 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_andi_lsr_ri_u8: reloc is immext = 0xffffffff & S4_andi_lsr_ri_u8_0 & S4_andi_lsr_ri_u8_1 & S4_andi_lsr_ri_u8_2 & S4_andi_lsr_ri_u8_3 [ reloc = (((S4_andi_lsr_ri_u8_0 << 0) + (S4_andi_lsr_ri_u8_1 << 1)) + (S4_andi_lsr_ri_u8_2 << 4)) + (S4_andi_lsr_ri_u8_3 << 5); ] { export *[const]:4 reloc; }

S4_andi_lsr_ri_U5: reloc is S4_andi_lsr_ri_U5_0 [ reloc = S4_andi_lsr_ri_U5_0 << 0; ] { export *[const]:4 reloc; }

S4_ori_lsr_ri_u8: reloc is                       S4_ori_lsr_ri_u8_0 & S4_ori_lsr_ri_u8_1 & S4_ori_lsr_ri_u8_2 & S4_ori_lsr_ri_u8_3 [ reloc = ((((((S4_ori_lsr_ri_u8_0 << 0) + (S4_ori_lsr_ri_u8_1 << 1)) + (S4_ori_lsr_ri_u8_2 << 4)) + (S4_ori_lsr_ri_u8_3 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_ori_lsr_ri_u8: reloc is immext = 0xffffffff & S4_ori_lsr_ri_u8_0 & S4_ori_lsr_ri_u8_1 & S4_ori_lsr_ri_u8_2 & S4_ori_lsr_ri_u8_3 [ reloc = (((S4_ori_lsr_ri_u8_0 << 0) + (S4_ori_lsr_ri_u8_1 << 1)) + (S4_ori_lsr_ri_u8_2 << 4)) + (S4_ori_lsr_ri_u8_3 << 5); ] { export *[const]:4 reloc; }

S4_ori_lsr_ri_U5: reloc is S4_ori_lsr_ri_U5_0 [ reloc = S4_ori_lsr_ri_U5_0 << 0; ] { export *[const]:4 reloc; }

S4_addi_lsr_ri_u8: reloc is                       S4_addi_lsr_ri_u8_0 & S4_addi_lsr_ri_u8_1 & S4_addi_lsr_ri_u8_2 & S4_addi_lsr_ri_u8_3 [ reloc = ((((((S4_addi_lsr_ri_u8_0 << 0) + (S4_addi_lsr_ri_u8_1 << 1)) + (S4_addi_lsr_ri_u8_2 << 4)) + (S4_addi_lsr_ri_u8_3 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_addi_lsr_ri_u8: reloc is immext = 0xffffffff & S4_addi_lsr_ri_u8_0 & S4_addi_lsr_ri_u8_1 & S4_addi_lsr_ri_u8_2 & S4_addi_lsr_ri_u8_3 [ reloc = (((S4_addi_lsr_ri_u8_0 << 0) + (S4_addi_lsr_ri_u8_1 << 1)) + (S4_addi_lsr_ri_u8_2 << 4)) + (S4_addi_lsr_ri_u8_3 << 5); ] { export *[const]:4 reloc; }

S4_addi_lsr_ri_U5: reloc is S4_addi_lsr_ri_U5_0 [ reloc = S4_addi_lsr_ri_U5_0 << 0; ] { export *[const]:4 reloc; }

S4_subi_lsr_ri_u8: reloc is                       S4_subi_lsr_ri_u8_0 & S4_subi_lsr_ri_u8_1 & S4_subi_lsr_ri_u8_2 & S4_subi_lsr_ri_u8_3 [ reloc = ((((((S4_subi_lsr_ri_u8_0 << 0) + (S4_subi_lsr_ri_u8_1 << 1)) + (S4_subi_lsr_ri_u8_2 << 4)) + (S4_subi_lsr_ri_u8_3 << 5)) & 0b111111) | immext); ] { export *[const]:4 reloc; }
S4_subi_lsr_ri_u8: reloc is immext = 0xffffffff & S4_subi_lsr_ri_u8_0 & S4_subi_lsr_ri_u8_1 & S4_subi_lsr_ri_u8_2 & S4_subi_lsr_ri_u8_3 [ reloc = (((S4_subi_lsr_ri_u8_0 << 0) + (S4_subi_lsr_ri_u8_1 << 1)) + (S4_subi_lsr_ri_u8_2 << 4)) + (S4_subi_lsr_ri_u8_3 << 5); ] { export *[const]:4 reloc; }

S4_subi_lsr_ri_U5: reloc is S4_subi_lsr_ri_U5_0 [ reloc = S4_subi_lsr_ri_U5_0 << 0; ] { export *[const]:4 reloc; }

S2_valignib_u3: reloc is S2_valignib_u3_0 [ reloc = S2_valignib_u3_0 << 0; ] { export *[const]:4 reloc; }

S2_vspliceib_u3: reloc is S2_vspliceib_u3_0 [ reloc = S2_vspliceib_u3_0 << 0; ] { export *[const]:4 reloc; }

S2_insert_u5: reloc is S2_insert_u5_0 [ reloc = S2_insert_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_insert_U5: reloc is S2_insert_U5_0 & S2_insert_U5_1 [ reloc = (S2_insert_U5_0 << 0) + (S2_insert_U5_1 << 3); ] { export *[const]:4 reloc; }

S2_tableidxb_u4: reloc is S2_tableidxb_u4_0 & S2_tableidxb_u4_1 [ reloc = (S2_tableidxb_u4_0 << 0) + (S2_tableidxb_u4_1 << 3); ] { export *[const]:4 reloc; }

S2_tableidxb_S6: reloc is S2_tableidxb_S6_0 [ reloc = S2_tableidxb_S6_0 << 0; ] { export *[const]:4 reloc; }

S2_tableidxh_u4: reloc is S2_tableidxh_u4_0 & S2_tableidxh_u4_1 [ reloc = (S2_tableidxh_u4_0 << 0) + (S2_tableidxh_u4_1 << 3); ] { export *[const]:4 reloc; }

S2_tableidxh_S6: reloc is S2_tableidxh_S6_0 [ reloc = S2_tableidxh_S6_0 << 0; ] { export *[const]:4 reloc; }

S2_tableidxw_u4: reloc is S2_tableidxw_u4_0 & S2_tableidxw_u4_1 [ reloc = (S2_tableidxw_u4_0 << 0) + (S2_tableidxw_u4_1 << 3); ] { export *[const]:4 reloc; }

S2_tableidxw_S6: reloc is S2_tableidxw_S6_0 [ reloc = S2_tableidxw_S6_0 << 0; ] { export *[const]:4 reloc; }

S2_tableidxd_u4: reloc is S2_tableidxd_u4_0 & S2_tableidxd_u4_1 [ reloc = (S2_tableidxd_u4_0 << 0) + (S2_tableidxd_u4_1 << 3); ] { export *[const]:4 reloc; }

S2_tableidxd_S6: reloc is S2_tableidxd_S6_0 [ reloc = S2_tableidxd_S6_0 << 0; ] { export *[const]:4 reloc; }

A4_bitspliti_u5: reloc is A4_bitspliti_u5_0 [ reloc = A4_bitspliti_u5_0 << 0; ] { export *[const]:4 reloc; }

S4_extract_u5: reloc is S4_extract_u5_0 [ reloc = S4_extract_u5_0 << 0; ] { export *[const]:4 reloc; }

S4_extract_U5: reloc is S4_extract_U5_0 & S4_extract_U5_1 [ reloc = (S4_extract_U5_0 << 0) + (S4_extract_U5_1 << 3); ] { export *[const]:4 reloc; }

S2_extractu_u5: reloc is S2_extractu_u5_0 [ reloc = S2_extractu_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_extractu_U5: reloc is S2_extractu_U5_0 & S2_extractu_U5_1 [ reloc = (S2_extractu_U5_0 << 0) + (S2_extractu_U5_1 << 3); ] { export *[const]:4 reloc; }

S2_insertp_u6: reloc is S2_insertp_u6_0 [ reloc = S2_insertp_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_insertp_U6: reloc is S2_insertp_U6_0 & S2_insertp_U6_1 [ reloc = (S2_insertp_U6_0 << 0) + (S2_insertp_U6_1 << 3); ] { export *[const]:4 reloc; }

S4_extractp_u6: reloc is S4_extractp_u6_0 [ reloc = S4_extractp_u6_0 << 0; ] { export *[const]:4 reloc; }

S4_extractp_U6: reloc is S4_extractp_U6_0 & S4_extractp_U6_1 [ reloc = (S4_extractp_U6_0 << 0) + (S4_extractp_U6_1 << 3); ] { export *[const]:4 reloc; }

S2_extractup_u6: reloc is S2_extractup_u6_0 [ reloc = S2_extractup_u6_0 << 0; ] { export *[const]:4 reloc; }

S2_extractup_U6: reloc is S2_extractup_U6_0 & S2_extractup_U6_1 [ reloc = (S2_extractup_U6_0 << 0) + (S2_extractup_U6_1 << 3); ] { export *[const]:4 reloc; }

S2_mask_u5: reloc is S2_mask_u5_0 [ reloc = S2_mask_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_mask_U5: reloc is S2_mask_U5_0 & S2_mask_U5_1 [ reloc = (S2_mask_U5_0 << 0) + (S2_mask_U5_1 << 3); ] { export *[const]:4 reloc; }

S2_tstbit_i_u5: reloc is S2_tstbit_i_u5_0 [ reloc = S2_tstbit_i_u5_0 << 0; ] { export *[const]:4 reloc; }

S4_ntstbit_i_u5: reloc is S4_ntstbit_i_u5_0 [ reloc = S4_ntstbit_i_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_setbit_i_u5: reloc is S2_setbit_i_u5_0 [ reloc = S2_setbit_i_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_togglebit_i_u5: reloc is S2_togglebit_i_u5_0 [ reloc = S2_togglebit_i_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_clrbit_i_u5: reloc is S2_clrbit_i_u5_0 [ reloc = S2_clrbit_i_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asr_i_vh_u4: reloc is S2_asr_i_vh_u4_0 [ reloc = S2_asr_i_vh_u4_0 << 0; ] { export *[const]:4 reloc; }

S2_lsr_i_vh_u4: reloc is S2_lsr_i_vh_u4_0 [ reloc = S2_lsr_i_vh_u4_0 << 0; ] { export *[const]:4 reloc; }

S2_asl_i_vh_u4: reloc is S2_asl_i_vh_u4_0 [ reloc = S2_asl_i_vh_u4_0 << 0; ] { export *[const]:4 reloc; }

S5_asrhub_rnd_sat_u4: reloc is S5_asrhub_rnd_sat_u4_0 [ reloc = S5_asrhub_rnd_sat_u4_0 << 0; ] { export *[const]:4 reloc; }

S5_asrhub_sat_u4: reloc is S5_asrhub_sat_u4_0 [ reloc = S5_asrhub_sat_u4_0 << 0; ] { export *[const]:4 reloc; }

S5_vasrhrnd_u4: reloc is S5_vasrhrnd_u4_0 [ reloc = S5_vasrhrnd_u4_0 << 0; ] { export *[const]:4 reloc; }

S2_asr_i_vw_u5: reloc is S2_asr_i_vw_u5_0 [ reloc = S2_asr_i_vw_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asr_i_svw_trun_u5: reloc is S2_asr_i_svw_trun_u5_0 [ reloc = S2_asr_i_svw_trun_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_lsr_i_vw_u5: reloc is S2_lsr_i_vw_u5_0 [ reloc = S2_lsr_i_vw_u5_0 << 0; ] { export *[const]:4 reloc; }

S2_asl_i_vw_u5: reloc is S2_asl_i_vw_u5_0 [ reloc = S2_asl_i_vw_u5_0 << 0; ] { export *[const]:4 reloc; }

S4_clbaddi_s6: reloc is S4_clbaddi_s6_0 [ reloc = S4_clbaddi_s6_0 << 0; ] { export *[const]:4 reloc; }

S4_clbpaddi_s6: reloc is S4_clbpaddi_s6_0 [ reloc = S4_clbpaddi_s6_0 << 0; ] { export *[const]:4 reloc; }

J2_trap0_u8: reloc is J2_trap0_u8_0 & J2_trap0_u8_1 [ reloc = (J2_trap0_u8_0 << 0) + (J2_trap0_u8_1 << 3); ] { export *[const]:4 reloc; }

J2_trap1_u8: reloc is J2_trap1_u8_0 & J2_trap1_u8_1 [ reloc = (J2_trap1_u8_0 << 0) + (J2_trap1_u8_1 << 3); ] { export *[const]:4 reloc; }

J2_pause_u8: reloc is J2_pause_u8_0 & J2_pause_u8_1 [ reloc = (J2_pause_u8_0 << 0) + (J2_pause_u8_1 << 3); ] { export *[const]:4 reloc; }

Y2_dcfetchbo_u11_3: reloc is Y2_dcfetchbo_u11_3_0 [ reloc = (Y2_dcfetchbo_u11_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

SA1_addi_s7: reloc is                       SA1_addi_s7_0 [ reloc = (((SA1_addi_s7_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
SA1_addi_s7: reloc is immext = 0xffffffff & SA1_addi_s7_0 [ reloc = SA1_addi_s7_0 << 0; ] { export *[const]:4 reloc; }

SA1_seti_u6: reloc is                       SA1_seti_u6_0 [ reloc = (((SA1_seti_u6_0 << 0) & 0b111111) | immext); ] { export *[const]:4 reloc; }
SA1_seti_u6: reloc is immext = 0xffffffff & SA1_seti_u6_0 [ reloc = SA1_seti_u6_0 << 0; ] { export *[const]:4 reloc; }

SA1_addsp_u6_2: reloc is SA1_addsp_u6_2_0 [ reloc = (SA1_addsp_u6_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

SA1_combine0i_u2: reloc is SA1_combine0i_u2_0 [ reloc = SA1_combine0i_u2_0 << 0; ] { export *[const]:4 reloc; }

SA1_combine1i_u2: reloc is SA1_combine1i_u2_0 [ reloc = SA1_combine1i_u2_0 << 0; ] { export *[const]:4 reloc; }

SA1_combine2i_u2: reloc is SA1_combine2i_u2_0 [ reloc = SA1_combine2i_u2_0 << 0; ] { export *[const]:4 reloc; }

SA1_combine3i_u2: reloc is SA1_combine3i_u2_0 [ reloc = SA1_combine3i_u2_0 << 0; ] { export *[const]:4 reloc; }

SA1_cmpeqi_u2: reloc is SA1_cmpeqi_u2_0 [ reloc = SA1_cmpeqi_u2_0 << 0; ] { export *[const]:4 reloc; }

SL1_loadri_io_u4_2: reloc is SL1_loadri_io_u4_2_0 [ reloc = (SL1_loadri_io_u4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

SL1_loadrub_io_u4_0: reloc is SL1_loadrub_io_u4_0_0 [ reloc = SL1_loadrub_io_u4_0_0 << 0; ] { export *[const]:4 reloc; }

SL2_loadrh_io_u3_1: reloc is SL2_loadrh_io_u3_1_0 [ reloc = (SL2_loadrh_io_u3_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

SL2_loadruh_io_u3_1: reloc is SL2_loadruh_io_u3_1_0 [ reloc = (SL2_loadruh_io_u3_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

SL2_loadrb_io_u3_0: reloc is SL2_loadrb_io_u3_0_0 [ reloc = SL2_loadrb_io_u3_0_0 << 0; ] { export *[const]:4 reloc; }

SL2_loadri_sp_u5_2: reloc is SL2_loadri_sp_u5_2_0 [ reloc = (SL2_loadri_sp_u5_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

SL2_loadrd_sp_u5_3: reloc is SL2_loadrd_sp_u5_3_0 [ reloc = (SL2_loadrd_sp_u5_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

SS1_storew_io_u4_2: reloc is SS1_storew_io_u4_2_0 [ reloc = (SS1_storew_io_u4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

SS1_storeb_io_u4_0: reloc is SS1_storeb_io_u4_0_0 [ reloc = SS1_storeb_io_u4_0_0 << 0; ] { export *[const]:4 reloc; }

SS2_storeh_io_u3_1: reloc is SS2_storeh_io_u3_1_0 [ reloc = (SS2_storeh_io_u3_1_0 << 0) << 1; ] { export *[const]:4 reloc; }

SS2_stored_sp_s6_3: reloc is SS2_stored_sp_s6_3_0 [ reloc = (SS2_stored_sp_s6_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

SS2_storew_sp_u5_2: reloc is SS2_storew_sp_u5_2_0 [ reloc = (SS2_storew_sp_u5_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

SS2_storewi0_u4_2: reloc is SS2_storewi0_u4_2_0 [ reloc = (SS2_storewi0_u4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

SS2_storebi0_u4_0: reloc is SS2_storebi0_u4_0_0 [ reloc = SS2_storebi0_u4_0_0 << 0; ] { export *[const]:4 reloc; }

SS2_storewi1_u4_2: reloc is SS2_storewi1_u4_2_0 [ reloc = (SS2_storewi1_u4_2_0 << 0) << 2; ] { export *[const]:4 reloc; }

SS2_storebi1_u4_0: reloc is SS2_storebi1_u4_0_0 [ reloc = SS2_storebi1_u4_0_0 << 0; ] { export *[const]:4 reloc; }

SS2_allocframe_u5_3: reloc is SS2_allocframe_u5_3_0 [ reloc = (SS2_allocframe_u5_3_0 << 0) << 3; ] { export *[const]:4 reloc; }

dotnewreg: reloc is hasnew = 1 [ reloc = dotnew * 4; ] { export *[register]:4 reloc; }

:^instruction is instruction & phase = 0 & endloop=0 [ phase = 1; ] {
  build instruction;
}

:^instruction is instruction & phase = 0 & endloop=1 [ phase = 1; ] {
  build instruction;
  local tmp0:1;
  tmp0 = zext(C8[8,2]);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  local tmp3:1;
  tmp3 = zext(C8[8,2]);
  local tmp4:4;
  tmp4 = 2;
  local tmp5:4;
  tmp5 = zext(tmp3);
  local tmp6:1;
  tmp6 = tmp5 s>= tmp4;
  local tmp7:1;
  tmp7 = tmp6;
  if (tmp7) goto <t_branch_9>;
  goto <f_branch_9>;
<t_branch_9>
  goto <done_9>;
<f_branch_9>
  local tmp9:1;
  tmp9 = zext(C8[8,2]);
  local tmp10:4;
  tmp10 = 1;
  local tmp11:4;
  tmp11 = zext(tmp9);
  local tmp12:1;
  tmp12 = tmp11 == tmp10;
  local tmp13:1;
  tmp13 = tmp12;
  if (tmp13) goto <t_branch_15>;
  goto <done_15>;
<t_branch_15>
  local tmp15:4;
  tmp15 = 255;
  P3 = tmp15:1;
  goto <done_15>;
<done_15>
<done_9>
  local tmp16:1;
  tmp16 = zext(C8[8,2]);
  local tmp17:4;
  tmp17 = 1;
  local tmp18:4;
  tmp18 = zext(tmp16);
  local tmp19:4;
  tmp19 = tmp18 - tmp17;
  C8[8,2] = tmp19;
  goto <done_3>;
<done_3>
  local tmp20:4;
  tmp20 = 1;
  local tmp21:1;
  tmp21 = C1 s> tmp20;
  local tmp22:1;
  tmp22 = tmp21;
  if (tmp22) goto <t_branch_24>;
  goto <done_24>;
<t_branch_24>
  goto [C0];
  local tmp24:4;
  tmp24 = 1;
  local tmp25:4;
  tmp25 = C1 - tmp24;
  C1 = tmp25;
  goto <done_24>;
<done_24>
}

:^instruction is instruction & phase = 0 & endloop=2 [ phase = 1; ] {
  build instruction;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:1;
  tmp1 = C3 s> tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto [C2];
  local tmp4:4;
  tmp4 = 1;
  local tmp5:4;
  tmp5 = C3 - tmp4;
  C3 = tmp5;
  goto <done_4>;
<done_4>
}

:^instruction is instruction & phase = 0 & endloop=3 [ phase = 1; ] {
  build instruction;
  local tmp0:1;
  tmp0 = zext(C8[8,2]);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  local tmp3:1;
  tmp3 = zext(C8[8,2]);
  local tmp4:4;
  tmp4 = 2;
  local tmp5:4;
  tmp5 = zext(tmp3);
  local tmp6:1;
  tmp6 = tmp5 s>= tmp4;
  local tmp7:1;
  tmp7 = tmp6;
  if (tmp7) goto <t_branch_9>;
  goto <f_branch_9>;
<t_branch_9>
  goto <done_9>;
<f_branch_9>
  local tmp9:1;
  tmp9 = zext(C8[8,2]);
  local tmp10:4;
  tmp10 = 1;
  local tmp11:4;
  tmp11 = zext(tmp9);
  local tmp12:1;
  tmp12 = tmp11 == tmp10;
  local tmp13:1;
  tmp13 = tmp12;
  if (tmp13) goto <t_branch_15>;
  goto <done_15>;
<t_branch_15>
  local tmp15:4;
  tmp15 = 255;
  P3 = tmp15:1;
  goto <done_15>;
<done_15>
<done_9>
  local tmp16:1;
  tmp16 = zext(C8[8,2]);
  local tmp17:4;
  tmp17 = 1;
  local tmp18:4;
  tmp18 = zext(tmp16);
  local tmp19:4;
  tmp19 = tmp18 - tmp17;
  C8[8,2] = tmp19;
  goto <done_3>;
<done_3>
  local tmp20:4;
  tmp20 = 1;
  local tmp21:1;
  tmp21 = C1 s> tmp20;
  local tmp22:1;
  tmp22 = tmp21;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  goto [C0];
  local tmp24:4;
  tmp24 = 1;
  local tmp25:4;
  tmp25 = C1 - tmp24;
  C1 = tmp25;
  goto <done_24>;
<f_branch_24>
  local tmp26:4;
  tmp26 = 1;
  local tmp27:1;
  tmp27 = C3 s> tmp26;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <done_30>;
<t_branch_30>
  goto [C2];
  local tmp30:4;
  tmp30 = 1;
  local tmp31:4;
  tmp31 = C3 - tmp30;
  C3 = tmp31;
  goto <done_30>;
<done_30>
<done_24>
}

C4_addipc_pkt_start: reloc is epsilon [ reloc = pkt_start; ] {
  tmp = reloc:4; export tmp;
}

# 172 is address of C11, so C11 appears in the operands list
gp: reloc is immext = 0xffffffff [ reloc = 172; ] {
  export *[register]:4 reloc;
}

gp: reloc is epsilon [ reloc = 0; ] {
  tmp:4 = 0; export tmp;
}

:J2_jump J2_jump_r22_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jump_r22_2 {
  goto J2_jump_r22_2;
}

:J2_jumpr J2_jumpr_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumpr_Rs32 {
  goto [J2_jumpr_Rs32];
}

:J2_jumpt J2_jumpt_Pu4 J2_jumpt_r15_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b21 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumpt_Pu4 & J2_jumpt_r15_2 {
  local tmp0:1;
  tmp0 = J2_jumpt_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <done_2>;
<t_branch_2>
  goto J2_jumpt_r15_2;
  goto <done_2>;
<done_2>
}

:J2_jumpf J2_jumpf_Pu4 J2_jumpf_r15_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumpf_Pu4 & J2_jumpf_r15_2 {
  local tmp0:1;
  tmp0 = ! J2_jumpf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  goto J2_jumpf_r15_2;
  goto <done_3>;
<done_3>
}

:J2_jumptpt J2_jumptpt_Pu4 J2_jumptpt_r15_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b21 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumptpt_Pu4 & J2_jumptpt_r15_2 {
  local tmp0:1;
  tmp0 = J2_jumptpt_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <done_2>;
<t_branch_2>
  goto J2_jumptpt_r15_2;
  goto <done_2>;
<done_2>
}

:J2_jumpfpt J2_jumpfpt_Pu4 J2_jumpfpt_r15_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumpfpt_Pu4 & J2_jumpfpt_r15_2 {
  local tmp0:1;
  tmp0 = ! J2_jumpfpt_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  goto J2_jumpfpt_r15_2;
  goto <done_3>;
<done_3>
}

:J2_jumprt J2_jumprt_Pu4 J2_jumprt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprt_Pu4 & J2_jumprt_Rs32 {
  local tmp0:1;
  tmp0 = J2_jumprt_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <done_2>;
<t_branch_2>
  goto [J2_jumprt_Rs32];
  goto <done_2>;
<done_2>
}

:J2_jumprf J2_jumprf_Pu4 J2_jumprf_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprf_Pu4 & J2_jumprf_Rs32 {
  local tmp0:1;
  tmp0 = ! J2_jumprf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  goto [J2_jumprf_Rs32];
  goto <done_3>;
<done_3>
}

:J2_jumprtpt J2_jumprtpt_Pu4 J2_jumprtpt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprtpt_Pu4 & J2_jumprtpt_Rs32 {
  local tmp0:1;
  tmp0 = J2_jumprtpt_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <done_2>;
<t_branch_2>
  goto [J2_jumprtpt_Rs32];
  goto <done_2>;
<done_2>
}

:J2_jumprfpt J2_jumprfpt_Pu4 J2_jumprfpt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprfpt_Pu4 & J2_jumprfpt_Rs32 {
  local tmp0:1;
  tmp0 = ! J2_jumprfpt_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  goto [J2_jumprfpt_Rs32];
  goto <done_3>;
<done_3>
}

:J2_jumptnew J2_jumptnew_Pu4 J2_jumptnew_r15_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b21 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumptnew_Pu4 & J2_jumptnew_r15_2 {
  local tmp0:1;
  tmp0 = newreg(J2_jumptnew_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  goto J2_jumptnew_r15_2;
  goto <done_3>;
<done_3>
}

:J2_jumpfnew J2_jumpfnew_Pu4 J2_jumpfnew_r15_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumpfnew_Pu4 & J2_jumpfnew_r15_2 {
  local tmp0:1;
  tmp0 = newreg(J2_jumpfnew_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J2_jumpfnew_r15_2;
  goto <done_4>;
<done_4>
}

:J2_jumptnewpt J2_jumptnewpt_Pu4 J2_jumptnewpt_r15_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 1 & b21 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumptnewpt_Pu4 & J2_jumptnewpt_r15_2 {
  local tmp0:1;
  tmp0 = newreg(J2_jumptnewpt_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  goto J2_jumptnewpt_r15_2;
  goto <done_3>;
<done_3>
}

:J2_jumpfnewpt J2_jumpfnewpt_Pu4 J2_jumpfnewpt_r15_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 1 & b21 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumpfnewpt_Pu4 & J2_jumpfnewpt_r15_2 {
  local tmp0:1;
  tmp0 = newreg(J2_jumpfnewpt_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J2_jumpfnewpt_r15_2;
  goto <done_4>;
<done_4>
}

:J2_jumprtnew J2_jumprtnew_Pu4 J2_jumprtnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprtnew_Pu4 & J2_jumprtnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(J2_jumprtnew_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  goto [J2_jumprtnew_Rs32];
  goto <done_3>;
<done_3>
}

:J2_jumprfnew J2_jumprfnew_Pu4 J2_jumprfnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprfnew_Pu4 & J2_jumprfnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(J2_jumprfnew_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto [J2_jumprfnew_Rs32];
  goto <done_4>;
<done_4>
}

:J2_jumprtnewpt J2_jumprtnewpt_Pu4 J2_jumprtnewpt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprtnewpt_Pu4 & J2_jumprtnewpt_Rs32 {
  local tmp0:1;
  tmp0 = newreg(J2_jumprtnewpt_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  goto [J2_jumprtnewpt_Rs32];
  goto <done_3>;
<done_3>
}

:J2_jumprfnewpt J2_jumprfnewpt_Pu4 J2_jumprfnewpt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprfnewpt_Pu4 & J2_jumprfnewpt_Rs32 {
  local tmp0:1;
  tmp0 = newreg(J2_jumprfnewpt_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto [J2_jumprfnewpt_Rs32];
  goto <done_4>;
<done_4>
}

:J4_hintjumpr J4_hintjumpr_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J4_hintjumpr_Rs32 unimpl

:J2_jumprz J2_jumprz_Rs32 J2_jumprz_r13_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_jumprz_Rs32 & J2_jumprz_r13_2 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = J2_jumprz_Rs32 != tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J2_jumprz_r13_2;
  goto <done_4>;
<done_4>
}

:J2_jumprnz J2_jumprnz_Rs32 J2_jumprnz_r13_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_jumprnz_Rs32 & J2_jumprnz_r13_2 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = J2_jumprnz_Rs32 == tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J2_jumprnz_r13_2;
  goto <done_4>;
<done_4>
}

:J2_jumprzpt J2_jumprzpt_Rs32 J2_jumprzpt_r13_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_jumprzpt_Rs32 & J2_jumprzpt_r13_2 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = J2_jumprzpt_Rs32 != tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J2_jumprzpt_r13_2;
  goto <done_4>;
<done_4>
}

:J2_jumprnzpt J2_jumprnzpt_Rs32 J2_jumprnzpt_r13_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_jumprnzpt_Rs32 & J2_jumprnzpt_r13_2 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = J2_jumprnzpt_Rs32 == tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J2_jumprnzpt_r13_2;
  goto <done_4>;
<done_4>
}

:J2_jumprgtez J2_jumprgtez_Rs32 J2_jumprgtez_r13_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_jumprgtez_Rs32 & J2_jumprgtez_r13_2 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = J2_jumprgtez_Rs32 s>= tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J2_jumprgtez_r13_2;
  goto <done_4>;
<done_4>
}

:J2_jumprgtezpt J2_jumprgtezpt_Rs32 J2_jumprgtezpt_r13_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_jumprgtezpt_Rs32 & J2_jumprgtezpt_r13_2 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = J2_jumprgtezpt_Rs32 s>= tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J2_jumprgtezpt_r13_2;
  goto <done_4>;
<done_4>
}

:J2_jumprltez J2_jumprltez_Rs32 J2_jumprltez_r13_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_jumprltez_Rs32 & J2_jumprltez_r13_2 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = J2_jumprltez_Rs32 s<= tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J2_jumprltez_r13_2;
  goto <done_4>;
<done_4>
}

:J2_jumprltezpt J2_jumprltezpt_Rs32 J2_jumprltezpt_r13_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_jumprltezpt_Rs32 & J2_jumprltezpt_r13_2 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = J2_jumprltezpt_Rs32 s<= tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J2_jumprltezpt_r13_2;
  goto <done_4>;
<done_4>
}

:J4_cmpeqi_tp0_jump_nt J4_cmpeqi_tp0_jump_nt_Rs16 J4_cmpeqi_tp0_jump_nt_U5 J4_cmpeqi_tp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqi_tp0_jump_nt_Rs16 & J4_cmpeqi_tp0_jump_nt_U5 & J4_cmpeqi_tp0_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeqi_tp0_jump_nt_Rs16 == J4_cmpeqi_tp0_jump_nt_U5;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeqi_tp0_jump_nt_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpeqi_fp0_jump_nt J4_cmpeqi_fp0_jump_nt_Rs16 J4_cmpeqi_fp0_jump_nt_U5 J4_cmpeqi_fp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqi_fp0_jump_nt_Rs16 & J4_cmpeqi_fp0_jump_nt_U5 & J4_cmpeqi_fp0_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeqi_fp0_jump_nt_Rs16 == J4_cmpeqi_fp0_jump_nt_U5;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpeqi_fp0_jump_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpeqi_tp0_jump_t J4_cmpeqi_tp0_jump_t_Rs16 J4_cmpeqi_tp0_jump_t_U5 J4_cmpeqi_tp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqi_tp0_jump_t_Rs16 & J4_cmpeqi_tp0_jump_t_U5 & J4_cmpeqi_tp0_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeqi_tp0_jump_t_Rs16 == J4_cmpeqi_tp0_jump_t_U5;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeqi_tp0_jump_t_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpeqi_fp0_jump_t J4_cmpeqi_fp0_jump_t_Rs16 J4_cmpeqi_fp0_jump_t_U5 J4_cmpeqi_fp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqi_fp0_jump_t_Rs16 & J4_cmpeqi_fp0_jump_t_U5 & J4_cmpeqi_fp0_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeqi_fp0_jump_t_Rs16 == J4_cmpeqi_fp0_jump_t_U5;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpeqi_fp0_jump_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpeqi_tp1_jump_nt J4_cmpeqi_tp1_jump_nt_Rs16 J4_cmpeqi_tp1_jump_nt_U5 J4_cmpeqi_tp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqi_tp1_jump_nt_Rs16 & J4_cmpeqi_tp1_jump_nt_U5 & J4_cmpeqi_tp1_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeqi_tp1_jump_nt_Rs16 == J4_cmpeqi_tp1_jump_nt_U5;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeqi_tp1_jump_nt_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpeqi_fp1_jump_nt J4_cmpeqi_fp1_jump_nt_Rs16 J4_cmpeqi_fp1_jump_nt_U5 J4_cmpeqi_fp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqi_fp1_jump_nt_Rs16 & J4_cmpeqi_fp1_jump_nt_U5 & J4_cmpeqi_fp1_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeqi_fp1_jump_nt_Rs16 == J4_cmpeqi_fp1_jump_nt_U5;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpeqi_fp1_jump_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpeqi_tp1_jump_t J4_cmpeqi_tp1_jump_t_Rs16 J4_cmpeqi_tp1_jump_t_U5 J4_cmpeqi_tp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqi_tp1_jump_t_Rs16 & J4_cmpeqi_tp1_jump_t_U5 & J4_cmpeqi_tp1_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeqi_tp1_jump_t_Rs16 == J4_cmpeqi_tp1_jump_t_U5;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeqi_tp1_jump_t_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpeqi_fp1_jump_t J4_cmpeqi_fp1_jump_t_Rs16 J4_cmpeqi_fp1_jump_t_U5 J4_cmpeqi_fp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqi_fp1_jump_t_Rs16 & J4_cmpeqi_fp1_jump_t_U5 & J4_cmpeqi_fp1_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeqi_fp1_jump_t_Rs16 == J4_cmpeqi_fp1_jump_t_U5;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpeqi_fp1_jump_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgti_tp0_jump_nt J4_cmpgti_tp0_jump_nt_Rs16 J4_cmpgti_tp0_jump_nt_U5 J4_cmpgti_tp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgti_tp0_jump_nt_Rs16 & J4_cmpgti_tp0_jump_nt_U5 & J4_cmpgti_tp0_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgti_tp0_jump_nt_Rs16 > J4_cmpgti_tp0_jump_nt_U5;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpgti_tp0_jump_nt_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpgti_fp0_jump_nt J4_cmpgti_fp0_jump_nt_Rs16 J4_cmpgti_fp0_jump_nt_U5 J4_cmpgti_fp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgti_fp0_jump_nt_Rs16 & J4_cmpgti_fp0_jump_nt_U5 & J4_cmpgti_fp0_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgti_fp0_jump_nt_Rs16 > J4_cmpgti_fp0_jump_nt_U5;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgti_fp0_jump_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgti_tp0_jump_t J4_cmpgti_tp0_jump_t_Rs16 J4_cmpgti_tp0_jump_t_U5 J4_cmpgti_tp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgti_tp0_jump_t_Rs16 & J4_cmpgti_tp0_jump_t_U5 & J4_cmpgti_tp0_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgti_tp0_jump_t_Rs16 > J4_cmpgti_tp0_jump_t_U5;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpgti_tp0_jump_t_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpgti_fp0_jump_t J4_cmpgti_fp0_jump_t_Rs16 J4_cmpgti_fp0_jump_t_U5 J4_cmpgti_fp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgti_fp0_jump_t_Rs16 & J4_cmpgti_fp0_jump_t_U5 & J4_cmpgti_fp0_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgti_fp0_jump_t_Rs16 > J4_cmpgti_fp0_jump_t_U5;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgti_fp0_jump_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgti_tp1_jump_nt J4_cmpgti_tp1_jump_nt_Rs16 J4_cmpgti_tp1_jump_nt_U5 J4_cmpgti_tp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgti_tp1_jump_nt_Rs16 & J4_cmpgti_tp1_jump_nt_U5 & J4_cmpgti_tp1_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgti_tp1_jump_nt_Rs16 > J4_cmpgti_tp1_jump_nt_U5;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpgti_tp1_jump_nt_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpgti_fp1_jump_nt J4_cmpgti_fp1_jump_nt_Rs16 J4_cmpgti_fp1_jump_nt_U5 J4_cmpgti_fp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgti_fp1_jump_nt_Rs16 & J4_cmpgti_fp1_jump_nt_U5 & J4_cmpgti_fp1_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgti_fp1_jump_nt_Rs16 > J4_cmpgti_fp1_jump_nt_U5;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgti_fp1_jump_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgti_tp1_jump_t J4_cmpgti_tp1_jump_t_Rs16 J4_cmpgti_tp1_jump_t_U5 J4_cmpgti_tp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgti_tp1_jump_t_Rs16 & J4_cmpgti_tp1_jump_t_U5 & J4_cmpgti_tp1_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgti_tp1_jump_t_Rs16 > J4_cmpgti_tp1_jump_t_U5;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpgti_tp1_jump_t_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpgti_fp1_jump_t J4_cmpgti_fp1_jump_t_Rs16 J4_cmpgti_fp1_jump_t_U5 J4_cmpgti_fp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgti_fp1_jump_t_Rs16 & J4_cmpgti_fp1_jump_t_U5 & J4_cmpgti_fp1_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgti_fp1_jump_t_Rs16 > J4_cmpgti_fp1_jump_t_U5;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgti_fp1_jump_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgtui_tp0_jump_nt J4_cmpgtui_tp0_jump_nt_Rs16 J4_cmpgtui_tp0_jump_nt_U5 J4_cmpgtui_tp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtui_tp0_jump_nt_Rs16 & J4_cmpgtui_tp0_jump_nt_U5 & J4_cmpgtui_tp0_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtui_tp0_jump_nt_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtui_tp0_jump_nt_U5;
  P0 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P0);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgtui_tp0_jump_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgtui_fp0_jump_nt J4_cmpgtui_fp0_jump_nt_Rs16 J4_cmpgtui_fp0_jump_nt_U5 J4_cmpgtui_fp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtui_fp0_jump_nt_Rs16 & J4_cmpgtui_fp0_jump_nt_U5 & J4_cmpgtui_fp0_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtui_fp0_jump_nt_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtui_fp0_jump_nt_U5;
  P0 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P0);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtui_fp0_jump_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpgtui_tp0_jump_t J4_cmpgtui_tp0_jump_t_Rs16 J4_cmpgtui_tp0_jump_t_U5 J4_cmpgtui_tp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtui_tp0_jump_t_Rs16 & J4_cmpgtui_tp0_jump_t_U5 & J4_cmpgtui_tp0_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtui_tp0_jump_t_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtui_tp0_jump_t_U5;
  P0 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P0);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgtui_tp0_jump_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgtui_fp0_jump_t J4_cmpgtui_fp0_jump_t_Rs16 J4_cmpgtui_fp0_jump_t_U5 J4_cmpgtui_fp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtui_fp0_jump_t_Rs16 & J4_cmpgtui_fp0_jump_t_U5 & J4_cmpgtui_fp0_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtui_fp0_jump_t_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtui_fp0_jump_t_U5;
  P0 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P0);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtui_fp0_jump_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpgtui_tp1_jump_nt J4_cmpgtui_tp1_jump_nt_Rs16 J4_cmpgtui_tp1_jump_nt_U5 J4_cmpgtui_tp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtui_tp1_jump_nt_Rs16 & J4_cmpgtui_tp1_jump_nt_U5 & J4_cmpgtui_tp1_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtui_tp1_jump_nt_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtui_tp1_jump_nt_U5;
  P1 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P1);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgtui_tp1_jump_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgtui_fp1_jump_nt J4_cmpgtui_fp1_jump_nt_Rs16 J4_cmpgtui_fp1_jump_nt_U5 J4_cmpgtui_fp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtui_fp1_jump_nt_Rs16 & J4_cmpgtui_fp1_jump_nt_U5 & J4_cmpgtui_fp1_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtui_fp1_jump_nt_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtui_fp1_jump_nt_U5;
  P1 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P1);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtui_fp1_jump_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpgtui_tp1_jump_t J4_cmpgtui_tp1_jump_t_Rs16 J4_cmpgtui_tp1_jump_t_U5 J4_cmpgtui_tp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtui_tp1_jump_t_Rs16 & J4_cmpgtui_tp1_jump_t_U5 & J4_cmpgtui_tp1_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtui_tp1_jump_t_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtui_tp1_jump_t_U5;
  P1 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P1);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgtui_tp1_jump_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgtui_fp1_jump_t J4_cmpgtui_fp1_jump_t_Rs16 J4_cmpgtui_fp1_jump_t_U5 J4_cmpgtui_fp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtui_fp1_jump_t_Rs16 & J4_cmpgtui_fp1_jump_t_U5 & J4_cmpgtui_fp1_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtui_fp1_jump_t_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtui_fp1_jump_t_U5;
  P1 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P1);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtui_fp1_jump_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpeqn1_tp0_jump_nt J4_cmpeqn1_tp0_jump_nt_Rs16 J4_cmpeqn1_tp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 0 & b9 = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqn1_tp0_jump_nt_Rs16 & J4_cmpeqn1_tp0_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpeqn1_tp0_jump_nt_Rs16 == tmp1;
  P0 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P0);
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpeqn1_tp0_jump_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpeqn1_fp0_jump_nt J4_cmpeqn1_fp0_jump_nt_Rs16 J4_cmpeqn1_fp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 0 & b9 = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqn1_fp0_jump_nt_Rs16 & J4_cmpeqn1_fp0_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpeqn1_fp0_jump_nt_Rs16 == tmp1;
  P0 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P0);
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_cmpeqn1_fp0_jump_nt_r9_2;
  goto <done_7>;
<done_7>
}

:J4_cmpeqn1_tp0_jump_t J4_cmpeqn1_tp0_jump_t_Rs16 J4_cmpeqn1_tp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 0 & b9 = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqn1_tp0_jump_t_Rs16 & J4_cmpeqn1_tp0_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpeqn1_tp0_jump_t_Rs16 == tmp1;
  P0 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P0);
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpeqn1_tp0_jump_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpeqn1_fp0_jump_t J4_cmpeqn1_fp0_jump_t_Rs16 J4_cmpeqn1_fp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 0 & b9 = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqn1_fp0_jump_t_Rs16 & J4_cmpeqn1_fp0_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpeqn1_fp0_jump_t_Rs16 == tmp1;
  P0 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P0);
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_cmpeqn1_fp0_jump_t_r9_2;
  goto <done_7>;
<done_7>
}

:J4_cmpeqn1_tp1_jump_nt J4_cmpeqn1_tp1_jump_nt_Rs16 J4_cmpeqn1_tp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 0 & b9 = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqn1_tp1_jump_nt_Rs16 & J4_cmpeqn1_tp1_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpeqn1_tp1_jump_nt_Rs16 == tmp1;
  P1 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P1);
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpeqn1_tp1_jump_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpeqn1_fp1_jump_nt J4_cmpeqn1_fp1_jump_nt_Rs16 J4_cmpeqn1_fp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 0 & b9 = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqn1_fp1_jump_nt_Rs16 & J4_cmpeqn1_fp1_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpeqn1_fp1_jump_nt_Rs16 == tmp1;
  P1 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P1);
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_cmpeqn1_fp1_jump_nt_r9_2;
  goto <done_7>;
<done_7>
}

:J4_cmpeqn1_tp1_jump_t J4_cmpeqn1_tp1_jump_t_Rs16 J4_cmpeqn1_tp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 0 & b9 = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqn1_tp1_jump_t_Rs16 & J4_cmpeqn1_tp1_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpeqn1_tp1_jump_t_Rs16 == tmp1;
  P1 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P1);
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpeqn1_tp1_jump_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpeqn1_fp1_jump_t J4_cmpeqn1_fp1_jump_t_Rs16 J4_cmpeqn1_fp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 0 & b9 = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeqn1_fp1_jump_t_Rs16 & J4_cmpeqn1_fp1_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpeqn1_fp1_jump_t_Rs16 == tmp1;
  P1 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P1);
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_cmpeqn1_fp1_jump_t_r9_2;
  goto <done_7>;
<done_7>
}

:J4_cmpgtn1_tp0_jump_nt J4_cmpgtn1_tp0_jump_nt_Rs16 J4_cmpgtn1_tp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtn1_tp0_jump_nt_Rs16 & J4_cmpgtn1_tp0_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpgtn1_tp0_jump_nt_Rs16 s> tmp1;
  P0 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P0);
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtn1_tp0_jump_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpgtn1_fp0_jump_nt J4_cmpgtn1_fp0_jump_nt_Rs16 J4_cmpgtn1_fp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtn1_fp0_jump_nt_Rs16 & J4_cmpgtn1_fp0_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpgtn1_fp0_jump_nt_Rs16 s> tmp1;
  P0 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P0);
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_cmpgtn1_fp0_jump_nt_r9_2;
  goto <done_7>;
<done_7>
}

:J4_cmpgtn1_tp0_jump_t J4_cmpgtn1_tp0_jump_t_Rs16 J4_cmpgtn1_tp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtn1_tp0_jump_t_Rs16 & J4_cmpgtn1_tp0_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpgtn1_tp0_jump_t_Rs16 s> tmp1;
  P0 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P0);
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtn1_tp0_jump_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpgtn1_fp0_jump_t J4_cmpgtn1_fp0_jump_t_Rs16 J4_cmpgtn1_fp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtn1_fp0_jump_t_Rs16 & J4_cmpgtn1_fp0_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpgtn1_fp0_jump_t_Rs16 s> tmp1;
  P0 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P0);
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_cmpgtn1_fp0_jump_t_r9_2;
  goto <done_7>;
<done_7>
}

:J4_cmpgtn1_tp1_jump_nt J4_cmpgtn1_tp1_jump_nt_Rs16 J4_cmpgtn1_tp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtn1_tp1_jump_nt_Rs16 & J4_cmpgtn1_tp1_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpgtn1_tp1_jump_nt_Rs16 s> tmp1;
  P1 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P1);
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtn1_tp1_jump_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpgtn1_fp1_jump_nt J4_cmpgtn1_fp1_jump_nt_Rs16 J4_cmpgtn1_fp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtn1_fp1_jump_nt_Rs16 & J4_cmpgtn1_fp1_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpgtn1_fp1_jump_nt_Rs16 s> tmp1;
  P1 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P1);
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_cmpgtn1_fp1_jump_nt_r9_2;
  goto <done_7>;
<done_7>
}

:J4_cmpgtn1_tp1_jump_t J4_cmpgtn1_tp1_jump_t_Rs16 J4_cmpgtn1_tp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtn1_tp1_jump_t_Rs16 & J4_cmpgtn1_tp1_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpgtn1_tp1_jump_t_Rs16 s> tmp1;
  P1 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P1);
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtn1_tp1_jump_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpgtn1_fp1_jump_t J4_cmpgtn1_fp1_jump_t_Rs16 J4_cmpgtn1_fp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtn1_fp1_jump_t_Rs16 & J4_cmpgtn1_fp1_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:1;
  tmp2 = J4_cmpgtn1_fp1_jump_t_Rs16 s> tmp1;
  P1 = tmp2;
  local tmp3:1;
  tmp3 = newreg(P1);
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_cmpgtn1_fp1_jump_t_r9_2;
  goto <done_7>;
<done_7>
}

:J4_tstbit0_tp0_jump_nt J4_tstbit0_tp0_jump_nt_Rs16 J4_tstbit0_tp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 1 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_tstbit0_tp0_jump_nt_Rs16 & J4_tstbit0_tp0_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = J4_tstbit0_tp0_jump_nt_Rs16 & tmp0;
  P0 = tmp1:1;
  local tmp2:1;
  tmp2 = newreg(P0);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_tstbit0_tp0_jump_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_tstbit0_fp0_jump_nt J4_tstbit0_fp0_jump_nt_Rs16 J4_tstbit0_fp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 1 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_tstbit0_fp0_jump_nt_Rs16 & J4_tstbit0_fp0_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = J4_tstbit0_fp0_jump_nt_Rs16 & tmp0;
  P0 = tmp1:1;
  local tmp2:1;
  tmp2 = newreg(P0);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_tstbit0_fp0_jump_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_tstbit0_tp0_jump_t J4_tstbit0_tp0_jump_t_Rs16 J4_tstbit0_tp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 1 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_tstbit0_tp0_jump_t_Rs16 & J4_tstbit0_tp0_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = J4_tstbit0_tp0_jump_t_Rs16 & tmp0;
  P0 = tmp1:1;
  local tmp2:1;
  tmp2 = newreg(P0);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_tstbit0_tp0_jump_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_tstbit0_fp0_jump_t J4_tstbit0_fp0_jump_t_Rs16 J4_tstbit0_fp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 1 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_tstbit0_fp0_jump_t_Rs16 & J4_tstbit0_fp0_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = J4_tstbit0_fp0_jump_t_Rs16 & tmp0;
  P0 = tmp1:1;
  local tmp2:1;
  tmp2 = newreg(P0);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_tstbit0_fp0_jump_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_tstbit0_tp1_jump_nt J4_tstbit0_tp1_jump_nt_Rs16 J4_tstbit0_tp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 1 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_tstbit0_tp1_jump_nt_Rs16 & J4_tstbit0_tp1_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = J4_tstbit0_tp1_jump_nt_Rs16 & tmp0;
  P1 = tmp1:1;
  local tmp2:1;
  tmp2 = newreg(P1);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_tstbit0_tp1_jump_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_tstbit0_fp1_jump_nt J4_tstbit0_fp1_jump_nt_Rs16 J4_tstbit0_fp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 1 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_tstbit0_fp1_jump_nt_Rs16 & J4_tstbit0_fp1_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = J4_tstbit0_fp1_jump_nt_Rs16 & tmp0;
  P1 = tmp1:1;
  local tmp2:1;
  tmp2 = newreg(P1);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_tstbit0_fp1_jump_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_tstbit0_tp1_jump_t J4_tstbit0_tp1_jump_t_Rs16 J4_tstbit0_tp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 1 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_tstbit0_tp1_jump_t_Rs16 & J4_tstbit0_tp1_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = J4_tstbit0_tp1_jump_t_Rs16 & tmp0;
  P1 = tmp1:1;
  local tmp2:1;
  tmp2 = newreg(P1);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_tstbit0_tp1_jump_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_tstbit0_fp1_jump_t J4_tstbit0_fp1_jump_t_Rs16 J4_tstbit0_fp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b8 = 1 & b9 = 1 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_tstbit0_fp1_jump_t_Rs16 & J4_tstbit0_fp1_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = J4_tstbit0_fp1_jump_t_Rs16 & tmp0;
  P1 = tmp1:1;
  local tmp2:1;
  tmp2 = newreg(P1);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_tstbit0_fp1_jump_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpeq_tp0_jump_nt J4_cmpeq_tp0_jump_nt_Rs16 J4_cmpeq_tp0_jump_nt_Rt16 J4_cmpeq_tp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeq_tp0_jump_nt_Rs16 & J4_cmpeq_tp0_jump_nt_Rt16 & J4_cmpeq_tp0_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeq_tp0_jump_nt_Rs16 == J4_cmpeq_tp0_jump_nt_Rt16;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeq_tp0_jump_nt_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpeq_fp0_jump_nt J4_cmpeq_fp0_jump_nt_Rs16 J4_cmpeq_fp0_jump_nt_Rt16 J4_cmpeq_fp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeq_fp0_jump_nt_Rs16 & J4_cmpeq_fp0_jump_nt_Rt16 & J4_cmpeq_fp0_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeq_fp0_jump_nt_Rs16 == J4_cmpeq_fp0_jump_nt_Rt16;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpeq_fp0_jump_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpeq_tp0_jump_t J4_cmpeq_tp0_jump_t_Rs16 J4_cmpeq_tp0_jump_t_Rt16 J4_cmpeq_tp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeq_tp0_jump_t_Rs16 & J4_cmpeq_tp0_jump_t_Rt16 & J4_cmpeq_tp0_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeq_tp0_jump_t_Rs16 == J4_cmpeq_tp0_jump_t_Rt16;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeq_tp0_jump_t_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpeq_fp0_jump_t J4_cmpeq_fp0_jump_t_Rs16 J4_cmpeq_fp0_jump_t_Rt16 J4_cmpeq_fp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeq_fp0_jump_t_Rs16 & J4_cmpeq_fp0_jump_t_Rt16 & J4_cmpeq_fp0_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeq_fp0_jump_t_Rs16 == J4_cmpeq_fp0_jump_t_Rt16;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpeq_fp0_jump_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpeq_tp1_jump_nt J4_cmpeq_tp1_jump_nt_Rs16 J4_cmpeq_tp1_jump_nt_Rt16 J4_cmpeq_tp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeq_tp1_jump_nt_Rs16 & J4_cmpeq_tp1_jump_nt_Rt16 & J4_cmpeq_tp1_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeq_tp1_jump_nt_Rs16 == J4_cmpeq_tp1_jump_nt_Rt16;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeq_tp1_jump_nt_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpeq_fp1_jump_nt J4_cmpeq_fp1_jump_nt_Rs16 J4_cmpeq_fp1_jump_nt_Rt16 J4_cmpeq_fp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeq_fp1_jump_nt_Rs16 & J4_cmpeq_fp1_jump_nt_Rt16 & J4_cmpeq_fp1_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeq_fp1_jump_nt_Rs16 == J4_cmpeq_fp1_jump_nt_Rt16;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpeq_fp1_jump_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpeq_tp1_jump_t J4_cmpeq_tp1_jump_t_Rs16 J4_cmpeq_tp1_jump_t_Rt16 J4_cmpeq_tp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeq_tp1_jump_t_Rs16 & J4_cmpeq_tp1_jump_t_Rt16 & J4_cmpeq_tp1_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeq_tp1_jump_t_Rs16 == J4_cmpeq_tp1_jump_t_Rt16;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeq_tp1_jump_t_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpeq_fp1_jump_t J4_cmpeq_fp1_jump_t_Rs16 J4_cmpeq_fp1_jump_t_Rt16 J4_cmpeq_fp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpeq_fp1_jump_t_Rs16 & J4_cmpeq_fp1_jump_t_Rt16 & J4_cmpeq_fp1_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpeq_fp1_jump_t_Rs16 == J4_cmpeq_fp1_jump_t_Rt16;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpeq_fp1_jump_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgt_tp0_jump_nt J4_cmpgt_tp0_jump_nt_Rs16 J4_cmpgt_tp0_jump_nt_Rt16 J4_cmpgt_tp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgt_tp0_jump_nt_Rs16 & J4_cmpgt_tp0_jump_nt_Rt16 & J4_cmpgt_tp0_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgt_tp0_jump_nt_Rs16 s> J4_cmpgt_tp0_jump_nt_Rt16;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpgt_tp0_jump_nt_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpgt_fp0_jump_nt J4_cmpgt_fp0_jump_nt_Rs16 J4_cmpgt_fp0_jump_nt_Rt16 J4_cmpgt_fp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgt_fp0_jump_nt_Rs16 & J4_cmpgt_fp0_jump_nt_Rt16 & J4_cmpgt_fp0_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgt_fp0_jump_nt_Rs16 s> J4_cmpgt_fp0_jump_nt_Rt16;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgt_fp0_jump_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgt_tp0_jump_t J4_cmpgt_tp0_jump_t_Rs16 J4_cmpgt_tp0_jump_t_Rt16 J4_cmpgt_tp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgt_tp0_jump_t_Rs16 & J4_cmpgt_tp0_jump_t_Rt16 & J4_cmpgt_tp0_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgt_tp0_jump_t_Rs16 s> J4_cmpgt_tp0_jump_t_Rt16;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpgt_tp0_jump_t_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpgt_fp0_jump_t J4_cmpgt_fp0_jump_t_Rs16 J4_cmpgt_fp0_jump_t_Rt16 J4_cmpgt_fp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgt_fp0_jump_t_Rs16 & J4_cmpgt_fp0_jump_t_Rt16 & J4_cmpgt_fp0_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgt_fp0_jump_t_Rs16 s> J4_cmpgt_fp0_jump_t_Rt16;
  P0 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P0);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgt_fp0_jump_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgt_tp1_jump_nt J4_cmpgt_tp1_jump_nt_Rs16 J4_cmpgt_tp1_jump_nt_Rt16 J4_cmpgt_tp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgt_tp1_jump_nt_Rs16 & J4_cmpgt_tp1_jump_nt_Rt16 & J4_cmpgt_tp1_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgt_tp1_jump_nt_Rs16 s> J4_cmpgt_tp1_jump_nt_Rt16;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpgt_tp1_jump_nt_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpgt_fp1_jump_nt J4_cmpgt_fp1_jump_nt_Rs16 J4_cmpgt_fp1_jump_nt_Rt16 J4_cmpgt_fp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgt_fp1_jump_nt_Rs16 & J4_cmpgt_fp1_jump_nt_Rt16 & J4_cmpgt_fp1_jump_nt_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgt_fp1_jump_nt_Rs16 s> J4_cmpgt_fp1_jump_nt_Rt16;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgt_fp1_jump_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgt_tp1_jump_t J4_cmpgt_tp1_jump_t_Rs16 J4_cmpgt_tp1_jump_t_Rt16 J4_cmpgt_tp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgt_tp1_jump_t_Rs16 & J4_cmpgt_tp1_jump_t_Rt16 & J4_cmpgt_tp1_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgt_tp1_jump_t_Rs16 s> J4_cmpgt_tp1_jump_t_Rt16;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpgt_tp1_jump_t_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpgt_fp1_jump_t J4_cmpgt_fp1_jump_t_Rs16 J4_cmpgt_fp1_jump_t_Rt16 J4_cmpgt_fp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgt_fp1_jump_t_Rs16 & J4_cmpgt_fp1_jump_t_Rt16 & J4_cmpgt_fp1_jump_t_r9_2 {
  local tmp0:1;
  tmp0 = J4_cmpgt_fp1_jump_t_Rs16 s> J4_cmpgt_fp1_jump_t_Rt16;
  P1 = tmp0;
  local tmp1:1;
  tmp1 = newreg(P1);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgt_fp1_jump_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgtu_tp0_jump_nt J4_cmpgtu_tp0_jump_nt_Rs16 J4_cmpgtu_tp0_jump_nt_Rt16 J4_cmpgtu_tp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtu_tp0_jump_nt_Rs16 & J4_cmpgtu_tp0_jump_nt_Rt16 & J4_cmpgtu_tp0_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtu_tp0_jump_nt_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtu_tp0_jump_nt_Rt16;
  P0 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P0);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgtu_tp0_jump_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgtu_fp0_jump_nt J4_cmpgtu_fp0_jump_nt_Rs16 J4_cmpgtu_fp0_jump_nt_Rt16 J4_cmpgtu_fp0_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtu_fp0_jump_nt_Rs16 & J4_cmpgtu_fp0_jump_nt_Rt16 & J4_cmpgtu_fp0_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtu_fp0_jump_nt_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtu_fp0_jump_nt_Rt16;
  P0 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P0);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtu_fp0_jump_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpgtu_tp0_jump_t J4_cmpgtu_tp0_jump_t_Rs16 J4_cmpgtu_tp0_jump_t_Rt16 J4_cmpgtu_tp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtu_tp0_jump_t_Rs16 & J4_cmpgtu_tp0_jump_t_Rt16 & J4_cmpgtu_tp0_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtu_tp0_jump_t_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtu_tp0_jump_t_Rt16;
  P0 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P0);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgtu_tp0_jump_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgtu_fp0_jump_t J4_cmpgtu_fp0_jump_t_Rs16 J4_cmpgtu_fp0_jump_t_Rt16 J4_cmpgtu_fp0_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtu_fp0_jump_t_Rs16 & J4_cmpgtu_fp0_jump_t_Rt16 & J4_cmpgtu_fp0_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtu_fp0_jump_t_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtu_fp0_jump_t_Rt16;
  P0 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P0);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtu_fp0_jump_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpgtu_tp1_jump_nt J4_cmpgtu_tp1_jump_nt_Rs16 J4_cmpgtu_tp1_jump_nt_Rt16 J4_cmpgtu_tp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtu_tp1_jump_nt_Rs16 & J4_cmpgtu_tp1_jump_nt_Rt16 & J4_cmpgtu_tp1_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtu_tp1_jump_nt_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtu_tp1_jump_nt_Rt16;
  P1 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P1);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgtu_tp1_jump_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgtu_fp1_jump_nt J4_cmpgtu_fp1_jump_nt_Rs16 J4_cmpgtu_fp1_jump_nt_Rt16 J4_cmpgtu_fp1_jump_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtu_fp1_jump_nt_Rs16 & J4_cmpgtu_fp1_jump_nt_Rt16 & J4_cmpgtu_fp1_jump_nt_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtu_fp1_jump_nt_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtu_fp1_jump_nt_Rt16;
  P1 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P1);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtu_fp1_jump_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpgtu_tp1_jump_t J4_cmpgtu_tp1_jump_t_Rs16 J4_cmpgtu_tp1_jump_t_Rt16 J4_cmpgtu_tp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtu_tp1_jump_t_Rs16 & J4_cmpgtu_tp1_jump_t_Rt16 & J4_cmpgtu_tp1_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtu_tp1_jump_t_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtu_tp1_jump_t_Rt16;
  P1 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P1);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgtu_tp1_jump_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgtu_fp1_jump_t J4_cmpgtu_fp1_jump_t_Rs16 J4_cmpgtu_fp1_jump_t_Rt16 J4_cmpgtu_fp1_jump_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_cmpgtu_fp1_jump_t_Rs16 & J4_cmpgtu_fp1_jump_t_Rt16 & J4_cmpgtu_fp1_jump_t_r9_2 {
  local tmp0:4;
  tmp0 = J4_cmpgtu_fp1_jump_t_Rs16;
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgtu_fp1_jump_t_Rt16;
  P1 = tmp1;
  local tmp2:1;
  tmp2 = newreg(P1);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtu_fp1_jump_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_jumpseti J4_jumpseti_Rd16 J4_jumpseti_U6 J4_jumpseti_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_jumpseti_Rd16 & J4_jumpseti_U6 & J4_jumpseti_r9_2 {
  J4_jumpseti_Rd16 = J4_jumpseti_U6;
  goto J4_jumpseti_r9_2;
}

:J4_jumpsetr J4_jumpsetr_Rd16 J4_jumpsetr_Rs16 J4_jumpsetr_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 0 & J4_jumpsetr_Rd16 & J4_jumpsetr_Rs16 & J4_jumpsetr_r9_2 {
  J4_jumpsetr_Rd16 = J4_jumpsetr_Rs16;
  goto J4_jumpsetr_r9_2;
}

:J4_cmpeqi_t_jumpnv_t J4_cmpeqi_t_jumpnv_t_Ns8 J4_cmpeqi_t_jumpnv_t_U5 J4_cmpeqi_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqi_t_jumpnv_t_Ns8 & J4_cmpeqi_t_jumpnv_t_U5 & J4_cmpeqi_t_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpeqi_t_jumpnv_t dotnewreg J4_cmpeqi_t_jumpnv_t_U5 J4_cmpeqi_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqi_t_jumpnv_t_Ns8 & J4_cmpeqi_t_jumpnv_t_U5 & J4_cmpeqi_t_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 == J4_cmpeqi_t_jumpnv_t_U5;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeqi_t_jumpnv_t_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpeqi_t_jumpnv_nt J4_cmpeqi_t_jumpnv_nt_Ns8 J4_cmpeqi_t_jumpnv_nt_U5 J4_cmpeqi_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqi_t_jumpnv_nt_Ns8 & J4_cmpeqi_t_jumpnv_nt_U5 & J4_cmpeqi_t_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpeqi_t_jumpnv_nt dotnewreg J4_cmpeqi_t_jumpnv_nt_U5 J4_cmpeqi_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqi_t_jumpnv_nt_Ns8 & J4_cmpeqi_t_jumpnv_nt_U5 & J4_cmpeqi_t_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 == J4_cmpeqi_t_jumpnv_nt_U5;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeqi_t_jumpnv_nt_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpeqi_f_jumpnv_t J4_cmpeqi_f_jumpnv_t_Ns8 J4_cmpeqi_f_jumpnv_t_U5 J4_cmpeqi_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqi_f_jumpnv_t_Ns8 & J4_cmpeqi_f_jumpnv_t_U5 & J4_cmpeqi_f_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpeqi_f_jumpnv_t dotnewreg J4_cmpeqi_f_jumpnv_t_U5 J4_cmpeqi_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqi_f_jumpnv_t_Ns8 & J4_cmpeqi_f_jumpnv_t_U5 & J4_cmpeqi_f_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 != J4_cmpeqi_f_jumpnv_t_U5;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeqi_f_jumpnv_t_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpeqi_f_jumpnv_nt J4_cmpeqi_f_jumpnv_nt_Ns8 J4_cmpeqi_f_jumpnv_nt_U5 J4_cmpeqi_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqi_f_jumpnv_nt_Ns8 & J4_cmpeqi_f_jumpnv_nt_U5 & J4_cmpeqi_f_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpeqi_f_jumpnv_nt dotnewreg J4_cmpeqi_f_jumpnv_nt_U5 J4_cmpeqi_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqi_f_jumpnv_nt_Ns8 & J4_cmpeqi_f_jumpnv_nt_U5 & J4_cmpeqi_f_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 != J4_cmpeqi_f_jumpnv_nt_U5;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeqi_f_jumpnv_nt_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpgti_t_jumpnv_t J4_cmpgti_t_jumpnv_t_Ns8 J4_cmpgti_t_jumpnv_t_U5 J4_cmpgti_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgti_t_jumpnv_t_Ns8 & J4_cmpgti_t_jumpnv_t_U5 & J4_cmpgti_t_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpgti_t_jumpnv_t dotnewreg J4_cmpgti_t_jumpnv_t_U5 J4_cmpgti_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgti_t_jumpnv_t_Ns8 & J4_cmpgti_t_jumpnv_t_U5 & J4_cmpgti_t_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgti_t_jumpnv_t_U5;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpgti_t_jumpnv_t_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpgti_t_jumpnv_nt J4_cmpgti_t_jumpnv_nt_Ns8 J4_cmpgti_t_jumpnv_nt_U5 J4_cmpgti_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgti_t_jumpnv_nt_Ns8 & J4_cmpgti_t_jumpnv_nt_U5 & J4_cmpgti_t_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpgti_t_jumpnv_nt dotnewreg J4_cmpgti_t_jumpnv_nt_U5 J4_cmpgti_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgti_t_jumpnv_nt_Ns8 & J4_cmpgti_t_jumpnv_nt_U5 & J4_cmpgti_t_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgti_t_jumpnv_nt_U5;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpgti_t_jumpnv_nt_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpgti_f_jumpnv_t J4_cmpgti_f_jumpnv_t_Ns8 J4_cmpgti_f_jumpnv_t_U5 J4_cmpgti_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgti_f_jumpnv_t_Ns8 & J4_cmpgti_f_jumpnv_t_U5 & J4_cmpgti_f_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpgti_f_jumpnv_t dotnewreg J4_cmpgti_f_jumpnv_t_U5 J4_cmpgti_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgti_f_jumpnv_t_Ns8 & J4_cmpgti_f_jumpnv_t_U5 & J4_cmpgti_f_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgti_f_jumpnv_t_U5;
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgti_f_jumpnv_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgti_f_jumpnv_nt J4_cmpgti_f_jumpnv_nt_Ns8 J4_cmpgti_f_jumpnv_nt_U5 J4_cmpgti_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgti_f_jumpnv_nt_Ns8 & J4_cmpgti_f_jumpnv_nt_U5 & J4_cmpgti_f_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpgti_f_jumpnv_nt dotnewreg J4_cmpgti_f_jumpnv_nt_U5 J4_cmpgti_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgti_f_jumpnv_nt_Ns8 & J4_cmpgti_f_jumpnv_nt_U5 & J4_cmpgti_f_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 > J4_cmpgti_f_jumpnv_nt_U5;
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgti_f_jumpnv_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgtui_t_jumpnv_t J4_cmpgtui_t_jumpnv_t_Ns8 J4_cmpgtui_t_jumpnv_t_U5 J4_cmpgtui_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtui_t_jumpnv_t_Ns8 & J4_cmpgtui_t_jumpnv_t_U5 & J4_cmpgtui_t_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpgtui_t_jumpnv_t dotnewreg J4_cmpgtui_t_jumpnv_t_U5 J4_cmpgtui_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtui_t_jumpnv_t_Ns8 & J4_cmpgtui_t_jumpnv_t_U5 & J4_cmpgtui_t_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  local tmp1:4;
  tmp1 = newreg(dotnewreg);
  tmp0 = tmp1;
  local tmp2:1;
  tmp2 = tmp0 > J4_cmpgtui_t_jumpnv_t_U5;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgtui_t_jumpnv_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgtui_t_jumpnv_nt J4_cmpgtui_t_jumpnv_nt_Ns8 J4_cmpgtui_t_jumpnv_nt_U5 J4_cmpgtui_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtui_t_jumpnv_nt_Ns8 & J4_cmpgtui_t_jumpnv_nt_U5 & J4_cmpgtui_t_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpgtui_t_jumpnv_nt dotnewreg J4_cmpgtui_t_jumpnv_nt_U5 J4_cmpgtui_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtui_t_jumpnv_nt_Ns8 & J4_cmpgtui_t_jumpnv_nt_U5 & J4_cmpgtui_t_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  local tmp1:4;
  tmp1 = newreg(dotnewreg);
  tmp0 = tmp1;
  local tmp2:1;
  tmp2 = tmp0 > J4_cmpgtui_t_jumpnv_nt_U5;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgtui_t_jumpnv_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgtui_f_jumpnv_t J4_cmpgtui_f_jumpnv_t_Ns8 J4_cmpgtui_f_jumpnv_t_U5 J4_cmpgtui_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtui_f_jumpnv_t_Ns8 & J4_cmpgtui_f_jumpnv_t_U5 & J4_cmpgtui_f_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpgtui_f_jumpnv_t dotnewreg J4_cmpgtui_f_jumpnv_t_U5 J4_cmpgtui_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtui_f_jumpnv_t_Ns8 & J4_cmpgtui_f_jumpnv_t_U5 & J4_cmpgtui_f_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  local tmp1:4;
  tmp1 = newreg(dotnewreg);
  tmp0 = tmp1;
  local tmp2:1;
  tmp2 = tmp0 > J4_cmpgtui_f_jumpnv_t_U5;
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtui_f_jumpnv_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpgtui_f_jumpnv_nt J4_cmpgtui_f_jumpnv_nt_Ns8 J4_cmpgtui_f_jumpnv_nt_U5 J4_cmpgtui_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtui_f_jumpnv_nt_Ns8 & J4_cmpgtui_f_jumpnv_nt_U5 & J4_cmpgtui_f_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpgtui_f_jumpnv_nt dotnewreg J4_cmpgtui_f_jumpnv_nt_U5 J4_cmpgtui_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtui_f_jumpnv_nt_Ns8 & J4_cmpgtui_f_jumpnv_nt_U5 & J4_cmpgtui_f_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  local tmp1:4;
  tmp1 = newreg(dotnewreg);
  tmp0 = tmp1;
  local tmp2:1;
  tmp2 = tmp0 > J4_cmpgtui_f_jumpnv_nt_U5;
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtui_f_jumpnv_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpeqn1_t_jumpnv_t J4_cmpeqn1_t_jumpnv_t_Ns8 J4_cmpeqn1_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqn1_t_jumpnv_t_Ns8 & J4_cmpeqn1_t_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpeqn1_t_jumpnv_t dotnewreg J4_cmpeqn1_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqn1_t_jumpnv_t_Ns8 & J4_cmpeqn1_t_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = - tmp1;
  local tmp3:1;
  tmp3 = tmp0 == tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpeqn1_t_jumpnv_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpeqn1_t_jumpnv_nt J4_cmpeqn1_t_jumpnv_nt_Ns8 J4_cmpeqn1_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqn1_t_jumpnv_nt_Ns8 & J4_cmpeqn1_t_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpeqn1_t_jumpnv_nt dotnewreg J4_cmpeqn1_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqn1_t_jumpnv_nt_Ns8 & J4_cmpeqn1_t_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = - tmp1;
  local tmp3:1;
  tmp3 = tmp0 == tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpeqn1_t_jumpnv_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpeqn1_f_jumpnv_t J4_cmpeqn1_f_jumpnv_t_Ns8 J4_cmpeqn1_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqn1_f_jumpnv_t_Ns8 & J4_cmpeqn1_f_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpeqn1_f_jumpnv_t dotnewreg J4_cmpeqn1_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqn1_f_jumpnv_t_Ns8 & J4_cmpeqn1_f_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = - tmp1;
  local tmp3:1;
  tmp3 = tmp0 != tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpeqn1_f_jumpnv_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpeqn1_f_jumpnv_nt J4_cmpeqn1_f_jumpnv_nt_Ns8 J4_cmpeqn1_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqn1_f_jumpnv_nt_Ns8 & J4_cmpeqn1_f_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpeqn1_f_jumpnv_nt dotnewreg J4_cmpeqn1_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeqn1_f_jumpnv_nt_Ns8 & J4_cmpeqn1_f_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = - tmp1;
  local tmp3:1;
  tmp3 = tmp0 != tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpeqn1_f_jumpnv_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpgtn1_t_jumpnv_t J4_cmpgtn1_t_jumpnv_t_Ns8 J4_cmpgtn1_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtn1_t_jumpnv_t_Ns8 & J4_cmpgtn1_t_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpgtn1_t_jumpnv_t dotnewreg J4_cmpgtn1_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtn1_t_jumpnv_t_Ns8 & J4_cmpgtn1_t_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = - tmp1;
  local tmp3:1;
  tmp3 = tmp0 s> tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtn1_t_jumpnv_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpgtn1_t_jumpnv_nt J4_cmpgtn1_t_jumpnv_nt_Ns8 J4_cmpgtn1_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtn1_t_jumpnv_nt_Ns8 & J4_cmpgtn1_t_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpgtn1_t_jumpnv_nt dotnewreg J4_cmpgtn1_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtn1_t_jumpnv_nt_Ns8 & J4_cmpgtn1_t_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = - tmp1;
  local tmp3:1;
  tmp3 = tmp0 s> tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtn1_t_jumpnv_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpgtn1_f_jumpnv_t J4_cmpgtn1_f_jumpnv_t_Ns8 J4_cmpgtn1_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtn1_f_jumpnv_t_Ns8 & J4_cmpgtn1_f_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpgtn1_f_jumpnv_t dotnewreg J4_cmpgtn1_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtn1_f_jumpnv_t_Ns8 & J4_cmpgtn1_f_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = - tmp1;
  local tmp3:1;
  tmp3 = tmp0 s> tmp2;
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_cmpgtn1_f_jumpnv_t_r9_2;
  goto <done_7>;
<done_7>
}

:J4_cmpgtn1_f_jumpnv_nt J4_cmpgtn1_f_jumpnv_nt_Ns8 J4_cmpgtn1_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtn1_f_jumpnv_nt_Ns8 & J4_cmpgtn1_f_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpgtn1_f_jumpnv_nt dotnewreg J4_cmpgtn1_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtn1_f_jumpnv_nt_Ns8 & J4_cmpgtn1_f_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = - tmp1;
  local tmp3:1;
  tmp3 = tmp0 s> tmp2;
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_cmpgtn1_f_jumpnv_nt_r9_2;
  goto <done_7>;
<done_7>
}

:J4_tstbit0_t_jumpnv_t J4_tstbit0_t_jumpnv_t_Ns8 J4_tstbit0_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_tstbit0_t_jumpnv_t_Ns8 & J4_tstbit0_t_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_tstbit0_t_jumpnv_t dotnewreg J4_tstbit0_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_tstbit0_t_jumpnv_t_Ns8 & J4_tstbit0_t_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = tmp0 & tmp1;
  local tmp3:1;
  tmp3 = tmp2:1;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_tstbit0_t_jumpnv_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_tstbit0_t_jumpnv_nt J4_tstbit0_t_jumpnv_nt_Ns8 J4_tstbit0_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_tstbit0_t_jumpnv_nt_Ns8 & J4_tstbit0_t_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_tstbit0_t_jumpnv_nt dotnewreg J4_tstbit0_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_tstbit0_t_jumpnv_nt_Ns8 & J4_tstbit0_t_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = tmp0 & tmp1;
  local tmp3:1;
  tmp3 = tmp2:1;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_tstbit0_t_jumpnv_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_tstbit0_f_jumpnv_t J4_tstbit0_f_jumpnv_t_Ns8 J4_tstbit0_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_tstbit0_f_jumpnv_t_Ns8 & J4_tstbit0_f_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_tstbit0_f_jumpnv_t dotnewreg J4_tstbit0_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_tstbit0_f_jumpnv_t_Ns8 & J4_tstbit0_f_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = tmp0 & tmp1;
  local tmp3:1;
  tmp3 = tmp2:1;
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_tstbit0_f_jumpnv_t_r9_2;
  goto <done_7>;
<done_7>
}

:J4_tstbit0_f_jumpnv_nt J4_tstbit0_f_jumpnv_nt_Ns8 J4_tstbit0_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_tstbit0_f_jumpnv_nt_Ns8 & J4_tstbit0_f_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_tstbit0_f_jumpnv_nt dotnewreg J4_tstbit0_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_tstbit0_f_jumpnv_nt_Ns8 & J4_tstbit0_f_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = tmp0 & tmp1;
  local tmp3:1;
  tmp3 = tmp2:1;
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_tstbit0_f_jumpnv_nt_r9_2;
  goto <done_7>;
<done_7>
}

:J4_cmpeq_t_jumpnv_t J4_cmpeq_t_jumpnv_t_Ns8 J4_cmpeq_t_jumpnv_t_Rt32 J4_cmpeq_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeq_t_jumpnv_t_Ns8 & J4_cmpeq_t_jumpnv_t_Rt32 & J4_cmpeq_t_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpeq_t_jumpnv_t dotnewreg J4_cmpeq_t_jumpnv_t_Rt32 J4_cmpeq_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeq_t_jumpnv_t_Ns8 & J4_cmpeq_t_jumpnv_t_Rt32 & J4_cmpeq_t_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 == J4_cmpeq_t_jumpnv_t_Rt32;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeq_t_jumpnv_t_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpeq_t_jumpnv_nt J4_cmpeq_t_jumpnv_nt_Ns8 J4_cmpeq_t_jumpnv_nt_Rt32 J4_cmpeq_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeq_t_jumpnv_nt_Ns8 & J4_cmpeq_t_jumpnv_nt_Rt32 & J4_cmpeq_t_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpeq_t_jumpnv_nt dotnewreg J4_cmpeq_t_jumpnv_nt_Rt32 J4_cmpeq_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeq_t_jumpnv_nt_Ns8 & J4_cmpeq_t_jumpnv_nt_Rt32 & J4_cmpeq_t_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 == J4_cmpeq_t_jumpnv_nt_Rt32;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeq_t_jumpnv_nt_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpgt_t_jumpnv_t J4_cmpgt_t_jumpnv_t_Ns8 J4_cmpgt_t_jumpnv_t_Rt32 J4_cmpgt_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgt_t_jumpnv_t_Ns8 & J4_cmpgt_t_jumpnv_t_Rt32 & J4_cmpgt_t_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpgt_t_jumpnv_t dotnewreg J4_cmpgt_t_jumpnv_t_Rt32 J4_cmpgt_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgt_t_jumpnv_t_Ns8 & J4_cmpgt_t_jumpnv_t_Rt32 & J4_cmpgt_t_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 s> J4_cmpgt_t_jumpnv_t_Rt32;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpgt_t_jumpnv_t_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpgt_t_jumpnv_nt J4_cmpgt_t_jumpnv_nt_Ns8 J4_cmpgt_t_jumpnv_nt_Rt32 J4_cmpgt_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgt_t_jumpnv_nt_Ns8 & J4_cmpgt_t_jumpnv_nt_Rt32 & J4_cmpgt_t_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpgt_t_jumpnv_nt dotnewreg J4_cmpgt_t_jumpnv_nt_Rt32 J4_cmpgt_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgt_t_jumpnv_nt_Ns8 & J4_cmpgt_t_jumpnv_nt_Rt32 & J4_cmpgt_t_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 s> J4_cmpgt_t_jumpnv_nt_Rt32;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpgt_t_jumpnv_nt_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpgtu_t_jumpnv_t J4_cmpgtu_t_jumpnv_t_Ns8 J4_cmpgtu_t_jumpnv_t_Rt32 J4_cmpgtu_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtu_t_jumpnv_t_Ns8 & J4_cmpgtu_t_jumpnv_t_Rt32 & J4_cmpgtu_t_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpgtu_t_jumpnv_t dotnewreg J4_cmpgtu_t_jumpnv_t_Rt32 J4_cmpgtu_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtu_t_jumpnv_t_Ns8 & J4_cmpgtu_t_jumpnv_t_Rt32 & J4_cmpgtu_t_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  local tmp1:4;
  tmp1 = newreg(dotnewreg);
  tmp0 = tmp1;
  local tmp2:4;
  tmp2 = J4_cmpgtu_t_jumpnv_t_Rt32;
  local tmp3:1;
  tmp3 = tmp0 > tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtu_t_jumpnv_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpgtu_t_jumpnv_nt J4_cmpgtu_t_jumpnv_nt_Ns8 J4_cmpgtu_t_jumpnv_nt_Rt32 J4_cmpgtu_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtu_t_jumpnv_nt_Ns8 & J4_cmpgtu_t_jumpnv_nt_Rt32 & J4_cmpgtu_t_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpgtu_t_jumpnv_nt dotnewreg J4_cmpgtu_t_jumpnv_nt_Rt32 J4_cmpgtu_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtu_t_jumpnv_nt_Ns8 & J4_cmpgtu_t_jumpnv_nt_Rt32 & J4_cmpgtu_t_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  local tmp1:4;
  tmp1 = newreg(dotnewreg);
  tmp0 = tmp1;
  local tmp2:4;
  tmp2 = J4_cmpgtu_t_jumpnv_nt_Rt32;
  local tmp3:1;
  tmp3 = tmp0 > tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpgtu_t_jumpnv_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmplt_t_jumpnv_t J4_cmplt_t_jumpnv_t_Rt32 J4_cmplt_t_jumpnv_t_Ns8 J4_cmplt_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmplt_t_jumpnv_t_Rt32 & J4_cmplt_t_jumpnv_t_Ns8 & J4_cmplt_t_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmplt_t_jumpnv_t J4_cmplt_t_jumpnv_t_Rt32 dotnewreg J4_cmplt_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmplt_t_jumpnv_t_Rt32 & J4_cmplt_t_jumpnv_t_Ns8 & J4_cmplt_t_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = J4_cmplt_t_jumpnv_t_Rt32 s> tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmplt_t_jumpnv_t_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmplt_t_jumpnv_nt J4_cmplt_t_jumpnv_nt_Rt32 J4_cmplt_t_jumpnv_nt_Ns8 J4_cmplt_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmplt_t_jumpnv_nt_Rt32 & J4_cmplt_t_jumpnv_nt_Ns8 & J4_cmplt_t_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmplt_t_jumpnv_nt J4_cmplt_t_jumpnv_nt_Rt32 dotnewreg J4_cmplt_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmplt_t_jumpnv_nt_Rt32 & J4_cmplt_t_jumpnv_nt_Ns8 & J4_cmplt_t_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = J4_cmplt_t_jumpnv_nt_Rt32 s> tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmplt_t_jumpnv_nt_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpltu_t_jumpnv_t J4_cmpltu_t_jumpnv_t_Rt32 J4_cmpltu_t_jumpnv_t_Ns8 J4_cmpltu_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpltu_t_jumpnv_t_Rt32 & J4_cmpltu_t_jumpnv_t_Ns8 & J4_cmpltu_t_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpltu_t_jumpnv_t J4_cmpltu_t_jumpnv_t_Rt32 dotnewreg J4_cmpltu_t_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpltu_t_jumpnv_t_Rt32 & J4_cmpltu_t_jumpnv_t_Ns8 & J4_cmpltu_t_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = J4_cmpltu_t_jumpnv_t_Rt32;
  local tmp1:4;
  local tmp2:4;
  tmp2 = newreg(dotnewreg);
  tmp1 = tmp2;
  local tmp3:1;
  tmp3 = tmp0 > tmp1;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpltu_t_jumpnv_t_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpltu_t_jumpnv_nt J4_cmpltu_t_jumpnv_nt_Rt32 J4_cmpltu_t_jumpnv_nt_Ns8 J4_cmpltu_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpltu_t_jumpnv_nt_Rt32 & J4_cmpltu_t_jumpnv_nt_Ns8 & J4_cmpltu_t_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpltu_t_jumpnv_nt J4_cmpltu_t_jumpnv_nt_Rt32 dotnewreg J4_cmpltu_t_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpltu_t_jumpnv_nt_Rt32 & J4_cmpltu_t_jumpnv_nt_Ns8 & J4_cmpltu_t_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = J4_cmpltu_t_jumpnv_nt_Rt32;
  local tmp1:4;
  local tmp2:4;
  tmp2 = newreg(dotnewreg);
  tmp1 = tmp2;
  local tmp3:1;
  tmp3 = tmp0 > tmp1;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <done_6>;
<t_branch_6>
  goto J4_cmpltu_t_jumpnv_nt_r9_2;
  goto <done_6>;
<done_6>
}

:J4_cmpeq_f_jumpnv_t J4_cmpeq_f_jumpnv_t_Ns8 J4_cmpeq_f_jumpnv_t_Rt32 J4_cmpeq_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeq_f_jumpnv_t_Ns8 & J4_cmpeq_f_jumpnv_t_Rt32 & J4_cmpeq_f_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpeq_f_jumpnv_t dotnewreg J4_cmpeq_f_jumpnv_t_Rt32 J4_cmpeq_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeq_f_jumpnv_t_Ns8 & J4_cmpeq_f_jumpnv_t_Rt32 & J4_cmpeq_f_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 != J4_cmpeq_f_jumpnv_t_Rt32;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeq_f_jumpnv_t_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpeq_f_jumpnv_nt J4_cmpeq_f_jumpnv_nt_Ns8 J4_cmpeq_f_jumpnv_nt_Rt32 J4_cmpeq_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeq_f_jumpnv_nt_Ns8 & J4_cmpeq_f_jumpnv_nt_Rt32 & J4_cmpeq_f_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpeq_f_jumpnv_nt dotnewreg J4_cmpeq_f_jumpnv_nt_Rt32 J4_cmpeq_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpeq_f_jumpnv_nt_Ns8 & J4_cmpeq_f_jumpnv_nt_Rt32 & J4_cmpeq_f_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 != J4_cmpeq_f_jumpnv_nt_Rt32;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  goto J4_cmpeq_f_jumpnv_nt_r9_2;
  goto <done_4>;
<done_4>
}

:J4_cmpgt_f_jumpnv_t J4_cmpgt_f_jumpnv_t_Ns8 J4_cmpgt_f_jumpnv_t_Rt32 J4_cmpgt_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgt_f_jumpnv_t_Ns8 & J4_cmpgt_f_jumpnv_t_Rt32 & J4_cmpgt_f_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpgt_f_jumpnv_t dotnewreg J4_cmpgt_f_jumpnv_t_Rt32 J4_cmpgt_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgt_f_jumpnv_t_Ns8 & J4_cmpgt_f_jumpnv_t_Rt32 & J4_cmpgt_f_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 s> J4_cmpgt_f_jumpnv_t_Rt32;
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgt_f_jumpnv_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgt_f_jumpnv_nt J4_cmpgt_f_jumpnv_nt_Ns8 J4_cmpgt_f_jumpnv_nt_Rt32 J4_cmpgt_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgt_f_jumpnv_nt_Ns8 & J4_cmpgt_f_jumpnv_nt_Rt32 & J4_cmpgt_f_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpgt_f_jumpnv_nt dotnewreg J4_cmpgt_f_jumpnv_nt_Rt32 J4_cmpgt_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgt_f_jumpnv_nt_Ns8 & J4_cmpgt_f_jumpnv_nt_Rt32 & J4_cmpgt_f_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = tmp0 s> J4_cmpgt_f_jumpnv_nt_Rt32;
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmpgt_f_jumpnv_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpgtu_f_jumpnv_t J4_cmpgtu_f_jumpnv_t_Ns8 J4_cmpgtu_f_jumpnv_t_Rt32 J4_cmpgtu_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtu_f_jumpnv_t_Ns8 & J4_cmpgtu_f_jumpnv_t_Rt32 & J4_cmpgtu_f_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpgtu_f_jumpnv_t dotnewreg J4_cmpgtu_f_jumpnv_t_Rt32 J4_cmpgtu_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtu_f_jumpnv_t_Ns8 & J4_cmpgtu_f_jumpnv_t_Rt32 & J4_cmpgtu_f_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  local tmp1:4;
  tmp1 = newreg(dotnewreg);
  tmp0 = tmp1;
  local tmp2:4;
  tmp2 = J4_cmpgtu_f_jumpnv_t_Rt32;
  local tmp3:1;
  tmp3 = tmp0 > tmp2;
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_cmpgtu_f_jumpnv_t_r9_2;
  goto <done_7>;
<done_7>
}

:J4_cmpgtu_f_jumpnv_nt J4_cmpgtu_f_jumpnv_nt_Ns8 J4_cmpgtu_f_jumpnv_nt_Rt32 J4_cmpgtu_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtu_f_jumpnv_nt_Ns8 & J4_cmpgtu_f_jumpnv_nt_Rt32 & J4_cmpgtu_f_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpgtu_f_jumpnv_nt dotnewreg J4_cmpgtu_f_jumpnv_nt_Rt32 J4_cmpgtu_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpgtu_f_jumpnv_nt_Ns8 & J4_cmpgtu_f_jumpnv_nt_Rt32 & J4_cmpgtu_f_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  local tmp1:4;
  tmp1 = newreg(dotnewreg);
  tmp0 = tmp1;
  local tmp2:4;
  tmp2 = J4_cmpgtu_f_jumpnv_nt_Rt32;
  local tmp3:1;
  tmp3 = tmp0 > tmp2;
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_cmpgtu_f_jumpnv_nt_r9_2;
  goto <done_7>;
<done_7>
}

:J4_cmplt_f_jumpnv_t J4_cmplt_f_jumpnv_t_Rt32 J4_cmplt_f_jumpnv_t_Ns8 J4_cmplt_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmplt_f_jumpnv_t_Rt32 & J4_cmplt_f_jumpnv_t_Ns8 & J4_cmplt_f_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmplt_f_jumpnv_t J4_cmplt_f_jumpnv_t_Rt32 dotnewreg J4_cmplt_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmplt_f_jumpnv_t_Rt32 & J4_cmplt_f_jumpnv_t_Ns8 & J4_cmplt_f_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = J4_cmplt_f_jumpnv_t_Rt32 s> tmp0;
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmplt_f_jumpnv_t_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmplt_f_jumpnv_nt J4_cmplt_f_jumpnv_nt_Rt32 J4_cmplt_f_jumpnv_nt_Ns8 J4_cmplt_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmplt_f_jumpnv_nt_Rt32 & J4_cmplt_f_jumpnv_nt_Ns8 & J4_cmplt_f_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmplt_f_jumpnv_nt J4_cmplt_f_jumpnv_nt_Rt32 dotnewreg J4_cmplt_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmplt_f_jumpnv_nt_Rt32 & J4_cmplt_f_jumpnv_nt_Ns8 & J4_cmplt_f_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  local tmp1:1;
  tmp1 = J4_cmplt_f_jumpnv_nt_Rt32 s> tmp0;
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <done_5>;
<t_branch_5>
  goto J4_cmplt_f_jumpnv_nt_r9_2;
  goto <done_5>;
<done_5>
}

:J4_cmpltu_f_jumpnv_t J4_cmpltu_f_jumpnv_t_Rt32 J4_cmpltu_f_jumpnv_t_Ns8 J4_cmpltu_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpltu_f_jumpnv_t_Rt32 & J4_cmpltu_f_jumpnv_t_Ns8 & J4_cmpltu_f_jumpnv_t_r9_2 & hasnew = 0                      unimpl

:J4_cmpltu_f_jumpnv_t J4_cmpltu_f_jumpnv_t_Rt32 dotnewreg J4_cmpltu_f_jumpnv_t_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpltu_f_jumpnv_t_Rt32 & J4_cmpltu_f_jumpnv_t_Ns8 & J4_cmpltu_f_jumpnv_t_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = J4_cmpltu_f_jumpnv_t_Rt32;
  local tmp1:4;
  local tmp2:4;
  tmp2 = newreg(dotnewreg);
  tmp1 = tmp2;
  local tmp3:1;
  tmp3 = tmp0 > tmp1;
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_cmpltu_f_jumpnv_t_r9_2;
  goto <done_7>;
<done_7>
}

:J4_cmpltu_f_jumpnv_nt J4_cmpltu_f_jumpnv_nt_Rt32 J4_cmpltu_f_jumpnv_nt_Ns8 J4_cmpltu_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpltu_f_jumpnv_nt_Rt32 & J4_cmpltu_f_jumpnv_nt_Ns8 & J4_cmpltu_f_jumpnv_nt_r9_2 & hasnew = 0                      unimpl

:J4_cmpltu_f_jumpnv_nt J4_cmpltu_f_jumpnv_nt_Rt32 dotnewreg J4_cmpltu_f_jumpnv_nt_r9_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 0 & J4_cmpltu_f_jumpnv_nt_Rt32 & J4_cmpltu_f_jumpnv_nt_Ns8 & J4_cmpltu_f_jumpnv_nt_r9_2 & dotnewreg {
  local tmp0:4;
  tmp0 = J4_cmpltu_f_jumpnv_nt_Rt32;
  local tmp1:4;
  local tmp2:4;
  tmp2 = newreg(dotnewreg);
  tmp1 = tmp2;
  local tmp3:1;
  tmp3 = tmp0 > tmp1;
  local tmp4:1;
  tmp4 = ! tmp3;
  local tmp5:1;
  tmp5 = tmp4;
  if (tmp5) goto <t_branch_7>;
  goto <done_7>;
<t_branch_7>
  goto J4_cmpltu_f_jumpnv_nt_r9_2;
  goto <done_7>;
<done_7>
}

:J2_call J2_call_r22_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b0 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_call_r22_2 {
  call J2_call_r22_2;
}

:J2_callt J2_callt_Pu4 J2_callt_r15_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 0 & b21 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_callt_Pu4 & J2_callt_r15_2 {
  local tmp0:1;
  tmp0 = J2_callt_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <done_2>;
<t_branch_2>
  call J2_callt_r15_2;
  goto <done_2>;
<done_2>
}

:J2_callf J2_callf_Pu4 J2_callf_r15_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 0 & b21 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_callf_Pu4 & J2_callf_r15_2 {
  local tmp0:1;
  tmp0 = ! J2_callf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  call J2_callf_r15_2;
  goto <done_3>;
<done_3>
}

:J2_callr J2_callr_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_callr_Rs32 {
  call [J2_callr_Rs32];
}

:J2_callrt J2_callrt_Pu4 J2_callrt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_callrt_Pu4 & J2_callrt_Rs32 {
  local tmp0:1;
  tmp0 = J2_callrt_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <done_2>;
<t_branch_2>
  call [J2_callrt_Rs32];
  goto <done_2>;
<done_2>
}

:J2_callrf J2_callrf_Pu4 J2_callrf_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_callrf_Pu4 & J2_callrf_Rs32 {
  local tmp0:1;
  tmp0 = ! J2_callrf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  call [J2_callrf_Rs32];
  goto <done_3>;
<done_3>
}

:J2_loop0r J2_loop0r_Rs32 J2_loop0r_r7_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_loop0r_Rs32 & J2_loop0r_r7_2 {
  C0 = J2_loop0r_r7_2;
  C1 = J2_loop0r_Rs32;
  local tmp0:4;
  tmp0 = 0;
  C8[8,2] = tmp0;
}

:J2_loop1r J2_loop1r_Rs32 J2_loop1r_r7_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_loop1r_Rs32 & J2_loop1r_r7_2 {
  C2 = J2_loop1r_r7_2;
  C3 = J2_loop1r_Rs32;
}

:J2_loop0i J2_loop0i_r7_2 J2_loop0i_U10 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_loop0i_r7_2 & J2_loop0i_U10 {
  C0 = J2_loop0i_r7_2;
  C1 = J2_loop0i_U10;
  local tmp0:4;
  tmp0 = 0;
  C8[8,2] = tmp0;
}

:J2_loop1i J2_loop1i_r7_2 J2_loop1i_U10 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_loop1i_r7_2 & J2_loop1i_U10 {
  C2 = J2_loop1i_r7_2;
  C3 = J2_loop1i_U10;
}

:J2_ploop1sr J2_ploop1sr_Rs32 J2_ploop1sr_r7_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_ploop1sr_Rs32 & J2_ploop1sr_r7_2 {
  C0 = J2_ploop1sr_r7_2;
  C1 = J2_ploop1sr_Rs32;
  local tmp0:4;
  tmp0 = 1;
  C8[8,2] = tmp0;
  local tmp1:4;
  tmp1 = 0;
  P3 = tmp1:1;
}

:J2_ploop1si J2_ploop1si_r7_2 J2_ploop1si_U10 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_ploop1si_r7_2 & J2_ploop1si_U10 {
  C0 = J2_ploop1si_r7_2;
  C1 = J2_ploop1si_U10;
  local tmp0:4;
  tmp0 = 1;
  C8[8,2] = tmp0;
  local tmp1:4;
  tmp1 = 0;
  P3 = tmp1:1;
}

:J2_ploop2sr J2_ploop2sr_Rs32 J2_ploop2sr_r7_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_ploop2sr_Rs32 & J2_ploop2sr_r7_2 {
  C0 = J2_ploop2sr_r7_2;
  C1 = J2_ploop2sr_Rs32;
  local tmp0:4;
  tmp0 = 2;
  C8[8,2] = tmp0;
  local tmp1:4;
  tmp1 = 0;
  P3 = tmp1:1;
}

:J2_ploop2si J2_ploop2si_r7_2 J2_ploop2si_U10 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_ploop2si_r7_2 & J2_ploop2si_U10 {
  C0 = J2_ploop2si_r7_2;
  C1 = J2_ploop2si_U10;
  local tmp0:4;
  tmp0 = 2;
  C8[8,2] = tmp0;
  local tmp1:4;
  tmp1 = 0;
  P3 = tmp1:1;
}

:J2_ploop3sr J2_ploop3sr_Rs32 J2_ploop3sr_r7_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_ploop3sr_Rs32 & J2_ploop3sr_r7_2 {
  C0 = J2_ploop3sr_r7_2;
  C1 = J2_ploop3sr_Rs32;
  local tmp0:4;
  tmp0 = 3;
  C8[8,2] = tmp0;
  local tmp1:4;
  tmp1 = 0;
  P3 = tmp1:1;
}

:J2_ploop3si J2_ploop3si_r7_2 J2_ploop3si_U10 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & J2_ploop3si_r7_2 & J2_ploop3si_U10 {
  C0 = J2_ploop3si_r7_2;
  C1 = J2_ploop3si_U10;
  local tmp0:4;
  tmp0 = 3;
  C8[8,2] = tmp0;
  local tmp1:4;
  tmp1 = 0;
  P3 = tmp1:1;
}

:L2_loadrub_io L2_loadrub_io_Rd32 L2_loadrub_io_Rs32 L2_loadrub_io_s11_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrub_io_Rd32 & L2_loadrub_io_Rs32 & L2_loadrub_io_s11_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_loadrub_io_Rs32 + L2_loadrub_io_s11_0;
  EA = tmp0;
  L2_loadrub_io_Rd32 = *:1 EA;
}

:L4_loadrub_ur L4_loadrub_ur_Rd32 L4_loadrub_ur_Rt32 L4_loadrub_ur_u2 L4_loadrub_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadrub_ur_Rd32 & L4_loadrub_ur_Rt32 & L4_loadrub_ur_u2 & L4_loadrub_ur_U6 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_loadrub_ur_Rt32 << L4_loadrub_ur_u2;
  local tmp1:4;
  tmp1 = L4_loadrub_ur_U6 + tmp0;
  EA = tmp1;
  L4_loadrub_ur_Rd32 = *:1 EA;
}

:L4_loadrub_ap L4_loadrub_ap_Rd32 L4_loadrub_ap_Re32 L4_loadrub_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadrub_ap_Rd32 & L4_loadrub_ap_Re32 & L4_loadrub_ap_U6 {
  local EA:4;
  EA = L4_loadrub_ap_U6;
  L4_loadrub_ap_Rd32 = *:1 EA;
  L4_loadrub_ap_Re32 = L4_loadrub_ap_U6;
}

:L2_loadrub_pr L2_loadrub_pr_Rd32 L2_loadrub_pr_Rx32 L2_loadrub_pr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrub_pr_Rd32 & L2_loadrub_pr_Rx32 & L2_loadrub_pr_Mu2 {
  local EA:4;
  EA = L2_loadrub_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(L2_loadrub_pr_Mu2);
  local tmp1:4;
  tmp1 = L2_loadrub_pr_Rx32 + tmp0;
  L2_loadrub_pr_Rx32 = tmp1;
  L2_loadrub_pr_Rd32 = *:1 EA;
}

:L2_loadrub_pbr L2_loadrub_pbr_Rd32 L2_loadrub_pbr_Rx32 L2_loadrub_pbr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrub_pbr_Rd32 & L2_loadrub_pbr_Rx32 & L2_loadrub_pbr_Mu2 unimpl

:L2_loadrub_pi L2_loadrub_pi_Rd32 L2_loadrub_pi_Rx32 L2_loadrub_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrub_pi_Rd32 & L2_loadrub_pi_Rx32 & L2_loadrub_pi_s4_0 {
  local EA:4;
  EA = L2_loadrub_pi_Rx32;
  local tmp0:4;
  tmp0 = L2_loadrub_pi_Rx32 + L2_loadrub_pi_s4_0;
  L2_loadrub_pi_Rx32 = tmp0;
  L2_loadrub_pi_Rd32 = *:1 EA;
}

:L2_loadrub_pci L2_loadrub_pci_Rd32 L2_loadrub_pci_Rx32 L2_loadrub_pci_Mu2 L2_loadrub_pci_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b9 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrub_pci_Rd32 & L2_loadrub_pci_Rx32 & L2_loadrub_pci_Mu2 & L2_loadrub_pci_s4_0 unimpl

:L2_loadrub_pcr L2_loadrub_pcr_Rd32 L2_loadrub_pcr_Rx32 L2_loadrub_pcr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b9 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrub_pcr_Rd32 & L2_loadrub_pcr_Rx32 & L2_loadrub_pcr_Mu2 unimpl

:L2_loadrb_io L2_loadrb_io_Rd32 L2_loadrb_io_Rs32 L2_loadrb_io_s11_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrb_io_Rd32 & L2_loadrb_io_Rs32 & L2_loadrb_io_s11_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_loadrb_io_Rs32 + L2_loadrb_io_s11_0;
  EA = tmp0;
  L2_loadrb_io_Rd32 = *:1 EA;
}

:L4_loadrb_ur L4_loadrb_ur_Rd32 L4_loadrb_ur_Rt32 L4_loadrb_ur_u2 L4_loadrb_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadrb_ur_Rd32 & L4_loadrb_ur_Rt32 & L4_loadrb_ur_u2 & L4_loadrb_ur_U6 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_loadrb_ur_Rt32 << L4_loadrb_ur_u2;
  local tmp1:4;
  tmp1 = L4_loadrb_ur_U6 + tmp0;
  EA = tmp1;
  L4_loadrb_ur_Rd32 = *:1 EA;
}

:L4_loadrb_ap L4_loadrb_ap_Rd32 L4_loadrb_ap_Re32 L4_loadrb_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadrb_ap_Rd32 & L4_loadrb_ap_Re32 & L4_loadrb_ap_U6 {
  local EA:4;
  EA = L4_loadrb_ap_U6;
  L4_loadrb_ap_Rd32 = *:1 EA;
  L4_loadrb_ap_Re32 = L4_loadrb_ap_U6;
}

:L2_loadrb_pr L2_loadrb_pr_Rd32 L2_loadrb_pr_Rx32 L2_loadrb_pr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrb_pr_Rd32 & L2_loadrb_pr_Rx32 & L2_loadrb_pr_Mu2 {
  local EA:4;
  EA = L2_loadrb_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(L2_loadrb_pr_Mu2);
  local tmp1:4;
  tmp1 = L2_loadrb_pr_Rx32 + tmp0;
  L2_loadrb_pr_Rx32 = tmp1;
  L2_loadrb_pr_Rd32 = *:1 EA;
}

:L2_loadrb_pbr L2_loadrb_pbr_Rd32 L2_loadrb_pbr_Rx32 L2_loadrb_pbr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrb_pbr_Rd32 & L2_loadrb_pbr_Rx32 & L2_loadrb_pbr_Mu2 unimpl

:L2_loadrb_pi L2_loadrb_pi_Rd32 L2_loadrb_pi_Rx32 L2_loadrb_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrb_pi_Rd32 & L2_loadrb_pi_Rx32 & L2_loadrb_pi_s4_0 {
  local EA:4;
  EA = L2_loadrb_pi_Rx32;
  local tmp0:4;
  tmp0 = L2_loadrb_pi_Rx32 + L2_loadrb_pi_s4_0;
  L2_loadrb_pi_Rx32 = tmp0;
  L2_loadrb_pi_Rd32 = *:1 EA;
}

:L2_loadrb_pci L2_loadrb_pci_Rd32 L2_loadrb_pci_Rx32 L2_loadrb_pci_Mu2 L2_loadrb_pci_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b9 = 0 & b12 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrb_pci_Rd32 & L2_loadrb_pci_Rx32 & L2_loadrb_pci_Mu2 & L2_loadrb_pci_s4_0 unimpl

:L2_loadrb_pcr L2_loadrb_pcr_Rd32 L2_loadrb_pcr_Rx32 L2_loadrb_pcr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b9 = 1 & b12 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrb_pcr_Rd32 & L2_loadrb_pcr_Rx32 & L2_loadrb_pcr_Mu2 unimpl

:L2_loadruh_io L2_loadruh_io_Rd32 L2_loadruh_io_Rs32 L2_loadruh_io_s11_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadruh_io_Rd32 & L2_loadruh_io_Rs32 & L2_loadruh_io_s11_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_loadruh_io_Rs32 + L2_loadruh_io_s11_1;
  EA = tmp0;
  L2_loadruh_io_Rd32 = *:2 EA;
}

:L4_loadruh_ur L4_loadruh_ur_Rd32 L4_loadruh_ur_Rt32 L4_loadruh_ur_u2 L4_loadruh_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadruh_ur_Rd32 & L4_loadruh_ur_Rt32 & L4_loadruh_ur_u2 & L4_loadruh_ur_U6 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_loadruh_ur_Rt32 << L4_loadruh_ur_u2;
  local tmp1:4;
  tmp1 = L4_loadruh_ur_U6 + tmp0;
  EA = tmp1;
  L4_loadruh_ur_Rd32 = *:2 EA;
}

:L4_loadruh_ap L4_loadruh_ap_Rd32 L4_loadruh_ap_Re32 L4_loadruh_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadruh_ap_Rd32 & L4_loadruh_ap_Re32 & L4_loadruh_ap_U6 {
  local EA:4;
  EA = L4_loadruh_ap_U6;
  L4_loadruh_ap_Rd32 = *:2 EA;
  L4_loadruh_ap_Re32 = L4_loadruh_ap_U6;
}

:L2_loadruh_pr L2_loadruh_pr_Rd32 L2_loadruh_pr_Rx32 L2_loadruh_pr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadruh_pr_Rd32 & L2_loadruh_pr_Rx32 & L2_loadruh_pr_Mu2 {
  local EA:4;
  EA = L2_loadruh_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(L2_loadruh_pr_Mu2);
  local tmp1:4;
  tmp1 = L2_loadruh_pr_Rx32 + tmp0;
  L2_loadruh_pr_Rx32 = tmp1;
  L2_loadruh_pr_Rd32 = *:2 EA;
}

:L2_loadruh_pbr L2_loadruh_pbr_Rd32 L2_loadruh_pbr_Rx32 L2_loadruh_pbr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadruh_pbr_Rd32 & L2_loadruh_pbr_Rx32 & L2_loadruh_pbr_Mu2 unimpl

:L2_loadruh_pi L2_loadruh_pi_Rd32 L2_loadruh_pi_Rx32 L2_loadruh_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadruh_pi_Rd32 & L2_loadruh_pi_Rx32 & L2_loadruh_pi_s4_1 {
  local EA:4;
  EA = L2_loadruh_pi_Rx32;
  local tmp0:4;
  tmp0 = L2_loadruh_pi_Rx32 + L2_loadruh_pi_s4_1;
  L2_loadruh_pi_Rx32 = tmp0;
  L2_loadruh_pi_Rd32 = *:2 EA;
}

:L2_loadruh_pci L2_loadruh_pci_Rd32 L2_loadruh_pci_Rx32 L2_loadruh_pci_Mu2 L2_loadruh_pci_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b9 = 0 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadruh_pci_Rd32 & L2_loadruh_pci_Rx32 & L2_loadruh_pci_Mu2 & L2_loadruh_pci_s4_1 unimpl

:L2_loadruh_pcr L2_loadruh_pcr_Rd32 L2_loadruh_pcr_Rx32 L2_loadruh_pcr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b9 = 1 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadruh_pcr_Rd32 & L2_loadruh_pcr_Rx32 & L2_loadruh_pcr_Mu2 unimpl

:L2_loadrh_io L2_loadrh_io_Rd32 L2_loadrh_io_Rs32 L2_loadrh_io_s11_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrh_io_Rd32 & L2_loadrh_io_Rs32 & L2_loadrh_io_s11_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_loadrh_io_Rs32 + L2_loadrh_io_s11_1;
  EA = tmp0;
  L2_loadrh_io_Rd32 = *:2 EA;
}

:L4_loadrh_ur L4_loadrh_ur_Rd32 L4_loadrh_ur_Rt32 L4_loadrh_ur_u2 L4_loadrh_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadrh_ur_Rd32 & L4_loadrh_ur_Rt32 & L4_loadrh_ur_u2 & L4_loadrh_ur_U6 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_loadrh_ur_Rt32 << L4_loadrh_ur_u2;
  local tmp1:4;
  tmp1 = L4_loadrh_ur_U6 + tmp0;
  EA = tmp1;
  L4_loadrh_ur_Rd32 = *:2 EA;
}

:L4_loadrh_ap L4_loadrh_ap_Rd32 L4_loadrh_ap_Re32 L4_loadrh_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadrh_ap_Rd32 & L4_loadrh_ap_Re32 & L4_loadrh_ap_U6 {
  local EA:4;
  EA = L4_loadrh_ap_U6;
  L4_loadrh_ap_Rd32 = *:2 EA;
  L4_loadrh_ap_Re32 = L4_loadrh_ap_U6;
}

:L2_loadrh_pr L2_loadrh_pr_Rd32 L2_loadrh_pr_Rx32 L2_loadrh_pr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrh_pr_Rd32 & L2_loadrh_pr_Rx32 & L2_loadrh_pr_Mu2 {
  local EA:4;
  EA = L2_loadrh_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(L2_loadrh_pr_Mu2);
  local tmp1:4;
  tmp1 = L2_loadrh_pr_Rx32 + tmp0;
  L2_loadrh_pr_Rx32 = tmp1;
  L2_loadrh_pr_Rd32 = *:2 EA;
}

:L2_loadrh_pbr L2_loadrh_pbr_Rd32 L2_loadrh_pbr_Rx32 L2_loadrh_pbr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrh_pbr_Rd32 & L2_loadrh_pbr_Rx32 & L2_loadrh_pbr_Mu2 unimpl

:L2_loadrh_pi L2_loadrh_pi_Rd32 L2_loadrh_pi_Rx32 L2_loadrh_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrh_pi_Rd32 & L2_loadrh_pi_Rx32 & L2_loadrh_pi_s4_1 {
  local EA:4;
  EA = L2_loadrh_pi_Rx32;
  local tmp0:4;
  tmp0 = L2_loadrh_pi_Rx32 + L2_loadrh_pi_s4_1;
  L2_loadrh_pi_Rx32 = tmp0;
  L2_loadrh_pi_Rd32 = *:2 EA;
}

:L2_loadrh_pci L2_loadrh_pci_Rd32 L2_loadrh_pci_Rx32 L2_loadrh_pci_Mu2 L2_loadrh_pci_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b9 = 0 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrh_pci_Rd32 & L2_loadrh_pci_Rx32 & L2_loadrh_pci_Mu2 & L2_loadrh_pci_s4_1 unimpl

:L2_loadrh_pcr L2_loadrh_pcr_Rd32 L2_loadrh_pcr_Rx32 L2_loadrh_pcr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b9 = 1 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrh_pcr_Rd32 & L2_loadrh_pcr_Rx32 & L2_loadrh_pcr_Mu2 unimpl

:L2_loadri_io L2_loadri_io_Rd32 L2_loadri_io_Rs32 L2_loadri_io_s11_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadri_io_Rd32 & L2_loadri_io_Rs32 & L2_loadri_io_s11_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_loadri_io_Rs32 + L2_loadri_io_s11_2;
  EA = tmp0;
  L2_loadri_io_Rd32 = *:4 EA;
}

:L4_loadri_ur L4_loadri_ur_Rd32 L4_loadri_ur_Rt32 L4_loadri_ur_u2 L4_loadri_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadri_ur_Rd32 & L4_loadri_ur_Rt32 & L4_loadri_ur_u2 & L4_loadri_ur_U6 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_loadri_ur_Rt32 << L4_loadri_ur_u2;
  local tmp1:4;
  tmp1 = L4_loadri_ur_U6 + tmp0;
  EA = tmp1;
  L4_loadri_ur_Rd32 = *:4 EA;
}

:L4_loadri_ap L4_loadri_ap_Rd32 L4_loadri_ap_Re32 L4_loadri_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadri_ap_Rd32 & L4_loadri_ap_Re32 & L4_loadri_ap_U6 {
  local EA:4;
  EA = L4_loadri_ap_U6;
  L4_loadri_ap_Rd32 = *:4 EA;
  L4_loadri_ap_Re32 = L4_loadri_ap_U6;
}

:L2_loadri_pr L2_loadri_pr_Rd32 L2_loadri_pr_Rx32 L2_loadri_pr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadri_pr_Rd32 & L2_loadri_pr_Rx32 & L2_loadri_pr_Mu2 {
  local EA:4;
  EA = L2_loadri_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(L2_loadri_pr_Mu2);
  local tmp1:4;
  tmp1 = L2_loadri_pr_Rx32 + tmp0;
  L2_loadri_pr_Rx32 = tmp1;
  L2_loadri_pr_Rd32 = *:4 EA;
}

:L2_loadri_pbr L2_loadri_pbr_Rd32 L2_loadri_pbr_Rx32 L2_loadri_pbr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadri_pbr_Rd32 & L2_loadri_pbr_Rx32 & L2_loadri_pbr_Mu2 unimpl

:L2_loadri_pi L2_loadri_pi_Rd32 L2_loadri_pi_Rx32 L2_loadri_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadri_pi_Rd32 & L2_loadri_pi_Rx32 & L2_loadri_pi_s4_2 {
  local EA:4;
  EA = L2_loadri_pi_Rx32;
  local tmp0:4;
  tmp0 = L2_loadri_pi_Rx32 + L2_loadri_pi_s4_2;
  L2_loadri_pi_Rx32 = tmp0;
  L2_loadri_pi_Rd32 = *:4 EA;
}

:L2_loadri_pci L2_loadri_pci_Rd32 L2_loadri_pci_Rx32 L2_loadri_pci_Mu2 L2_loadri_pci_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b9 = 0 & b12 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadri_pci_Rd32 & L2_loadri_pci_Rx32 & L2_loadri_pci_Mu2 & L2_loadri_pci_s4_2 unimpl

:L2_loadri_pcr L2_loadri_pcr_Rd32 L2_loadri_pcr_Rx32 L2_loadri_pcr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b9 = 1 & b12 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadri_pcr_Rd32 & L2_loadri_pcr_Rx32 & L2_loadri_pcr_Mu2 unimpl

:L2_loadrd_io L2_loadrd_io_Rdd32 L2_loadrd_io_Rs32 L2_loadrd_io_s11_3 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrd_io_Rdd32 & L2_loadrd_io_Rs32 & L2_loadrd_io_s11_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_loadrd_io_Rs32 + L2_loadrd_io_s11_3;
  EA = tmp0;
  L2_loadrd_io_Rdd32 = *:8 EA;
}

:L4_loadrd_ur L4_loadrd_ur_Rdd32 L4_loadrd_ur_Rt32 L4_loadrd_ur_u2 L4_loadrd_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadrd_ur_Rdd32 & L4_loadrd_ur_Rt32 & L4_loadrd_ur_u2 & L4_loadrd_ur_U6 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_loadrd_ur_Rt32 << L4_loadrd_ur_u2;
  local tmp1:4;
  tmp1 = L4_loadrd_ur_U6 + tmp0;
  EA = tmp1;
  L4_loadrd_ur_Rdd32 = *:8 EA;
}

:L4_loadrd_ap L4_loadrd_ap_Rdd32 L4_loadrd_ap_Re32 L4_loadrd_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadrd_ap_Rdd32 & L4_loadrd_ap_Re32 & L4_loadrd_ap_U6 {
  local EA:4;
  EA = L4_loadrd_ap_U6;
  L4_loadrd_ap_Rdd32 = *:8 EA;
  L4_loadrd_ap_Re32 = L4_loadrd_ap_U6;
}

:L2_loadrd_pr L2_loadrd_pr_Rdd32 L2_loadrd_pr_Rx32 L2_loadrd_pr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrd_pr_Rdd32 & L2_loadrd_pr_Rx32 & L2_loadrd_pr_Mu2 {
  local EA:4;
  EA = L2_loadrd_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(L2_loadrd_pr_Mu2);
  local tmp1:4;
  tmp1 = L2_loadrd_pr_Rx32 + tmp0;
  L2_loadrd_pr_Rx32 = tmp1;
  L2_loadrd_pr_Rdd32 = *:8 EA;
}

:L2_loadrd_pbr L2_loadrd_pbr_Rdd32 L2_loadrd_pbr_Rx32 L2_loadrd_pbr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrd_pbr_Rdd32 & L2_loadrd_pbr_Rx32 & L2_loadrd_pbr_Mu2 unimpl

:L2_loadrd_pi L2_loadrd_pi_Rdd32 L2_loadrd_pi_Rx32 L2_loadrd_pi_s4_3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrd_pi_Rdd32 & L2_loadrd_pi_Rx32 & L2_loadrd_pi_s4_3 {
  local EA:4;
  EA = L2_loadrd_pi_Rx32;
  local tmp0:4;
  tmp0 = L2_loadrd_pi_Rx32 + L2_loadrd_pi_s4_3;
  L2_loadrd_pi_Rx32 = tmp0;
  L2_loadrd_pi_Rdd32 = *:8 EA;
}

:L2_loadrd_pci L2_loadrd_pci_Rdd32 L2_loadrd_pci_Rx32 L2_loadrd_pci_Mu2 L2_loadrd_pci_s4_3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b9 = 0 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrd_pci_Rdd32 & L2_loadrd_pci_Rx32 & L2_loadrd_pci_Mu2 & L2_loadrd_pci_s4_3 unimpl

:L2_loadrd_pcr L2_loadrd_pcr_Rdd32 L2_loadrd_pcr_Rx32 L2_loadrd_pcr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b9 = 1 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadrd_pcr_Rdd32 & L2_loadrd_pcr_Rx32 & L2_loadrd_pcr_Mu2 unimpl

:L2_loadbzw2_io L2_loadbzw2_io_Rd32 L2_loadbzw2_io_Rs32 L2_loadbzw2_io_s11_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbzw2_io_Rd32 & L2_loadbzw2_io_Rs32 & L2_loadbzw2_io_s11_1 unimpl

:L4_loadbzw2_ur L4_loadbzw2_ur_Rd32 L4_loadbzw2_ur_Rt32 L4_loadbzw2_ur_u2 L4_loadbzw2_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadbzw2_ur_Rd32 & L4_loadbzw2_ur_Rt32 & L4_loadbzw2_ur_u2 & L4_loadbzw2_ur_U6 unimpl

:L4_loadbzw2_ap L4_loadbzw2_ap_Rd32 L4_loadbzw2_ap_Re32 L4_loadbzw2_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadbzw2_ap_Rd32 & L4_loadbzw2_ap_Re32 & L4_loadbzw2_ap_U6 unimpl

:L2_loadbzw2_pr L2_loadbzw2_pr_Rd32 L2_loadbzw2_pr_Rx32 L2_loadbzw2_pr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbzw2_pr_Rd32 & L2_loadbzw2_pr_Rx32 & L2_loadbzw2_pr_Mu2 unimpl

:L2_loadbzw2_pbr L2_loadbzw2_pbr_Rd32 L2_loadbzw2_pbr_Rx32 L2_loadbzw2_pbr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbzw2_pbr_Rd32 & L2_loadbzw2_pbr_Rx32 & L2_loadbzw2_pbr_Mu2 unimpl

:L2_loadbzw2_pi L2_loadbzw2_pi_Rd32 L2_loadbzw2_pi_Rx32 L2_loadbzw2_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbzw2_pi_Rd32 & L2_loadbzw2_pi_Rx32 & L2_loadbzw2_pi_s4_1 unimpl

:L2_loadbzw2_pci L2_loadbzw2_pci_Rd32 L2_loadbzw2_pci_Rx32 L2_loadbzw2_pci_Mu2 L2_loadbzw2_pci_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b9 = 0 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbzw2_pci_Rd32 & L2_loadbzw2_pci_Rx32 & L2_loadbzw2_pci_Mu2 & L2_loadbzw2_pci_s4_1 unimpl

:L2_loadbzw2_pcr L2_loadbzw2_pcr_Rd32 L2_loadbzw2_pcr_Rx32 L2_loadbzw2_pcr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b9 = 1 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbzw2_pcr_Rd32 & L2_loadbzw2_pcr_Rx32 & L2_loadbzw2_pcr_Mu2 unimpl

:L2_loadbzw4_io L2_loadbzw4_io_Rdd32 L2_loadbzw4_io_Rs32 L2_loadbzw4_io_s11_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbzw4_io_Rdd32 & L2_loadbzw4_io_Rs32 & L2_loadbzw4_io_s11_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_loadbzw4_io_Rs32 + L2_loadbzw4_io_s11_2;
  EA = tmp0;
  local tmpV:4;
  local i:4;
  tmpV = *:4 EA;
  local tmp1:8;
  tmp1 = 65535;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = tmp1 << tmp5;
  local tmp7:8;
  tmp7 = ~ tmp6;
  local tmp8:8;
  tmp8 = L2_loadbzw4_io_Rdd32 & tmp7;
  local tmp9:8;
  local tmp10:1;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 8;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = tmpV >> tmp13;
  local tmp15:4;
  tmp15 = 255;
  local tmp16:4;
  tmp16 = tmp14 & tmp15;
  tmp10 = tmp16:1;
  local tmp17:4;
  tmp17 = 65535;
  local tmp18:4;
  tmp18 = sext(tmp10);
  local tmp19:4;
  tmp19 = tmp18 & tmp17;
  tmp9 = sext(tmp19);
  local tmp20:4;
  tmp20 = 0;
  local tmp21:4;
  tmp21 = 16;
  local tmp22:4;
  tmp22 = tmp20 * tmp21;
  local tmp23:8;
  tmp23 = zext(tmp22);
  local tmp24:8;
  tmp24 = tmp9 << tmp23;
  local tmp25:8;
  tmp25 = tmp8 | tmp24;
  L2_loadbzw4_io_Rdd32 = tmp25;
  local tmp26:8;
  tmp26 = 65535;
  local tmp27:4;
  tmp27 = 1;
  local tmp28:4;
  tmp28 = 16;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp26 << tmp30;
  local tmp32:8;
  tmp32 = ~ tmp31;
  local tmp33:8;
  tmp33 = L2_loadbzw4_io_Rdd32 & tmp32;
  local tmp34:8;
  local tmp35:1;
  local tmp36:4;
  tmp36 = 1;
  local tmp37:4;
  tmp37 = 8;
  local tmp38:4;
  tmp38 = tmp36 * tmp37;
  local tmp39:4;
  tmp39 = tmpV >> tmp38;
  local tmp40:4;
  tmp40 = 255;
  local tmp41:4;
  tmp41 = tmp39 & tmp40;
  tmp35 = tmp41:1;
  local tmp42:4;
  tmp42 = 65535;
  local tmp43:4;
  tmp43 = sext(tmp35);
  local tmp44:4;
  tmp44 = tmp43 & tmp42;
  tmp34 = sext(tmp44);
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 16;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:8;
  tmp48 = zext(tmp47);
  local tmp49:8;
  tmp49 = tmp34 << tmp48;
  local tmp50:8;
  tmp50 = tmp33 | tmp49;
  L2_loadbzw4_io_Rdd32 = tmp50;
  local tmp51:8;
  tmp51 = 65535;
  local tmp52:4;
  tmp52 = 2;
  local tmp53:4;
  tmp53 = 16;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp51 << tmp55;
  local tmp57:8;
  tmp57 = ~ tmp56;
  local tmp58:8;
  tmp58 = L2_loadbzw4_io_Rdd32 & tmp57;
  local tmp59:8;
  local tmp60:1;
  local tmp61:4;
  tmp61 = 2;
  local tmp62:4;
  tmp62 = 8;
  local tmp63:4;
  tmp63 = tmp61 * tmp62;
  local tmp64:4;
  tmp64 = tmpV >> tmp63;
  local tmp65:4;
  tmp65 = 255;
  local tmp66:4;
  tmp66 = tmp64 & tmp65;
  tmp60 = tmp66:1;
  local tmp67:4;
  tmp67 = 65535;
  local tmp68:4;
  tmp68 = sext(tmp60);
  local tmp69:4;
  tmp69 = tmp68 & tmp67;
  tmp59 = sext(tmp69);
  local tmp70:4;
  tmp70 = 2;
  local tmp71:4;
  tmp71 = 16;
  local tmp72:4;
  tmp72 = tmp70 * tmp71;
  local tmp73:8;
  tmp73 = zext(tmp72);
  local tmp74:8;
  tmp74 = tmp59 << tmp73;
  local tmp75:8;
  tmp75 = tmp58 | tmp74;
  L2_loadbzw4_io_Rdd32 = tmp75;
  local tmp76:8;
  tmp76 = 65535;
  local tmp77:4;
  tmp77 = 3;
  local tmp78:4;
  tmp78 = 16;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = tmp76 << tmp80;
  local tmp82:8;
  tmp82 = ~ tmp81;
  local tmp83:8;
  tmp83 = L2_loadbzw4_io_Rdd32 & tmp82;
  local tmp84:8;
  local tmp85:1;
  local tmp86:4;
  tmp86 = 3;
  local tmp87:4;
  tmp87 = 8;
  local tmp88:4;
  tmp88 = tmp86 * tmp87;
  local tmp89:4;
  tmp89 = tmpV >> tmp88;
  local tmp90:4;
  tmp90 = 255;
  local tmp91:4;
  tmp91 = tmp89 & tmp90;
  tmp85 = tmp91:1;
  local tmp92:4;
  tmp92 = 65535;
  local tmp93:4;
  tmp93 = sext(tmp85);
  local tmp94:4;
  tmp94 = tmp93 & tmp92;
  tmp84 = sext(tmp94);
  local tmp95:4;
  tmp95 = 3;
  local tmp96:4;
  tmp96 = 16;
  local tmp97:4;
  tmp97 = tmp95 * tmp96;
  local tmp98:8;
  tmp98 = zext(tmp97);
  local tmp99:8;
  tmp99 = tmp84 << tmp98;
  local tmp100:8;
  tmp100 = tmp83 | tmp99;
  L2_loadbzw4_io_Rdd32 = tmp100;
}

:L4_loadbzw4_ur L4_loadbzw4_ur_Rdd32 L4_loadbzw4_ur_Rt32 L4_loadbzw4_ur_u2 L4_loadbzw4_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadbzw4_ur_Rdd32 & L4_loadbzw4_ur_Rt32 & L4_loadbzw4_ur_u2 & L4_loadbzw4_ur_U6 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_loadbzw4_ur_Rt32 << L4_loadbzw4_ur_u2;
  local tmp1:4;
  tmp1 = L4_loadbzw4_ur_U6 + tmp0;
  EA = tmp1;
  local tmpV:4;
  local i:4;
  tmpV = *:4 EA;
  local tmp2:8;
  tmp2 = 65535;
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:8;
  tmp6 = zext(tmp5);
  local tmp7:8;
  tmp7 = tmp2 << tmp6;
  local tmp8:8;
  tmp8 = ~ tmp7;
  local tmp9:8;
  tmp9 = L4_loadbzw4_ur_Rdd32 & tmp8;
  local tmp10:8;
  local tmp11:1;
  local tmp12:4;
  tmp12 = 0;
  local tmp13:4;
  tmp13 = 8;
  local tmp14:4;
  tmp14 = tmp12 * tmp13;
  local tmp15:4;
  tmp15 = tmpV >> tmp14;
  local tmp16:4;
  tmp16 = 255;
  local tmp17:4;
  tmp17 = tmp15 & tmp16;
  tmp11 = tmp17:1;
  local tmp18:4;
  tmp18 = 65535;
  local tmp19:4;
  tmp19 = sext(tmp11);
  local tmp20:4;
  tmp20 = tmp19 & tmp18;
  tmp10 = sext(tmp20);
  local tmp21:4;
  tmp21 = 0;
  local tmp22:4;
  tmp22 = 16;
  local tmp23:4;
  tmp23 = tmp21 * tmp22;
  local tmp24:8;
  tmp24 = zext(tmp23);
  local tmp25:8;
  tmp25 = tmp10 << tmp24;
  local tmp26:8;
  tmp26 = tmp9 | tmp25;
  L4_loadbzw4_ur_Rdd32 = tmp26;
  local tmp27:8;
  tmp27 = 65535;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = 16;
  local tmp30:4;
  tmp30 = tmp28 * tmp29;
  local tmp31:8;
  tmp31 = zext(tmp30);
  local tmp32:8;
  tmp32 = tmp27 << tmp31;
  local tmp33:8;
  tmp33 = ~ tmp32;
  local tmp34:8;
  tmp34 = L4_loadbzw4_ur_Rdd32 & tmp33;
  local tmp35:8;
  local tmp36:1;
  local tmp37:4;
  tmp37 = 1;
  local tmp38:4;
  tmp38 = 8;
  local tmp39:4;
  tmp39 = tmp37 * tmp38;
  local tmp40:4;
  tmp40 = tmpV >> tmp39;
  local tmp41:4;
  tmp41 = 255;
  local tmp42:4;
  tmp42 = tmp40 & tmp41;
  tmp36 = tmp42:1;
  local tmp43:4;
  tmp43 = 65535;
  local tmp44:4;
  tmp44 = sext(tmp36);
  local tmp45:4;
  tmp45 = tmp44 & tmp43;
  tmp35 = sext(tmp45);
  local tmp46:4;
  tmp46 = 1;
  local tmp47:4;
  tmp47 = 16;
  local tmp48:4;
  tmp48 = tmp46 * tmp47;
  local tmp49:8;
  tmp49 = zext(tmp48);
  local tmp50:8;
  tmp50 = tmp35 << tmp49;
  local tmp51:8;
  tmp51 = tmp34 | tmp50;
  L4_loadbzw4_ur_Rdd32 = tmp51;
  local tmp52:8;
  tmp52 = 65535;
  local tmp53:4;
  tmp53 = 2;
  local tmp54:4;
  tmp54 = 16;
  local tmp55:4;
  tmp55 = tmp53 * tmp54;
  local tmp56:8;
  tmp56 = zext(tmp55);
  local tmp57:8;
  tmp57 = tmp52 << tmp56;
  local tmp58:8;
  tmp58 = ~ tmp57;
  local tmp59:8;
  tmp59 = L4_loadbzw4_ur_Rdd32 & tmp58;
  local tmp60:8;
  local tmp61:1;
  local tmp62:4;
  tmp62 = 2;
  local tmp63:4;
  tmp63 = 8;
  local tmp64:4;
  tmp64 = tmp62 * tmp63;
  local tmp65:4;
  tmp65 = tmpV >> tmp64;
  local tmp66:4;
  tmp66 = 255;
  local tmp67:4;
  tmp67 = tmp65 & tmp66;
  tmp61 = tmp67:1;
  local tmp68:4;
  tmp68 = 65535;
  local tmp69:4;
  tmp69 = sext(tmp61);
  local tmp70:4;
  tmp70 = tmp69 & tmp68;
  tmp60 = sext(tmp70);
  local tmp71:4;
  tmp71 = 2;
  local tmp72:4;
  tmp72 = 16;
  local tmp73:4;
  tmp73 = tmp71 * tmp72;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = tmp60 << tmp74;
  local tmp76:8;
  tmp76 = tmp59 | tmp75;
  L4_loadbzw4_ur_Rdd32 = tmp76;
  local tmp77:8;
  tmp77 = 65535;
  local tmp78:4;
  tmp78 = 3;
  local tmp79:4;
  tmp79 = 16;
  local tmp80:4;
  tmp80 = tmp78 * tmp79;
  local tmp81:8;
  tmp81 = zext(tmp80);
  local tmp82:8;
  tmp82 = tmp77 << tmp81;
  local tmp83:8;
  tmp83 = ~ tmp82;
  local tmp84:8;
  tmp84 = L4_loadbzw4_ur_Rdd32 & tmp83;
  local tmp85:8;
  local tmp86:1;
  local tmp87:4;
  tmp87 = 3;
  local tmp88:4;
  tmp88 = 8;
  local tmp89:4;
  tmp89 = tmp87 * tmp88;
  local tmp90:4;
  tmp90 = tmpV >> tmp89;
  local tmp91:4;
  tmp91 = 255;
  local tmp92:4;
  tmp92 = tmp90 & tmp91;
  tmp86 = tmp92:1;
  local tmp93:4;
  tmp93 = 65535;
  local tmp94:4;
  tmp94 = sext(tmp86);
  local tmp95:4;
  tmp95 = tmp94 & tmp93;
  tmp85 = sext(tmp95);
  local tmp96:4;
  tmp96 = 3;
  local tmp97:4;
  tmp97 = 16;
  local tmp98:4;
  tmp98 = tmp96 * tmp97;
  local tmp99:8;
  tmp99 = zext(tmp98);
  local tmp100:8;
  tmp100 = tmp85 << tmp99;
  local tmp101:8;
  tmp101 = tmp84 | tmp100;
  L4_loadbzw4_ur_Rdd32 = tmp101;
}

:L4_loadbzw4_ap L4_loadbzw4_ap_Rdd32 L4_loadbzw4_ap_Re32 L4_loadbzw4_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadbzw4_ap_Rdd32 & L4_loadbzw4_ap_Re32 & L4_loadbzw4_ap_U6 {
  local EA:4;
  EA = L4_loadbzw4_ap_U6;
  local tmpV:4;
  local i:4;
  tmpV = *:4 EA;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = L4_loadbzw4_ap_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:1;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 8;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:4;
  tmp13 = tmpV >> tmp12;
  local tmp14:4;
  tmp14 = 255;
  local tmp15:4;
  tmp15 = tmp13 & tmp14;
  tmp9 = tmp15:1;
  local tmp16:4;
  tmp16 = 65535;
  local tmp17:4;
  tmp17 = sext(tmp9);
  local tmp18:4;
  tmp18 = tmp17 & tmp16;
  tmp8 = sext(tmp18);
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp8 << tmp22;
  local tmp24:8;
  tmp24 = tmp7 | tmp23;
  L4_loadbzw4_ap_Rdd32 = tmp24;
  local tmp25:8;
  tmp25 = 65535;
  local tmp26:4;
  tmp26 = 1;
  local tmp27:4;
  tmp27 = 16;
  local tmp28:4;
  tmp28 = tmp26 * tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp25 << tmp29;
  local tmp31:8;
  tmp31 = ~ tmp30;
  local tmp32:8;
  tmp32 = L4_loadbzw4_ap_Rdd32 & tmp31;
  local tmp33:8;
  local tmp34:1;
  local tmp35:4;
  tmp35 = 1;
  local tmp36:4;
  tmp36 = 8;
  local tmp37:4;
  tmp37 = tmp35 * tmp36;
  local tmp38:4;
  tmp38 = tmpV >> tmp37;
  local tmp39:4;
  tmp39 = 255;
  local tmp40:4;
  tmp40 = tmp38 & tmp39;
  tmp34 = tmp40:1;
  local tmp41:4;
  tmp41 = 65535;
  local tmp42:4;
  tmp42 = sext(tmp34);
  local tmp43:4;
  tmp43 = tmp42 & tmp41;
  tmp33 = sext(tmp43);
  local tmp44:4;
  tmp44 = 1;
  local tmp45:4;
  tmp45 = 16;
  local tmp46:4;
  tmp46 = tmp44 * tmp45;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp33 << tmp47;
  local tmp49:8;
  tmp49 = tmp32 | tmp48;
  L4_loadbzw4_ap_Rdd32 = tmp49;
  local tmp50:8;
  tmp50 = 65535;
  local tmp51:4;
  tmp51 = 2;
  local tmp52:4;
  tmp52 = 16;
  local tmp53:4;
  tmp53 = tmp51 * tmp52;
  local tmp54:8;
  tmp54 = zext(tmp53);
  local tmp55:8;
  tmp55 = tmp50 << tmp54;
  local tmp56:8;
  tmp56 = ~ tmp55;
  local tmp57:8;
  tmp57 = L4_loadbzw4_ap_Rdd32 & tmp56;
  local tmp58:8;
  local tmp59:1;
  local tmp60:4;
  tmp60 = 2;
  local tmp61:4;
  tmp61 = 8;
  local tmp62:4;
  tmp62 = tmp60 * tmp61;
  local tmp63:4;
  tmp63 = tmpV >> tmp62;
  local tmp64:4;
  tmp64 = 255;
  local tmp65:4;
  tmp65 = tmp63 & tmp64;
  tmp59 = tmp65:1;
  local tmp66:4;
  tmp66 = 65535;
  local tmp67:4;
  tmp67 = sext(tmp59);
  local tmp68:4;
  tmp68 = tmp67 & tmp66;
  tmp58 = sext(tmp68);
  local tmp69:4;
  tmp69 = 2;
  local tmp70:4;
  tmp70 = 16;
  local tmp71:4;
  tmp71 = tmp69 * tmp70;
  local tmp72:8;
  tmp72 = zext(tmp71);
  local tmp73:8;
  tmp73 = tmp58 << tmp72;
  local tmp74:8;
  tmp74 = tmp57 | tmp73;
  L4_loadbzw4_ap_Rdd32 = tmp74;
  local tmp75:8;
  tmp75 = 65535;
  local tmp76:4;
  tmp76 = 3;
  local tmp77:4;
  tmp77 = 16;
  local tmp78:4;
  tmp78 = tmp76 * tmp77;
  local tmp79:8;
  tmp79 = zext(tmp78);
  local tmp80:8;
  tmp80 = tmp75 << tmp79;
  local tmp81:8;
  tmp81 = ~ tmp80;
  local tmp82:8;
  tmp82 = L4_loadbzw4_ap_Rdd32 & tmp81;
  local tmp83:8;
  local tmp84:1;
  local tmp85:4;
  tmp85 = 3;
  local tmp86:4;
  tmp86 = 8;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:4;
  tmp88 = tmpV >> tmp87;
  local tmp89:4;
  tmp89 = 255;
  local tmp90:4;
  tmp90 = tmp88 & tmp89;
  tmp84 = tmp90:1;
  local tmp91:4;
  tmp91 = 65535;
  local tmp92:4;
  tmp92 = sext(tmp84);
  local tmp93:4;
  tmp93 = tmp92 & tmp91;
  tmp83 = sext(tmp93);
  local tmp94:4;
  tmp94 = 3;
  local tmp95:4;
  tmp95 = 16;
  local tmp96:4;
  tmp96 = tmp94 * tmp95;
  local tmp97:8;
  tmp97 = zext(tmp96);
  local tmp98:8;
  tmp98 = tmp83 << tmp97;
  local tmp99:8;
  tmp99 = tmp82 | tmp98;
  L4_loadbzw4_ap_Rdd32 = tmp99;
  L4_loadbzw4_ap_Re32 = L4_loadbzw4_ap_U6;
}

:L2_loadbzw4_pr L2_loadbzw4_pr_Rdd32 L2_loadbzw4_pr_Rx32 L2_loadbzw4_pr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbzw4_pr_Rdd32 & L2_loadbzw4_pr_Rx32 & L2_loadbzw4_pr_Mu2 {
  local EA:4;
  EA = L2_loadbzw4_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(L2_loadbzw4_pr_Mu2);
  local tmp1:4;
  tmp1 = L2_loadbzw4_pr_Rx32 + tmp0;
  L2_loadbzw4_pr_Rx32 = tmp1;
  local tmpV:4;
  local i:4;
  tmpV = *:4 EA;
  local tmp2:8;
  tmp2 = 65535;
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:8;
  tmp6 = zext(tmp5);
  local tmp7:8;
  tmp7 = tmp2 << tmp6;
  local tmp8:8;
  tmp8 = ~ tmp7;
  local tmp9:8;
  tmp9 = L2_loadbzw4_pr_Rdd32 & tmp8;
  local tmp10:8;
  local tmp11:1;
  local tmp12:4;
  tmp12 = 0;
  local tmp13:4;
  tmp13 = 8;
  local tmp14:4;
  tmp14 = tmp12 * tmp13;
  local tmp15:4;
  tmp15 = tmpV >> tmp14;
  local tmp16:4;
  tmp16 = 255;
  local tmp17:4;
  tmp17 = tmp15 & tmp16;
  tmp11 = tmp17:1;
  local tmp18:4;
  tmp18 = 65535;
  local tmp19:4;
  tmp19 = sext(tmp11);
  local tmp20:4;
  tmp20 = tmp19 & tmp18;
  tmp10 = sext(tmp20);
  local tmp21:4;
  tmp21 = 0;
  local tmp22:4;
  tmp22 = 16;
  local tmp23:4;
  tmp23 = tmp21 * tmp22;
  local tmp24:8;
  tmp24 = zext(tmp23);
  local tmp25:8;
  tmp25 = tmp10 << tmp24;
  local tmp26:8;
  tmp26 = tmp9 | tmp25;
  L2_loadbzw4_pr_Rdd32 = tmp26;
  local tmp27:8;
  tmp27 = 65535;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = 16;
  local tmp30:4;
  tmp30 = tmp28 * tmp29;
  local tmp31:8;
  tmp31 = zext(tmp30);
  local tmp32:8;
  tmp32 = tmp27 << tmp31;
  local tmp33:8;
  tmp33 = ~ tmp32;
  local tmp34:8;
  tmp34 = L2_loadbzw4_pr_Rdd32 & tmp33;
  local tmp35:8;
  local tmp36:1;
  local tmp37:4;
  tmp37 = 1;
  local tmp38:4;
  tmp38 = 8;
  local tmp39:4;
  tmp39 = tmp37 * tmp38;
  local tmp40:4;
  tmp40 = tmpV >> tmp39;
  local tmp41:4;
  tmp41 = 255;
  local tmp42:4;
  tmp42 = tmp40 & tmp41;
  tmp36 = tmp42:1;
  local tmp43:4;
  tmp43 = 65535;
  local tmp44:4;
  tmp44 = sext(tmp36);
  local tmp45:4;
  tmp45 = tmp44 & tmp43;
  tmp35 = sext(tmp45);
  local tmp46:4;
  tmp46 = 1;
  local tmp47:4;
  tmp47 = 16;
  local tmp48:4;
  tmp48 = tmp46 * tmp47;
  local tmp49:8;
  tmp49 = zext(tmp48);
  local tmp50:8;
  tmp50 = tmp35 << tmp49;
  local tmp51:8;
  tmp51 = tmp34 | tmp50;
  L2_loadbzw4_pr_Rdd32 = tmp51;
  local tmp52:8;
  tmp52 = 65535;
  local tmp53:4;
  tmp53 = 2;
  local tmp54:4;
  tmp54 = 16;
  local tmp55:4;
  tmp55 = tmp53 * tmp54;
  local tmp56:8;
  tmp56 = zext(tmp55);
  local tmp57:8;
  tmp57 = tmp52 << tmp56;
  local tmp58:8;
  tmp58 = ~ tmp57;
  local tmp59:8;
  tmp59 = L2_loadbzw4_pr_Rdd32 & tmp58;
  local tmp60:8;
  local tmp61:1;
  local tmp62:4;
  tmp62 = 2;
  local tmp63:4;
  tmp63 = 8;
  local tmp64:4;
  tmp64 = tmp62 * tmp63;
  local tmp65:4;
  tmp65 = tmpV >> tmp64;
  local tmp66:4;
  tmp66 = 255;
  local tmp67:4;
  tmp67 = tmp65 & tmp66;
  tmp61 = tmp67:1;
  local tmp68:4;
  tmp68 = 65535;
  local tmp69:4;
  tmp69 = sext(tmp61);
  local tmp70:4;
  tmp70 = tmp69 & tmp68;
  tmp60 = sext(tmp70);
  local tmp71:4;
  tmp71 = 2;
  local tmp72:4;
  tmp72 = 16;
  local tmp73:4;
  tmp73 = tmp71 * tmp72;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = tmp60 << tmp74;
  local tmp76:8;
  tmp76 = tmp59 | tmp75;
  L2_loadbzw4_pr_Rdd32 = tmp76;
  local tmp77:8;
  tmp77 = 65535;
  local tmp78:4;
  tmp78 = 3;
  local tmp79:4;
  tmp79 = 16;
  local tmp80:4;
  tmp80 = tmp78 * tmp79;
  local tmp81:8;
  tmp81 = zext(tmp80);
  local tmp82:8;
  tmp82 = tmp77 << tmp81;
  local tmp83:8;
  tmp83 = ~ tmp82;
  local tmp84:8;
  tmp84 = L2_loadbzw4_pr_Rdd32 & tmp83;
  local tmp85:8;
  local tmp86:1;
  local tmp87:4;
  tmp87 = 3;
  local tmp88:4;
  tmp88 = 8;
  local tmp89:4;
  tmp89 = tmp87 * tmp88;
  local tmp90:4;
  tmp90 = tmpV >> tmp89;
  local tmp91:4;
  tmp91 = 255;
  local tmp92:4;
  tmp92 = tmp90 & tmp91;
  tmp86 = tmp92:1;
  local tmp93:4;
  tmp93 = 65535;
  local tmp94:4;
  tmp94 = sext(tmp86);
  local tmp95:4;
  tmp95 = tmp94 & tmp93;
  tmp85 = sext(tmp95);
  local tmp96:4;
  tmp96 = 3;
  local tmp97:4;
  tmp97 = 16;
  local tmp98:4;
  tmp98 = tmp96 * tmp97;
  local tmp99:8;
  tmp99 = zext(tmp98);
  local tmp100:8;
  tmp100 = tmp85 << tmp99;
  local tmp101:8;
  tmp101 = tmp84 | tmp100;
  L2_loadbzw4_pr_Rdd32 = tmp101;
}

:L2_loadbzw4_pbr L2_loadbzw4_pbr_Rdd32 L2_loadbzw4_pbr_Rx32 L2_loadbzw4_pbr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbzw4_pbr_Rdd32 & L2_loadbzw4_pbr_Rx32 & L2_loadbzw4_pbr_Mu2 unimpl

:L2_loadbzw4_pi L2_loadbzw4_pi_Rdd32 L2_loadbzw4_pi_Rx32 L2_loadbzw4_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbzw4_pi_Rdd32 & L2_loadbzw4_pi_Rx32 & L2_loadbzw4_pi_s4_2 {
  local EA:4;
  EA = L2_loadbzw4_pi_Rx32;
  local tmp0:4;
  tmp0 = L2_loadbzw4_pi_Rx32 + L2_loadbzw4_pi_s4_2;
  L2_loadbzw4_pi_Rx32 = tmp0;
  local tmpV:4;
  local i:4;
  tmpV = *:4 EA;
  local tmp1:8;
  tmp1 = 65535;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = tmp1 << tmp5;
  local tmp7:8;
  tmp7 = ~ tmp6;
  local tmp8:8;
  tmp8 = L2_loadbzw4_pi_Rdd32 & tmp7;
  local tmp9:8;
  local tmp10:1;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 8;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = tmpV >> tmp13;
  local tmp15:4;
  tmp15 = 255;
  local tmp16:4;
  tmp16 = tmp14 & tmp15;
  tmp10 = tmp16:1;
  local tmp17:4;
  tmp17 = 65535;
  local tmp18:4;
  tmp18 = sext(tmp10);
  local tmp19:4;
  tmp19 = tmp18 & tmp17;
  tmp9 = sext(tmp19);
  local tmp20:4;
  tmp20 = 0;
  local tmp21:4;
  tmp21 = 16;
  local tmp22:4;
  tmp22 = tmp20 * tmp21;
  local tmp23:8;
  tmp23 = zext(tmp22);
  local tmp24:8;
  tmp24 = tmp9 << tmp23;
  local tmp25:8;
  tmp25 = tmp8 | tmp24;
  L2_loadbzw4_pi_Rdd32 = tmp25;
  local tmp26:8;
  tmp26 = 65535;
  local tmp27:4;
  tmp27 = 1;
  local tmp28:4;
  tmp28 = 16;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp26 << tmp30;
  local tmp32:8;
  tmp32 = ~ tmp31;
  local tmp33:8;
  tmp33 = L2_loadbzw4_pi_Rdd32 & tmp32;
  local tmp34:8;
  local tmp35:1;
  local tmp36:4;
  tmp36 = 1;
  local tmp37:4;
  tmp37 = 8;
  local tmp38:4;
  tmp38 = tmp36 * tmp37;
  local tmp39:4;
  tmp39 = tmpV >> tmp38;
  local tmp40:4;
  tmp40 = 255;
  local tmp41:4;
  tmp41 = tmp39 & tmp40;
  tmp35 = tmp41:1;
  local tmp42:4;
  tmp42 = 65535;
  local tmp43:4;
  tmp43 = sext(tmp35);
  local tmp44:4;
  tmp44 = tmp43 & tmp42;
  tmp34 = sext(tmp44);
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 16;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:8;
  tmp48 = zext(tmp47);
  local tmp49:8;
  tmp49 = tmp34 << tmp48;
  local tmp50:8;
  tmp50 = tmp33 | tmp49;
  L2_loadbzw4_pi_Rdd32 = tmp50;
  local tmp51:8;
  tmp51 = 65535;
  local tmp52:4;
  tmp52 = 2;
  local tmp53:4;
  tmp53 = 16;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp51 << tmp55;
  local tmp57:8;
  tmp57 = ~ tmp56;
  local tmp58:8;
  tmp58 = L2_loadbzw4_pi_Rdd32 & tmp57;
  local tmp59:8;
  local tmp60:1;
  local tmp61:4;
  tmp61 = 2;
  local tmp62:4;
  tmp62 = 8;
  local tmp63:4;
  tmp63 = tmp61 * tmp62;
  local tmp64:4;
  tmp64 = tmpV >> tmp63;
  local tmp65:4;
  tmp65 = 255;
  local tmp66:4;
  tmp66 = tmp64 & tmp65;
  tmp60 = tmp66:1;
  local tmp67:4;
  tmp67 = 65535;
  local tmp68:4;
  tmp68 = sext(tmp60);
  local tmp69:4;
  tmp69 = tmp68 & tmp67;
  tmp59 = sext(tmp69);
  local tmp70:4;
  tmp70 = 2;
  local tmp71:4;
  tmp71 = 16;
  local tmp72:4;
  tmp72 = tmp70 * tmp71;
  local tmp73:8;
  tmp73 = zext(tmp72);
  local tmp74:8;
  tmp74 = tmp59 << tmp73;
  local tmp75:8;
  tmp75 = tmp58 | tmp74;
  L2_loadbzw4_pi_Rdd32 = tmp75;
  local tmp76:8;
  tmp76 = 65535;
  local tmp77:4;
  tmp77 = 3;
  local tmp78:4;
  tmp78 = 16;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = tmp76 << tmp80;
  local tmp82:8;
  tmp82 = ~ tmp81;
  local tmp83:8;
  tmp83 = L2_loadbzw4_pi_Rdd32 & tmp82;
  local tmp84:8;
  local tmp85:1;
  local tmp86:4;
  tmp86 = 3;
  local tmp87:4;
  tmp87 = 8;
  local tmp88:4;
  tmp88 = tmp86 * tmp87;
  local tmp89:4;
  tmp89 = tmpV >> tmp88;
  local tmp90:4;
  tmp90 = 255;
  local tmp91:4;
  tmp91 = tmp89 & tmp90;
  tmp85 = tmp91:1;
  local tmp92:4;
  tmp92 = 65535;
  local tmp93:4;
  tmp93 = sext(tmp85);
  local tmp94:4;
  tmp94 = tmp93 & tmp92;
  tmp84 = sext(tmp94);
  local tmp95:4;
  tmp95 = 3;
  local tmp96:4;
  tmp96 = 16;
  local tmp97:4;
  tmp97 = tmp95 * tmp96;
  local tmp98:8;
  tmp98 = zext(tmp97);
  local tmp99:8;
  tmp99 = tmp84 << tmp98;
  local tmp100:8;
  tmp100 = tmp83 | tmp99;
  L2_loadbzw4_pi_Rdd32 = tmp100;
}

:L2_loadbzw4_pci L2_loadbzw4_pci_Rdd32 L2_loadbzw4_pci_Rx32 L2_loadbzw4_pci_Mu2 L2_loadbzw4_pci_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b9 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbzw4_pci_Rdd32 & L2_loadbzw4_pci_Rx32 & L2_loadbzw4_pci_Mu2 & L2_loadbzw4_pci_s4_2 unimpl

:L2_loadbzw4_pcr L2_loadbzw4_pcr_Rdd32 L2_loadbzw4_pcr_Rx32 L2_loadbzw4_pcr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b9 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbzw4_pcr_Rdd32 & L2_loadbzw4_pcr_Rx32 & L2_loadbzw4_pcr_Mu2 unimpl

:L2_loadbsw2_io L2_loadbsw2_io_Rd32 L2_loadbsw2_io_Rs32 L2_loadbsw2_io_s11_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbsw2_io_Rd32 & L2_loadbsw2_io_Rs32 & L2_loadbsw2_io_s11_1 unimpl

:L4_loadbsw2_ur L4_loadbsw2_ur_Rd32 L4_loadbsw2_ur_Rt32 L4_loadbsw2_ur_u2 L4_loadbsw2_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadbsw2_ur_Rd32 & L4_loadbsw2_ur_Rt32 & L4_loadbsw2_ur_u2 & L4_loadbsw2_ur_U6 unimpl

:L4_loadbsw2_ap L4_loadbsw2_ap_Rd32 L4_loadbsw2_ap_Re32 L4_loadbsw2_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadbsw2_ap_Rd32 & L4_loadbsw2_ap_Re32 & L4_loadbsw2_ap_U6 unimpl

:L2_loadbsw2_pr L2_loadbsw2_pr_Rd32 L2_loadbsw2_pr_Rx32 L2_loadbsw2_pr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbsw2_pr_Rd32 & L2_loadbsw2_pr_Rx32 & L2_loadbsw2_pr_Mu2 unimpl

:L2_loadbsw2_pbr L2_loadbsw2_pbr_Rd32 L2_loadbsw2_pbr_Rx32 L2_loadbsw2_pbr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbsw2_pbr_Rd32 & L2_loadbsw2_pbr_Rx32 & L2_loadbsw2_pbr_Mu2 unimpl

:L2_loadbsw2_pi L2_loadbsw2_pi_Rd32 L2_loadbsw2_pi_Rx32 L2_loadbsw2_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbsw2_pi_Rd32 & L2_loadbsw2_pi_Rx32 & L2_loadbsw2_pi_s4_1 unimpl

:L2_loadbsw2_pci L2_loadbsw2_pci_Rd32 L2_loadbsw2_pci_Rx32 L2_loadbsw2_pci_Mu2 L2_loadbsw2_pci_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b9 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbsw2_pci_Rd32 & L2_loadbsw2_pci_Rx32 & L2_loadbsw2_pci_Mu2 & L2_loadbsw2_pci_s4_1 unimpl

:L2_loadbsw2_pcr L2_loadbsw2_pcr_Rd32 L2_loadbsw2_pcr_Rx32 L2_loadbsw2_pcr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b9 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbsw2_pcr_Rd32 & L2_loadbsw2_pcr_Rx32 & L2_loadbsw2_pcr_Mu2 unimpl

:L2_loadbsw4_io L2_loadbsw4_io_Rdd32 L2_loadbsw4_io_Rs32 L2_loadbsw4_io_s11_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbsw4_io_Rdd32 & L2_loadbsw4_io_Rs32 & L2_loadbsw4_io_s11_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_loadbsw4_io_Rs32 + L2_loadbsw4_io_s11_2;
  EA = tmp0;
  local tmpV:4;
  local i:4;
  tmpV = *:4 EA;
  local tmp1:8;
  tmp1 = 65535;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = tmp1 << tmp5;
  local tmp7:8;
  tmp7 = ~ tmp6;
  local tmp8:8;
  tmp8 = L2_loadbsw4_io_Rdd32 & tmp7;
  local tmp9:8;
  local tmp10:1;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 8;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = tmpV >> tmp13;
  local tmp15:4;
  tmp15 = 255;
  local tmp16:4;
  tmp16 = tmp14 & tmp15;
  tmp10 = tmp16:1;
  local tmp17:4;
  tmp17 = 65535;
  local tmp18:4;
  tmp18 = zext(tmp10);
  local tmp19:4;
  tmp19 = tmp18 & tmp17;
  tmp9 = sext(tmp19);
  local tmp20:4;
  tmp20 = 0;
  local tmp21:4;
  tmp21 = 16;
  local tmp22:4;
  tmp22 = tmp20 * tmp21;
  local tmp23:8;
  tmp23 = zext(tmp22);
  local tmp24:8;
  tmp24 = tmp9 << tmp23;
  local tmp25:8;
  tmp25 = tmp8 | tmp24;
  L2_loadbsw4_io_Rdd32 = tmp25;
  local tmp26:8;
  tmp26 = 65535;
  local tmp27:4;
  tmp27 = 1;
  local tmp28:4;
  tmp28 = 16;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp26 << tmp30;
  local tmp32:8;
  tmp32 = ~ tmp31;
  local tmp33:8;
  tmp33 = L2_loadbsw4_io_Rdd32 & tmp32;
  local tmp34:8;
  local tmp35:1;
  local tmp36:4;
  tmp36 = 1;
  local tmp37:4;
  tmp37 = 8;
  local tmp38:4;
  tmp38 = tmp36 * tmp37;
  local tmp39:4;
  tmp39 = tmpV >> tmp38;
  local tmp40:4;
  tmp40 = 255;
  local tmp41:4;
  tmp41 = tmp39 & tmp40;
  tmp35 = tmp41:1;
  local tmp42:4;
  tmp42 = 65535;
  local tmp43:4;
  tmp43 = zext(tmp35);
  local tmp44:4;
  tmp44 = tmp43 & tmp42;
  tmp34 = sext(tmp44);
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 16;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:8;
  tmp48 = zext(tmp47);
  local tmp49:8;
  tmp49 = tmp34 << tmp48;
  local tmp50:8;
  tmp50 = tmp33 | tmp49;
  L2_loadbsw4_io_Rdd32 = tmp50;
  local tmp51:8;
  tmp51 = 65535;
  local tmp52:4;
  tmp52 = 2;
  local tmp53:4;
  tmp53 = 16;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp51 << tmp55;
  local tmp57:8;
  tmp57 = ~ tmp56;
  local tmp58:8;
  tmp58 = L2_loadbsw4_io_Rdd32 & tmp57;
  local tmp59:8;
  local tmp60:1;
  local tmp61:4;
  tmp61 = 2;
  local tmp62:4;
  tmp62 = 8;
  local tmp63:4;
  tmp63 = tmp61 * tmp62;
  local tmp64:4;
  tmp64 = tmpV >> tmp63;
  local tmp65:4;
  tmp65 = 255;
  local tmp66:4;
  tmp66 = tmp64 & tmp65;
  tmp60 = tmp66:1;
  local tmp67:4;
  tmp67 = 65535;
  local tmp68:4;
  tmp68 = zext(tmp60);
  local tmp69:4;
  tmp69 = tmp68 & tmp67;
  tmp59 = sext(tmp69);
  local tmp70:4;
  tmp70 = 2;
  local tmp71:4;
  tmp71 = 16;
  local tmp72:4;
  tmp72 = tmp70 * tmp71;
  local tmp73:8;
  tmp73 = zext(tmp72);
  local tmp74:8;
  tmp74 = tmp59 << tmp73;
  local tmp75:8;
  tmp75 = tmp58 | tmp74;
  L2_loadbsw4_io_Rdd32 = tmp75;
  local tmp76:8;
  tmp76 = 65535;
  local tmp77:4;
  tmp77 = 3;
  local tmp78:4;
  tmp78 = 16;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = tmp76 << tmp80;
  local tmp82:8;
  tmp82 = ~ tmp81;
  local tmp83:8;
  tmp83 = L2_loadbsw4_io_Rdd32 & tmp82;
  local tmp84:8;
  local tmp85:1;
  local tmp86:4;
  tmp86 = 3;
  local tmp87:4;
  tmp87 = 8;
  local tmp88:4;
  tmp88 = tmp86 * tmp87;
  local tmp89:4;
  tmp89 = tmpV >> tmp88;
  local tmp90:4;
  tmp90 = 255;
  local tmp91:4;
  tmp91 = tmp89 & tmp90;
  tmp85 = tmp91:1;
  local tmp92:4;
  tmp92 = 65535;
  local tmp93:4;
  tmp93 = zext(tmp85);
  local tmp94:4;
  tmp94 = tmp93 & tmp92;
  tmp84 = sext(tmp94);
  local tmp95:4;
  tmp95 = 3;
  local tmp96:4;
  tmp96 = 16;
  local tmp97:4;
  tmp97 = tmp95 * tmp96;
  local tmp98:8;
  tmp98 = zext(tmp97);
  local tmp99:8;
  tmp99 = tmp84 << tmp98;
  local tmp100:8;
  tmp100 = tmp83 | tmp99;
  L2_loadbsw4_io_Rdd32 = tmp100;
}

:L4_loadbsw4_ur L4_loadbsw4_ur_Rdd32 L4_loadbsw4_ur_Rt32 L4_loadbsw4_ur_u2 L4_loadbsw4_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadbsw4_ur_Rdd32 & L4_loadbsw4_ur_Rt32 & L4_loadbsw4_ur_u2 & L4_loadbsw4_ur_U6 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_loadbsw4_ur_Rt32 << L4_loadbsw4_ur_u2;
  local tmp1:4;
  tmp1 = L4_loadbsw4_ur_U6 + tmp0;
  EA = tmp1;
  local tmpV:4;
  local i:4;
  tmpV = *:4 EA;
  local tmp2:8;
  tmp2 = 65535;
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:8;
  tmp6 = zext(tmp5);
  local tmp7:8;
  tmp7 = tmp2 << tmp6;
  local tmp8:8;
  tmp8 = ~ tmp7;
  local tmp9:8;
  tmp9 = L4_loadbsw4_ur_Rdd32 & tmp8;
  local tmp10:8;
  local tmp11:1;
  local tmp12:4;
  tmp12 = 0;
  local tmp13:4;
  tmp13 = 8;
  local tmp14:4;
  tmp14 = tmp12 * tmp13;
  local tmp15:4;
  tmp15 = tmpV >> tmp14;
  local tmp16:4;
  tmp16 = 255;
  local tmp17:4;
  tmp17 = tmp15 & tmp16;
  tmp11 = tmp17:1;
  local tmp18:4;
  tmp18 = 65535;
  local tmp19:4;
  tmp19 = zext(tmp11);
  local tmp20:4;
  tmp20 = tmp19 & tmp18;
  tmp10 = sext(tmp20);
  local tmp21:4;
  tmp21 = 0;
  local tmp22:4;
  tmp22 = 16;
  local tmp23:4;
  tmp23 = tmp21 * tmp22;
  local tmp24:8;
  tmp24 = zext(tmp23);
  local tmp25:8;
  tmp25 = tmp10 << tmp24;
  local tmp26:8;
  tmp26 = tmp9 | tmp25;
  L4_loadbsw4_ur_Rdd32 = tmp26;
  local tmp27:8;
  tmp27 = 65535;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = 16;
  local tmp30:4;
  tmp30 = tmp28 * tmp29;
  local tmp31:8;
  tmp31 = zext(tmp30);
  local tmp32:8;
  tmp32 = tmp27 << tmp31;
  local tmp33:8;
  tmp33 = ~ tmp32;
  local tmp34:8;
  tmp34 = L4_loadbsw4_ur_Rdd32 & tmp33;
  local tmp35:8;
  local tmp36:1;
  local tmp37:4;
  tmp37 = 1;
  local tmp38:4;
  tmp38 = 8;
  local tmp39:4;
  tmp39 = tmp37 * tmp38;
  local tmp40:4;
  tmp40 = tmpV >> tmp39;
  local tmp41:4;
  tmp41 = 255;
  local tmp42:4;
  tmp42 = tmp40 & tmp41;
  tmp36 = tmp42:1;
  local tmp43:4;
  tmp43 = 65535;
  local tmp44:4;
  tmp44 = zext(tmp36);
  local tmp45:4;
  tmp45 = tmp44 & tmp43;
  tmp35 = sext(tmp45);
  local tmp46:4;
  tmp46 = 1;
  local tmp47:4;
  tmp47 = 16;
  local tmp48:4;
  tmp48 = tmp46 * tmp47;
  local tmp49:8;
  tmp49 = zext(tmp48);
  local tmp50:8;
  tmp50 = tmp35 << tmp49;
  local tmp51:8;
  tmp51 = tmp34 | tmp50;
  L4_loadbsw4_ur_Rdd32 = tmp51;
  local tmp52:8;
  tmp52 = 65535;
  local tmp53:4;
  tmp53 = 2;
  local tmp54:4;
  tmp54 = 16;
  local tmp55:4;
  tmp55 = tmp53 * tmp54;
  local tmp56:8;
  tmp56 = zext(tmp55);
  local tmp57:8;
  tmp57 = tmp52 << tmp56;
  local tmp58:8;
  tmp58 = ~ tmp57;
  local tmp59:8;
  tmp59 = L4_loadbsw4_ur_Rdd32 & tmp58;
  local tmp60:8;
  local tmp61:1;
  local tmp62:4;
  tmp62 = 2;
  local tmp63:4;
  tmp63 = 8;
  local tmp64:4;
  tmp64 = tmp62 * tmp63;
  local tmp65:4;
  tmp65 = tmpV >> tmp64;
  local tmp66:4;
  tmp66 = 255;
  local tmp67:4;
  tmp67 = tmp65 & tmp66;
  tmp61 = tmp67:1;
  local tmp68:4;
  tmp68 = 65535;
  local tmp69:4;
  tmp69 = zext(tmp61);
  local tmp70:4;
  tmp70 = tmp69 & tmp68;
  tmp60 = sext(tmp70);
  local tmp71:4;
  tmp71 = 2;
  local tmp72:4;
  tmp72 = 16;
  local tmp73:4;
  tmp73 = tmp71 * tmp72;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = tmp60 << tmp74;
  local tmp76:8;
  tmp76 = tmp59 | tmp75;
  L4_loadbsw4_ur_Rdd32 = tmp76;
  local tmp77:8;
  tmp77 = 65535;
  local tmp78:4;
  tmp78 = 3;
  local tmp79:4;
  tmp79 = 16;
  local tmp80:4;
  tmp80 = tmp78 * tmp79;
  local tmp81:8;
  tmp81 = zext(tmp80);
  local tmp82:8;
  tmp82 = tmp77 << tmp81;
  local tmp83:8;
  tmp83 = ~ tmp82;
  local tmp84:8;
  tmp84 = L4_loadbsw4_ur_Rdd32 & tmp83;
  local tmp85:8;
  local tmp86:1;
  local tmp87:4;
  tmp87 = 3;
  local tmp88:4;
  tmp88 = 8;
  local tmp89:4;
  tmp89 = tmp87 * tmp88;
  local tmp90:4;
  tmp90 = tmpV >> tmp89;
  local tmp91:4;
  tmp91 = 255;
  local tmp92:4;
  tmp92 = tmp90 & tmp91;
  tmp86 = tmp92:1;
  local tmp93:4;
  tmp93 = 65535;
  local tmp94:4;
  tmp94 = zext(tmp86);
  local tmp95:4;
  tmp95 = tmp94 & tmp93;
  tmp85 = sext(tmp95);
  local tmp96:4;
  tmp96 = 3;
  local tmp97:4;
  tmp97 = 16;
  local tmp98:4;
  tmp98 = tmp96 * tmp97;
  local tmp99:8;
  tmp99 = zext(tmp98);
  local tmp100:8;
  tmp100 = tmp85 << tmp99;
  local tmp101:8;
  tmp101 = tmp84 | tmp100;
  L4_loadbsw4_ur_Rdd32 = tmp101;
}

:L4_loadbsw4_ap L4_loadbsw4_ap_Rdd32 L4_loadbsw4_ap_Re32 L4_loadbsw4_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadbsw4_ap_Rdd32 & L4_loadbsw4_ap_Re32 & L4_loadbsw4_ap_U6 {
  local EA:4;
  EA = L4_loadbsw4_ap_U6;
  local tmpV:4;
  local i:4;
  tmpV = *:4 EA;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = L4_loadbsw4_ap_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:1;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 8;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:4;
  tmp13 = tmpV >> tmp12;
  local tmp14:4;
  tmp14 = 255;
  local tmp15:4;
  tmp15 = tmp13 & tmp14;
  tmp9 = tmp15:1;
  local tmp16:4;
  tmp16 = 65535;
  local tmp17:4;
  tmp17 = zext(tmp9);
  local tmp18:4;
  tmp18 = tmp17 & tmp16;
  tmp8 = sext(tmp18);
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp8 << tmp22;
  local tmp24:8;
  tmp24 = tmp7 | tmp23;
  L4_loadbsw4_ap_Rdd32 = tmp24;
  local tmp25:8;
  tmp25 = 65535;
  local tmp26:4;
  tmp26 = 1;
  local tmp27:4;
  tmp27 = 16;
  local tmp28:4;
  tmp28 = tmp26 * tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp25 << tmp29;
  local tmp31:8;
  tmp31 = ~ tmp30;
  local tmp32:8;
  tmp32 = L4_loadbsw4_ap_Rdd32 & tmp31;
  local tmp33:8;
  local tmp34:1;
  local tmp35:4;
  tmp35 = 1;
  local tmp36:4;
  tmp36 = 8;
  local tmp37:4;
  tmp37 = tmp35 * tmp36;
  local tmp38:4;
  tmp38 = tmpV >> tmp37;
  local tmp39:4;
  tmp39 = 255;
  local tmp40:4;
  tmp40 = tmp38 & tmp39;
  tmp34 = tmp40:1;
  local tmp41:4;
  tmp41 = 65535;
  local tmp42:4;
  tmp42 = zext(tmp34);
  local tmp43:4;
  tmp43 = tmp42 & tmp41;
  tmp33 = sext(tmp43);
  local tmp44:4;
  tmp44 = 1;
  local tmp45:4;
  tmp45 = 16;
  local tmp46:4;
  tmp46 = tmp44 * tmp45;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp33 << tmp47;
  local tmp49:8;
  tmp49 = tmp32 | tmp48;
  L4_loadbsw4_ap_Rdd32 = tmp49;
  local tmp50:8;
  tmp50 = 65535;
  local tmp51:4;
  tmp51 = 2;
  local tmp52:4;
  tmp52 = 16;
  local tmp53:4;
  tmp53 = tmp51 * tmp52;
  local tmp54:8;
  tmp54 = zext(tmp53);
  local tmp55:8;
  tmp55 = tmp50 << tmp54;
  local tmp56:8;
  tmp56 = ~ tmp55;
  local tmp57:8;
  tmp57 = L4_loadbsw4_ap_Rdd32 & tmp56;
  local tmp58:8;
  local tmp59:1;
  local tmp60:4;
  tmp60 = 2;
  local tmp61:4;
  tmp61 = 8;
  local tmp62:4;
  tmp62 = tmp60 * tmp61;
  local tmp63:4;
  tmp63 = tmpV >> tmp62;
  local tmp64:4;
  tmp64 = 255;
  local tmp65:4;
  tmp65 = tmp63 & tmp64;
  tmp59 = tmp65:1;
  local tmp66:4;
  tmp66 = 65535;
  local tmp67:4;
  tmp67 = zext(tmp59);
  local tmp68:4;
  tmp68 = tmp67 & tmp66;
  tmp58 = sext(tmp68);
  local tmp69:4;
  tmp69 = 2;
  local tmp70:4;
  tmp70 = 16;
  local tmp71:4;
  tmp71 = tmp69 * tmp70;
  local tmp72:8;
  tmp72 = zext(tmp71);
  local tmp73:8;
  tmp73 = tmp58 << tmp72;
  local tmp74:8;
  tmp74 = tmp57 | tmp73;
  L4_loadbsw4_ap_Rdd32 = tmp74;
  local tmp75:8;
  tmp75 = 65535;
  local tmp76:4;
  tmp76 = 3;
  local tmp77:4;
  tmp77 = 16;
  local tmp78:4;
  tmp78 = tmp76 * tmp77;
  local tmp79:8;
  tmp79 = zext(tmp78);
  local tmp80:8;
  tmp80 = tmp75 << tmp79;
  local tmp81:8;
  tmp81 = ~ tmp80;
  local tmp82:8;
  tmp82 = L4_loadbsw4_ap_Rdd32 & tmp81;
  local tmp83:8;
  local tmp84:1;
  local tmp85:4;
  tmp85 = 3;
  local tmp86:4;
  tmp86 = 8;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:4;
  tmp88 = tmpV >> tmp87;
  local tmp89:4;
  tmp89 = 255;
  local tmp90:4;
  tmp90 = tmp88 & tmp89;
  tmp84 = tmp90:1;
  local tmp91:4;
  tmp91 = 65535;
  local tmp92:4;
  tmp92 = zext(tmp84);
  local tmp93:4;
  tmp93 = tmp92 & tmp91;
  tmp83 = sext(tmp93);
  local tmp94:4;
  tmp94 = 3;
  local tmp95:4;
  tmp95 = 16;
  local tmp96:4;
  tmp96 = tmp94 * tmp95;
  local tmp97:8;
  tmp97 = zext(tmp96);
  local tmp98:8;
  tmp98 = tmp83 << tmp97;
  local tmp99:8;
  tmp99 = tmp82 | tmp98;
  L4_loadbsw4_ap_Rdd32 = tmp99;
  L4_loadbsw4_ap_Re32 = L4_loadbsw4_ap_U6;
}

:L2_loadbsw4_pr L2_loadbsw4_pr_Rdd32 L2_loadbsw4_pr_Rx32 L2_loadbsw4_pr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbsw4_pr_Rdd32 & L2_loadbsw4_pr_Rx32 & L2_loadbsw4_pr_Mu2 {
  local EA:4;
  EA = L2_loadbsw4_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(L2_loadbsw4_pr_Mu2);
  local tmp1:4;
  tmp1 = L2_loadbsw4_pr_Rx32 + tmp0;
  L2_loadbsw4_pr_Rx32 = tmp1;
  local tmpV:4;
  local i:4;
  tmpV = *:4 EA;
  local tmp2:8;
  tmp2 = 65535;
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:8;
  tmp6 = zext(tmp5);
  local tmp7:8;
  tmp7 = tmp2 << tmp6;
  local tmp8:8;
  tmp8 = ~ tmp7;
  local tmp9:8;
  tmp9 = L2_loadbsw4_pr_Rdd32 & tmp8;
  local tmp10:8;
  local tmp11:1;
  local tmp12:4;
  tmp12 = 0;
  local tmp13:4;
  tmp13 = 8;
  local tmp14:4;
  tmp14 = tmp12 * tmp13;
  local tmp15:4;
  tmp15 = tmpV >> tmp14;
  local tmp16:4;
  tmp16 = 255;
  local tmp17:4;
  tmp17 = tmp15 & tmp16;
  tmp11 = tmp17:1;
  local tmp18:4;
  tmp18 = 65535;
  local tmp19:4;
  tmp19 = zext(tmp11);
  local tmp20:4;
  tmp20 = tmp19 & tmp18;
  tmp10 = sext(tmp20);
  local tmp21:4;
  tmp21 = 0;
  local tmp22:4;
  tmp22 = 16;
  local tmp23:4;
  tmp23 = tmp21 * tmp22;
  local tmp24:8;
  tmp24 = zext(tmp23);
  local tmp25:8;
  tmp25 = tmp10 << tmp24;
  local tmp26:8;
  tmp26 = tmp9 | tmp25;
  L2_loadbsw4_pr_Rdd32 = tmp26;
  local tmp27:8;
  tmp27 = 65535;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = 16;
  local tmp30:4;
  tmp30 = tmp28 * tmp29;
  local tmp31:8;
  tmp31 = zext(tmp30);
  local tmp32:8;
  tmp32 = tmp27 << tmp31;
  local tmp33:8;
  tmp33 = ~ tmp32;
  local tmp34:8;
  tmp34 = L2_loadbsw4_pr_Rdd32 & tmp33;
  local tmp35:8;
  local tmp36:1;
  local tmp37:4;
  tmp37 = 1;
  local tmp38:4;
  tmp38 = 8;
  local tmp39:4;
  tmp39 = tmp37 * tmp38;
  local tmp40:4;
  tmp40 = tmpV >> tmp39;
  local tmp41:4;
  tmp41 = 255;
  local tmp42:4;
  tmp42 = tmp40 & tmp41;
  tmp36 = tmp42:1;
  local tmp43:4;
  tmp43 = 65535;
  local tmp44:4;
  tmp44 = zext(tmp36);
  local tmp45:4;
  tmp45 = tmp44 & tmp43;
  tmp35 = sext(tmp45);
  local tmp46:4;
  tmp46 = 1;
  local tmp47:4;
  tmp47 = 16;
  local tmp48:4;
  tmp48 = tmp46 * tmp47;
  local tmp49:8;
  tmp49 = zext(tmp48);
  local tmp50:8;
  tmp50 = tmp35 << tmp49;
  local tmp51:8;
  tmp51 = tmp34 | tmp50;
  L2_loadbsw4_pr_Rdd32 = tmp51;
  local tmp52:8;
  tmp52 = 65535;
  local tmp53:4;
  tmp53 = 2;
  local tmp54:4;
  tmp54 = 16;
  local tmp55:4;
  tmp55 = tmp53 * tmp54;
  local tmp56:8;
  tmp56 = zext(tmp55);
  local tmp57:8;
  tmp57 = tmp52 << tmp56;
  local tmp58:8;
  tmp58 = ~ tmp57;
  local tmp59:8;
  tmp59 = L2_loadbsw4_pr_Rdd32 & tmp58;
  local tmp60:8;
  local tmp61:1;
  local tmp62:4;
  tmp62 = 2;
  local tmp63:4;
  tmp63 = 8;
  local tmp64:4;
  tmp64 = tmp62 * tmp63;
  local tmp65:4;
  tmp65 = tmpV >> tmp64;
  local tmp66:4;
  tmp66 = 255;
  local tmp67:4;
  tmp67 = tmp65 & tmp66;
  tmp61 = tmp67:1;
  local tmp68:4;
  tmp68 = 65535;
  local tmp69:4;
  tmp69 = zext(tmp61);
  local tmp70:4;
  tmp70 = tmp69 & tmp68;
  tmp60 = sext(tmp70);
  local tmp71:4;
  tmp71 = 2;
  local tmp72:4;
  tmp72 = 16;
  local tmp73:4;
  tmp73 = tmp71 * tmp72;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = tmp60 << tmp74;
  local tmp76:8;
  tmp76 = tmp59 | tmp75;
  L2_loadbsw4_pr_Rdd32 = tmp76;
  local tmp77:8;
  tmp77 = 65535;
  local tmp78:4;
  tmp78 = 3;
  local tmp79:4;
  tmp79 = 16;
  local tmp80:4;
  tmp80 = tmp78 * tmp79;
  local tmp81:8;
  tmp81 = zext(tmp80);
  local tmp82:8;
  tmp82 = tmp77 << tmp81;
  local tmp83:8;
  tmp83 = ~ tmp82;
  local tmp84:8;
  tmp84 = L2_loadbsw4_pr_Rdd32 & tmp83;
  local tmp85:8;
  local tmp86:1;
  local tmp87:4;
  tmp87 = 3;
  local tmp88:4;
  tmp88 = 8;
  local tmp89:4;
  tmp89 = tmp87 * tmp88;
  local tmp90:4;
  tmp90 = tmpV >> tmp89;
  local tmp91:4;
  tmp91 = 255;
  local tmp92:4;
  tmp92 = tmp90 & tmp91;
  tmp86 = tmp92:1;
  local tmp93:4;
  tmp93 = 65535;
  local tmp94:4;
  tmp94 = zext(tmp86);
  local tmp95:4;
  tmp95 = tmp94 & tmp93;
  tmp85 = sext(tmp95);
  local tmp96:4;
  tmp96 = 3;
  local tmp97:4;
  tmp97 = 16;
  local tmp98:4;
  tmp98 = tmp96 * tmp97;
  local tmp99:8;
  tmp99 = zext(tmp98);
  local tmp100:8;
  tmp100 = tmp85 << tmp99;
  local tmp101:8;
  tmp101 = tmp84 | tmp100;
  L2_loadbsw4_pr_Rdd32 = tmp101;
}

:L2_loadbsw4_pbr L2_loadbsw4_pbr_Rdd32 L2_loadbsw4_pbr_Rx32 L2_loadbsw4_pbr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbsw4_pbr_Rdd32 & L2_loadbsw4_pbr_Rx32 & L2_loadbsw4_pbr_Mu2 unimpl

:L2_loadbsw4_pi L2_loadbsw4_pi_Rdd32 L2_loadbsw4_pi_Rx32 L2_loadbsw4_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbsw4_pi_Rdd32 & L2_loadbsw4_pi_Rx32 & L2_loadbsw4_pi_s4_2 {
  local EA:4;
  EA = L2_loadbsw4_pi_Rx32;
  local tmp0:4;
  tmp0 = L2_loadbsw4_pi_Rx32 + L2_loadbsw4_pi_s4_2;
  L2_loadbsw4_pi_Rx32 = tmp0;
  local tmpV:4;
  local i:4;
  tmpV = *:4 EA;
  local tmp1:8;
  tmp1 = 65535;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = tmp1 << tmp5;
  local tmp7:8;
  tmp7 = ~ tmp6;
  local tmp8:8;
  tmp8 = L2_loadbsw4_pi_Rdd32 & tmp7;
  local tmp9:8;
  local tmp10:1;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 8;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = tmpV >> tmp13;
  local tmp15:4;
  tmp15 = 255;
  local tmp16:4;
  tmp16 = tmp14 & tmp15;
  tmp10 = tmp16:1;
  local tmp17:4;
  tmp17 = 65535;
  local tmp18:4;
  tmp18 = zext(tmp10);
  local tmp19:4;
  tmp19 = tmp18 & tmp17;
  tmp9 = sext(tmp19);
  local tmp20:4;
  tmp20 = 0;
  local tmp21:4;
  tmp21 = 16;
  local tmp22:4;
  tmp22 = tmp20 * tmp21;
  local tmp23:8;
  tmp23 = zext(tmp22);
  local tmp24:8;
  tmp24 = tmp9 << tmp23;
  local tmp25:8;
  tmp25 = tmp8 | tmp24;
  L2_loadbsw4_pi_Rdd32 = tmp25;
  local tmp26:8;
  tmp26 = 65535;
  local tmp27:4;
  tmp27 = 1;
  local tmp28:4;
  tmp28 = 16;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp26 << tmp30;
  local tmp32:8;
  tmp32 = ~ tmp31;
  local tmp33:8;
  tmp33 = L2_loadbsw4_pi_Rdd32 & tmp32;
  local tmp34:8;
  local tmp35:1;
  local tmp36:4;
  tmp36 = 1;
  local tmp37:4;
  tmp37 = 8;
  local tmp38:4;
  tmp38 = tmp36 * tmp37;
  local tmp39:4;
  tmp39 = tmpV >> tmp38;
  local tmp40:4;
  tmp40 = 255;
  local tmp41:4;
  tmp41 = tmp39 & tmp40;
  tmp35 = tmp41:1;
  local tmp42:4;
  tmp42 = 65535;
  local tmp43:4;
  tmp43 = zext(tmp35);
  local tmp44:4;
  tmp44 = tmp43 & tmp42;
  tmp34 = sext(tmp44);
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 16;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:8;
  tmp48 = zext(tmp47);
  local tmp49:8;
  tmp49 = tmp34 << tmp48;
  local tmp50:8;
  tmp50 = tmp33 | tmp49;
  L2_loadbsw4_pi_Rdd32 = tmp50;
  local tmp51:8;
  tmp51 = 65535;
  local tmp52:4;
  tmp52 = 2;
  local tmp53:4;
  tmp53 = 16;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp51 << tmp55;
  local tmp57:8;
  tmp57 = ~ tmp56;
  local tmp58:8;
  tmp58 = L2_loadbsw4_pi_Rdd32 & tmp57;
  local tmp59:8;
  local tmp60:1;
  local tmp61:4;
  tmp61 = 2;
  local tmp62:4;
  tmp62 = 8;
  local tmp63:4;
  tmp63 = tmp61 * tmp62;
  local tmp64:4;
  tmp64 = tmpV >> tmp63;
  local tmp65:4;
  tmp65 = 255;
  local tmp66:4;
  tmp66 = tmp64 & tmp65;
  tmp60 = tmp66:1;
  local tmp67:4;
  tmp67 = 65535;
  local tmp68:4;
  tmp68 = zext(tmp60);
  local tmp69:4;
  tmp69 = tmp68 & tmp67;
  tmp59 = sext(tmp69);
  local tmp70:4;
  tmp70 = 2;
  local tmp71:4;
  tmp71 = 16;
  local tmp72:4;
  tmp72 = tmp70 * tmp71;
  local tmp73:8;
  tmp73 = zext(tmp72);
  local tmp74:8;
  tmp74 = tmp59 << tmp73;
  local tmp75:8;
  tmp75 = tmp58 | tmp74;
  L2_loadbsw4_pi_Rdd32 = tmp75;
  local tmp76:8;
  tmp76 = 65535;
  local tmp77:4;
  tmp77 = 3;
  local tmp78:4;
  tmp78 = 16;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = tmp76 << tmp80;
  local tmp82:8;
  tmp82 = ~ tmp81;
  local tmp83:8;
  tmp83 = L2_loadbsw4_pi_Rdd32 & tmp82;
  local tmp84:8;
  local tmp85:1;
  local tmp86:4;
  tmp86 = 3;
  local tmp87:4;
  tmp87 = 8;
  local tmp88:4;
  tmp88 = tmp86 * tmp87;
  local tmp89:4;
  tmp89 = tmpV >> tmp88;
  local tmp90:4;
  tmp90 = 255;
  local tmp91:4;
  tmp91 = tmp89 & tmp90;
  tmp85 = tmp91:1;
  local tmp92:4;
  tmp92 = 65535;
  local tmp93:4;
  tmp93 = zext(tmp85);
  local tmp94:4;
  tmp94 = tmp93 & tmp92;
  tmp84 = sext(tmp94);
  local tmp95:4;
  tmp95 = 3;
  local tmp96:4;
  tmp96 = 16;
  local tmp97:4;
  tmp97 = tmp95 * tmp96;
  local tmp98:8;
  tmp98 = zext(tmp97);
  local tmp99:8;
  tmp99 = tmp84 << tmp98;
  local tmp100:8;
  tmp100 = tmp83 | tmp99;
  L2_loadbsw4_pi_Rdd32 = tmp100;
}

:L2_loadbsw4_pci L2_loadbsw4_pci_Rdd32 L2_loadbsw4_pci_Rx32 L2_loadbsw4_pci_Mu2 L2_loadbsw4_pci_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b9 = 0 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbsw4_pci_Rdd32 & L2_loadbsw4_pci_Rx32 & L2_loadbsw4_pci_Mu2 & L2_loadbsw4_pci_s4_2 unimpl

:L2_loadbsw4_pcr L2_loadbsw4_pcr_Rdd32 L2_loadbsw4_pcr_Rx32 L2_loadbsw4_pcr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b9 = 1 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadbsw4_pcr_Rdd32 & L2_loadbsw4_pcr_Rx32 & L2_loadbsw4_pcr_Mu2 unimpl

:L2_loadalignh_io L2_loadalignh_io_Ryy32 L2_loadalignh_io_Rs32 L2_loadalignh_io_s11_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadalignh_io_Ryy32 & L2_loadalignh_io_Rs32 & L2_loadalignh_io_s11_1 unimpl

:L4_loadalignh_ur L4_loadalignh_ur_Ryy32 L4_loadalignh_ur_Rt32 L4_loadalignh_ur_u2 L4_loadalignh_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadalignh_ur_Ryy32 & L4_loadalignh_ur_Rt32 & L4_loadalignh_ur_u2 & L4_loadalignh_ur_U6 unimpl

:L4_loadalignh_ap L4_loadalignh_ap_Ryy32 L4_loadalignh_ap_Re32 L4_loadalignh_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadalignh_ap_Ryy32 & L4_loadalignh_ap_Re32 & L4_loadalignh_ap_U6 unimpl

:L2_loadalignh_pr L2_loadalignh_pr_Ryy32 L2_loadalignh_pr_Rx32 L2_loadalignh_pr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadalignh_pr_Ryy32 & L2_loadalignh_pr_Rx32 & L2_loadalignh_pr_Mu2 unimpl

:L2_loadalignh_pbr L2_loadalignh_pbr_Ryy32 L2_loadalignh_pbr_Rx32 L2_loadalignh_pbr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadalignh_pbr_Ryy32 & L2_loadalignh_pbr_Rx32 & L2_loadalignh_pbr_Mu2 unimpl

:L2_loadalignh_pi L2_loadalignh_pi_Ryy32 L2_loadalignh_pi_Rx32 L2_loadalignh_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadalignh_pi_Ryy32 & L2_loadalignh_pi_Rx32 & L2_loadalignh_pi_s4_1 unimpl

:L2_loadalignh_pci L2_loadalignh_pci_Ryy32 L2_loadalignh_pci_Rx32 L2_loadalignh_pci_Mu2 L2_loadalignh_pci_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b9 = 0 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadalignh_pci_Ryy32 & L2_loadalignh_pci_Rx32 & L2_loadalignh_pci_Mu2 & L2_loadalignh_pci_s4_1 unimpl

:L2_loadalignh_pcr L2_loadalignh_pcr_Ryy32 L2_loadalignh_pcr_Rx32 L2_loadalignh_pcr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b9 = 1 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadalignh_pcr_Ryy32 & L2_loadalignh_pcr_Rx32 & L2_loadalignh_pcr_Mu2 unimpl

:L2_loadalignb_io L2_loadalignb_io_Ryy32 L2_loadalignb_io_Rs32 L2_loadalignb_io_s11_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadalignb_io_Ryy32 & L2_loadalignb_io_Rs32 & L2_loadalignb_io_s11_0 unimpl

:L4_loadalignb_ur L4_loadalignb_ur_Ryy32 L4_loadalignb_ur_Rt32 L4_loadalignb_ur_u2 L4_loadalignb_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadalignb_ur_Ryy32 & L4_loadalignb_ur_Rt32 & L4_loadalignb_ur_u2 & L4_loadalignb_ur_U6 unimpl

:L4_loadalignb_ap L4_loadalignb_ap_Ryy32 L4_loadalignb_ap_Re32 L4_loadalignb_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b12 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadalignb_ap_Ryy32 & L4_loadalignb_ap_Re32 & L4_loadalignb_ap_U6 unimpl

:L2_loadalignb_pr L2_loadalignb_pr_Ryy32 L2_loadalignb_pr_Rx32 L2_loadalignb_pr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadalignb_pr_Ryy32 & L2_loadalignb_pr_Rx32 & L2_loadalignb_pr_Mu2 unimpl

:L2_loadalignb_pbr L2_loadalignb_pbr_Ryy32 L2_loadalignb_pbr_Rx32 L2_loadalignb_pbr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b12 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadalignb_pbr_Ryy32 & L2_loadalignb_pbr_Rx32 & L2_loadalignb_pbr_Mu2 unimpl

:L2_loadalignb_pi L2_loadalignb_pi_Ryy32 L2_loadalignb_pi_Rx32 L2_loadalignb_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b12 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadalignb_pi_Ryy32 & L2_loadalignb_pi_Rx32 & L2_loadalignb_pi_s4_0 unimpl

:L2_loadalignb_pci L2_loadalignb_pci_Ryy32 L2_loadalignb_pci_Rx32 L2_loadalignb_pci_Mu2 L2_loadalignb_pci_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b9 = 0 & b12 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadalignb_pci_Ryy32 & L2_loadalignb_pci_Rx32 & L2_loadalignb_pci_Mu2 & L2_loadalignb_pci_s4_0 unimpl

:L2_loadalignb_pcr L2_loadalignb_pcr_Ryy32 L2_loadalignb_pcr_Rx32 L2_loadalignb_pcr_Mu2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b9 = 1 & b12 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadalignb_pcr_Ryy32 & L2_loadalignb_pcr_Rx32 & L2_loadalignb_pcr_Mu2 unimpl

:S2_storerb_io S2_storerb_io_Rs32 S2_storerb_io_Rt32 S2_storerb_io_s11_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerb_io_Rs32 & S2_storerb_io_Rt32 & S2_storerb_io_s11_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_storerb_io_Rs32 + S2_storerb_io_s11_0;
  EA = tmp0;
  local tmp1:1;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 8;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:4;
  tmp5 = S2_storerb_io_Rt32 s>> tmp4;
  local tmp6:4;
  tmp6 = 255;
  local tmp7:4;
  tmp7 = tmp5 & tmp6;
  tmp1 = tmp7:1;
  *:1 EA = tmp1;
}

:S2_storerb_pi S2_storerb_pi_Rx32 S2_storerb_pi_Rt32 S2_storerb_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerb_pi_Rx32 & S2_storerb_pi_Rt32 & S2_storerb_pi_s4_0 {
  local EA:4;
  EA = S2_storerb_pi_Rx32;
  local tmp0:4;
  tmp0 = S2_storerb_pi_Rx32 + S2_storerb_pi_s4_0;
  S2_storerb_pi_Rx32 = tmp0;
  local tmp1:1;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 8;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:4;
  tmp5 = S2_storerb_pi_Rt32 s>> tmp4;
  local tmp6:4;
  tmp6 = 255;
  local tmp7:4;
  tmp7 = tmp5 & tmp6;
  tmp1 = tmp7:1;
  *:1 EA = tmp1;
}

:S4_storerb_ap S4_storerb_ap_Re32 S4_storerb_ap_Rt32 S4_storerb_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerb_ap_Re32 & S4_storerb_ap_Rt32 & S4_storerb_ap_U6 {
  local EA:4;
  EA = S4_storerb_ap_U6;
  local tmp0:1;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = S4_storerb_ap_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 255;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:1;
  *:1 EA = tmp0;
  S4_storerb_ap_Re32 = S4_storerb_ap_U6;
}

:S2_storerb_pr S2_storerb_pr_Rx32 S2_storerb_pr_Mu2 S2_storerb_pr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerb_pr_Rx32 & S2_storerb_pr_Mu2 & S2_storerb_pr_Rt32 {
  local EA:4;
  EA = S2_storerb_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(S2_storerb_pr_Mu2);
  local tmp1:4;
  tmp1 = S2_storerb_pr_Rx32 + tmp0;
  S2_storerb_pr_Rx32 = tmp1;
  local tmp2:1;
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = S2_storerb_pr_Rt32 s>> tmp5;
  local tmp7:4;
  tmp7 = 255;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp2 = tmp8:1;
  *:1 EA = tmp2;
}

:S4_storerb_ur S4_storerb_ur_Ru32 S4_storerb_ur_Rt32 S4_storerb_ur_u2 S4_storerb_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerb_ur_Ru32 & S4_storerb_ur_Rt32 & S4_storerb_ur_u2 & S4_storerb_ur_U6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storerb_ur_Ru32 << S4_storerb_ur_u2;
  local tmp1:4;
  tmp1 = S4_storerb_ur_U6 + tmp0;
  EA = tmp1;
  local tmp2:1;
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = S4_storerb_ur_Rt32 s>> tmp5;
  local tmp7:4;
  tmp7 = 255;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp2 = tmp8:1;
  *:1 EA = tmp2;
}

:S2_storerb_pbr S2_storerb_pbr_Rx32 S2_storerb_pbr_Mu2 S2_storerb_pbr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerb_pbr_Rx32 & S2_storerb_pbr_Mu2 & S2_storerb_pbr_Rt32 unimpl

:S2_storerb_pci S2_storerb_pci_Rx32 S2_storerb_pci_Mu2 S2_storerb_pci_Rt32 S2_storerb_pci_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerb_pci_Rx32 & S2_storerb_pci_Mu2 & S2_storerb_pci_Rt32 & S2_storerb_pci_s4_0 unimpl

:S2_storerb_pcr S2_storerb_pcr_Rx32 S2_storerb_pcr_Mu2 S2_storerb_pcr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerb_pcr_Rx32 & S2_storerb_pcr_Mu2 & S2_storerb_pcr_Rt32 unimpl

:S2_storerh_io S2_storerh_io_Rs32 S2_storerh_io_Rt32 S2_storerh_io_s11_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerh_io_Rs32 & S2_storerh_io_Rt32 & S2_storerh_io_s11_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_storerh_io_Rs32 + S2_storerh_io_s11_1;
  EA = tmp0;
  local tmp1:2;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:4;
  tmp5 = S2_storerh_io_Rt32 s>> tmp4;
  local tmp6:4;
  tmp6 = 65535;
  local tmp7:4;
  tmp7 = tmp5 & tmp6;
  tmp1 = tmp7:2;
  *:2 EA = tmp1;
}

:S2_storerh_pi S2_storerh_pi_Rx32 S2_storerh_pi_Rt32 S2_storerh_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerh_pi_Rx32 & S2_storerh_pi_Rt32 & S2_storerh_pi_s4_1 {
  local EA:4;
  EA = S2_storerh_pi_Rx32;
  local tmp0:4;
  tmp0 = S2_storerh_pi_Rx32 + S2_storerh_pi_s4_1;
  S2_storerh_pi_Rx32 = tmp0;
  local tmp1:2;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:4;
  tmp5 = S2_storerh_pi_Rt32 s>> tmp4;
  local tmp6:4;
  tmp6 = 65535;
  local tmp7:4;
  tmp7 = tmp5 & tmp6;
  tmp1 = tmp7:2;
  *:2 EA = tmp1;
}

:S4_storerh_ap S4_storerh_ap_Re32 S4_storerh_ap_Rt32 S4_storerh_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerh_ap_Re32 & S4_storerh_ap_Rt32 & S4_storerh_ap_U6 {
  local EA:4;
  EA = S4_storerh_ap_U6;
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = S4_storerh_ap_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  *:2 EA = tmp0;
  S4_storerh_ap_Re32 = S4_storerh_ap_U6;
}

:S2_storerh_pr S2_storerh_pr_Rx32 S2_storerh_pr_Mu2 S2_storerh_pr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerh_pr_Rx32 & S2_storerh_pr_Mu2 & S2_storerh_pr_Rt32 {
  local EA:4;
  EA = S2_storerh_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(S2_storerh_pr_Mu2);
  local tmp1:4;
  tmp1 = S2_storerh_pr_Rx32 + tmp0;
  S2_storerh_pr_Rx32 = tmp1;
  local tmp2:2;
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = S2_storerh_pr_Rt32 s>> tmp5;
  local tmp7:4;
  tmp7 = 65535;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp2 = tmp8:2;
  *:2 EA = tmp2;
}

:S4_storerh_ur S4_storerh_ur_Ru32 S4_storerh_ur_Rt32 S4_storerh_ur_u2 S4_storerh_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerh_ur_Ru32 & S4_storerh_ur_Rt32 & S4_storerh_ur_u2 & S4_storerh_ur_U6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storerh_ur_Ru32 << S4_storerh_ur_u2;
  local tmp1:4;
  tmp1 = S4_storerh_ur_U6 + tmp0;
  EA = tmp1;
  local tmp2:2;
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = S4_storerh_ur_Rt32 s>> tmp5;
  local tmp7:4;
  tmp7 = 65535;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp2 = tmp8:2;
  *:2 EA = tmp2;
}

:S2_storerh_pbr S2_storerh_pbr_Rx32 S2_storerh_pbr_Mu2 S2_storerh_pbr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerh_pbr_Rx32 & S2_storerh_pbr_Mu2 & S2_storerh_pbr_Rt32 unimpl

:S2_storerh_pci S2_storerh_pci_Rx32 S2_storerh_pci_Mu2 S2_storerh_pci_Rt32 S2_storerh_pci_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerh_pci_Rx32 & S2_storerh_pci_Mu2 & S2_storerh_pci_Rt32 & S2_storerh_pci_s4_1 unimpl

:S2_storerh_pcr S2_storerh_pcr_Rx32 S2_storerh_pcr_Mu2 S2_storerh_pcr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerh_pcr_Rx32 & S2_storerh_pcr_Mu2 & S2_storerh_pcr_Rt32 unimpl

:S2_storerf_io S2_storerf_io_Rs32 S2_storerf_io_Rt32 S2_storerf_io_s11_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerf_io_Rs32 & S2_storerf_io_Rt32 & S2_storerf_io_s11_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_storerf_io_Rs32 + S2_storerf_io_s11_1;
  EA = tmp0;
  local tmp1:2;
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:4;
  tmp5 = S2_storerf_io_Rt32 s>> tmp4;
  local tmp6:4;
  tmp6 = 65535;
  local tmp7:4;
  tmp7 = tmp5 & tmp6;
  tmp1 = tmp7:2;
  *:2 EA = tmp1;
}

:S2_storerf_pi S2_storerf_pi_Rx32 S2_storerf_pi_Rt32 S2_storerf_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerf_pi_Rx32 & S2_storerf_pi_Rt32 & S2_storerf_pi_s4_1 {
  local EA:4;
  EA = S2_storerf_pi_Rx32;
  local tmp0:4;
  tmp0 = S2_storerf_pi_Rx32 + S2_storerf_pi_s4_1;
  S2_storerf_pi_Rx32 = tmp0;
  local tmp1:2;
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:4;
  tmp5 = S2_storerf_pi_Rt32 s>> tmp4;
  local tmp6:4;
  tmp6 = 65535;
  local tmp7:4;
  tmp7 = tmp5 & tmp6;
  tmp1 = tmp7:2;
  *:2 EA = tmp1;
}

:S4_storerf_ap S4_storerf_ap_Re32 S4_storerf_ap_Rt32 S4_storerf_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerf_ap_Re32 & S4_storerf_ap_Rt32 & S4_storerf_ap_U6 {
  local EA:4;
  EA = S4_storerf_ap_U6;
  local tmp0:2;
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = S4_storerf_ap_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  *:2 EA = tmp0;
  S4_storerf_ap_Re32 = S4_storerf_ap_U6;
}

:S2_storerf_pr S2_storerf_pr_Rx32 S2_storerf_pr_Mu2 S2_storerf_pr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerf_pr_Rx32 & S2_storerf_pr_Mu2 & S2_storerf_pr_Rt32 {
  local EA:4;
  EA = S2_storerf_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(S2_storerf_pr_Mu2);
  local tmp1:4;
  tmp1 = S2_storerf_pr_Rx32 + tmp0;
  S2_storerf_pr_Rx32 = tmp1;
  local tmp2:2;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = S2_storerf_pr_Rt32 s>> tmp5;
  local tmp7:4;
  tmp7 = 65535;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp2 = tmp8:2;
  *:2 EA = tmp2;
}

:S4_storerf_ur S4_storerf_ur_Ru32 S4_storerf_ur_Rt32 S4_storerf_ur_u2 S4_storerf_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerf_ur_Ru32 & S4_storerf_ur_Rt32 & S4_storerf_ur_u2 & S4_storerf_ur_U6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storerf_ur_Ru32 << S4_storerf_ur_u2;
  local tmp1:4;
  tmp1 = S4_storerf_ur_U6 + tmp0;
  EA = tmp1;
  local tmp2:2;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = S4_storerf_ur_Rt32 s>> tmp5;
  local tmp7:4;
  tmp7 = 65535;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp2 = tmp8:2;
  *:2 EA = tmp2;
}

:S2_storerf_pbr S2_storerf_pbr_Rx32 S2_storerf_pbr_Mu2 S2_storerf_pbr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerf_pbr_Rx32 & S2_storerf_pbr_Mu2 & S2_storerf_pbr_Rt32 unimpl

:S2_storerf_pci S2_storerf_pci_Rx32 S2_storerf_pci_Mu2 S2_storerf_pci_Rt32 S2_storerf_pci_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerf_pci_Rx32 & S2_storerf_pci_Mu2 & S2_storerf_pci_Rt32 & S2_storerf_pci_s4_1 unimpl

:S2_storerf_pcr S2_storerf_pcr_Rx32 S2_storerf_pcr_Mu2 S2_storerf_pcr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerf_pcr_Rx32 & S2_storerf_pcr_Mu2 & S2_storerf_pcr_Rt32 unimpl

:S2_storeri_io S2_storeri_io_Rs32 S2_storeri_io_Rt32 S2_storeri_io_s11_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storeri_io_Rs32 & S2_storeri_io_Rt32 & S2_storeri_io_s11_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_storeri_io_Rs32 + S2_storeri_io_s11_2;
  EA = tmp0;
  *:4 EA = S2_storeri_io_Rt32;
}

:S2_storeri_pi S2_storeri_pi_Rx32 S2_storeri_pi_Rt32 S2_storeri_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storeri_pi_Rx32 & S2_storeri_pi_Rt32 & S2_storeri_pi_s4_2 {
  local EA:4;
  EA = S2_storeri_pi_Rx32;
  local tmp0:4;
  tmp0 = S2_storeri_pi_Rx32 + S2_storeri_pi_s4_2;
  S2_storeri_pi_Rx32 = tmp0;
  *:4 EA = S2_storeri_pi_Rt32;
}

:S4_storeri_ap S4_storeri_ap_Re32 S4_storeri_ap_Rt32 S4_storeri_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storeri_ap_Re32 & S4_storeri_ap_Rt32 & S4_storeri_ap_U6 {
  local EA:4;
  EA = S4_storeri_ap_U6;
  *:4 EA = S4_storeri_ap_Rt32;
  S4_storeri_ap_Re32 = S4_storeri_ap_U6;
}

:S2_storeri_pr S2_storeri_pr_Rx32 S2_storeri_pr_Mu2 S2_storeri_pr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storeri_pr_Rx32 & S2_storeri_pr_Mu2 & S2_storeri_pr_Rt32 {
  local EA:4;
  EA = S2_storeri_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(S2_storeri_pr_Mu2);
  local tmp1:4;
  tmp1 = S2_storeri_pr_Rx32 + tmp0;
  S2_storeri_pr_Rx32 = tmp1;
  *:4 EA = S2_storeri_pr_Rt32;
}

:S4_storeri_ur S4_storeri_ur_Ru32 S4_storeri_ur_Rt32 S4_storeri_ur_u2 S4_storeri_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storeri_ur_Ru32 & S4_storeri_ur_Rt32 & S4_storeri_ur_u2 & S4_storeri_ur_U6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeri_ur_Ru32 << S4_storeri_ur_u2;
  local tmp1:4;
  tmp1 = S4_storeri_ur_U6 + tmp0;
  EA = tmp1;
  *:4 EA = S4_storeri_ur_Rt32;
}

:S2_storeri_pbr S2_storeri_pbr_Rx32 S2_storeri_pbr_Mu2 S2_storeri_pbr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storeri_pbr_Rx32 & S2_storeri_pbr_Mu2 & S2_storeri_pbr_Rt32 unimpl

:S2_storeri_pci S2_storeri_pci_Rx32 S2_storeri_pci_Mu2 S2_storeri_pci_Rt32 S2_storeri_pci_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storeri_pci_Rx32 & S2_storeri_pci_Mu2 & S2_storeri_pci_Rt32 & S2_storeri_pci_s4_2 unimpl

:S2_storeri_pcr S2_storeri_pcr_Rx32 S2_storeri_pcr_Mu2 S2_storeri_pcr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storeri_pcr_Rx32 & S2_storeri_pcr_Mu2 & S2_storeri_pcr_Rt32 unimpl

:S2_storerd_io S2_storerd_io_Rs32 S2_storerd_io_Rtt32 S2_storerd_io_s11_3 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerd_io_Rs32 & S2_storerd_io_Rtt32 & S2_storerd_io_s11_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_storerd_io_Rs32 + S2_storerd_io_s11_3;
  EA = tmp0;
  *:8 EA = S2_storerd_io_Rtt32;
}

:S2_storerd_pi S2_storerd_pi_Rx32 S2_storerd_pi_Rtt32 S2_storerd_pi_s4_3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerd_pi_Rx32 & S2_storerd_pi_Rtt32 & S2_storerd_pi_s4_3 {
  local EA:4;
  EA = S2_storerd_pi_Rx32;
  local tmp0:4;
  tmp0 = S2_storerd_pi_Rx32 + S2_storerd_pi_s4_3;
  S2_storerd_pi_Rx32 = tmp0;
  *:8 EA = S2_storerd_pi_Rtt32;
}

:S4_storerd_ap S4_storerd_ap_Re32 S4_storerd_ap_Rtt32 S4_storerd_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerd_ap_Re32 & S4_storerd_ap_Rtt32 & S4_storerd_ap_U6 {
  local EA:4;
  EA = S4_storerd_ap_U6;
  *:8 EA = S4_storerd_ap_Rtt32;
  S4_storerd_ap_Re32 = S4_storerd_ap_U6;
}

:S2_storerd_pr S2_storerd_pr_Rx32 S2_storerd_pr_Mu2 S2_storerd_pr_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerd_pr_Rx32 & S2_storerd_pr_Mu2 & S2_storerd_pr_Rtt32 {
  local EA:4;
  EA = S2_storerd_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(S2_storerd_pr_Mu2);
  local tmp1:4;
  tmp1 = S2_storerd_pr_Rx32 + tmp0;
  S2_storerd_pr_Rx32 = tmp1;
  *:8 EA = S2_storerd_pr_Rtt32;
}

:S4_storerd_ur S4_storerd_ur_Ru32 S4_storerd_ur_Rtt32 S4_storerd_ur_u2 S4_storerd_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerd_ur_Ru32 & S4_storerd_ur_Rtt32 & S4_storerd_ur_u2 & S4_storerd_ur_U6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storerd_ur_Ru32 << S4_storerd_ur_u2;
  local tmp1:4;
  tmp1 = S4_storerd_ur_U6 + tmp0;
  EA = tmp1;
  *:8 EA = S4_storerd_ur_Rtt32;
}

:S2_storerd_pbr S2_storerd_pbr_Rx32 S2_storerd_pbr_Mu2 S2_storerd_pbr_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerd_pbr_Rx32 & S2_storerd_pbr_Mu2 & S2_storerd_pbr_Rtt32 unimpl

:S2_storerd_pci S2_storerd_pci_Rx32 S2_storerd_pci_Mu2 S2_storerd_pci_Rtt32 S2_storerd_pci_s4_3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerd_pci_Rx32 & S2_storerd_pci_Mu2 & S2_storerd_pci_Rtt32 & S2_storerd_pci_s4_3 unimpl

:S2_storerd_pcr S2_storerd_pcr_Rx32 S2_storerd_pcr_Mu2 S2_storerd_pcr_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerd_pcr_Rx32 & S2_storerd_pcr_Mu2 & S2_storerd_pcr_Rtt32 unimpl

:S2_storerinew_io S2_storerinew_io_Rs32 S2_storerinew_io_Nt8 S2_storerinew_io_s11_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerinew_io_Rs32 & S2_storerinew_io_Nt8 & S2_storerinew_io_s11_2 & hasnew = 0                      unimpl

:S2_storerinew_io S2_storerinew_io_Rs32 dotnewreg S2_storerinew_io_s11_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerinew_io_Rs32 & S2_storerinew_io_Nt8 & S2_storerinew_io_s11_2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_storerinew_io_Rs32 + S2_storerinew_io_s11_2;
  EA = tmp0;
  local tmp1:4;
  tmp1 = newreg(dotnewreg);
  *:4 EA = tmp1;
}

:S2_storerinew_pi S2_storerinew_pi_Rx32 S2_storerinew_pi_Nt8 S2_storerinew_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b11 = 0 & b12 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerinew_pi_Rx32 & S2_storerinew_pi_Nt8 & S2_storerinew_pi_s4_2 & hasnew = 0                      unimpl

:S2_storerinew_pi S2_storerinew_pi_Rx32 dotnewreg S2_storerinew_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b11 = 0 & b12 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerinew_pi_Rx32 & S2_storerinew_pi_Nt8 & S2_storerinew_pi_s4_2 & dotnewreg {
  local EA:4;
  EA = S2_storerinew_pi_Rx32;
  local tmp0:4;
  tmp0 = S2_storerinew_pi_Rx32 + S2_storerinew_pi_s4_2;
  S2_storerinew_pi_Rx32 = tmp0;
  local tmp1:4;
  tmp1 = newreg(dotnewreg);
  *:4 EA = tmp1;
}

:S4_storerinew_ap S4_storerinew_ap_Re32 S4_storerinew_ap_Nt8 S4_storerinew_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerinew_ap_Re32 & S4_storerinew_ap_Nt8 & S4_storerinew_ap_U6 & hasnew = 0                      unimpl

:S4_storerinew_ap S4_storerinew_ap_Re32 dotnewreg S4_storerinew_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerinew_ap_Re32 & S4_storerinew_ap_Nt8 & S4_storerinew_ap_U6 & dotnewreg {
  local EA:4;
  EA = S4_storerinew_ap_U6;
  local tmp0:4;
  tmp0 = newreg(dotnewreg);
  *:4 EA = tmp0;
  S4_storerinew_ap_Re32 = S4_storerinew_ap_U6;
}

:S2_storerinew_pr S2_storerinew_pr_Rx32 S2_storerinew_pr_Mu2 S2_storerinew_pr_Nt8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerinew_pr_Rx32 & S2_storerinew_pr_Mu2 & S2_storerinew_pr_Nt8 & hasnew = 0                      unimpl

:S2_storerinew_pr S2_storerinew_pr_Rx32 S2_storerinew_pr_Mu2 dotnewreg is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerinew_pr_Rx32 & S2_storerinew_pr_Mu2 & S2_storerinew_pr_Nt8 & dotnewreg {
  local EA:4;
  EA = S2_storerinew_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(S2_storerinew_pr_Mu2);
  local tmp1:4;
  tmp1 = S2_storerinew_pr_Rx32 + tmp0;
  S2_storerinew_pr_Rx32 = tmp1;
  local tmp2:4;
  tmp2 = newreg(dotnewreg);
  *:4 EA = tmp2;
}

:S4_storerinew_ur S4_storerinew_ur_Ru32 S4_storerinew_ur_Nt8 S4_storerinew_ur_u2 S4_storerinew_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerinew_ur_Ru32 & S4_storerinew_ur_Nt8 & S4_storerinew_ur_u2 & S4_storerinew_ur_U6 & hasnew = 0                      unimpl

:S4_storerinew_ur S4_storerinew_ur_Ru32 dotnewreg S4_storerinew_ur_u2 S4_storerinew_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerinew_ur_Ru32 & S4_storerinew_ur_Nt8 & S4_storerinew_ur_u2 & S4_storerinew_ur_U6 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storerinew_ur_Ru32 << S4_storerinew_ur_u2;
  local tmp1:4;
  tmp1 = S4_storerinew_ur_U6 + tmp0;
  EA = tmp1;
  local tmp2:4;
  tmp2 = newreg(dotnewreg);
  *:4 EA = tmp2;
}

:S2_storerinew_pbr S2_storerinew_pbr_Rx32 S2_storerinew_pbr_Mu2 S2_storerinew_pbr_Nt8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerinew_pbr_Rx32 & S2_storerinew_pbr_Mu2 & S2_storerinew_pbr_Nt8 & hasnew = 0                      unimpl

:S2_storerinew_pbr S2_storerinew_pbr_Rx32 S2_storerinew_pbr_Mu2 dotnewreg is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerinew_pbr_Rx32 & S2_storerinew_pbr_Mu2 & S2_storerinew_pbr_Nt8 & dotnewreg unimpl

:S2_storerinew_pci S2_storerinew_pci_Rx32 S2_storerinew_pci_Mu2 S2_storerinew_pci_Nt8 S2_storerinew_pci_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerinew_pci_Rx32 & S2_storerinew_pci_Mu2 & S2_storerinew_pci_Nt8 & S2_storerinew_pci_s4_2 & hasnew = 0                      unimpl

:S2_storerinew_pci S2_storerinew_pci_Rx32 S2_storerinew_pci_Mu2 dotnewreg S2_storerinew_pci_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerinew_pci_Rx32 & S2_storerinew_pci_Mu2 & S2_storerinew_pci_Nt8 & S2_storerinew_pci_s4_2 & dotnewreg unimpl

:S2_storerinew_pcr S2_storerinew_pcr_Rx32 S2_storerinew_pcr_Mu2 S2_storerinew_pcr_Nt8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 1 & b7 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerinew_pcr_Rx32 & S2_storerinew_pcr_Mu2 & S2_storerinew_pcr_Nt8 & hasnew = 0                      unimpl

:S2_storerinew_pcr S2_storerinew_pcr_Rx32 S2_storerinew_pcr_Mu2 dotnewreg is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 1 & b7 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerinew_pcr_Rx32 & S2_storerinew_pcr_Mu2 & S2_storerinew_pcr_Nt8 & dotnewreg unimpl

:S2_storerbnew_io S2_storerbnew_io_Rs32 S2_storerbnew_io_Nt8 S2_storerbnew_io_s11_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerbnew_io_Rs32 & S2_storerbnew_io_Nt8 & S2_storerbnew_io_s11_0 & hasnew = 0                      unimpl

:S2_storerbnew_io S2_storerbnew_io_Rs32 dotnewreg S2_storerbnew_io_s11_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerbnew_io_Rs32 & S2_storerbnew_io_Nt8 & S2_storerbnew_io_s11_0 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_storerbnew_io_Rs32 + S2_storerbnew_io_s11_0;
  EA = tmp0;
  local tmp1:1;
  local tmp2:4;
  tmp2 = newreg(dotnewreg);
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = tmp2 s>> tmp5;
  local tmp7:4;
  tmp7 = 255;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:1;
  *:1 EA = tmp1;
}

:S2_storerbnew_pi S2_storerbnew_pi_Rx32 S2_storerbnew_pi_Nt8 S2_storerbnew_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b11 = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerbnew_pi_Rx32 & S2_storerbnew_pi_Nt8 & S2_storerbnew_pi_s4_0 & hasnew = 0                      unimpl

:S2_storerbnew_pi S2_storerbnew_pi_Rx32 dotnewreg S2_storerbnew_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b11 = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerbnew_pi_Rx32 & S2_storerbnew_pi_Nt8 & S2_storerbnew_pi_s4_0 & dotnewreg {
  local EA:4;
  EA = S2_storerbnew_pi_Rx32;
  local tmp0:4;
  tmp0 = S2_storerbnew_pi_Rx32 + S2_storerbnew_pi_s4_0;
  S2_storerbnew_pi_Rx32 = tmp0;
  local tmp1:1;
  local tmp2:4;
  tmp2 = newreg(dotnewreg);
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = tmp2 s>> tmp5;
  local tmp7:4;
  tmp7 = 255;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:1;
  *:1 EA = tmp1;
}

:S4_storerbnew_ap S4_storerbnew_ap_Re32 S4_storerbnew_ap_Nt8 S4_storerbnew_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerbnew_ap_Re32 & S4_storerbnew_ap_Nt8 & S4_storerbnew_ap_U6 & hasnew = 0                      unimpl

:S4_storerbnew_ap S4_storerbnew_ap_Re32 dotnewreg S4_storerbnew_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerbnew_ap_Re32 & S4_storerbnew_ap_Nt8 & S4_storerbnew_ap_U6 & dotnewreg {
  local EA:4;
  EA = S4_storerbnew_ap_U6;
  local tmp0:1;
  local tmp1:4;
  tmp1 = newreg(dotnewreg);
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 8;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:4;
  tmp5 = tmp1 s>> tmp4;
  local tmp6:4;
  tmp6 = 255;
  local tmp7:4;
  tmp7 = tmp5 & tmp6;
  tmp0 = tmp7:1;
  *:1 EA = tmp0;
  S4_storerbnew_ap_Re32 = S4_storerbnew_ap_U6;
}

:S2_storerbnew_pr S2_storerbnew_pr_Rx32 S2_storerbnew_pr_Mu2 S2_storerbnew_pr_Nt8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerbnew_pr_Rx32 & S2_storerbnew_pr_Mu2 & S2_storerbnew_pr_Nt8 & hasnew = 0                      unimpl

:S2_storerbnew_pr S2_storerbnew_pr_Rx32 S2_storerbnew_pr_Mu2 dotnewreg is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerbnew_pr_Rx32 & S2_storerbnew_pr_Mu2 & S2_storerbnew_pr_Nt8 & dotnewreg {
  local EA:4;
  EA = S2_storerbnew_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(S2_storerbnew_pr_Mu2);
  local tmp1:4;
  tmp1 = S2_storerbnew_pr_Rx32 + tmp0;
  S2_storerbnew_pr_Rx32 = tmp1;
  local tmp2:1;
  local tmp3:4;
  tmp3 = newreg(dotnewreg);
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 8;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = tmp3 s>> tmp6;
  local tmp8:4;
  tmp8 = 255;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp2 = tmp9:1;
  *:1 EA = tmp2;
}

:S4_storerbnew_ur S4_storerbnew_ur_Ru32 S4_storerbnew_ur_Nt8 S4_storerbnew_ur_u2 S4_storerbnew_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerbnew_ur_Ru32 & S4_storerbnew_ur_Nt8 & S4_storerbnew_ur_u2 & S4_storerbnew_ur_U6 & hasnew = 0                      unimpl

:S4_storerbnew_ur S4_storerbnew_ur_Ru32 dotnewreg S4_storerbnew_ur_u2 S4_storerbnew_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerbnew_ur_Ru32 & S4_storerbnew_ur_Nt8 & S4_storerbnew_ur_u2 & S4_storerbnew_ur_U6 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storerbnew_ur_Ru32 << S4_storerbnew_ur_u2;
  local tmp1:4;
  tmp1 = S4_storerbnew_ur_U6 + tmp0;
  EA = tmp1;
  local tmp2:1;
  local tmp3:4;
  tmp3 = newreg(dotnewreg);
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 8;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = tmp3 s>> tmp6;
  local tmp8:4;
  tmp8 = 255;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp2 = tmp9:1;
  *:1 EA = tmp2;
}

:S2_storerbnew_pbr S2_storerbnew_pbr_Rx32 S2_storerbnew_pbr_Mu2 S2_storerbnew_pbr_Nt8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerbnew_pbr_Rx32 & S2_storerbnew_pbr_Mu2 & S2_storerbnew_pbr_Nt8 & hasnew = 0                      unimpl

:S2_storerbnew_pbr S2_storerbnew_pbr_Rx32 S2_storerbnew_pbr_Mu2 dotnewreg is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerbnew_pbr_Rx32 & S2_storerbnew_pbr_Mu2 & S2_storerbnew_pbr_Nt8 & dotnewreg unimpl

:S2_storerbnew_pci S2_storerbnew_pci_Rx32 S2_storerbnew_pci_Mu2 S2_storerbnew_pci_Nt8 S2_storerbnew_pci_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerbnew_pci_Rx32 & S2_storerbnew_pci_Mu2 & S2_storerbnew_pci_Nt8 & S2_storerbnew_pci_s4_0 & hasnew = 0                      unimpl

:S2_storerbnew_pci S2_storerbnew_pci_Rx32 S2_storerbnew_pci_Mu2 dotnewreg S2_storerbnew_pci_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerbnew_pci_Rx32 & S2_storerbnew_pci_Mu2 & S2_storerbnew_pci_Nt8 & S2_storerbnew_pci_s4_0 & dotnewreg unimpl

:S2_storerbnew_pcr S2_storerbnew_pcr_Rx32 S2_storerbnew_pcr_Mu2 S2_storerbnew_pcr_Nt8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 1 & b7 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerbnew_pcr_Rx32 & S2_storerbnew_pcr_Mu2 & S2_storerbnew_pcr_Nt8 & hasnew = 0                      unimpl

:S2_storerbnew_pcr S2_storerbnew_pcr_Rx32 S2_storerbnew_pcr_Mu2 dotnewreg is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 1 & b7 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerbnew_pcr_Rx32 & S2_storerbnew_pcr_Mu2 & S2_storerbnew_pcr_Nt8 & dotnewreg unimpl

:S2_storerhnew_io S2_storerhnew_io_Rs32 S2_storerhnew_io_Nt8 S2_storerhnew_io_s11_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerhnew_io_Rs32 & S2_storerhnew_io_Nt8 & S2_storerhnew_io_s11_1 & hasnew = 0                      unimpl

:S2_storerhnew_io S2_storerhnew_io_Rs32 dotnewreg S2_storerhnew_io_s11_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerhnew_io_Rs32 & S2_storerhnew_io_Nt8 & S2_storerhnew_io_s11_1 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_storerhnew_io_Rs32 + S2_storerhnew_io_s11_1;
  EA = tmp0;
  local tmp1:2;
  local tmp2:4;
  tmp2 = newreg(dotnewreg);
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = tmp2 s>> tmp5;
  local tmp7:4;
  tmp7 = 65535;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:2;
  *:2 EA = tmp1;
}

:S2_storerhnew_pi S2_storerhnew_pi_Rx32 S2_storerhnew_pi_Nt8 S2_storerhnew_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b11 = 1 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerhnew_pi_Rx32 & S2_storerhnew_pi_Nt8 & S2_storerhnew_pi_s4_1 & hasnew = 0                      unimpl

:S2_storerhnew_pi S2_storerhnew_pi_Rx32 dotnewreg S2_storerhnew_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b11 = 1 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerhnew_pi_Rx32 & S2_storerhnew_pi_Nt8 & S2_storerhnew_pi_s4_1 & dotnewreg {
  local EA:4;
  EA = S2_storerhnew_pi_Rx32;
  local tmp0:4;
  tmp0 = S2_storerhnew_pi_Rx32 + S2_storerhnew_pi_s4_1;
  S2_storerhnew_pi_Rx32 = tmp0;
  local tmp1:2;
  local tmp2:4;
  tmp2 = newreg(dotnewreg);
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = tmp2 s>> tmp5;
  local tmp7:4;
  tmp7 = 65535;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:2;
  *:2 EA = tmp1;
}

:S4_storerhnew_ap S4_storerhnew_ap_Re32 S4_storerhnew_ap_Nt8 S4_storerhnew_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerhnew_ap_Re32 & S4_storerhnew_ap_Nt8 & S4_storerhnew_ap_U6 & hasnew = 0                      unimpl

:S4_storerhnew_ap S4_storerhnew_ap_Re32 dotnewreg S4_storerhnew_ap_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerhnew_ap_Re32 & S4_storerhnew_ap_Nt8 & S4_storerhnew_ap_U6 & dotnewreg {
  local EA:4;
  EA = S4_storerhnew_ap_U6;
  local tmp0:2;
  local tmp1:4;
  tmp1 = newreg(dotnewreg);
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:4;
  tmp5 = tmp1 s>> tmp4;
  local tmp6:4;
  tmp6 = 65535;
  local tmp7:4;
  tmp7 = tmp5 & tmp6;
  tmp0 = tmp7:2;
  *:2 EA = tmp0;
  S4_storerhnew_ap_Re32 = S4_storerhnew_ap_U6;
}

:S2_storerhnew_pr S2_storerhnew_pr_Rx32 S2_storerhnew_pr_Mu2 S2_storerhnew_pr_Nt8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerhnew_pr_Rx32 & S2_storerhnew_pr_Mu2 & S2_storerhnew_pr_Nt8 & hasnew = 0                      unimpl

:S2_storerhnew_pr S2_storerhnew_pr_Rx32 S2_storerhnew_pr_Mu2 dotnewreg is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerhnew_pr_Rx32 & S2_storerhnew_pr_Mu2 & S2_storerhnew_pr_Nt8 & dotnewreg {
  local EA:4;
  EA = S2_storerhnew_pr_Rx32;
  local tmp0:4;
  tmp0 = zext(S2_storerhnew_pr_Mu2);
  local tmp1:4;
  tmp1 = S2_storerhnew_pr_Rx32 + tmp0;
  S2_storerhnew_pr_Rx32 = tmp1;
  local tmp2:2;
  local tmp3:4;
  tmp3 = newreg(dotnewreg);
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 16;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = tmp3 s>> tmp6;
  local tmp8:4;
  tmp8 = 65535;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp2 = tmp9:2;
  *:2 EA = tmp2;
}

:S4_storerhnew_ur S4_storerhnew_ur_Ru32 S4_storerhnew_ur_Nt8 S4_storerhnew_ur_u2 S4_storerhnew_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerhnew_ur_Ru32 & S4_storerhnew_ur_Nt8 & S4_storerhnew_ur_u2 & S4_storerhnew_ur_U6 & hasnew = 0                      unimpl

:S4_storerhnew_ur S4_storerhnew_ur_Ru32 dotnewreg S4_storerhnew_ur_u2 S4_storerhnew_ur_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_storerhnew_ur_Ru32 & S4_storerhnew_ur_Nt8 & S4_storerhnew_ur_u2 & S4_storerhnew_ur_U6 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storerhnew_ur_Ru32 << S4_storerhnew_ur_u2;
  local tmp1:4;
  tmp1 = S4_storerhnew_ur_U6 + tmp0;
  EA = tmp1;
  local tmp2:2;
  local tmp3:4;
  tmp3 = newreg(dotnewreg);
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 16;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = tmp3 s>> tmp6;
  local tmp8:4;
  tmp8 = 65535;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp2 = tmp9:2;
  *:2 EA = tmp2;
}

:S2_storerhnew_pbr S2_storerhnew_pbr_Rx32 S2_storerhnew_pbr_Mu2 S2_storerhnew_pbr_Nt8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerhnew_pbr_Rx32 & S2_storerhnew_pbr_Mu2 & S2_storerhnew_pbr_Nt8 & hasnew = 0                      unimpl

:S2_storerhnew_pbr S2_storerhnew_pbr_Rx32 S2_storerhnew_pbr_Mu2 dotnewreg is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerhnew_pbr_Rx32 & S2_storerhnew_pbr_Mu2 & S2_storerhnew_pbr_Nt8 & dotnewreg unimpl

:S2_storerhnew_pci S2_storerhnew_pci_Rx32 S2_storerhnew_pci_Mu2 S2_storerhnew_pci_Nt8 S2_storerhnew_pci_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerhnew_pci_Rx32 & S2_storerhnew_pci_Mu2 & S2_storerhnew_pci_Nt8 & S2_storerhnew_pci_s4_1 & hasnew = 0                      unimpl

:S2_storerhnew_pci S2_storerhnew_pci_Rx32 S2_storerhnew_pci_Mu2 dotnewreg S2_storerhnew_pci_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 0 & b7 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerhnew_pci_Rx32 & S2_storerhnew_pci_Mu2 & S2_storerhnew_pci_Nt8 & S2_storerhnew_pci_s4_1 & dotnewreg unimpl

:S2_storerhnew_pcr S2_storerhnew_pcr_Rx32 S2_storerhnew_pcr_Mu2 S2_storerhnew_pcr_Nt8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 1 & b7 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerhnew_pcr_Rx32 & S2_storerhnew_pcr_Mu2 & S2_storerhnew_pcr_Nt8 & hasnew = 0                      unimpl

:S2_storerhnew_pcr S2_storerhnew_pcr_Rx32 S2_storerhnew_pcr_Mu2 dotnewreg is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b1 = 1 & b7 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storerhnew_pcr_Rx32 & S2_storerhnew_pcr_Mu2 & S2_storerhnew_pcr_Nt8 & dotnewreg unimpl

:S2_allocframe S2_allocframe_Rx32 S2_allocframe_u11_3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_allocframe_Rx32 & S2_allocframe_u11_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = 8;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:4;
  tmp2 = S2_allocframe_Rx32 + tmp1;
  EA = tmp2;
  *:8 EA = R31R30;
  R30 = EA;
  local tmp3:4;
  tmp3 = EA - S2_allocframe_u11_3;
  S2_allocframe_Rx32 = tmp3;
}

:L2_deallocframe L2_deallocframe_Rdd32 L2_deallocframe_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_deallocframe_Rdd32 & L2_deallocframe_Rs32 {
  local tmp:8;
  local EA:4;
  EA = L2_deallocframe_Rs32;
  tmp = *:8 EA;
  L2_deallocframe_Rdd32 = tmp;
  local tmp0:4;
  tmp0 = 8;
  local tmp1:4;
  tmp1 = EA + tmp0;
  R29 = tmp1;
}

:L4_return L4_return_Rdd32 L4_return_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 0 & b12 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_return_Rdd32 & L4_return_Rs32 {
  local tmp:8;
  local EA:4;
  EA = L4_return_Rs32;
  tmp = *:8 EA;
  L4_return_Rdd32 = tmp;
  local tmp0:4;
  tmp0 = 8;
  local tmp1:4;
  tmp1 = EA + tmp0;
  R29 = tmp1;
  local tmp2:8;
  local tmp3:4;
  local tmp4:4;
  tmp4 = 1;
  local tmp5:4;
  tmp5 = 32;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = L4_return_Rdd32 s>> tmp7;
  local tmp9:8;
  tmp9 = 4294967295;
  local tmp10:8;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:4;
  tmp2 = zext(tmp3);
  return [tmp2];
}

:L4_return_t L4_return_t_Rdd32 L4_return_t_Pv4 L4_return_t_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 0 & b12 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_return_t_Rdd32 & L4_return_t_Pv4 & L4_return_t_Rs32 {
  local tmp:8;
  local EA:4;
  EA = L4_return_t_Rs32;
  local tmp0:1;
  tmp0 = L4_return_t_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  tmp = *:8 EA;
  L4_return_t_Rdd32 = tmp;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = EA + tmp2;
  R29 = tmp3;
  local tmp4:8;
  local tmp5:4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 32;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:8;
  tmp9 = zext(tmp8);
  local tmp10:8;
  tmp10 = L4_return_t_Rdd32 s>> tmp9;
  local tmp11:8;
  tmp11 = 4294967295;
  local tmp12:8;
  tmp12 = tmp10 & tmp11;
  tmp5 = tmp12:4;
  tmp4 = zext(tmp5);
  return [tmp4];
  goto <done_2>;
<f_branch_2>
<done_2>
}

:L4_return_f L4_return_f_Rdd32 L4_return_f_Pv4 L4_return_f_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_return_f_Rdd32 & L4_return_f_Pv4 & L4_return_f_Rs32 {
  local tmp:8;
  local EA:4;
  EA = L4_return_f_Rs32;
  local tmp0:1;
  tmp0 = ! L4_return_f_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  tmp = *:8 EA;
  L4_return_f_Rdd32 = tmp;
  local tmp3:4;
  tmp3 = 8;
  local tmp4:4;
  tmp4 = EA + tmp3;
  R29 = tmp4;
  local tmp5:8;
  local tmp6:4;
  local tmp7:4;
  tmp7 = 1;
  local tmp8:4;
  tmp8 = 32;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:8;
  tmp10 = zext(tmp9);
  local tmp11:8;
  tmp11 = L4_return_f_Rdd32 s>> tmp10;
  local tmp12:8;
  tmp12 = 4294967295;
  local tmp13:8;
  tmp13 = tmp11 & tmp12;
  tmp6 = tmp13:4;
  tmp5 = zext(tmp6);
  return [tmp5];
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L4_return_tnew_pt L4_return_tnew_pt_Rdd32 L4_return_tnew_pt_Pv4 L4_return_tnew_pt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 1 & b12 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_return_tnew_pt_Rdd32 & L4_return_tnew_pt_Pv4 & L4_return_tnew_pt_Rs32 {
  local tmp:8;
  local EA:4;
  EA = L4_return_tnew_pt_Rs32;
  local tmp0:1;
  tmp0 = newreg(L4_return_tnew_pt_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  tmp = *:8 EA;
  L4_return_tnew_pt_Rdd32 = tmp;
  local tmp3:4;
  tmp3 = 8;
  local tmp4:4;
  tmp4 = EA + tmp3;
  R29 = tmp4;
  local tmp5:8;
  local tmp6:4;
  local tmp7:4;
  tmp7 = 1;
  local tmp8:4;
  tmp8 = 32;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:8;
  tmp10 = zext(tmp9);
  local tmp11:8;
  tmp11 = L4_return_tnew_pt_Rdd32 s>> tmp10;
  local tmp12:8;
  tmp12 = 4294967295;
  local tmp13:8;
  tmp13 = tmp11 & tmp12;
  tmp6 = tmp13:4;
  tmp5 = zext(tmp6);
  return [tmp5];
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L4_return_fnew_pt L4_return_fnew_pt_Rdd32 L4_return_fnew_pt_Pv4 L4_return_fnew_pt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 1 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_return_fnew_pt_Rdd32 & L4_return_fnew_pt_Pv4 & L4_return_fnew_pt_Rs32 {
  local tmp:8;
  local EA:4;
  EA = L4_return_fnew_pt_Rs32;
  local tmp0:1;
  tmp0 = newreg(L4_return_fnew_pt_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  tmp = *:8 EA;
  L4_return_fnew_pt_Rdd32 = tmp;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = EA + tmp4;
  R29 = tmp5;
  local tmp6:8;
  local tmp7:4;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 32;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:8;
  tmp11 = zext(tmp10);
  local tmp12:8;
  tmp12 = L4_return_fnew_pt_Rdd32 s>> tmp11;
  local tmp13:8;
  tmp13 = 4294967295;
  local tmp14:8;
  tmp14 = tmp12 & tmp13;
  tmp7 = tmp14:4;
  tmp6 = zext(tmp7);
  return [tmp6];
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_return_tnew_pnt L4_return_tnew_pnt_Rdd32 L4_return_tnew_pnt_Pv4 L4_return_tnew_pnt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 1 & b12 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_return_tnew_pnt_Rdd32 & L4_return_tnew_pnt_Pv4 & L4_return_tnew_pnt_Rs32 {
  local tmp:8;
  local EA:4;
  EA = L4_return_tnew_pnt_Rs32;
  local tmp0:1;
  tmp0 = newreg(L4_return_tnew_pnt_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  tmp = *:8 EA;
  L4_return_tnew_pnt_Rdd32 = tmp;
  local tmp3:4;
  tmp3 = 8;
  local tmp4:4;
  tmp4 = EA + tmp3;
  R29 = tmp4;
  local tmp5:8;
  local tmp6:4;
  local tmp7:4;
  tmp7 = 1;
  local tmp8:4;
  tmp8 = 32;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:8;
  tmp10 = zext(tmp9);
  local tmp11:8;
  tmp11 = L4_return_tnew_pnt_Rdd32 s>> tmp10;
  local tmp12:8;
  tmp12 = 4294967295;
  local tmp13:8;
  tmp13 = tmp11 & tmp12;
  tmp6 = tmp13:4;
  tmp5 = zext(tmp6);
  return [tmp5];
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L4_return_fnew_pnt L4_return_fnew_pnt_Rdd32 L4_return_fnew_pnt_Pv4 L4_return_fnew_pnt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_return_fnew_pnt_Rdd32 & L4_return_fnew_pnt_Pv4 & L4_return_fnew_pnt_Rs32 {
  local tmp:8;
  local EA:4;
  EA = L4_return_fnew_pnt_Rs32;
  local tmp0:1;
  tmp0 = newreg(L4_return_fnew_pnt_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  tmp = *:8 EA;
  L4_return_fnew_pnt_Rdd32 = tmp;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = EA + tmp4;
  R29 = tmp5;
  local tmp6:8;
  local tmp7:4;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 32;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:8;
  tmp11 = zext(tmp10);
  local tmp12:8;
  tmp12 = L4_return_fnew_pnt_Rdd32 s>> tmp11;
  local tmp13:8;
  tmp13 = 4294967295;
  local tmp14:8;
  tmp14 = tmp12 & tmp13;
  tmp7 = tmp14:4;
  tmp6 = zext(tmp7);
  return [tmp6];
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L2_loadw_locked L2_loadw_locked_Rd32 L2_loadw_locked_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b12 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_loadw_locked_Rd32 & L2_loadw_locked_Rs32 {
  local EA:4;
  EA = L2_loadw_locked_Rs32;
  L2_loadw_locked_Rd32 = *:4 EA;
}

:S2_storew_locked S2_storew_locked_Pd4 S2_storew_locked_Rs32 S2_storew_locked_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_storew_locked_Pd4 & S2_storew_locked_Rs32 & S2_storew_locked_Rt32 {
  local EA:4;
  EA = S2_storew_locked_Rs32;
  local tmp0:4;
  tmp0 = memw_locked(EA, S2_storew_locked_Rt32);
  S2_storew_locked_Pd4 = tmp0:1;
}

:L4_loadd_locked L4_loadd_locked_Rdd32 L4_loadd_locked_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b12 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadd_locked_Rdd32 & L4_loadd_locked_Rs32 {
  local EA:4;
  EA = L4_loadd_locked_Rs32;
  L4_loadd_locked_Rdd32 = *:8 EA;
}

:L4_loadw_phys L4_loadw_phys_Rd32 L4_loadw_phys_Rs32 L4_loadw_phys_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_loadw_phys_Rd32 & L4_loadw_phys_Rs32 & L4_loadw_phys_Rt32 {
  local tmp0:4;
  tmp0 = memw_phys(L4_loadw_phys_Rs32, L4_loadw_phys_Rt32);
  L4_loadw_phys_Rd32 = tmp0;
}

:S4_stored_locked S4_stored_locked_Pd4 S4_stored_locked_Rs32 S4_stored_locked_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_stored_locked_Pd4 & S4_stored_locked_Rs32 & S4_stored_locked_Rtt32 {
  local EA:4;
  EA = S4_stored_locked_Rs32;
  local tmp0:4;
  tmp0 = memd_locked(EA, S4_stored_locked_Rtt32);
  S4_stored_locked_Pd4 = tmp0:1;
}

:L4_loadrub_rr L4_loadrub_rr_Rd32 L4_loadrub_rr_Rs32 L4_loadrub_rr_Rt32 L4_loadrub_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_loadrub_rr_Rd32 & L4_loadrub_rr_Rs32 & L4_loadrub_rr_Rt32 & L4_loadrub_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_loadrub_rr_Rt32 << L4_loadrub_rr_u2;
  local tmp1:4;
  tmp1 = L4_loadrub_rr_Rs32 + tmp0;
  EA = tmp1;
  L4_loadrub_rr_Rd32 = *:1 EA;
}

:L2_ploadrubt_io L2_ploadrubt_io_Rd32 L2_ploadrubt_io_Pt4 L2_ploadrubt_io_Rs32 L2_ploadrubt_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrubt_io_Rd32 & L2_ploadrubt_io_Pt4 & L2_ploadrubt_io_Rs32 & L2_ploadrubt_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrubt_io_Rs32 + L2_ploadrubt_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = L2_ploadrubt_io_Pt4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L2_ploadrubt_io_Rd32 = *:1 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadrubt_pi L2_ploadrubt_pi_Rd32 L2_ploadrubt_pi_Rx32 L2_ploadrubt_pi_Pt4 L2_ploadrubt_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrubt_pi_Rd32 & L2_ploadrubt_pi_Rx32 & L2_ploadrubt_pi_Pt4 & L2_ploadrubt_pi_s4_0 {
  local EA:4;
  EA = L2_ploadrubt_pi_Rx32;
  local tmp0:1;
  tmp0 = L2_ploadrubt_pi_Pt4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = L2_ploadrubt_pi_Rx32 + L2_ploadrubt_pi_s4_0;
  L2_ploadrubt_pi_Rx32 = tmp2;
  L2_ploadrubt_pi_Rd32 = *:1 EA;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:L2_ploadrubf_io L2_ploadrubf_io_Rd32 L2_ploadrubf_io_Pt4 L2_ploadrubf_io_Rs32 L2_ploadrubf_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrubf_io_Rd32 & L2_ploadrubf_io_Pt4 & L2_ploadrubf_io_Rs32 & L2_ploadrubf_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrubf_io_Rs32 + L2_ploadrubf_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! L2_ploadrubf_io_Pt4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L2_ploadrubf_io_Rd32 = *:1 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L2_ploadrubf_pi L2_ploadrubf_pi_Rd32 L2_ploadrubf_pi_Rx32 L2_ploadrubf_pi_Pt4 L2_ploadrubf_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrubf_pi_Rd32 & L2_ploadrubf_pi_Rx32 & L2_ploadrubf_pi_Pt4 & L2_ploadrubf_pi_s4_0 {
  local EA:4;
  EA = L2_ploadrubf_pi_Rx32;
  local tmp0:1;
  tmp0 = ! L2_ploadrubf_pi_Pt4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = L2_ploadrubf_pi_Rx32 + L2_ploadrubf_pi_s4_0;
  L2_ploadrubf_pi_Rx32 = tmp3;
  L2_ploadrubf_pi_Rd32 = *:1 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadrubtnew_io L2_ploadrubtnew_io_Rd32 L2_ploadrubtnew_io_Pt4 L2_ploadrubtnew_io_Rs32 L2_ploadrubtnew_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrubtnew_io_Rd32 & L2_ploadrubtnew_io_Pt4 & L2_ploadrubtnew_io_Rs32 & L2_ploadrubtnew_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrubtnew_io_Rs32 + L2_ploadrubtnew_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(L2_ploadrubtnew_io_Pt4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L2_ploadrubtnew_io_Rd32 = *:1 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L2_ploadrubfnew_io L2_ploadrubfnew_io_Rd32 L2_ploadrubfnew_io_Pt4 L2_ploadrubfnew_io_Rs32 L2_ploadrubfnew_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrubfnew_io_Rd32 & L2_ploadrubfnew_io_Pt4 & L2_ploadrubfnew_io_Rs32 & L2_ploadrubfnew_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrubfnew_io_Rs32 + L2_ploadrubfnew_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(L2_ploadrubfnew_io_Pt4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L2_ploadrubfnew_io_Rd32 = *:1 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadrubt_rr L4_ploadrubt_rr_Rd32 L4_ploadrubt_rr_Pv4 L4_ploadrubt_rr_Rs32 L4_ploadrubt_rr_Rt32 L4_ploadrubt_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrubt_rr_Rd32 & L4_ploadrubt_rr_Pv4 & L4_ploadrubt_rr_Rs32 & L4_ploadrubt_rr_Rt32 & L4_ploadrubt_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrubt_rr_Rt32 << L4_ploadrubt_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrubt_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = L4_ploadrubt_rr_Pv4;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L4_ploadrubt_rr_Rd32 = *:1 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_ploadrubf_rr L4_ploadrubf_rr_Rd32 L4_ploadrubf_rr_Pv4 L4_ploadrubf_rr_Rs32 L4_ploadrubf_rr_Rt32 L4_ploadrubf_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrubf_rr_Rd32 & L4_ploadrubf_rr_Pv4 & L4_ploadrubf_rr_Rs32 & L4_ploadrubf_rr_Rt32 & L4_ploadrubf_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrubf_rr_Rt32 << L4_ploadrubf_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrubf_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = ! L4_ploadrubf_rr_Pv4;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L4_ploadrubf_rr_Rd32 = *:1 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadrubtnew_rr L4_ploadrubtnew_rr_Rd32 L4_ploadrubtnew_rr_Pv4 L4_ploadrubtnew_rr_Rs32 L4_ploadrubtnew_rr_Rt32 L4_ploadrubtnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrubtnew_rr_Rd32 & L4_ploadrubtnew_rr_Pv4 & L4_ploadrubtnew_rr_Rs32 & L4_ploadrubtnew_rr_Rt32 & L4_ploadrubtnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrubtnew_rr_Rt32 << L4_ploadrubtnew_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrubtnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(L4_ploadrubtnew_rr_Pv4);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L4_ploadrubtnew_rr_Rd32 = *:1 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadrubfnew_rr L4_ploadrubfnew_rr_Rd32 L4_ploadrubfnew_rr_Pv4 L4_ploadrubfnew_rr_Rs32 L4_ploadrubfnew_rr_Rt32 L4_ploadrubfnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrubfnew_rr_Rd32 & L4_ploadrubfnew_rr_Pv4 & L4_ploadrubfnew_rr_Rs32 & L4_ploadrubfnew_rr_Rt32 & L4_ploadrubfnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrubfnew_rr_Rt32 << L4_ploadrubfnew_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrubfnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(L4_ploadrubfnew_rr_Pv4);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  L4_ploadrubfnew_rr_Rd32 = *:1 EA;
  goto <done_6>;
<f_branch_6>
<done_6>
}

:L2_ploadrubtnew_pi L2_ploadrubtnew_pi_Rd32 L2_ploadrubtnew_pi_Rx32 L2_ploadrubtnew_pi_Pt4 L2_ploadrubtnew_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrubtnew_pi_Rd32 & L2_ploadrubtnew_pi_Rx32 & L2_ploadrubtnew_pi_Pt4 & L2_ploadrubtnew_pi_s4_0 {
  local EA:4;
  EA = L2_ploadrubtnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(L2_ploadrubtnew_pi_Pt4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = L2_ploadrubtnew_pi_Rx32 + L2_ploadrubtnew_pi_s4_0;
  L2_ploadrubtnew_pi_Rx32 = tmp3;
  L2_ploadrubtnew_pi_Rd32 = *:1 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadrubfnew_pi L2_ploadrubfnew_pi_Rd32 L2_ploadrubfnew_pi_Rx32 L2_ploadrubfnew_pi_Pt4 L2_ploadrubfnew_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrubfnew_pi_Rd32 & L2_ploadrubfnew_pi_Rx32 & L2_ploadrubfnew_pi_Pt4 & L2_ploadrubfnew_pi_s4_0 {
  local EA:4;
  EA = L2_ploadrubfnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(L2_ploadrubfnew_pi_Pt4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = L2_ploadrubfnew_pi_Rx32 + L2_ploadrubfnew_pi_s4_0;
  L2_ploadrubfnew_pi_Rx32 = tmp4;
  L2_ploadrubfnew_pi_Rd32 = *:1 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_ploadrubt_abs L4_ploadrubt_abs_Rd32 L4_ploadrubt_abs_Pt4 L4_ploadrubt_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrubt_abs_Rd32 & L4_ploadrubt_abs_Pt4 & L4_ploadrubt_abs_u6 {
  local EA:4;
  EA = L4_ploadrubt_abs_u6;
  local tmp0:1;
  tmp0 = L4_ploadrubt_abs_Pt4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  L4_ploadrubt_abs_Rd32 = *:1 EA;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:L4_ploadrubf_abs L4_ploadrubf_abs_Rd32 L4_ploadrubf_abs_Pt4 L4_ploadrubf_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrubf_abs_Rd32 & L4_ploadrubf_abs_Pt4 & L4_ploadrubf_abs_u6 {
  local EA:4;
  EA = L4_ploadrubf_abs_u6;
  local tmp0:1;
  tmp0 = ! L4_ploadrubf_abs_Pt4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L4_ploadrubf_abs_Rd32 = *:1 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L4_ploadrubtnew_abs L4_ploadrubtnew_abs_Rd32 L4_ploadrubtnew_abs_Pt4 L4_ploadrubtnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrubtnew_abs_Rd32 & L4_ploadrubtnew_abs_Pt4 & L4_ploadrubtnew_abs_u6 {
  local EA:4;
  EA = L4_ploadrubtnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(L4_ploadrubtnew_abs_Pt4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L4_ploadrubtnew_abs_Rd32 = *:1 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L4_ploadrubfnew_abs L4_ploadrubfnew_abs_Rd32 L4_ploadrubfnew_abs_Pt4 L4_ploadrubfnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrubfnew_abs_Rd32 & L4_ploadrubfnew_abs_Pt4 & L4_ploadrubfnew_abs_u6 {
  local EA:4;
  EA = L4_ploadrubfnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(L4_ploadrubfnew_abs_Pt4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L4_ploadrubfnew_abs_Rd32 = *:1 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_loadrb_rr L4_loadrb_rr_Rd32 L4_loadrb_rr_Rs32 L4_loadrb_rr_Rt32 L4_loadrb_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_loadrb_rr_Rd32 & L4_loadrb_rr_Rs32 & L4_loadrb_rr_Rt32 & L4_loadrb_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_loadrb_rr_Rt32 << L4_loadrb_rr_u2;
  local tmp1:4;
  tmp1 = L4_loadrb_rr_Rs32 + tmp0;
  EA = tmp1;
  L4_loadrb_rr_Rd32 = *:1 EA;
}

:L2_ploadrbt_io L2_ploadrbt_io_Rd32 L2_ploadrbt_io_Pt4 L2_ploadrbt_io_Rs32 L2_ploadrbt_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrbt_io_Rd32 & L2_ploadrbt_io_Pt4 & L2_ploadrbt_io_Rs32 & L2_ploadrbt_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrbt_io_Rs32 + L2_ploadrbt_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = L2_ploadrbt_io_Pt4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L2_ploadrbt_io_Rd32 = *:1 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadrbt_pi L2_ploadrbt_pi_Rd32 L2_ploadrbt_pi_Rx32 L2_ploadrbt_pi_Pt4 L2_ploadrbt_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrbt_pi_Rd32 & L2_ploadrbt_pi_Rx32 & L2_ploadrbt_pi_Pt4 & L2_ploadrbt_pi_s4_0 {
  local EA:4;
  EA = L2_ploadrbt_pi_Rx32;
  local tmp0:1;
  tmp0 = L2_ploadrbt_pi_Pt4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = L2_ploadrbt_pi_Rx32 + L2_ploadrbt_pi_s4_0;
  L2_ploadrbt_pi_Rx32 = tmp2;
  L2_ploadrbt_pi_Rd32 = *:1 EA;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:L2_ploadrbf_io L2_ploadrbf_io_Rd32 L2_ploadrbf_io_Pt4 L2_ploadrbf_io_Rs32 L2_ploadrbf_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrbf_io_Rd32 & L2_ploadrbf_io_Pt4 & L2_ploadrbf_io_Rs32 & L2_ploadrbf_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrbf_io_Rs32 + L2_ploadrbf_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! L2_ploadrbf_io_Pt4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L2_ploadrbf_io_Rd32 = *:1 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L2_ploadrbf_pi L2_ploadrbf_pi_Rd32 L2_ploadrbf_pi_Rx32 L2_ploadrbf_pi_Pt4 L2_ploadrbf_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrbf_pi_Rd32 & L2_ploadrbf_pi_Rx32 & L2_ploadrbf_pi_Pt4 & L2_ploadrbf_pi_s4_0 {
  local EA:4;
  EA = L2_ploadrbf_pi_Rx32;
  local tmp0:1;
  tmp0 = ! L2_ploadrbf_pi_Pt4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = L2_ploadrbf_pi_Rx32 + L2_ploadrbf_pi_s4_0;
  L2_ploadrbf_pi_Rx32 = tmp3;
  L2_ploadrbf_pi_Rd32 = *:1 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadrbtnew_io L2_ploadrbtnew_io_Rd32 L2_ploadrbtnew_io_Pt4 L2_ploadrbtnew_io_Rs32 L2_ploadrbtnew_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrbtnew_io_Rd32 & L2_ploadrbtnew_io_Pt4 & L2_ploadrbtnew_io_Rs32 & L2_ploadrbtnew_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrbtnew_io_Rs32 + L2_ploadrbtnew_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(L2_ploadrbtnew_io_Pt4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L2_ploadrbtnew_io_Rd32 = *:1 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L2_ploadrbfnew_io L2_ploadrbfnew_io_Rd32 L2_ploadrbfnew_io_Pt4 L2_ploadrbfnew_io_Rs32 L2_ploadrbfnew_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrbfnew_io_Rd32 & L2_ploadrbfnew_io_Pt4 & L2_ploadrbfnew_io_Rs32 & L2_ploadrbfnew_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrbfnew_io_Rs32 + L2_ploadrbfnew_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(L2_ploadrbfnew_io_Pt4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L2_ploadrbfnew_io_Rd32 = *:1 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadrbt_rr L4_ploadrbt_rr_Rd32 L4_ploadrbt_rr_Pv4 L4_ploadrbt_rr_Rs32 L4_ploadrbt_rr_Rt32 L4_ploadrbt_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrbt_rr_Rd32 & L4_ploadrbt_rr_Pv4 & L4_ploadrbt_rr_Rs32 & L4_ploadrbt_rr_Rt32 & L4_ploadrbt_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrbt_rr_Rt32 << L4_ploadrbt_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrbt_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = L4_ploadrbt_rr_Pv4;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L4_ploadrbt_rr_Rd32 = *:1 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_ploadrbf_rr L4_ploadrbf_rr_Rd32 L4_ploadrbf_rr_Pv4 L4_ploadrbf_rr_Rs32 L4_ploadrbf_rr_Rt32 L4_ploadrbf_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrbf_rr_Rd32 & L4_ploadrbf_rr_Pv4 & L4_ploadrbf_rr_Rs32 & L4_ploadrbf_rr_Rt32 & L4_ploadrbf_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrbf_rr_Rt32 << L4_ploadrbf_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrbf_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = ! L4_ploadrbf_rr_Pv4;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L4_ploadrbf_rr_Rd32 = *:1 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadrbtnew_rr L4_ploadrbtnew_rr_Rd32 L4_ploadrbtnew_rr_Pv4 L4_ploadrbtnew_rr_Rs32 L4_ploadrbtnew_rr_Rt32 L4_ploadrbtnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrbtnew_rr_Rd32 & L4_ploadrbtnew_rr_Pv4 & L4_ploadrbtnew_rr_Rs32 & L4_ploadrbtnew_rr_Rt32 & L4_ploadrbtnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrbtnew_rr_Rt32 << L4_ploadrbtnew_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrbtnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(L4_ploadrbtnew_rr_Pv4);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L4_ploadrbtnew_rr_Rd32 = *:1 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadrbfnew_rr L4_ploadrbfnew_rr_Rd32 L4_ploadrbfnew_rr_Pv4 L4_ploadrbfnew_rr_Rs32 L4_ploadrbfnew_rr_Rt32 L4_ploadrbfnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrbfnew_rr_Rd32 & L4_ploadrbfnew_rr_Pv4 & L4_ploadrbfnew_rr_Rs32 & L4_ploadrbfnew_rr_Rt32 & L4_ploadrbfnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrbfnew_rr_Rt32 << L4_ploadrbfnew_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrbfnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(L4_ploadrbfnew_rr_Pv4);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  L4_ploadrbfnew_rr_Rd32 = *:1 EA;
  goto <done_6>;
<f_branch_6>
<done_6>
}

:L2_ploadrbtnew_pi L2_ploadrbtnew_pi_Rd32 L2_ploadrbtnew_pi_Rx32 L2_ploadrbtnew_pi_Pt4 L2_ploadrbtnew_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrbtnew_pi_Rd32 & L2_ploadrbtnew_pi_Rx32 & L2_ploadrbtnew_pi_Pt4 & L2_ploadrbtnew_pi_s4_0 {
  local EA:4;
  EA = L2_ploadrbtnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(L2_ploadrbtnew_pi_Pt4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = L2_ploadrbtnew_pi_Rx32 + L2_ploadrbtnew_pi_s4_0;
  L2_ploadrbtnew_pi_Rx32 = tmp3;
  L2_ploadrbtnew_pi_Rd32 = *:1 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadrbfnew_pi L2_ploadrbfnew_pi_Rd32 L2_ploadrbfnew_pi_Rx32 L2_ploadrbfnew_pi_Pt4 L2_ploadrbfnew_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrbfnew_pi_Rd32 & L2_ploadrbfnew_pi_Rx32 & L2_ploadrbfnew_pi_Pt4 & L2_ploadrbfnew_pi_s4_0 {
  local EA:4;
  EA = L2_ploadrbfnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(L2_ploadrbfnew_pi_Pt4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = L2_ploadrbfnew_pi_Rx32 + L2_ploadrbfnew_pi_s4_0;
  L2_ploadrbfnew_pi_Rx32 = tmp4;
  L2_ploadrbfnew_pi_Rd32 = *:1 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_ploadrbt_abs L4_ploadrbt_abs_Rd32 L4_ploadrbt_abs_Pt4 L4_ploadrbt_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrbt_abs_Rd32 & L4_ploadrbt_abs_Pt4 & L4_ploadrbt_abs_u6 {
  local EA:4;
  EA = L4_ploadrbt_abs_u6;
  local tmp0:1;
  tmp0 = L4_ploadrbt_abs_Pt4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  L4_ploadrbt_abs_Rd32 = *:1 EA;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:L4_ploadrbf_abs L4_ploadrbf_abs_Rd32 L4_ploadrbf_abs_Pt4 L4_ploadrbf_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrbf_abs_Rd32 & L4_ploadrbf_abs_Pt4 & L4_ploadrbf_abs_u6 {
  local EA:4;
  EA = L4_ploadrbf_abs_u6;
  local tmp0:1;
  tmp0 = ! L4_ploadrbf_abs_Pt4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L4_ploadrbf_abs_Rd32 = *:1 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L4_ploadrbtnew_abs L4_ploadrbtnew_abs_Rd32 L4_ploadrbtnew_abs_Pt4 L4_ploadrbtnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrbtnew_abs_Rd32 & L4_ploadrbtnew_abs_Pt4 & L4_ploadrbtnew_abs_u6 {
  local EA:4;
  EA = L4_ploadrbtnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(L4_ploadrbtnew_abs_Pt4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L4_ploadrbtnew_abs_Rd32 = *:1 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L4_ploadrbfnew_abs L4_ploadrbfnew_abs_Rd32 L4_ploadrbfnew_abs_Pt4 L4_ploadrbfnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrbfnew_abs_Rd32 & L4_ploadrbfnew_abs_Pt4 & L4_ploadrbfnew_abs_u6 {
  local EA:4;
  EA = L4_ploadrbfnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(L4_ploadrbfnew_abs_Pt4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L4_ploadrbfnew_abs_Rd32 = *:1 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_loadruh_rr L4_loadruh_rr_Rd32 L4_loadruh_rr_Rs32 L4_loadruh_rr_Rt32 L4_loadruh_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_loadruh_rr_Rd32 & L4_loadruh_rr_Rs32 & L4_loadruh_rr_Rt32 & L4_loadruh_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_loadruh_rr_Rt32 << L4_loadruh_rr_u2;
  local tmp1:4;
  tmp1 = L4_loadruh_rr_Rs32 + tmp0;
  EA = tmp1;
  L4_loadruh_rr_Rd32 = *:2 EA;
}

:L2_ploadruht_io L2_ploadruht_io_Rd32 L2_ploadruht_io_Pt4 L2_ploadruht_io_Rs32 L2_ploadruht_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadruht_io_Rd32 & L2_ploadruht_io_Pt4 & L2_ploadruht_io_Rs32 & L2_ploadruht_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadruht_io_Rs32 + L2_ploadruht_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = L2_ploadruht_io_Pt4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L2_ploadruht_io_Rd32 = *:2 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadruht_pi L2_ploadruht_pi_Rd32 L2_ploadruht_pi_Rx32 L2_ploadruht_pi_Pt4 L2_ploadruht_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadruht_pi_Rd32 & L2_ploadruht_pi_Rx32 & L2_ploadruht_pi_Pt4 & L2_ploadruht_pi_s4_1 {
  local EA:4;
  EA = L2_ploadruht_pi_Rx32;
  local tmp0:1;
  tmp0 = L2_ploadruht_pi_Pt4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = L2_ploadruht_pi_Rx32 + L2_ploadruht_pi_s4_1;
  L2_ploadruht_pi_Rx32 = tmp2;
  L2_ploadruht_pi_Rd32 = *:2 EA;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:L2_ploadruhf_io L2_ploadruhf_io_Rd32 L2_ploadruhf_io_Pt4 L2_ploadruhf_io_Rs32 L2_ploadruhf_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadruhf_io_Rd32 & L2_ploadruhf_io_Pt4 & L2_ploadruhf_io_Rs32 & L2_ploadruhf_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadruhf_io_Rs32 + L2_ploadruhf_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! L2_ploadruhf_io_Pt4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L2_ploadruhf_io_Rd32 = *:2 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L2_ploadruhf_pi L2_ploadruhf_pi_Rd32 L2_ploadruhf_pi_Rx32 L2_ploadruhf_pi_Pt4 L2_ploadruhf_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadruhf_pi_Rd32 & L2_ploadruhf_pi_Rx32 & L2_ploadruhf_pi_Pt4 & L2_ploadruhf_pi_s4_1 {
  local EA:4;
  EA = L2_ploadruhf_pi_Rx32;
  local tmp0:1;
  tmp0 = ! L2_ploadruhf_pi_Pt4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = L2_ploadruhf_pi_Rx32 + L2_ploadruhf_pi_s4_1;
  L2_ploadruhf_pi_Rx32 = tmp3;
  L2_ploadruhf_pi_Rd32 = *:2 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadruhtnew_io L2_ploadruhtnew_io_Rd32 L2_ploadruhtnew_io_Pt4 L2_ploadruhtnew_io_Rs32 L2_ploadruhtnew_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadruhtnew_io_Rd32 & L2_ploadruhtnew_io_Pt4 & L2_ploadruhtnew_io_Rs32 & L2_ploadruhtnew_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadruhtnew_io_Rs32 + L2_ploadruhtnew_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(L2_ploadruhtnew_io_Pt4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L2_ploadruhtnew_io_Rd32 = *:2 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L2_ploadruhfnew_io L2_ploadruhfnew_io_Rd32 L2_ploadruhfnew_io_Pt4 L2_ploadruhfnew_io_Rs32 L2_ploadruhfnew_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadruhfnew_io_Rd32 & L2_ploadruhfnew_io_Pt4 & L2_ploadruhfnew_io_Rs32 & L2_ploadruhfnew_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadruhfnew_io_Rs32 + L2_ploadruhfnew_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(L2_ploadruhfnew_io_Pt4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L2_ploadruhfnew_io_Rd32 = *:2 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadruht_rr L4_ploadruht_rr_Rd32 L4_ploadruht_rr_Pv4 L4_ploadruht_rr_Rs32 L4_ploadruht_rr_Rt32 L4_ploadruht_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadruht_rr_Rd32 & L4_ploadruht_rr_Pv4 & L4_ploadruht_rr_Rs32 & L4_ploadruht_rr_Rt32 & L4_ploadruht_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadruht_rr_Rt32 << L4_ploadruht_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadruht_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = L4_ploadruht_rr_Pv4;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L4_ploadruht_rr_Rd32 = *:2 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_ploadruhf_rr L4_ploadruhf_rr_Rd32 L4_ploadruhf_rr_Pv4 L4_ploadruhf_rr_Rs32 L4_ploadruhf_rr_Rt32 L4_ploadruhf_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadruhf_rr_Rd32 & L4_ploadruhf_rr_Pv4 & L4_ploadruhf_rr_Rs32 & L4_ploadruhf_rr_Rt32 & L4_ploadruhf_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadruhf_rr_Rt32 << L4_ploadruhf_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadruhf_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = ! L4_ploadruhf_rr_Pv4;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L4_ploadruhf_rr_Rd32 = *:2 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadruhtnew_rr L4_ploadruhtnew_rr_Rd32 L4_ploadruhtnew_rr_Pv4 L4_ploadruhtnew_rr_Rs32 L4_ploadruhtnew_rr_Rt32 L4_ploadruhtnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadruhtnew_rr_Rd32 & L4_ploadruhtnew_rr_Pv4 & L4_ploadruhtnew_rr_Rs32 & L4_ploadruhtnew_rr_Rt32 & L4_ploadruhtnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadruhtnew_rr_Rt32 << L4_ploadruhtnew_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadruhtnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(L4_ploadruhtnew_rr_Pv4);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L4_ploadruhtnew_rr_Rd32 = *:2 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadruhfnew_rr L4_ploadruhfnew_rr_Rd32 L4_ploadruhfnew_rr_Pv4 L4_ploadruhfnew_rr_Rs32 L4_ploadruhfnew_rr_Rt32 L4_ploadruhfnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadruhfnew_rr_Rd32 & L4_ploadruhfnew_rr_Pv4 & L4_ploadruhfnew_rr_Rs32 & L4_ploadruhfnew_rr_Rt32 & L4_ploadruhfnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadruhfnew_rr_Rt32 << L4_ploadruhfnew_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadruhfnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(L4_ploadruhfnew_rr_Pv4);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  L4_ploadruhfnew_rr_Rd32 = *:2 EA;
  goto <done_6>;
<f_branch_6>
<done_6>
}

:L2_ploadruhtnew_pi L2_ploadruhtnew_pi_Rd32 L2_ploadruhtnew_pi_Rx32 L2_ploadruhtnew_pi_Pt4 L2_ploadruhtnew_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadruhtnew_pi_Rd32 & L2_ploadruhtnew_pi_Rx32 & L2_ploadruhtnew_pi_Pt4 & L2_ploadruhtnew_pi_s4_1 {
  local EA:4;
  EA = L2_ploadruhtnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(L2_ploadruhtnew_pi_Pt4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = L2_ploadruhtnew_pi_Rx32 + L2_ploadruhtnew_pi_s4_1;
  L2_ploadruhtnew_pi_Rx32 = tmp3;
  L2_ploadruhtnew_pi_Rd32 = *:2 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadruhfnew_pi L2_ploadruhfnew_pi_Rd32 L2_ploadruhfnew_pi_Rx32 L2_ploadruhfnew_pi_Pt4 L2_ploadruhfnew_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadruhfnew_pi_Rd32 & L2_ploadruhfnew_pi_Rx32 & L2_ploadruhfnew_pi_Pt4 & L2_ploadruhfnew_pi_s4_1 {
  local EA:4;
  EA = L2_ploadruhfnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(L2_ploadruhfnew_pi_Pt4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = L2_ploadruhfnew_pi_Rx32 + L2_ploadruhfnew_pi_s4_1;
  L2_ploadruhfnew_pi_Rx32 = tmp4;
  L2_ploadruhfnew_pi_Rd32 = *:2 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_ploadruht_abs L4_ploadruht_abs_Rd32 L4_ploadruht_abs_Pt4 L4_ploadruht_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadruht_abs_Rd32 & L4_ploadruht_abs_Pt4 & L4_ploadruht_abs_u6 {
  local EA:4;
  EA = L4_ploadruht_abs_u6;
  local tmp0:1;
  tmp0 = L4_ploadruht_abs_Pt4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  L4_ploadruht_abs_Rd32 = *:2 EA;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:L4_ploadruhf_abs L4_ploadruhf_abs_Rd32 L4_ploadruhf_abs_Pt4 L4_ploadruhf_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadruhf_abs_Rd32 & L4_ploadruhf_abs_Pt4 & L4_ploadruhf_abs_u6 {
  local EA:4;
  EA = L4_ploadruhf_abs_u6;
  local tmp0:1;
  tmp0 = ! L4_ploadruhf_abs_Pt4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L4_ploadruhf_abs_Rd32 = *:2 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L4_ploadruhtnew_abs L4_ploadruhtnew_abs_Rd32 L4_ploadruhtnew_abs_Pt4 L4_ploadruhtnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadruhtnew_abs_Rd32 & L4_ploadruhtnew_abs_Pt4 & L4_ploadruhtnew_abs_u6 {
  local EA:4;
  EA = L4_ploadruhtnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(L4_ploadruhtnew_abs_Pt4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L4_ploadruhtnew_abs_Rd32 = *:2 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L4_ploadruhfnew_abs L4_ploadruhfnew_abs_Rd32 L4_ploadruhfnew_abs_Pt4 L4_ploadruhfnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadruhfnew_abs_Rd32 & L4_ploadruhfnew_abs_Pt4 & L4_ploadruhfnew_abs_u6 {
  local EA:4;
  EA = L4_ploadruhfnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(L4_ploadruhfnew_abs_Pt4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L4_ploadruhfnew_abs_Rd32 = *:2 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_loadrh_rr L4_loadrh_rr_Rd32 L4_loadrh_rr_Rs32 L4_loadrh_rr_Rt32 L4_loadrh_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_loadrh_rr_Rd32 & L4_loadrh_rr_Rs32 & L4_loadrh_rr_Rt32 & L4_loadrh_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_loadrh_rr_Rt32 << L4_loadrh_rr_u2;
  local tmp1:4;
  tmp1 = L4_loadrh_rr_Rs32 + tmp0;
  EA = tmp1;
  L4_loadrh_rr_Rd32 = *:2 EA;
}

:L2_ploadrht_io L2_ploadrht_io_Rd32 L2_ploadrht_io_Pt4 L2_ploadrht_io_Rs32 L2_ploadrht_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrht_io_Rd32 & L2_ploadrht_io_Pt4 & L2_ploadrht_io_Rs32 & L2_ploadrht_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrht_io_Rs32 + L2_ploadrht_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = L2_ploadrht_io_Pt4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L2_ploadrht_io_Rd32 = *:2 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadrht_pi L2_ploadrht_pi_Rd32 L2_ploadrht_pi_Rx32 L2_ploadrht_pi_Pt4 L2_ploadrht_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrht_pi_Rd32 & L2_ploadrht_pi_Rx32 & L2_ploadrht_pi_Pt4 & L2_ploadrht_pi_s4_1 {
  local EA:4;
  EA = L2_ploadrht_pi_Rx32;
  local tmp0:1;
  tmp0 = L2_ploadrht_pi_Pt4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = L2_ploadrht_pi_Rx32 + L2_ploadrht_pi_s4_1;
  L2_ploadrht_pi_Rx32 = tmp2;
  L2_ploadrht_pi_Rd32 = *:2 EA;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:L2_ploadrhf_io L2_ploadrhf_io_Rd32 L2_ploadrhf_io_Pt4 L2_ploadrhf_io_Rs32 L2_ploadrhf_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrhf_io_Rd32 & L2_ploadrhf_io_Pt4 & L2_ploadrhf_io_Rs32 & L2_ploadrhf_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrhf_io_Rs32 + L2_ploadrhf_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! L2_ploadrhf_io_Pt4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L2_ploadrhf_io_Rd32 = *:2 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L2_ploadrhf_pi L2_ploadrhf_pi_Rd32 L2_ploadrhf_pi_Rx32 L2_ploadrhf_pi_Pt4 L2_ploadrhf_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrhf_pi_Rd32 & L2_ploadrhf_pi_Rx32 & L2_ploadrhf_pi_Pt4 & L2_ploadrhf_pi_s4_1 {
  local EA:4;
  EA = L2_ploadrhf_pi_Rx32;
  local tmp0:1;
  tmp0 = ! L2_ploadrhf_pi_Pt4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = L2_ploadrhf_pi_Rx32 + L2_ploadrhf_pi_s4_1;
  L2_ploadrhf_pi_Rx32 = tmp3;
  L2_ploadrhf_pi_Rd32 = *:2 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadrhtnew_io L2_ploadrhtnew_io_Rd32 L2_ploadrhtnew_io_Pt4 L2_ploadrhtnew_io_Rs32 L2_ploadrhtnew_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrhtnew_io_Rd32 & L2_ploadrhtnew_io_Pt4 & L2_ploadrhtnew_io_Rs32 & L2_ploadrhtnew_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrhtnew_io_Rs32 + L2_ploadrhtnew_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(L2_ploadrhtnew_io_Pt4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L2_ploadrhtnew_io_Rd32 = *:2 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L2_ploadrhfnew_io L2_ploadrhfnew_io_Rd32 L2_ploadrhfnew_io_Pt4 L2_ploadrhfnew_io_Rs32 L2_ploadrhfnew_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrhfnew_io_Rd32 & L2_ploadrhfnew_io_Pt4 & L2_ploadrhfnew_io_Rs32 & L2_ploadrhfnew_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrhfnew_io_Rs32 + L2_ploadrhfnew_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(L2_ploadrhfnew_io_Pt4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L2_ploadrhfnew_io_Rd32 = *:2 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadrht_rr L4_ploadrht_rr_Rd32 L4_ploadrht_rr_Pv4 L4_ploadrht_rr_Rs32 L4_ploadrht_rr_Rt32 L4_ploadrht_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrht_rr_Rd32 & L4_ploadrht_rr_Pv4 & L4_ploadrht_rr_Rs32 & L4_ploadrht_rr_Rt32 & L4_ploadrht_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrht_rr_Rt32 << L4_ploadrht_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrht_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = L4_ploadrht_rr_Pv4;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L4_ploadrht_rr_Rd32 = *:2 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_ploadrhf_rr L4_ploadrhf_rr_Rd32 L4_ploadrhf_rr_Pv4 L4_ploadrhf_rr_Rs32 L4_ploadrhf_rr_Rt32 L4_ploadrhf_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrhf_rr_Rd32 & L4_ploadrhf_rr_Pv4 & L4_ploadrhf_rr_Rs32 & L4_ploadrhf_rr_Rt32 & L4_ploadrhf_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrhf_rr_Rt32 << L4_ploadrhf_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrhf_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = ! L4_ploadrhf_rr_Pv4;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L4_ploadrhf_rr_Rd32 = *:2 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadrhtnew_rr L4_ploadrhtnew_rr_Rd32 L4_ploadrhtnew_rr_Pv4 L4_ploadrhtnew_rr_Rs32 L4_ploadrhtnew_rr_Rt32 L4_ploadrhtnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrhtnew_rr_Rd32 & L4_ploadrhtnew_rr_Pv4 & L4_ploadrhtnew_rr_Rs32 & L4_ploadrhtnew_rr_Rt32 & L4_ploadrhtnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrhtnew_rr_Rt32 << L4_ploadrhtnew_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrhtnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(L4_ploadrhtnew_rr_Pv4);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L4_ploadrhtnew_rr_Rd32 = *:2 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadrhfnew_rr L4_ploadrhfnew_rr_Rd32 L4_ploadrhfnew_rr_Pv4 L4_ploadrhfnew_rr_Rs32 L4_ploadrhfnew_rr_Rt32 L4_ploadrhfnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrhfnew_rr_Rd32 & L4_ploadrhfnew_rr_Pv4 & L4_ploadrhfnew_rr_Rs32 & L4_ploadrhfnew_rr_Rt32 & L4_ploadrhfnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrhfnew_rr_Rt32 << L4_ploadrhfnew_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrhfnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(L4_ploadrhfnew_rr_Pv4);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  L4_ploadrhfnew_rr_Rd32 = *:2 EA;
  goto <done_6>;
<f_branch_6>
<done_6>
}

:L2_ploadrhtnew_pi L2_ploadrhtnew_pi_Rd32 L2_ploadrhtnew_pi_Rx32 L2_ploadrhtnew_pi_Pt4 L2_ploadrhtnew_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrhtnew_pi_Rd32 & L2_ploadrhtnew_pi_Rx32 & L2_ploadrhtnew_pi_Pt4 & L2_ploadrhtnew_pi_s4_1 {
  local EA:4;
  EA = L2_ploadrhtnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(L2_ploadrhtnew_pi_Pt4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = L2_ploadrhtnew_pi_Rx32 + L2_ploadrhtnew_pi_s4_1;
  L2_ploadrhtnew_pi_Rx32 = tmp3;
  L2_ploadrhtnew_pi_Rd32 = *:2 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadrhfnew_pi L2_ploadrhfnew_pi_Rd32 L2_ploadrhfnew_pi_Rx32 L2_ploadrhfnew_pi_Pt4 L2_ploadrhfnew_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrhfnew_pi_Rd32 & L2_ploadrhfnew_pi_Rx32 & L2_ploadrhfnew_pi_Pt4 & L2_ploadrhfnew_pi_s4_1 {
  local EA:4;
  EA = L2_ploadrhfnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(L2_ploadrhfnew_pi_Pt4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = L2_ploadrhfnew_pi_Rx32 + L2_ploadrhfnew_pi_s4_1;
  L2_ploadrhfnew_pi_Rx32 = tmp4;
  L2_ploadrhfnew_pi_Rd32 = *:2 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_ploadrht_abs L4_ploadrht_abs_Rd32 L4_ploadrht_abs_Pt4 L4_ploadrht_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrht_abs_Rd32 & L4_ploadrht_abs_Pt4 & L4_ploadrht_abs_u6 {
  local EA:4;
  EA = L4_ploadrht_abs_u6;
  local tmp0:1;
  tmp0 = L4_ploadrht_abs_Pt4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  L4_ploadrht_abs_Rd32 = *:2 EA;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:L4_ploadrhf_abs L4_ploadrhf_abs_Rd32 L4_ploadrhf_abs_Pt4 L4_ploadrhf_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrhf_abs_Rd32 & L4_ploadrhf_abs_Pt4 & L4_ploadrhf_abs_u6 {
  local EA:4;
  EA = L4_ploadrhf_abs_u6;
  local tmp0:1;
  tmp0 = ! L4_ploadrhf_abs_Pt4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L4_ploadrhf_abs_Rd32 = *:2 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L4_ploadrhtnew_abs L4_ploadrhtnew_abs_Rd32 L4_ploadrhtnew_abs_Pt4 L4_ploadrhtnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrhtnew_abs_Rd32 & L4_ploadrhtnew_abs_Pt4 & L4_ploadrhtnew_abs_u6 {
  local EA:4;
  EA = L4_ploadrhtnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(L4_ploadrhtnew_abs_Pt4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L4_ploadrhtnew_abs_Rd32 = *:2 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L4_ploadrhfnew_abs L4_ploadrhfnew_abs_Rd32 L4_ploadrhfnew_abs_Pt4 L4_ploadrhfnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrhfnew_abs_Rd32 & L4_ploadrhfnew_abs_Pt4 & L4_ploadrhfnew_abs_u6 {
  local EA:4;
  EA = L4_ploadrhfnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(L4_ploadrhfnew_abs_Pt4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L4_ploadrhfnew_abs_Rd32 = *:2 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_loadri_rr L4_loadri_rr_Rd32 L4_loadri_rr_Rs32 L4_loadri_rr_Rt32 L4_loadri_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_loadri_rr_Rd32 & L4_loadri_rr_Rs32 & L4_loadri_rr_Rt32 & L4_loadri_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_loadri_rr_Rt32 << L4_loadri_rr_u2;
  local tmp1:4;
  tmp1 = L4_loadri_rr_Rs32 + tmp0;
  EA = tmp1;
  L4_loadri_rr_Rd32 = *:4 EA;
}

:L2_ploadrit_io L2_ploadrit_io_Rd32 L2_ploadrit_io_Pt4 L2_ploadrit_io_Rs32 L2_ploadrit_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrit_io_Rd32 & L2_ploadrit_io_Pt4 & L2_ploadrit_io_Rs32 & L2_ploadrit_io_u6_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrit_io_Rs32 + L2_ploadrit_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = L2_ploadrit_io_Pt4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L2_ploadrit_io_Rd32 = *:4 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadrit_pi L2_ploadrit_pi_Rd32 L2_ploadrit_pi_Rx32 L2_ploadrit_pi_Pt4 L2_ploadrit_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrit_pi_Rd32 & L2_ploadrit_pi_Rx32 & L2_ploadrit_pi_Pt4 & L2_ploadrit_pi_s4_2 {
  local EA:4;
  EA = L2_ploadrit_pi_Rx32;
  local tmp0:1;
  tmp0 = L2_ploadrit_pi_Pt4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = L2_ploadrit_pi_Rx32 + L2_ploadrit_pi_s4_2;
  L2_ploadrit_pi_Rx32 = tmp2;
  L2_ploadrit_pi_Rd32 = *:4 EA;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:L2_ploadrif_io L2_ploadrif_io_Rd32 L2_ploadrif_io_Pt4 L2_ploadrif_io_Rs32 L2_ploadrif_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrif_io_Rd32 & L2_ploadrif_io_Pt4 & L2_ploadrif_io_Rs32 & L2_ploadrif_io_u6_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrif_io_Rs32 + L2_ploadrif_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! L2_ploadrif_io_Pt4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L2_ploadrif_io_Rd32 = *:4 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L2_ploadrif_pi L2_ploadrif_pi_Rd32 L2_ploadrif_pi_Rx32 L2_ploadrif_pi_Pt4 L2_ploadrif_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrif_pi_Rd32 & L2_ploadrif_pi_Rx32 & L2_ploadrif_pi_Pt4 & L2_ploadrif_pi_s4_2 {
  local EA:4;
  EA = L2_ploadrif_pi_Rx32;
  local tmp0:1;
  tmp0 = ! L2_ploadrif_pi_Pt4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = L2_ploadrif_pi_Rx32 + L2_ploadrif_pi_s4_2;
  L2_ploadrif_pi_Rx32 = tmp3;
  L2_ploadrif_pi_Rd32 = *:4 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadritnew_io L2_ploadritnew_io_Rd32 L2_ploadritnew_io_Pt4 L2_ploadritnew_io_Rs32 L2_ploadritnew_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadritnew_io_Rd32 & L2_ploadritnew_io_Pt4 & L2_ploadritnew_io_Rs32 & L2_ploadritnew_io_u6_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadritnew_io_Rs32 + L2_ploadritnew_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(L2_ploadritnew_io_Pt4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L2_ploadritnew_io_Rd32 = *:4 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L2_ploadrifnew_io L2_ploadrifnew_io_Rd32 L2_ploadrifnew_io_Pt4 L2_ploadrifnew_io_Rs32 L2_ploadrifnew_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrifnew_io_Rd32 & L2_ploadrifnew_io_Pt4 & L2_ploadrifnew_io_Rs32 & L2_ploadrifnew_io_u6_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrifnew_io_Rs32 + L2_ploadrifnew_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(L2_ploadrifnew_io_Pt4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L2_ploadrifnew_io_Rd32 = *:4 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadrit_rr L4_ploadrit_rr_Rd32 L4_ploadrit_rr_Pv4 L4_ploadrit_rr_Rs32 L4_ploadrit_rr_Rt32 L4_ploadrit_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrit_rr_Rd32 & L4_ploadrit_rr_Pv4 & L4_ploadrit_rr_Rs32 & L4_ploadrit_rr_Rt32 & L4_ploadrit_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrit_rr_Rt32 << L4_ploadrit_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrit_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = L4_ploadrit_rr_Pv4;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L4_ploadrit_rr_Rd32 = *:4 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_ploadrif_rr L4_ploadrif_rr_Rd32 L4_ploadrif_rr_Pv4 L4_ploadrif_rr_Rs32 L4_ploadrif_rr_Rt32 L4_ploadrif_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrif_rr_Rd32 & L4_ploadrif_rr_Pv4 & L4_ploadrif_rr_Rs32 & L4_ploadrif_rr_Rt32 & L4_ploadrif_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrif_rr_Rt32 << L4_ploadrif_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrif_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = ! L4_ploadrif_rr_Pv4;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L4_ploadrif_rr_Rd32 = *:4 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadritnew_rr L4_ploadritnew_rr_Rd32 L4_ploadritnew_rr_Pv4 L4_ploadritnew_rr_Rs32 L4_ploadritnew_rr_Rt32 L4_ploadritnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadritnew_rr_Rd32 & L4_ploadritnew_rr_Pv4 & L4_ploadritnew_rr_Rs32 & L4_ploadritnew_rr_Rt32 & L4_ploadritnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadritnew_rr_Rt32 << L4_ploadritnew_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadritnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(L4_ploadritnew_rr_Pv4);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L4_ploadritnew_rr_Rd32 = *:4 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadrifnew_rr L4_ploadrifnew_rr_Rd32 L4_ploadrifnew_rr_Pv4 L4_ploadrifnew_rr_Rs32 L4_ploadrifnew_rr_Rt32 L4_ploadrifnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrifnew_rr_Rd32 & L4_ploadrifnew_rr_Pv4 & L4_ploadrifnew_rr_Rs32 & L4_ploadrifnew_rr_Rt32 & L4_ploadrifnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrifnew_rr_Rt32 << L4_ploadrifnew_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrifnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(L4_ploadrifnew_rr_Pv4);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  L4_ploadrifnew_rr_Rd32 = *:4 EA;
  goto <done_6>;
<f_branch_6>
<done_6>
}

:L2_ploadritnew_pi L2_ploadritnew_pi_Rd32 L2_ploadritnew_pi_Rx32 L2_ploadritnew_pi_Pt4 L2_ploadritnew_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadritnew_pi_Rd32 & L2_ploadritnew_pi_Rx32 & L2_ploadritnew_pi_Pt4 & L2_ploadritnew_pi_s4_2 {
  local EA:4;
  EA = L2_ploadritnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(L2_ploadritnew_pi_Pt4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = L2_ploadritnew_pi_Rx32 + L2_ploadritnew_pi_s4_2;
  L2_ploadritnew_pi_Rx32 = tmp3;
  L2_ploadritnew_pi_Rd32 = *:4 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadrifnew_pi L2_ploadrifnew_pi_Rd32 L2_ploadrifnew_pi_Rx32 L2_ploadrifnew_pi_Pt4 L2_ploadrifnew_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrifnew_pi_Rd32 & L2_ploadrifnew_pi_Rx32 & L2_ploadrifnew_pi_Pt4 & L2_ploadrifnew_pi_s4_2 {
  local EA:4;
  EA = L2_ploadrifnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(L2_ploadrifnew_pi_Pt4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = L2_ploadrifnew_pi_Rx32 + L2_ploadrifnew_pi_s4_2;
  L2_ploadrifnew_pi_Rx32 = tmp4;
  L2_ploadrifnew_pi_Rd32 = *:4 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_ploadrit_abs L4_ploadrit_abs_Rd32 L4_ploadrit_abs_Pt4 L4_ploadrit_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrit_abs_Rd32 & L4_ploadrit_abs_Pt4 & L4_ploadrit_abs_u6 {
  local EA:4;
  EA = L4_ploadrit_abs_u6;
  local tmp0:1;
  tmp0 = L4_ploadrit_abs_Pt4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  L4_ploadrit_abs_Rd32 = *:4 EA;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:L4_ploadrif_abs L4_ploadrif_abs_Rd32 L4_ploadrif_abs_Pt4 L4_ploadrif_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrif_abs_Rd32 & L4_ploadrif_abs_Pt4 & L4_ploadrif_abs_u6 {
  local EA:4;
  EA = L4_ploadrif_abs_u6;
  local tmp0:1;
  tmp0 = ! L4_ploadrif_abs_Pt4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L4_ploadrif_abs_Rd32 = *:4 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L4_ploadritnew_abs L4_ploadritnew_abs_Rd32 L4_ploadritnew_abs_Pt4 L4_ploadritnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadritnew_abs_Rd32 & L4_ploadritnew_abs_Pt4 & L4_ploadritnew_abs_u6 {
  local EA:4;
  EA = L4_ploadritnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(L4_ploadritnew_abs_Pt4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L4_ploadritnew_abs_Rd32 = *:4 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L4_ploadrifnew_abs L4_ploadrifnew_abs_Rd32 L4_ploadrifnew_abs_Pt4 L4_ploadrifnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrifnew_abs_Rd32 & L4_ploadrifnew_abs_Pt4 & L4_ploadrifnew_abs_u6 {
  local EA:4;
  EA = L4_ploadrifnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(L4_ploadrifnew_abs_Pt4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L4_ploadrifnew_abs_Rd32 = *:4 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_loadrd_rr L4_loadrd_rr_Rdd32 L4_loadrd_rr_Rs32 L4_loadrd_rr_Rt32 L4_loadrd_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_loadrd_rr_Rdd32 & L4_loadrd_rr_Rs32 & L4_loadrd_rr_Rt32 & L4_loadrd_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_loadrd_rr_Rt32 << L4_loadrd_rr_u2;
  local tmp1:4;
  tmp1 = L4_loadrd_rr_Rs32 + tmp0;
  EA = tmp1;
  L4_loadrd_rr_Rdd32 = *:8 EA;
}

:L2_ploadrdt_io L2_ploadrdt_io_Rdd32 L2_ploadrdt_io_Pt4 L2_ploadrdt_io_Rs32 L2_ploadrdt_io_u6_3 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrdt_io_Rdd32 & L2_ploadrdt_io_Pt4 & L2_ploadrdt_io_Rs32 & L2_ploadrdt_io_u6_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrdt_io_Rs32 + L2_ploadrdt_io_u6_3;
  EA = tmp0;
  local tmp1:1;
  tmp1 = L2_ploadrdt_io_Pt4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L2_ploadrdt_io_Rdd32 = *:8 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadrdt_pi L2_ploadrdt_pi_Rdd32 L2_ploadrdt_pi_Rx32 L2_ploadrdt_pi_Pt4 L2_ploadrdt_pi_s4_3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrdt_pi_Rdd32 & L2_ploadrdt_pi_Rx32 & L2_ploadrdt_pi_Pt4 & L2_ploadrdt_pi_s4_3 {
  local EA:4;
  EA = L2_ploadrdt_pi_Rx32;
  local tmp0:1;
  tmp0 = L2_ploadrdt_pi_Pt4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = L2_ploadrdt_pi_Rx32 + L2_ploadrdt_pi_s4_3;
  L2_ploadrdt_pi_Rx32 = tmp2;
  L2_ploadrdt_pi_Rdd32 = *:8 EA;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:L2_ploadrdf_io L2_ploadrdf_io_Rdd32 L2_ploadrdf_io_Pt4 L2_ploadrdf_io_Rs32 L2_ploadrdf_io_u6_3 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrdf_io_Rdd32 & L2_ploadrdf_io_Pt4 & L2_ploadrdf_io_Rs32 & L2_ploadrdf_io_u6_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrdf_io_Rs32 + L2_ploadrdf_io_u6_3;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! L2_ploadrdf_io_Pt4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L2_ploadrdf_io_Rdd32 = *:8 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L2_ploadrdf_pi L2_ploadrdf_pi_Rdd32 L2_ploadrdf_pi_Rx32 L2_ploadrdf_pi_Pt4 L2_ploadrdf_pi_s4_3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrdf_pi_Rdd32 & L2_ploadrdf_pi_Rx32 & L2_ploadrdf_pi_Pt4 & L2_ploadrdf_pi_s4_3 {
  local EA:4;
  EA = L2_ploadrdf_pi_Rx32;
  local tmp0:1;
  tmp0 = ! L2_ploadrdf_pi_Pt4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = L2_ploadrdf_pi_Rx32 + L2_ploadrdf_pi_s4_3;
  L2_ploadrdf_pi_Rx32 = tmp3;
  L2_ploadrdf_pi_Rdd32 = *:8 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadrdtnew_io L2_ploadrdtnew_io_Rdd32 L2_ploadrdtnew_io_Pt4 L2_ploadrdtnew_io_Rs32 L2_ploadrdtnew_io_u6_3 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrdtnew_io_Rdd32 & L2_ploadrdtnew_io_Pt4 & L2_ploadrdtnew_io_Rs32 & L2_ploadrdtnew_io_u6_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrdtnew_io_Rs32 + L2_ploadrdtnew_io_u6_3;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(L2_ploadrdtnew_io_Pt4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L2_ploadrdtnew_io_Rdd32 = *:8 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L2_ploadrdfnew_io L2_ploadrdfnew_io_Rdd32 L2_ploadrdfnew_io_Pt4 L2_ploadrdfnew_io_Rs32 L2_ploadrdfnew_io_u6_3 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & L2_ploadrdfnew_io_Rdd32 & L2_ploadrdfnew_io_Pt4 & L2_ploadrdfnew_io_Rs32 & L2_ploadrdfnew_io_u6_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = L2_ploadrdfnew_io_Rs32 + L2_ploadrdfnew_io_u6_3;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(L2_ploadrdfnew_io_Pt4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L2_ploadrdfnew_io_Rdd32 = *:8 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadrdt_rr L4_ploadrdt_rr_Rdd32 L4_ploadrdt_rr_Pv4 L4_ploadrdt_rr_Rs32 L4_ploadrdt_rr_Rt32 L4_ploadrdt_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrdt_rr_Rdd32 & L4_ploadrdt_rr_Pv4 & L4_ploadrdt_rr_Rs32 & L4_ploadrdt_rr_Rt32 & L4_ploadrdt_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrdt_rr_Rt32 << L4_ploadrdt_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrdt_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = L4_ploadrdt_rr_Pv4;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L4_ploadrdt_rr_Rdd32 = *:8 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_ploadrdf_rr L4_ploadrdf_rr_Rdd32 L4_ploadrdf_rr_Pv4 L4_ploadrdf_rr_Rs32 L4_ploadrdf_rr_Rt32 L4_ploadrdf_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrdf_rr_Rdd32 & L4_ploadrdf_rr_Pv4 & L4_ploadrdf_rr_Rs32 & L4_ploadrdf_rr_Rt32 & L4_ploadrdf_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrdf_rr_Rt32 << L4_ploadrdf_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrdf_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = ! L4_ploadrdf_rr_Pv4;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L4_ploadrdf_rr_Rdd32 = *:8 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadrdtnew_rr L4_ploadrdtnew_rr_Rdd32 L4_ploadrdtnew_rr_Pv4 L4_ploadrdtnew_rr_Rs32 L4_ploadrdtnew_rr_Rt32 L4_ploadrdtnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrdtnew_rr_Rdd32 & L4_ploadrdtnew_rr_Pv4 & L4_ploadrdtnew_rr_Rs32 & L4_ploadrdtnew_rr_Rt32 & L4_ploadrdtnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrdtnew_rr_Rt32 << L4_ploadrdtnew_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrdtnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(L4_ploadrdtnew_rr_Pv4);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  L4_ploadrdtnew_rr_Rdd32 = *:8 EA;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:L4_ploadrdfnew_rr L4_ploadrdfnew_rr_Rdd32 L4_ploadrdfnew_rr_Pv4 L4_ploadrdfnew_rr_Rs32 L4_ploadrdfnew_rr_Rt32 L4_ploadrdfnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ploadrdfnew_rr_Rdd32 & L4_ploadrdfnew_rr_Pv4 & L4_ploadrdfnew_rr_Rs32 & L4_ploadrdfnew_rr_Rt32 & L4_ploadrdfnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ploadrdfnew_rr_Rt32 << L4_ploadrdfnew_rr_u2;
  local tmp1:4;
  tmp1 = L4_ploadrdfnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(L4_ploadrdfnew_rr_Pv4);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  L4_ploadrdfnew_rr_Rdd32 = *:8 EA;
  goto <done_6>;
<f_branch_6>
<done_6>
}

:L2_ploadrdtnew_pi L2_ploadrdtnew_pi_Rdd32 L2_ploadrdtnew_pi_Rx32 L2_ploadrdtnew_pi_Pt4 L2_ploadrdtnew_pi_s4_3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrdtnew_pi_Rdd32 & L2_ploadrdtnew_pi_Rx32 & L2_ploadrdtnew_pi_Pt4 & L2_ploadrdtnew_pi_s4_3 {
  local EA:4;
  EA = L2_ploadrdtnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(L2_ploadrdtnew_pi_Pt4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = L2_ploadrdtnew_pi_Rx32 + L2_ploadrdtnew_pi_s4_3;
  L2_ploadrdtnew_pi_Rx32 = tmp3;
  L2_ploadrdtnew_pi_Rdd32 = *:8 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L2_ploadrdfnew_pi L2_ploadrdfnew_pi_Rdd32 L2_ploadrdfnew_pi_Rx32 L2_ploadrdfnew_pi_Pt4 L2_ploadrdfnew_pi_s4_3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L2_ploadrdfnew_pi_Rdd32 & L2_ploadrdfnew_pi_Rx32 & L2_ploadrdfnew_pi_Pt4 & L2_ploadrdfnew_pi_s4_3 {
  local EA:4;
  EA = L2_ploadrdfnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(L2_ploadrdfnew_pi_Pt4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = L2_ploadrdfnew_pi_Rx32 + L2_ploadrdfnew_pi_s4_3;
  L2_ploadrdfnew_pi_Rx32 = tmp4;
  L2_ploadrdfnew_pi_Rdd32 = *:8 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_ploadrdt_abs L4_ploadrdt_abs_Rdd32 L4_ploadrdt_abs_Pt4 L4_ploadrdt_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrdt_abs_Rdd32 & L4_ploadrdt_abs_Pt4 & L4_ploadrdt_abs_u6 {
  local EA:4;
  EA = L4_ploadrdt_abs_u6;
  local tmp0:1;
  tmp0 = L4_ploadrdt_abs_Pt4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  L4_ploadrdt_abs_Rdd32 = *:8 EA;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:L4_ploadrdf_abs L4_ploadrdf_abs_Rdd32 L4_ploadrdf_abs_Pt4 L4_ploadrdf_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrdf_abs_Rdd32 & L4_ploadrdf_abs_Pt4 & L4_ploadrdf_abs_u6 {
  local EA:4;
  EA = L4_ploadrdf_abs_u6;
  local tmp0:1;
  tmp0 = ! L4_ploadrdf_abs_Pt4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L4_ploadrdf_abs_Rdd32 = *:8 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L4_ploadrdtnew_abs L4_ploadrdtnew_abs_Rdd32 L4_ploadrdtnew_abs_Pt4 L4_ploadrdtnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrdtnew_abs_Rdd32 & L4_ploadrdtnew_abs_Pt4 & L4_ploadrdtnew_abs_u6 {
  local EA:4;
  EA = L4_ploadrdtnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(L4_ploadrdtnew_abs_Pt4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  L4_ploadrdtnew_abs_Rdd32 = *:8 EA;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:L4_ploadrdfnew_abs L4_ploadrdfnew_abs_Rdd32 L4_ploadrdfnew_abs_Pt4 L4_ploadrdfnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b7 = 1 & b11 = 1 & b12 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & L4_ploadrdfnew_abs_Rdd32 & L4_ploadrdfnew_abs_Pt4 & L4_ploadrdfnew_abs_u6 {
  local EA:4;
  EA = L4_ploadrdfnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(L4_ploadrdfnew_abs_Pt4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  L4_ploadrdfnew_abs_Rdd32 = *:8 EA;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_storerb_rr S4_storerb_rr_Rs32 S4_storerb_rr_Ru32 S4_storerb_rr_Rt32 S4_storerb_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storerb_rr_Rs32 & S4_storerb_rr_Ru32 & S4_storerb_rr_Rt32 & S4_storerb_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storerb_rr_Ru32 << S4_storerb_rr_u2;
  local tmp1:4;
  tmp1 = S4_storerb_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = S4_storerb_rr_Rt32 s>> tmp5;
  local tmp7:4;
  tmp7 = 255;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp2 = tmp8:1;
  *:1 EA = tmp2;
}

:S2_pstorerbt_io S2_pstorerbt_io_Pv4 S2_pstorerbt_io_Rs32 S2_pstorerbt_io_Rt32 S2_pstorerbt_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerbt_io_Pv4 & S2_pstorerbt_io_Rs32 & S2_pstorerbt_io_Rt32 & S2_pstorerbt_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerbt_io_Rs32 + S2_pstorerbt_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = S2_pstorerbt_io_Pv4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:1;
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 8;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = S2_pstorerbt_io_Rt32 s>> tmp6;
  local tmp8:4;
  tmp8 = 255;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp3 = tmp9:1;
  *:1 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerbt_pi S2_pstorerbt_pi_Rx32 S2_pstorerbt_pi_Pv4 S2_pstorerbt_pi_Rt32 S2_pstorerbt_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerbt_pi_Rx32 & S2_pstorerbt_pi_Pv4 & S2_pstorerbt_pi_Rt32 & S2_pstorerbt_pi_s4_0 {
  local EA:4;
  EA = S2_pstorerbt_pi_Rx32;
  local tmp0:1;
  tmp0 = S2_pstorerbt_pi_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = S2_pstorerbt_pi_Rx32 + S2_pstorerbt_pi_s4_0;
  S2_pstorerbt_pi_Rx32 = tmp2;
  local tmp3:1;
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 8;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = S2_pstorerbt_pi_Rt32 s>> tmp6;
  local tmp8:4;
  tmp8 = 255;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp3 = tmp9:1;
  *:1 EA = tmp3;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S2_pstorerbf_io S2_pstorerbf_io_Pv4 S2_pstorerbf_io_Rs32 S2_pstorerbf_io_Rt32 S2_pstorerbf_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerbf_io_Pv4 & S2_pstorerbf_io_Rs32 & S2_pstorerbf_io_Rt32 & S2_pstorerbf_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerbf_io_Rs32 + S2_pstorerbf_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! S2_pstorerbf_io_Pv4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:1;
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 8;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S2_pstorerbf_io_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 255;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:1;
  *:1 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S2_pstorerbf_pi S2_pstorerbf_pi_Rx32 S2_pstorerbf_pi_Pv4 S2_pstorerbf_pi_Rt32 S2_pstorerbf_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerbf_pi_Rx32 & S2_pstorerbf_pi_Pv4 & S2_pstorerbf_pi_Rt32 & S2_pstorerbf_pi_s4_0 {
  local EA:4;
  EA = S2_pstorerbf_pi_Rx32;
  local tmp0:1;
  tmp0 = ! S2_pstorerbf_pi_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstorerbf_pi_Rx32 + S2_pstorerbf_pi_s4_0;
  S2_pstorerbf_pi_Rx32 = tmp3;
  local tmp4:1;
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 8;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S2_pstorerbf_pi_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 255;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:1;
  *:1 EA = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerbt_rr S4_pstorerbt_rr_Pv4 S4_pstorerbt_rr_Rs32 S4_pstorerbt_rr_Ru32 S4_pstorerbt_rr_Rt32 S4_pstorerbt_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerbt_rr_Pv4 & S4_pstorerbt_rr_Rs32 & S4_pstorerbt_rr_Ru32 & S4_pstorerbt_rr_Rt32 & S4_pstorerbt_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerbt_rr_Ru32 << S4_pstorerbt_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerbt_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = S4_pstorerbt_rr_Pv4;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:1;
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 8;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S4_pstorerbt_rr_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 255;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:1;
  *:1 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerbf_rr S4_pstorerbf_rr_Pv4 S4_pstorerbf_rr_Rs32 S4_pstorerbf_rr_Ru32 S4_pstorerbf_rr_Rt32 S4_pstorerbf_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerbf_rr_Pv4 & S4_pstorerbf_rr_Rs32 & S4_pstorerbf_rr_Ru32 & S4_pstorerbf_rr_Rt32 & S4_pstorerbf_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerbf_rr_Ru32 << S4_pstorerbf_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerbf_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = ! S4_pstorerbf_rr_Pv4;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:1;
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 8;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = S4_pstorerbf_rr_Rt32 s>> tmp8;
  local tmp10:4;
  tmp10 = 255;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp5 = tmp11:1;
  *:1 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerbtnew_io S4_pstorerbtnew_io_Pv4 S4_pstorerbtnew_io_Rs32 S4_pstorerbtnew_io_Rt32 S4_pstorerbtnew_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerbtnew_io_Pv4 & S4_pstorerbtnew_io_Rs32 & S4_pstorerbtnew_io_Rt32 & S4_pstorerbtnew_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerbtnew_io_Rs32 + S4_pstorerbtnew_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstorerbtnew_io_Pv4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:1;
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 8;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S4_pstorerbtnew_io_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 255;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:1;
  *:1 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerbfnew_io S4_pstorerbfnew_io_Pv4 S4_pstorerbfnew_io_Rs32 S4_pstorerbfnew_io_Rt32 S4_pstorerbfnew_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerbfnew_io_Pv4 & S4_pstorerbfnew_io_Rs32 & S4_pstorerbfnew_io_Rt32 & S4_pstorerbfnew_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerbfnew_io_Rs32 + S4_pstorerbfnew_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstorerbfnew_io_Pv4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:1;
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 8;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = S4_pstorerbfnew_io_Rt32 s>> tmp8;
  local tmp10:4;
  tmp10 = 255;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp5 = tmp11:1;
  *:1 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerbtnew_rr S4_pstorerbtnew_rr_Pv4 S4_pstorerbtnew_rr_Rs32 S4_pstorerbtnew_rr_Ru32 S4_pstorerbtnew_rr_Rt32 S4_pstorerbtnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerbtnew_rr_Pv4 & S4_pstorerbtnew_rr_Rs32 & S4_pstorerbtnew_rr_Ru32 & S4_pstorerbtnew_rr_Rt32 & S4_pstorerbtnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerbtnew_rr_Ru32 << S4_pstorerbtnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerbtnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstorerbtnew_rr_Pv4);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:1;
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 8;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = S4_pstorerbtnew_rr_Rt32 s>> tmp8;
  local tmp10:4;
  tmp10 = 255;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp5 = tmp11:1;
  *:1 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerbfnew_rr S4_pstorerbfnew_rr_Pv4 S4_pstorerbfnew_rr_Rs32 S4_pstorerbfnew_rr_Ru32 S4_pstorerbfnew_rr_Rt32 S4_pstorerbfnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerbfnew_rr_Pv4 & S4_pstorerbfnew_rr_Rs32 & S4_pstorerbfnew_rr_Ru32 & S4_pstorerbfnew_rr_Rt32 & S4_pstorerbfnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerbfnew_rr_Ru32 << S4_pstorerbfnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerbfnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstorerbfnew_rr_Pv4);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  local tmp6:1;
  local tmp7:4;
  tmp7 = 0;
  local tmp8:4;
  tmp8 = 8;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:4;
  tmp10 = S4_pstorerbfnew_rr_Rt32 s>> tmp9;
  local tmp11:4;
  tmp11 = 255;
  local tmp12:4;
  tmp12 = tmp10 & tmp11;
  tmp6 = tmp12:1;
  *:1 EA = tmp6;
  goto <done_6>;
<f_branch_6>
<done_6>
}

:S2_pstorerbtnew_pi S2_pstorerbtnew_pi_Rx32 S2_pstorerbtnew_pi_Pv4 S2_pstorerbtnew_pi_Rt32 S2_pstorerbtnew_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerbtnew_pi_Rx32 & S2_pstorerbtnew_pi_Pv4 & S2_pstorerbtnew_pi_Rt32 & S2_pstorerbtnew_pi_s4_0 {
  local EA:4;
  EA = S2_pstorerbtnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstorerbtnew_pi_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstorerbtnew_pi_Rx32 + S2_pstorerbtnew_pi_s4_0;
  S2_pstorerbtnew_pi_Rx32 = tmp3;
  local tmp4:1;
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 8;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S2_pstorerbtnew_pi_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 255;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:1;
  *:1 EA = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerbfnew_pi S2_pstorerbfnew_pi_Rx32 S2_pstorerbfnew_pi_Pv4 S2_pstorerbfnew_pi_Rt32 S2_pstorerbfnew_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerbfnew_pi_Rx32 & S2_pstorerbfnew_pi_Pv4 & S2_pstorerbfnew_pi_Rt32 & S2_pstorerbfnew_pi_s4_0 {
  local EA:4;
  EA = S2_pstorerbfnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstorerbfnew_pi_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = S2_pstorerbfnew_pi_Rx32 + S2_pstorerbfnew_pi_s4_0;
  S2_pstorerbfnew_pi_Rx32 = tmp4;
  local tmp5:1;
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 8;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = S2_pstorerbfnew_pi_Rt32 s>> tmp8;
  local tmp10:4;
  tmp10 = 255;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp5 = tmp11:1;
  *:1 EA = tmp5;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerbt_abs S4_pstorerbt_abs_Pv4 S4_pstorerbt_abs_Rt32 S4_pstorerbt_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerbt_abs_Pv4 & S4_pstorerbt_abs_Rt32 & S4_pstorerbt_abs_u6 {
  local EA:4;
  EA = S4_pstorerbt_abs_u6;
  local tmp0:1;
  tmp0 = S4_pstorerbt_abs_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:1;
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = S4_pstorerbt_abs_Rt32 s>> tmp5;
  local tmp7:4;
  tmp7 = 255;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp2 = tmp8:1;
  *:1 EA = tmp2;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S4_pstorerbf_abs S4_pstorerbf_abs_Pv4 S4_pstorerbf_abs_Rt32 S4_pstorerbf_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerbf_abs_Pv4 & S4_pstorerbf_abs_Rt32 & S4_pstorerbf_abs_u6 {
  local EA:4;
  EA = S4_pstorerbf_abs_u6;
  local tmp0:1;
  tmp0 = ! S4_pstorerbf_abs_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:1;
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 8;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = S4_pstorerbf_abs_Rt32 s>> tmp6;
  local tmp8:4;
  tmp8 = 255;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp3 = tmp9:1;
  *:1 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerbtnew_abs S4_pstorerbtnew_abs_Pv4 S4_pstorerbtnew_abs_Rt32 S4_pstorerbtnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerbtnew_abs_Pv4 & S4_pstorerbtnew_abs_Rt32 & S4_pstorerbtnew_abs_u6 {
  local EA:4;
  EA = S4_pstorerbtnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstorerbtnew_abs_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:1;
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 8;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = S4_pstorerbtnew_abs_Rt32 s>> tmp6;
  local tmp8:4;
  tmp8 = 255;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp3 = tmp9:1;
  *:1 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerbfnew_abs S4_pstorerbfnew_abs_Pv4 S4_pstorerbfnew_abs_Rt32 S4_pstorerbfnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerbfnew_abs_Pv4 & S4_pstorerbfnew_abs_Rt32 & S4_pstorerbfnew_abs_u6 {
  local EA:4;
  EA = S4_pstorerbfnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstorerbfnew_abs_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:1;
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 8;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S4_pstorerbfnew_abs_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 255;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:1;
  *:1 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_storerh_rr S4_storerh_rr_Rs32 S4_storerh_rr_Ru32 S4_storerh_rr_Rt32 S4_storerh_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storerh_rr_Rs32 & S4_storerh_rr_Ru32 & S4_storerh_rr_Rt32 & S4_storerh_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storerh_rr_Ru32 << S4_storerh_rr_u2;
  local tmp1:4;
  tmp1 = S4_storerh_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:2;
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = S4_storerh_rr_Rt32 s>> tmp5;
  local tmp7:4;
  tmp7 = 65535;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp2 = tmp8:2;
  *:2 EA = tmp2;
}

:S2_pstorerht_io S2_pstorerht_io_Pv4 S2_pstorerht_io_Rs32 S2_pstorerht_io_Rt32 S2_pstorerht_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerht_io_Pv4 & S2_pstorerht_io_Rs32 & S2_pstorerht_io_Rt32 & S2_pstorerht_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerht_io_Rs32 + S2_pstorerht_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = S2_pstorerht_io_Pv4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:2;
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 16;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = S2_pstorerht_io_Rt32 s>> tmp6;
  local tmp8:4;
  tmp8 = 65535;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp3 = tmp9:2;
  *:2 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerht_pi S2_pstorerht_pi_Rx32 S2_pstorerht_pi_Pv4 S2_pstorerht_pi_Rt32 S2_pstorerht_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerht_pi_Rx32 & S2_pstorerht_pi_Pv4 & S2_pstorerht_pi_Rt32 & S2_pstorerht_pi_s4_1 {
  local EA:4;
  EA = S2_pstorerht_pi_Rx32;
  local tmp0:1;
  tmp0 = S2_pstorerht_pi_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = S2_pstorerht_pi_Rx32 + S2_pstorerht_pi_s4_1;
  S2_pstorerht_pi_Rx32 = tmp2;
  local tmp3:2;
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 16;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = S2_pstorerht_pi_Rt32 s>> tmp6;
  local tmp8:4;
  tmp8 = 65535;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp3 = tmp9:2;
  *:2 EA = tmp3;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S2_pstorerhf_io S2_pstorerhf_io_Pv4 S2_pstorerhf_io_Rs32 S2_pstorerhf_io_Rt32 S2_pstorerhf_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerhf_io_Pv4 & S2_pstorerhf_io_Rs32 & S2_pstorerhf_io_Rt32 & S2_pstorerhf_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerhf_io_Rs32 + S2_pstorerhf_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! S2_pstorerhf_io_Pv4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:2;
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S2_pstorerhf_io_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:2;
  *:2 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S2_pstorerhf_pi S2_pstorerhf_pi_Rx32 S2_pstorerhf_pi_Pv4 S2_pstorerhf_pi_Rt32 S2_pstorerhf_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerhf_pi_Rx32 & S2_pstorerhf_pi_Pv4 & S2_pstorerhf_pi_Rt32 & S2_pstorerhf_pi_s4_1 {
  local EA:4;
  EA = S2_pstorerhf_pi_Rx32;
  local tmp0:1;
  tmp0 = ! S2_pstorerhf_pi_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstorerhf_pi_Rx32 + S2_pstorerhf_pi_s4_1;
  S2_pstorerhf_pi_Rx32 = tmp3;
  local tmp4:2;
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S2_pstorerhf_pi_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:2;
  *:2 EA = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerht_rr S4_pstorerht_rr_Pv4 S4_pstorerht_rr_Rs32 S4_pstorerht_rr_Ru32 S4_pstorerht_rr_Rt32 S4_pstorerht_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerht_rr_Pv4 & S4_pstorerht_rr_Rs32 & S4_pstorerht_rr_Ru32 & S4_pstorerht_rr_Rt32 & S4_pstorerht_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerht_rr_Ru32 << S4_pstorerht_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerht_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = S4_pstorerht_rr_Pv4;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:2;
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S4_pstorerht_rr_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:2;
  *:2 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerhf_rr S4_pstorerhf_rr_Pv4 S4_pstorerhf_rr_Rs32 S4_pstorerhf_rr_Ru32 S4_pstorerhf_rr_Rt32 S4_pstorerhf_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerhf_rr_Pv4 & S4_pstorerhf_rr_Rs32 & S4_pstorerhf_rr_Ru32 & S4_pstorerhf_rr_Rt32 & S4_pstorerhf_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerhf_rr_Ru32 << S4_pstorerhf_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerhf_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = ! S4_pstorerhf_rr_Pv4;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:2;
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = S4_pstorerhf_rr_Rt32 s>> tmp8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp5 = tmp11:2;
  *:2 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerhtnew_io S4_pstorerhtnew_io_Pv4 S4_pstorerhtnew_io_Rs32 S4_pstorerhtnew_io_Rt32 S4_pstorerhtnew_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerhtnew_io_Pv4 & S4_pstorerhtnew_io_Rs32 & S4_pstorerhtnew_io_Rt32 & S4_pstorerhtnew_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerhtnew_io_Rs32 + S4_pstorerhtnew_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstorerhtnew_io_Pv4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:2;
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S4_pstorerhtnew_io_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:2;
  *:2 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerhfnew_io S4_pstorerhfnew_io_Pv4 S4_pstorerhfnew_io_Rs32 S4_pstorerhfnew_io_Rt32 S4_pstorerhfnew_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerhfnew_io_Pv4 & S4_pstorerhfnew_io_Rs32 & S4_pstorerhfnew_io_Rt32 & S4_pstorerhfnew_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerhfnew_io_Rs32 + S4_pstorerhfnew_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstorerhfnew_io_Pv4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:2;
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = S4_pstorerhfnew_io_Rt32 s>> tmp8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp5 = tmp11:2;
  *:2 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerhtnew_rr S4_pstorerhtnew_rr_Pv4 S4_pstorerhtnew_rr_Rs32 S4_pstorerhtnew_rr_Ru32 S4_pstorerhtnew_rr_Rt32 S4_pstorerhtnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerhtnew_rr_Pv4 & S4_pstorerhtnew_rr_Rs32 & S4_pstorerhtnew_rr_Ru32 & S4_pstorerhtnew_rr_Rt32 & S4_pstorerhtnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerhtnew_rr_Ru32 << S4_pstorerhtnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerhtnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstorerhtnew_rr_Pv4);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:2;
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = S4_pstorerhtnew_rr_Rt32 s>> tmp8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp5 = tmp11:2;
  *:2 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerhfnew_rr S4_pstorerhfnew_rr_Pv4 S4_pstorerhfnew_rr_Rs32 S4_pstorerhfnew_rr_Ru32 S4_pstorerhfnew_rr_Rt32 S4_pstorerhfnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerhfnew_rr_Pv4 & S4_pstorerhfnew_rr_Rs32 & S4_pstorerhfnew_rr_Ru32 & S4_pstorerhfnew_rr_Rt32 & S4_pstorerhfnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerhfnew_rr_Ru32 << S4_pstorerhfnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerhfnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstorerhfnew_rr_Pv4);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  local tmp6:2;
  local tmp7:4;
  tmp7 = 0;
  local tmp8:4;
  tmp8 = 16;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:4;
  tmp10 = S4_pstorerhfnew_rr_Rt32 s>> tmp9;
  local tmp11:4;
  tmp11 = 65535;
  local tmp12:4;
  tmp12 = tmp10 & tmp11;
  tmp6 = tmp12:2;
  *:2 EA = tmp6;
  goto <done_6>;
<f_branch_6>
<done_6>
}

:S2_pstorerhtnew_pi S2_pstorerhtnew_pi_Rx32 S2_pstorerhtnew_pi_Pv4 S2_pstorerhtnew_pi_Rt32 S2_pstorerhtnew_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerhtnew_pi_Rx32 & S2_pstorerhtnew_pi_Pv4 & S2_pstorerhtnew_pi_Rt32 & S2_pstorerhtnew_pi_s4_1 {
  local EA:4;
  EA = S2_pstorerhtnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstorerhtnew_pi_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstorerhtnew_pi_Rx32 + S2_pstorerhtnew_pi_s4_1;
  S2_pstorerhtnew_pi_Rx32 = tmp3;
  local tmp4:2;
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S2_pstorerhtnew_pi_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:2;
  *:2 EA = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerhfnew_pi S2_pstorerhfnew_pi_Rx32 S2_pstorerhfnew_pi_Pv4 S2_pstorerhfnew_pi_Rt32 S2_pstorerhfnew_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerhfnew_pi_Rx32 & S2_pstorerhfnew_pi_Pv4 & S2_pstorerhfnew_pi_Rt32 & S2_pstorerhfnew_pi_s4_1 {
  local EA:4;
  EA = S2_pstorerhfnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstorerhfnew_pi_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = S2_pstorerhfnew_pi_Rx32 + S2_pstorerhfnew_pi_s4_1;
  S2_pstorerhfnew_pi_Rx32 = tmp4;
  local tmp5:2;
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = S2_pstorerhfnew_pi_Rt32 s>> tmp8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp5 = tmp11:2;
  *:2 EA = tmp5;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerht_abs S4_pstorerht_abs_Pv4 S4_pstorerht_abs_Rt32 S4_pstorerht_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerht_abs_Pv4 & S4_pstorerht_abs_Rt32 & S4_pstorerht_abs_u6 {
  local EA:4;
  EA = S4_pstorerht_abs_u6;
  local tmp0:1;
  tmp0 = S4_pstorerht_abs_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:2;
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = S4_pstorerht_abs_Rt32 s>> tmp5;
  local tmp7:4;
  tmp7 = 65535;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp2 = tmp8:2;
  *:2 EA = tmp2;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S4_pstorerhf_abs S4_pstorerhf_abs_Pv4 S4_pstorerhf_abs_Rt32 S4_pstorerhf_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerhf_abs_Pv4 & S4_pstorerhf_abs_Rt32 & S4_pstorerhf_abs_u6 {
  local EA:4;
  EA = S4_pstorerhf_abs_u6;
  local tmp0:1;
  tmp0 = ! S4_pstorerhf_abs_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:2;
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 16;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = S4_pstorerhf_abs_Rt32 s>> tmp6;
  local tmp8:4;
  tmp8 = 65535;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp3 = tmp9:2;
  *:2 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerhtnew_abs S4_pstorerhtnew_abs_Pv4 S4_pstorerhtnew_abs_Rt32 S4_pstorerhtnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerhtnew_abs_Pv4 & S4_pstorerhtnew_abs_Rt32 & S4_pstorerhtnew_abs_u6 {
  local EA:4;
  EA = S4_pstorerhtnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstorerhtnew_abs_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:2;
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 16;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = S4_pstorerhtnew_abs_Rt32 s>> tmp6;
  local tmp8:4;
  tmp8 = 65535;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp3 = tmp9:2;
  *:2 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerhfnew_abs S4_pstorerhfnew_abs_Pv4 S4_pstorerhfnew_abs_Rt32 S4_pstorerhfnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerhfnew_abs_Pv4 & S4_pstorerhfnew_abs_Rt32 & S4_pstorerhfnew_abs_u6 {
  local EA:4;
  EA = S4_pstorerhfnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstorerhfnew_abs_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:2;
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S4_pstorerhfnew_abs_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:2;
  *:2 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_storerf_rr S4_storerf_rr_Rs32 S4_storerf_rr_Ru32 S4_storerf_rr_Rt32 S4_storerf_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storerf_rr_Rs32 & S4_storerf_rr_Ru32 & S4_storerf_rr_Rt32 & S4_storerf_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storerf_rr_Ru32 << S4_storerf_rr_u2;
  local tmp1:4;
  tmp1 = S4_storerf_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:2;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = S4_storerf_rr_Rt32 s>> tmp5;
  local tmp7:4;
  tmp7 = 65535;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp2 = tmp8:2;
  *:2 EA = tmp2;
}

:S2_pstorerft_io S2_pstorerft_io_Pv4 S2_pstorerft_io_Rs32 S2_pstorerft_io_Rt32 S2_pstorerft_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerft_io_Pv4 & S2_pstorerft_io_Rs32 & S2_pstorerft_io_Rt32 & S2_pstorerft_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerft_io_Rs32 + S2_pstorerft_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = S2_pstorerft_io_Pv4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:2;
  local tmp4:4;
  tmp4 = 1;
  local tmp5:4;
  tmp5 = 16;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = S2_pstorerft_io_Rt32 s>> tmp6;
  local tmp8:4;
  tmp8 = 65535;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp3 = tmp9:2;
  *:2 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerft_pi S2_pstorerft_pi_Rx32 S2_pstorerft_pi_Pv4 S2_pstorerft_pi_Rt32 S2_pstorerft_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 0 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerft_pi_Rx32 & S2_pstorerft_pi_Pv4 & S2_pstorerft_pi_Rt32 & S2_pstorerft_pi_s4_1 {
  local EA:4;
  EA = S2_pstorerft_pi_Rx32;
  local tmp0:1;
  tmp0 = S2_pstorerft_pi_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = S2_pstorerft_pi_Rx32 + S2_pstorerft_pi_s4_1;
  S2_pstorerft_pi_Rx32 = tmp2;
  local tmp3:2;
  local tmp4:4;
  tmp4 = 1;
  local tmp5:4;
  tmp5 = 16;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = S2_pstorerft_pi_Rt32 s>> tmp6;
  local tmp8:4;
  tmp8 = 65535;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp3 = tmp9:2;
  *:2 EA = tmp3;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S2_pstorerff_io S2_pstorerff_io_Pv4 S2_pstorerff_io_Rs32 S2_pstorerff_io_Rt32 S2_pstorerff_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerff_io_Pv4 & S2_pstorerff_io_Rs32 & S2_pstorerff_io_Rt32 & S2_pstorerff_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerff_io_Rs32 + S2_pstorerff_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! S2_pstorerff_io_Pv4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:2;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S2_pstorerff_io_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:2;
  *:2 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S2_pstorerff_pi S2_pstorerff_pi_Rx32 S2_pstorerff_pi_Pv4 S2_pstorerff_pi_Rt32 S2_pstorerff_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 0 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerff_pi_Rx32 & S2_pstorerff_pi_Pv4 & S2_pstorerff_pi_Rt32 & S2_pstorerff_pi_s4_1 {
  local EA:4;
  EA = S2_pstorerff_pi_Rx32;
  local tmp0:1;
  tmp0 = ! S2_pstorerff_pi_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstorerff_pi_Rx32 + S2_pstorerff_pi_s4_1;
  S2_pstorerff_pi_Rx32 = tmp3;
  local tmp4:2;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S2_pstorerff_pi_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:2;
  *:2 EA = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerft_rr S4_pstorerft_rr_Pv4 S4_pstorerft_rr_Rs32 S4_pstorerft_rr_Ru32 S4_pstorerft_rr_Rt32 S4_pstorerft_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerft_rr_Pv4 & S4_pstorerft_rr_Rs32 & S4_pstorerft_rr_Ru32 & S4_pstorerft_rr_Rt32 & S4_pstorerft_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerft_rr_Ru32 << S4_pstorerft_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerft_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = S4_pstorerft_rr_Pv4;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:2;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S4_pstorerft_rr_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:2;
  *:2 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerff_rr S4_pstorerff_rr_Pv4 S4_pstorerff_rr_Rs32 S4_pstorerff_rr_Ru32 S4_pstorerff_rr_Rt32 S4_pstorerff_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerff_rr_Pv4 & S4_pstorerff_rr_Rs32 & S4_pstorerff_rr_Ru32 & S4_pstorerff_rr_Rt32 & S4_pstorerff_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerff_rr_Ru32 << S4_pstorerff_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerff_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = ! S4_pstorerff_rr_Pv4;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:2;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = S4_pstorerff_rr_Rt32 s>> tmp8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp5 = tmp11:2;
  *:2 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerftnew_io S4_pstorerftnew_io_Pv4 S4_pstorerftnew_io_Rs32 S4_pstorerftnew_io_Rt32 S4_pstorerftnew_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerftnew_io_Pv4 & S4_pstorerftnew_io_Rs32 & S4_pstorerftnew_io_Rt32 & S4_pstorerftnew_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerftnew_io_Rs32 + S4_pstorerftnew_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstorerftnew_io_Pv4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:2;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S4_pstorerftnew_io_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:2;
  *:2 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerffnew_io S4_pstorerffnew_io_Pv4 S4_pstorerffnew_io_Rs32 S4_pstorerffnew_io_Rt32 S4_pstorerffnew_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerffnew_io_Pv4 & S4_pstorerffnew_io_Rs32 & S4_pstorerffnew_io_Rt32 & S4_pstorerffnew_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerffnew_io_Rs32 + S4_pstorerffnew_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstorerffnew_io_Pv4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:2;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = S4_pstorerffnew_io_Rt32 s>> tmp8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp5 = tmp11:2;
  *:2 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerftnew_rr S4_pstorerftnew_rr_Pv4 S4_pstorerftnew_rr_Rs32 S4_pstorerftnew_rr_Ru32 S4_pstorerftnew_rr_Rt32 S4_pstorerftnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerftnew_rr_Pv4 & S4_pstorerftnew_rr_Rs32 & S4_pstorerftnew_rr_Ru32 & S4_pstorerftnew_rr_Rt32 & S4_pstorerftnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerftnew_rr_Ru32 << S4_pstorerftnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerftnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstorerftnew_rr_Pv4);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:2;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = S4_pstorerftnew_rr_Rt32 s>> tmp8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp5 = tmp11:2;
  *:2 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerffnew_rr S4_pstorerffnew_rr_Pv4 S4_pstorerffnew_rr_Rs32 S4_pstorerffnew_rr_Ru32 S4_pstorerffnew_rr_Rt32 S4_pstorerffnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerffnew_rr_Pv4 & S4_pstorerffnew_rr_Rs32 & S4_pstorerffnew_rr_Ru32 & S4_pstorerffnew_rr_Rt32 & S4_pstorerffnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerffnew_rr_Ru32 << S4_pstorerffnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerffnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstorerffnew_rr_Pv4);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  local tmp6:2;
  local tmp7:4;
  tmp7 = 1;
  local tmp8:4;
  tmp8 = 16;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:4;
  tmp10 = S4_pstorerffnew_rr_Rt32 s>> tmp9;
  local tmp11:4;
  tmp11 = 65535;
  local tmp12:4;
  tmp12 = tmp10 & tmp11;
  tmp6 = tmp12:2;
  *:2 EA = tmp6;
  goto <done_6>;
<f_branch_6>
<done_6>
}

:S2_pstorerftnew_pi S2_pstorerftnew_pi_Rx32 S2_pstorerftnew_pi_Pv4 S2_pstorerftnew_pi_Rt32 S2_pstorerftnew_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerftnew_pi_Rx32 & S2_pstorerftnew_pi_Pv4 & S2_pstorerftnew_pi_Rt32 & S2_pstorerftnew_pi_s4_1 {
  local EA:4;
  EA = S2_pstorerftnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstorerftnew_pi_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstorerftnew_pi_Rx32 + S2_pstorerftnew_pi_s4_1;
  S2_pstorerftnew_pi_Rx32 = tmp3;
  local tmp4:2;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S2_pstorerftnew_pi_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:2;
  *:2 EA = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerffnew_pi S2_pstorerffnew_pi_Rx32 S2_pstorerffnew_pi_Pv4 S2_pstorerffnew_pi_Rt32 S2_pstorerffnew_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerffnew_pi_Rx32 & S2_pstorerffnew_pi_Pv4 & S2_pstorerffnew_pi_Rt32 & S2_pstorerffnew_pi_s4_1 {
  local EA:4;
  EA = S2_pstorerffnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstorerffnew_pi_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = S2_pstorerffnew_pi_Rx32 + S2_pstorerffnew_pi_s4_1;
  S2_pstorerffnew_pi_Rx32 = tmp4;
  local tmp5:2;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = S2_pstorerffnew_pi_Rt32 s>> tmp8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp5 = tmp11:2;
  *:2 EA = tmp5;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerft_abs S4_pstorerft_abs_Pv4 S4_pstorerft_abs_Rt32 S4_pstorerft_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerft_abs_Pv4 & S4_pstorerft_abs_Rt32 & S4_pstorerft_abs_u6 {
  local EA:4;
  EA = S4_pstorerft_abs_u6;
  local tmp0:1;
  tmp0 = S4_pstorerft_abs_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:2;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = S4_pstorerft_abs_Rt32 s>> tmp5;
  local tmp7:4;
  tmp7 = 65535;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp2 = tmp8:2;
  *:2 EA = tmp2;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S4_pstorerff_abs S4_pstorerff_abs_Pv4 S4_pstorerff_abs_Rt32 S4_pstorerff_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerff_abs_Pv4 & S4_pstorerff_abs_Rt32 & S4_pstorerff_abs_u6 {
  local EA:4;
  EA = S4_pstorerff_abs_u6;
  local tmp0:1;
  tmp0 = ! S4_pstorerff_abs_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:2;
  local tmp4:4;
  tmp4 = 1;
  local tmp5:4;
  tmp5 = 16;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = S4_pstorerff_abs_Rt32 s>> tmp6;
  local tmp8:4;
  tmp8 = 65535;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp3 = tmp9:2;
  *:2 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerftnew_abs S4_pstorerftnew_abs_Pv4 S4_pstorerftnew_abs_Rt32 S4_pstorerftnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerftnew_abs_Pv4 & S4_pstorerftnew_abs_Rt32 & S4_pstorerftnew_abs_u6 {
  local EA:4;
  EA = S4_pstorerftnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstorerftnew_abs_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:2;
  local tmp4:4;
  tmp4 = 1;
  local tmp5:4;
  tmp5 = 16;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = S4_pstorerftnew_abs_Rt32 s>> tmp6;
  local tmp8:4;
  tmp8 = 65535;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp3 = tmp9:2;
  *:2 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerffnew_abs S4_pstorerffnew_abs_Pv4 S4_pstorerffnew_abs_Rt32 S4_pstorerffnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerffnew_abs_Pv4 & S4_pstorerffnew_abs_Rt32 & S4_pstorerffnew_abs_u6 {
  local EA:4;
  EA = S4_pstorerffnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstorerffnew_abs_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:2;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = S4_pstorerffnew_abs_Rt32 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp4 = tmp10:2;
  *:2 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_storeri_rr S4_storeri_rr_Rs32 S4_storeri_rr_Ru32 S4_storeri_rr_Rt32 S4_storeri_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeri_rr_Rs32 & S4_storeri_rr_Ru32 & S4_storeri_rr_Rt32 & S4_storeri_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeri_rr_Ru32 << S4_storeri_rr_u2;
  local tmp1:4;
  tmp1 = S4_storeri_rr_Rs32 + tmp0;
  EA = tmp1;
  *:4 EA = S4_storeri_rr_Rt32;
}

:S2_pstorerit_io S2_pstorerit_io_Pv4 S2_pstorerit_io_Rs32 S2_pstorerit_io_Rt32 S2_pstorerit_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerit_io_Pv4 & S2_pstorerit_io_Rs32 & S2_pstorerit_io_Rt32 & S2_pstorerit_io_u6_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerit_io_Rs32 + S2_pstorerit_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = S2_pstorerit_io_Pv4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  *:4 EA = S2_pstorerit_io_Rt32;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerit_pi S2_pstorerit_pi_Rx32 S2_pstorerit_pi_Pv4 S2_pstorerit_pi_Rt32 S2_pstorerit_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerit_pi_Rx32 & S2_pstorerit_pi_Pv4 & S2_pstorerit_pi_Rt32 & S2_pstorerit_pi_s4_2 {
  local EA:4;
  EA = S2_pstorerit_pi_Rx32;
  local tmp0:1;
  tmp0 = S2_pstorerit_pi_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = S2_pstorerit_pi_Rx32 + S2_pstorerit_pi_s4_2;
  S2_pstorerit_pi_Rx32 = tmp2;
  *:4 EA = S2_pstorerit_pi_Rt32;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S2_pstorerif_io S2_pstorerif_io_Pv4 S2_pstorerif_io_Rs32 S2_pstorerif_io_Rt32 S2_pstorerif_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerif_io_Pv4 & S2_pstorerif_io_Rs32 & S2_pstorerif_io_Rt32 & S2_pstorerif_io_u6_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerif_io_Rs32 + S2_pstorerif_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! S2_pstorerif_io_Pv4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  *:4 EA = S2_pstorerif_io_Rt32;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S2_pstorerif_pi S2_pstorerif_pi_Rx32 S2_pstorerif_pi_Pv4 S2_pstorerif_pi_Rt32 S2_pstorerif_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerif_pi_Rx32 & S2_pstorerif_pi_Pv4 & S2_pstorerif_pi_Rt32 & S2_pstorerif_pi_s4_2 {
  local EA:4;
  EA = S2_pstorerif_pi_Rx32;
  local tmp0:1;
  tmp0 = ! S2_pstorerif_pi_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstorerif_pi_Rx32 + S2_pstorerif_pi_s4_2;
  S2_pstorerif_pi_Rx32 = tmp3;
  *:4 EA = S2_pstorerif_pi_Rt32;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerit_rr S4_pstorerit_rr_Pv4 S4_pstorerit_rr_Rs32 S4_pstorerit_rr_Ru32 S4_pstorerit_rr_Rt32 S4_pstorerit_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerit_rr_Pv4 & S4_pstorerit_rr_Rs32 & S4_pstorerit_rr_Ru32 & S4_pstorerit_rr_Rt32 & S4_pstorerit_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerit_rr_Ru32 << S4_pstorerit_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerit_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = S4_pstorerit_rr_Pv4;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  *:4 EA = S4_pstorerit_rr_Rt32;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerif_rr S4_pstorerif_rr_Pv4 S4_pstorerif_rr_Rs32 S4_pstorerif_rr_Ru32 S4_pstorerif_rr_Rt32 S4_pstorerif_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerif_rr_Pv4 & S4_pstorerif_rr_Rs32 & S4_pstorerif_rr_Ru32 & S4_pstorerif_rr_Rt32 & S4_pstorerif_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerif_rr_Ru32 << S4_pstorerif_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerif_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = ! S4_pstorerif_rr_Pv4;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  *:4 EA = S4_pstorerif_rr_Rt32;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstoreritnew_io S4_pstoreritnew_io_Pv4 S4_pstoreritnew_io_Rs32 S4_pstoreritnew_io_Rt32 S4_pstoreritnew_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstoreritnew_io_Pv4 & S4_pstoreritnew_io_Rs32 & S4_pstoreritnew_io_Rt32 & S4_pstoreritnew_io_u6_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstoreritnew_io_Rs32 + S4_pstoreritnew_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstoreritnew_io_Pv4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  *:4 EA = S4_pstoreritnew_io_Rt32;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerifnew_io S4_pstorerifnew_io_Pv4 S4_pstorerifnew_io_Rs32 S4_pstorerifnew_io_Rt32 S4_pstorerifnew_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerifnew_io_Pv4 & S4_pstorerifnew_io_Rs32 & S4_pstorerifnew_io_Rt32 & S4_pstorerifnew_io_u6_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerifnew_io_Rs32 + S4_pstorerifnew_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstorerifnew_io_Pv4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  *:4 EA = S4_pstorerifnew_io_Rt32;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstoreritnew_rr S4_pstoreritnew_rr_Pv4 S4_pstoreritnew_rr_Rs32 S4_pstoreritnew_rr_Ru32 S4_pstoreritnew_rr_Rt32 S4_pstoreritnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstoreritnew_rr_Pv4 & S4_pstoreritnew_rr_Rs32 & S4_pstoreritnew_rr_Ru32 & S4_pstoreritnew_rr_Rt32 & S4_pstoreritnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstoreritnew_rr_Ru32 << S4_pstoreritnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstoreritnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstoreritnew_rr_Pv4);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  *:4 EA = S4_pstoreritnew_rr_Rt32;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerifnew_rr S4_pstorerifnew_rr_Pv4 S4_pstorerifnew_rr_Rs32 S4_pstorerifnew_rr_Ru32 S4_pstorerifnew_rr_Rt32 S4_pstorerifnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerifnew_rr_Pv4 & S4_pstorerifnew_rr_Rs32 & S4_pstorerifnew_rr_Ru32 & S4_pstorerifnew_rr_Rt32 & S4_pstorerifnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerifnew_rr_Ru32 << S4_pstorerifnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerifnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstorerifnew_rr_Pv4);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  *:4 EA = S4_pstorerifnew_rr_Rt32;
  goto <done_6>;
<f_branch_6>
<done_6>
}

:S2_pstoreritnew_pi S2_pstoreritnew_pi_Rx32 S2_pstoreritnew_pi_Pv4 S2_pstoreritnew_pi_Rt32 S2_pstoreritnew_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstoreritnew_pi_Rx32 & S2_pstoreritnew_pi_Pv4 & S2_pstoreritnew_pi_Rt32 & S2_pstoreritnew_pi_s4_2 {
  local EA:4;
  EA = S2_pstoreritnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstoreritnew_pi_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstoreritnew_pi_Rx32 + S2_pstoreritnew_pi_s4_2;
  S2_pstoreritnew_pi_Rx32 = tmp3;
  *:4 EA = S2_pstoreritnew_pi_Rt32;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerifnew_pi S2_pstorerifnew_pi_Rx32 S2_pstorerifnew_pi_Pv4 S2_pstorerifnew_pi_Rt32 S2_pstorerifnew_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerifnew_pi_Rx32 & S2_pstorerifnew_pi_Pv4 & S2_pstorerifnew_pi_Rt32 & S2_pstorerifnew_pi_s4_2 {
  local EA:4;
  EA = S2_pstorerifnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstorerifnew_pi_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = S2_pstorerifnew_pi_Rx32 + S2_pstorerifnew_pi_s4_2;
  S2_pstorerifnew_pi_Rx32 = tmp4;
  *:4 EA = S2_pstorerifnew_pi_Rt32;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerit_abs S4_pstorerit_abs_Pv4 S4_pstorerit_abs_Rt32 S4_pstorerit_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerit_abs_Pv4 & S4_pstorerit_abs_Rt32 & S4_pstorerit_abs_u6 {
  local EA:4;
  EA = S4_pstorerit_abs_u6;
  local tmp0:1;
  tmp0 = S4_pstorerit_abs_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  *:4 EA = S4_pstorerit_abs_Rt32;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S4_pstorerif_abs S4_pstorerif_abs_Pv4 S4_pstorerif_abs_Rt32 S4_pstorerif_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerif_abs_Pv4 & S4_pstorerif_abs_Rt32 & S4_pstorerif_abs_u6 {
  local EA:4;
  EA = S4_pstorerif_abs_u6;
  local tmp0:1;
  tmp0 = ! S4_pstorerif_abs_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  *:4 EA = S4_pstorerif_abs_Rt32;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstoreritnew_abs S4_pstoreritnew_abs_Pv4 S4_pstoreritnew_abs_Rt32 S4_pstoreritnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstoreritnew_abs_Pv4 & S4_pstoreritnew_abs_Rt32 & S4_pstoreritnew_abs_u6 {
  local EA:4;
  EA = S4_pstoreritnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstoreritnew_abs_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  *:4 EA = S4_pstoreritnew_abs_Rt32;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerifnew_abs S4_pstorerifnew_abs_Pv4 S4_pstorerifnew_abs_Rt32 S4_pstorerifnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerifnew_abs_Pv4 & S4_pstorerifnew_abs_Rt32 & S4_pstorerifnew_abs_u6 {
  local EA:4;
  EA = S4_pstorerifnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstorerifnew_abs_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  *:4 EA = S4_pstorerifnew_abs_Rt32;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_storerd_rr S4_storerd_rr_Rs32 S4_storerd_rr_Ru32 S4_storerd_rr_Rtt32 S4_storerd_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storerd_rr_Rs32 & S4_storerd_rr_Ru32 & S4_storerd_rr_Rtt32 & S4_storerd_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storerd_rr_Ru32 << S4_storerd_rr_u2;
  local tmp1:4;
  tmp1 = S4_storerd_rr_Rs32 + tmp0;
  EA = tmp1;
  *:8 EA = S4_storerd_rr_Rtt32;
}

:S2_pstorerdt_io S2_pstorerdt_io_Pv4 S2_pstorerdt_io_Rs32 S2_pstorerdt_io_Rtt32 S2_pstorerdt_io_u6_3 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerdt_io_Pv4 & S2_pstorerdt_io_Rs32 & S2_pstorerdt_io_Rtt32 & S2_pstorerdt_io_u6_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerdt_io_Rs32 + S2_pstorerdt_io_u6_3;
  EA = tmp0;
  local tmp1:1;
  tmp1 = S2_pstorerdt_io_Pv4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  *:8 EA = S2_pstorerdt_io_Rtt32;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerdt_pi S2_pstorerdt_pi_Rx32 S2_pstorerdt_pi_Pv4 S2_pstorerdt_pi_Rtt32 S2_pstorerdt_pi_s4_3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerdt_pi_Rx32 & S2_pstorerdt_pi_Pv4 & S2_pstorerdt_pi_Rtt32 & S2_pstorerdt_pi_s4_3 {
  local EA:4;
  EA = S2_pstorerdt_pi_Rx32;
  local tmp0:1;
  tmp0 = S2_pstorerdt_pi_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = S2_pstorerdt_pi_Rx32 + S2_pstorerdt_pi_s4_3;
  S2_pstorerdt_pi_Rx32 = tmp2;
  *:8 EA = S2_pstorerdt_pi_Rtt32;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S2_pstorerdf_io S2_pstorerdf_io_Pv4 S2_pstorerdf_io_Rs32 S2_pstorerdf_io_Rtt32 S2_pstorerdf_io_u6_3 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerdf_io_Pv4 & S2_pstorerdf_io_Rs32 & S2_pstorerdf_io_Rtt32 & S2_pstorerdf_io_u6_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerdf_io_Rs32 + S2_pstorerdf_io_u6_3;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! S2_pstorerdf_io_Pv4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  *:8 EA = S2_pstorerdf_io_Rtt32;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S2_pstorerdf_pi S2_pstorerdf_pi_Rx32 S2_pstorerdf_pi_Pv4 S2_pstorerdf_pi_Rtt32 S2_pstorerdf_pi_s4_3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerdf_pi_Rx32 & S2_pstorerdf_pi_Pv4 & S2_pstorerdf_pi_Rtt32 & S2_pstorerdf_pi_s4_3 {
  local EA:4;
  EA = S2_pstorerdf_pi_Rx32;
  local tmp0:1;
  tmp0 = ! S2_pstorerdf_pi_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstorerdf_pi_Rx32 + S2_pstorerdf_pi_s4_3;
  S2_pstorerdf_pi_Rx32 = tmp3;
  *:8 EA = S2_pstorerdf_pi_Rtt32;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerdt_rr S4_pstorerdt_rr_Pv4 S4_pstorerdt_rr_Rs32 S4_pstorerdt_rr_Ru32 S4_pstorerdt_rr_Rtt32 S4_pstorerdt_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerdt_rr_Pv4 & S4_pstorerdt_rr_Rs32 & S4_pstorerdt_rr_Ru32 & S4_pstorerdt_rr_Rtt32 & S4_pstorerdt_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerdt_rr_Ru32 << S4_pstorerdt_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerdt_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = S4_pstorerdt_rr_Pv4;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  *:8 EA = S4_pstorerdt_rr_Rtt32;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerdf_rr S4_pstorerdf_rr_Pv4 S4_pstorerdf_rr_Rs32 S4_pstorerdf_rr_Ru32 S4_pstorerdf_rr_Rtt32 S4_pstorerdf_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerdf_rr_Pv4 & S4_pstorerdf_rr_Rs32 & S4_pstorerdf_rr_Ru32 & S4_pstorerdf_rr_Rtt32 & S4_pstorerdf_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerdf_rr_Ru32 << S4_pstorerdf_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerdf_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = ! S4_pstorerdf_rr_Pv4;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  *:8 EA = S4_pstorerdf_rr_Rtt32;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerdtnew_io S4_pstorerdtnew_io_Pv4 S4_pstorerdtnew_io_Rs32 S4_pstorerdtnew_io_Rtt32 S4_pstorerdtnew_io_u6_3 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerdtnew_io_Pv4 & S4_pstorerdtnew_io_Rs32 & S4_pstorerdtnew_io_Rtt32 & S4_pstorerdtnew_io_u6_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerdtnew_io_Rs32 + S4_pstorerdtnew_io_u6_3;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstorerdtnew_io_Pv4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  *:8 EA = S4_pstorerdtnew_io_Rtt32;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerdfnew_io S4_pstorerdfnew_io_Pv4 S4_pstorerdfnew_io_Rs32 S4_pstorerdfnew_io_Rtt32 S4_pstorerdfnew_io_u6_3 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerdfnew_io_Pv4 & S4_pstorerdfnew_io_Rs32 & S4_pstorerdfnew_io_Rtt32 & S4_pstorerdfnew_io_u6_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerdfnew_io_Rs32 + S4_pstorerdfnew_io_u6_3;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstorerdfnew_io_Pv4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  *:8 EA = S4_pstorerdfnew_io_Rtt32;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerdtnew_rr S4_pstorerdtnew_rr_Pv4 S4_pstorerdtnew_rr_Rs32 S4_pstorerdtnew_rr_Ru32 S4_pstorerdtnew_rr_Rtt32 S4_pstorerdtnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerdtnew_rr_Pv4 & S4_pstorerdtnew_rr_Rs32 & S4_pstorerdtnew_rr_Ru32 & S4_pstorerdtnew_rr_Rtt32 & S4_pstorerdtnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerdtnew_rr_Ru32 << S4_pstorerdtnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerdtnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstorerdtnew_rr_Pv4);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  *:8 EA = S4_pstorerdtnew_rr_Rtt32;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerdfnew_rr S4_pstorerdfnew_rr_Pv4 S4_pstorerdfnew_rr_Rs32 S4_pstorerdfnew_rr_Ru32 S4_pstorerdfnew_rr_Rtt32 S4_pstorerdfnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerdfnew_rr_Pv4 & S4_pstorerdfnew_rr_Rs32 & S4_pstorerdfnew_rr_Ru32 & S4_pstorerdfnew_rr_Rtt32 & S4_pstorerdfnew_rr_u2 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerdfnew_rr_Ru32 << S4_pstorerdfnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerdfnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstorerdfnew_rr_Pv4);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  *:8 EA = S4_pstorerdfnew_rr_Rtt32;
  goto <done_6>;
<f_branch_6>
<done_6>
}

:S2_pstorerdtnew_pi S2_pstorerdtnew_pi_Rx32 S2_pstorerdtnew_pi_Pv4 S2_pstorerdtnew_pi_Rtt32 S2_pstorerdtnew_pi_s4_3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerdtnew_pi_Rx32 & S2_pstorerdtnew_pi_Pv4 & S2_pstorerdtnew_pi_Rtt32 & S2_pstorerdtnew_pi_s4_3 {
  local EA:4;
  EA = S2_pstorerdtnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstorerdtnew_pi_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstorerdtnew_pi_Rx32 + S2_pstorerdtnew_pi_s4_3;
  S2_pstorerdtnew_pi_Rx32 = tmp3;
  *:8 EA = S2_pstorerdtnew_pi_Rtt32;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerdfnew_pi S2_pstorerdfnew_pi_Rx32 S2_pstorerdfnew_pi_Pv4 S2_pstorerdfnew_pi_Rtt32 S2_pstorerdfnew_pi_s4_3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerdfnew_pi_Rx32 & S2_pstorerdfnew_pi_Pv4 & S2_pstorerdfnew_pi_Rtt32 & S2_pstorerdfnew_pi_s4_3 {
  local EA:4;
  EA = S2_pstorerdfnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstorerdfnew_pi_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = S2_pstorerdfnew_pi_Rx32 + S2_pstorerdfnew_pi_s4_3;
  S2_pstorerdfnew_pi_Rx32 = tmp4;
  *:8 EA = S2_pstorerdfnew_pi_Rtt32;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerdt_abs S4_pstorerdt_abs_Pv4 S4_pstorerdt_abs_Rtt32 S4_pstorerdt_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerdt_abs_Pv4 & S4_pstorerdt_abs_Rtt32 & S4_pstorerdt_abs_u6 {
  local EA:4;
  EA = S4_pstorerdt_abs_u6;
  local tmp0:1;
  tmp0 = S4_pstorerdt_abs_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  *:8 EA = S4_pstorerdt_abs_Rtt32;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S4_pstorerdf_abs S4_pstorerdf_abs_Pv4 S4_pstorerdf_abs_Rtt32 S4_pstorerdf_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerdf_abs_Pv4 & S4_pstorerdf_abs_Rtt32 & S4_pstorerdf_abs_u6 {
  local EA:4;
  EA = S4_pstorerdf_abs_u6;
  local tmp0:1;
  tmp0 = ! S4_pstorerdf_abs_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  *:8 EA = S4_pstorerdf_abs_Rtt32;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerdtnew_abs S4_pstorerdtnew_abs_Pv4 S4_pstorerdtnew_abs_Rtt32 S4_pstorerdtnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerdtnew_abs_Pv4 & S4_pstorerdtnew_abs_Rtt32 & S4_pstorerdtnew_abs_u6 {
  local EA:4;
  EA = S4_pstorerdtnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstorerdtnew_abs_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  *:8 EA = S4_pstorerdtnew_abs_Rtt32;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerdfnew_abs S4_pstorerdfnew_abs_Pv4 S4_pstorerdfnew_abs_Rtt32 S4_pstorerdfnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerdfnew_abs_Pv4 & S4_pstorerdfnew_abs_Rtt32 & S4_pstorerdfnew_abs_u6 {
  local EA:4;
  EA = S4_pstorerdfnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstorerdfnew_abs_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  *:8 EA = S4_pstorerdfnew_abs_Rtt32;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_storerinew_rr S4_storerinew_rr_Rs32 S4_storerinew_rr_Ru32 S4_storerinew_rr_Nt8 S4_storerinew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storerinew_rr_Rs32 & S4_storerinew_rr_Ru32 & S4_storerinew_rr_Nt8 & S4_storerinew_rr_u2 & hasnew = 0                      unimpl

:S4_storerinew_rr S4_storerinew_rr_Rs32 S4_storerinew_rr_Ru32 dotnewreg S4_storerinew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storerinew_rr_Rs32 & S4_storerinew_rr_Ru32 & S4_storerinew_rr_Nt8 & S4_storerinew_rr_u2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storerinew_rr_Ru32 << S4_storerinew_rr_u2;
  local tmp1:4;
  tmp1 = S4_storerinew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:4;
  tmp2 = newreg(dotnewreg);
  *:4 EA = tmp2;
}

:S2_pstorerinewt_io S2_pstorerinewt_io_Pv4 S2_pstorerinewt_io_Rs32 S2_pstorerinewt_io_Nt8 S2_pstorerinewt_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerinewt_io_Pv4 & S2_pstorerinewt_io_Rs32 & S2_pstorerinewt_io_Nt8 & S2_pstorerinewt_io_u6_2 & hasnew = 0                      unimpl

:S2_pstorerinewt_io S2_pstorerinewt_io_Pv4 S2_pstorerinewt_io_Rs32 dotnewreg S2_pstorerinewt_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerinewt_io_Pv4 & S2_pstorerinewt_io_Rs32 & S2_pstorerinewt_io_Nt8 & S2_pstorerinewt_io_u6_2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerinewt_io_Rs32 + S2_pstorerinewt_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = S2_pstorerinewt_io_Pv4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = newreg(dotnewreg);
  *:4 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerinewt_pi S2_pstorerinewt_pi_Rx32 S2_pstorerinewt_pi_Pv4 S2_pstorerinewt_pi_Nt8 S2_pstorerinewt_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 0 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerinewt_pi_Rx32 & S2_pstorerinewt_pi_Pv4 & S2_pstorerinewt_pi_Nt8 & S2_pstorerinewt_pi_s4_2 & hasnew = 0                      unimpl

:S2_pstorerinewt_pi S2_pstorerinewt_pi_Rx32 S2_pstorerinewt_pi_Pv4 dotnewreg S2_pstorerinewt_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 0 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerinewt_pi_Rx32 & S2_pstorerinewt_pi_Pv4 & S2_pstorerinewt_pi_Nt8 & S2_pstorerinewt_pi_s4_2 & dotnewreg {
  local EA:4;
  EA = S2_pstorerinewt_pi_Rx32;
  local tmp0:1;
  tmp0 = S2_pstorerinewt_pi_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = S2_pstorerinewt_pi_Rx32 + S2_pstorerinewt_pi_s4_2;
  S2_pstorerinewt_pi_Rx32 = tmp2;
  local tmp3:4;
  tmp3 = newreg(dotnewreg);
  *:4 EA = tmp3;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S2_pstorerinewf_io S2_pstorerinewf_io_Pv4 S2_pstorerinewf_io_Rs32 S2_pstorerinewf_io_Nt8 S2_pstorerinewf_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerinewf_io_Pv4 & S2_pstorerinewf_io_Rs32 & S2_pstorerinewf_io_Nt8 & S2_pstorerinewf_io_u6_2 & hasnew = 0                      unimpl

:S2_pstorerinewf_io S2_pstorerinewf_io_Pv4 S2_pstorerinewf_io_Rs32 dotnewreg S2_pstorerinewf_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerinewf_io_Pv4 & S2_pstorerinewf_io_Rs32 & S2_pstorerinewf_io_Nt8 & S2_pstorerinewf_io_u6_2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerinewf_io_Rs32 + S2_pstorerinewf_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! S2_pstorerinewf_io_Pv4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = newreg(dotnewreg);
  *:4 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S2_pstorerinewf_pi S2_pstorerinewf_pi_Rx32 S2_pstorerinewf_pi_Pv4 S2_pstorerinewf_pi_Nt8 S2_pstorerinewf_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 0 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerinewf_pi_Rx32 & S2_pstorerinewf_pi_Pv4 & S2_pstorerinewf_pi_Nt8 & S2_pstorerinewf_pi_s4_2 & hasnew = 0                      unimpl

:S2_pstorerinewf_pi S2_pstorerinewf_pi_Rx32 S2_pstorerinewf_pi_Pv4 dotnewreg S2_pstorerinewf_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 0 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerinewf_pi_Rx32 & S2_pstorerinewf_pi_Pv4 & S2_pstorerinewf_pi_Nt8 & S2_pstorerinewf_pi_s4_2 & dotnewreg {
  local EA:4;
  EA = S2_pstorerinewf_pi_Rx32;
  local tmp0:1;
  tmp0 = ! S2_pstorerinewf_pi_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstorerinewf_pi_Rx32 + S2_pstorerinewf_pi_s4_2;
  S2_pstorerinewf_pi_Rx32 = tmp3;
  local tmp4:4;
  tmp4 = newreg(dotnewreg);
  *:4 EA = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerinewt_rr S4_pstorerinewt_rr_Pv4 S4_pstorerinewt_rr_Rs32 S4_pstorerinewt_rr_Ru32 S4_pstorerinewt_rr_Nt8 S4_pstorerinewt_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerinewt_rr_Pv4 & S4_pstorerinewt_rr_Rs32 & S4_pstorerinewt_rr_Ru32 & S4_pstorerinewt_rr_Nt8 & S4_pstorerinewt_rr_u2 & hasnew = 0                      unimpl

:S4_pstorerinewt_rr S4_pstorerinewt_rr_Pv4 S4_pstorerinewt_rr_Rs32 S4_pstorerinewt_rr_Ru32 dotnewreg S4_pstorerinewt_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerinewt_rr_Pv4 & S4_pstorerinewt_rr_Rs32 & S4_pstorerinewt_rr_Ru32 & S4_pstorerinewt_rr_Nt8 & S4_pstorerinewt_rr_u2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerinewt_rr_Ru32 << S4_pstorerinewt_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerinewt_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = S4_pstorerinewt_rr_Pv4;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = newreg(dotnewreg);
  *:4 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerinewf_rr S4_pstorerinewf_rr_Pv4 S4_pstorerinewf_rr_Rs32 S4_pstorerinewf_rr_Ru32 S4_pstorerinewf_rr_Nt8 S4_pstorerinewf_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerinewf_rr_Pv4 & S4_pstorerinewf_rr_Rs32 & S4_pstorerinewf_rr_Ru32 & S4_pstorerinewf_rr_Nt8 & S4_pstorerinewf_rr_u2 & hasnew = 0                      unimpl

:S4_pstorerinewf_rr S4_pstorerinewf_rr_Pv4 S4_pstorerinewf_rr_Rs32 S4_pstorerinewf_rr_Ru32 dotnewreg S4_pstorerinewf_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerinewf_rr_Pv4 & S4_pstorerinewf_rr_Rs32 & S4_pstorerinewf_rr_Ru32 & S4_pstorerinewf_rr_Nt8 & S4_pstorerinewf_rr_u2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerinewf_rr_Ru32 << S4_pstorerinewf_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerinewf_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = ! S4_pstorerinewf_rr_Pv4;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  *:4 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerinewtnew_io S4_pstorerinewtnew_io_Pv4 S4_pstorerinewtnew_io_Rs32 S4_pstorerinewtnew_io_Nt8 S4_pstorerinewtnew_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerinewtnew_io_Pv4 & S4_pstorerinewtnew_io_Rs32 & S4_pstorerinewtnew_io_Nt8 & S4_pstorerinewtnew_io_u6_2 & hasnew = 0                      unimpl

:S4_pstorerinewtnew_io S4_pstorerinewtnew_io_Pv4 S4_pstorerinewtnew_io_Rs32 dotnewreg S4_pstorerinewtnew_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerinewtnew_io_Pv4 & S4_pstorerinewtnew_io_Rs32 & S4_pstorerinewtnew_io_Nt8 & S4_pstorerinewtnew_io_u6_2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerinewtnew_io_Rs32 + S4_pstorerinewtnew_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstorerinewtnew_io_Pv4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = newreg(dotnewreg);
  *:4 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerinewfnew_io S4_pstorerinewfnew_io_Pv4 S4_pstorerinewfnew_io_Rs32 S4_pstorerinewfnew_io_Nt8 S4_pstorerinewfnew_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerinewfnew_io_Pv4 & S4_pstorerinewfnew_io_Rs32 & S4_pstorerinewfnew_io_Nt8 & S4_pstorerinewfnew_io_u6_2 & hasnew = 0                      unimpl

:S4_pstorerinewfnew_io S4_pstorerinewfnew_io_Pv4 S4_pstorerinewfnew_io_Rs32 dotnewreg S4_pstorerinewfnew_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerinewfnew_io_Pv4 & S4_pstorerinewfnew_io_Rs32 & S4_pstorerinewfnew_io_Nt8 & S4_pstorerinewfnew_io_u6_2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerinewfnew_io_Rs32 + S4_pstorerinewfnew_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstorerinewfnew_io_Pv4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  *:4 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerinewtnew_rr S4_pstorerinewtnew_rr_Pv4 S4_pstorerinewtnew_rr_Rs32 S4_pstorerinewtnew_rr_Ru32 S4_pstorerinewtnew_rr_Nt8 S4_pstorerinewtnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerinewtnew_rr_Pv4 & S4_pstorerinewtnew_rr_Rs32 & S4_pstorerinewtnew_rr_Ru32 & S4_pstorerinewtnew_rr_Nt8 & S4_pstorerinewtnew_rr_u2 & hasnew = 0                      unimpl

:S4_pstorerinewtnew_rr S4_pstorerinewtnew_rr_Pv4 S4_pstorerinewtnew_rr_Rs32 S4_pstorerinewtnew_rr_Ru32 dotnewreg S4_pstorerinewtnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerinewtnew_rr_Pv4 & S4_pstorerinewtnew_rr_Rs32 & S4_pstorerinewtnew_rr_Ru32 & S4_pstorerinewtnew_rr_Nt8 & S4_pstorerinewtnew_rr_u2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerinewtnew_rr_Ru32 << S4_pstorerinewtnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerinewtnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstorerinewtnew_rr_Pv4);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  *:4 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerinewfnew_rr S4_pstorerinewfnew_rr_Pv4 S4_pstorerinewfnew_rr_Rs32 S4_pstorerinewfnew_rr_Ru32 S4_pstorerinewfnew_rr_Nt8 S4_pstorerinewfnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerinewfnew_rr_Pv4 & S4_pstorerinewfnew_rr_Rs32 & S4_pstorerinewfnew_rr_Ru32 & S4_pstorerinewfnew_rr_Nt8 & S4_pstorerinewfnew_rr_u2 & hasnew = 0                      unimpl

:S4_pstorerinewfnew_rr S4_pstorerinewfnew_rr_Pv4 S4_pstorerinewfnew_rr_Rs32 S4_pstorerinewfnew_rr_Ru32 dotnewreg S4_pstorerinewfnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerinewfnew_rr_Pv4 & S4_pstorerinewfnew_rr_Rs32 & S4_pstorerinewfnew_rr_Ru32 & S4_pstorerinewfnew_rr_Nt8 & S4_pstorerinewfnew_rr_u2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerinewfnew_rr_Ru32 << S4_pstorerinewfnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerinewfnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstorerinewfnew_rr_Pv4);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  local tmp6:4;
  tmp6 = newreg(dotnewreg);
  *:4 EA = tmp6;
  goto <done_6>;
<f_branch_6>
<done_6>
}

:S2_pstorerinewtnew_pi S2_pstorerinewtnew_pi_Rx32 S2_pstorerinewtnew_pi_Pv4 S2_pstorerinewtnew_pi_Nt8 S2_pstorerinewtnew_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerinewtnew_pi_Rx32 & S2_pstorerinewtnew_pi_Pv4 & S2_pstorerinewtnew_pi_Nt8 & S2_pstorerinewtnew_pi_s4_2 & hasnew = 0                      unimpl

:S2_pstorerinewtnew_pi S2_pstorerinewtnew_pi_Rx32 S2_pstorerinewtnew_pi_Pv4 dotnewreg S2_pstorerinewtnew_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerinewtnew_pi_Rx32 & S2_pstorerinewtnew_pi_Pv4 & S2_pstorerinewtnew_pi_Nt8 & S2_pstorerinewtnew_pi_s4_2 & dotnewreg {
  local EA:4;
  EA = S2_pstorerinewtnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstorerinewtnew_pi_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstorerinewtnew_pi_Rx32 + S2_pstorerinewtnew_pi_s4_2;
  S2_pstorerinewtnew_pi_Rx32 = tmp3;
  local tmp4:4;
  tmp4 = newreg(dotnewreg);
  *:4 EA = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerinewfnew_pi S2_pstorerinewfnew_pi_Rx32 S2_pstorerinewfnew_pi_Pv4 S2_pstorerinewfnew_pi_Nt8 S2_pstorerinewfnew_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerinewfnew_pi_Rx32 & S2_pstorerinewfnew_pi_Pv4 & S2_pstorerinewfnew_pi_Nt8 & S2_pstorerinewfnew_pi_s4_2 & hasnew = 0                      unimpl

:S2_pstorerinewfnew_pi S2_pstorerinewfnew_pi_Rx32 S2_pstorerinewfnew_pi_Pv4 dotnewreg S2_pstorerinewfnew_pi_s4_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerinewfnew_pi_Rx32 & S2_pstorerinewfnew_pi_Pv4 & S2_pstorerinewfnew_pi_Nt8 & S2_pstorerinewfnew_pi_s4_2 & dotnewreg {
  local EA:4;
  EA = S2_pstorerinewfnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstorerinewfnew_pi_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = S2_pstorerinewfnew_pi_Rx32 + S2_pstorerinewfnew_pi_s4_2;
  S2_pstorerinewfnew_pi_Rx32 = tmp4;
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  *:4 EA = tmp5;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerinewt_abs S4_pstorerinewt_abs_Pv4 S4_pstorerinewt_abs_Nt8 S4_pstorerinewt_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerinewt_abs_Pv4 & S4_pstorerinewt_abs_Nt8 & S4_pstorerinewt_abs_u6 & hasnew = 0                      unimpl

:S4_pstorerinewt_abs S4_pstorerinewt_abs_Pv4 dotnewreg S4_pstorerinewt_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerinewt_abs_Pv4 & S4_pstorerinewt_abs_Nt8 & S4_pstorerinewt_abs_u6 & dotnewreg {
  local EA:4;
  EA = S4_pstorerinewt_abs_u6;
  local tmp0:1;
  tmp0 = S4_pstorerinewt_abs_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = newreg(dotnewreg);
  *:4 EA = tmp2;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S4_pstorerinewf_abs S4_pstorerinewf_abs_Pv4 S4_pstorerinewf_abs_Nt8 S4_pstorerinewf_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerinewf_abs_Pv4 & S4_pstorerinewf_abs_Nt8 & S4_pstorerinewf_abs_u6 & hasnew = 0                      unimpl

:S4_pstorerinewf_abs S4_pstorerinewf_abs_Pv4 dotnewreg S4_pstorerinewf_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerinewf_abs_Pv4 & S4_pstorerinewf_abs_Nt8 & S4_pstorerinewf_abs_u6 & dotnewreg {
  local EA:4;
  EA = S4_pstorerinewf_abs_u6;
  local tmp0:1;
  tmp0 = ! S4_pstorerinewf_abs_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = newreg(dotnewreg);
  *:4 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerinewtnew_abs S4_pstorerinewtnew_abs_Pv4 S4_pstorerinewtnew_abs_Nt8 S4_pstorerinewtnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerinewtnew_abs_Pv4 & S4_pstorerinewtnew_abs_Nt8 & S4_pstorerinewtnew_abs_u6 & hasnew = 0                      unimpl

:S4_pstorerinewtnew_abs S4_pstorerinewtnew_abs_Pv4 dotnewreg S4_pstorerinewtnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerinewtnew_abs_Pv4 & S4_pstorerinewtnew_abs_Nt8 & S4_pstorerinewtnew_abs_u6 & dotnewreg {
  local EA:4;
  EA = S4_pstorerinewtnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstorerinewtnew_abs_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = newreg(dotnewreg);
  *:4 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerinewfnew_abs S4_pstorerinewfnew_abs_Pv4 S4_pstorerinewfnew_abs_Nt8 S4_pstorerinewfnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerinewfnew_abs_Pv4 & S4_pstorerinewfnew_abs_Nt8 & S4_pstorerinewfnew_abs_u6 & hasnew = 0                      unimpl

:S4_pstorerinewfnew_abs S4_pstorerinewfnew_abs_Pv4 dotnewreg S4_pstorerinewfnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 0 & b12 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerinewfnew_abs_Pv4 & S4_pstorerinewfnew_abs_Nt8 & S4_pstorerinewfnew_abs_u6 & dotnewreg {
  local EA:4;
  EA = S4_pstorerinewfnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstorerinewfnew_abs_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = newreg(dotnewreg);
  *:4 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_storerbnew_rr S4_storerbnew_rr_Rs32 S4_storerbnew_rr_Ru32 S4_storerbnew_rr_Nt8 S4_storerbnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storerbnew_rr_Rs32 & S4_storerbnew_rr_Ru32 & S4_storerbnew_rr_Nt8 & S4_storerbnew_rr_u2 & hasnew = 0                      unimpl

:S4_storerbnew_rr S4_storerbnew_rr_Rs32 S4_storerbnew_rr_Ru32 dotnewreg S4_storerbnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storerbnew_rr_Rs32 & S4_storerbnew_rr_Ru32 & S4_storerbnew_rr_Nt8 & S4_storerbnew_rr_u2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storerbnew_rr_Ru32 << S4_storerbnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_storerbnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  local tmp3:4;
  tmp3 = newreg(dotnewreg);
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 8;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = tmp3 s>> tmp6;
  local tmp8:4;
  tmp8 = 255;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp2 = tmp9:1;
  *:1 EA = tmp2;
}

:S2_pstorerbnewt_io S2_pstorerbnewt_io_Pv4 S2_pstorerbnewt_io_Rs32 S2_pstorerbnewt_io_Nt8 S2_pstorerbnewt_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerbnewt_io_Pv4 & S2_pstorerbnewt_io_Rs32 & S2_pstorerbnewt_io_Nt8 & S2_pstorerbnewt_io_u6_0 & hasnew = 0                      unimpl

:S2_pstorerbnewt_io S2_pstorerbnewt_io_Pv4 S2_pstorerbnewt_io_Rs32 dotnewreg S2_pstorerbnewt_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerbnewt_io_Pv4 & S2_pstorerbnewt_io_Rs32 & S2_pstorerbnewt_io_Nt8 & S2_pstorerbnewt_io_u6_0 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerbnewt_io_Rs32 + S2_pstorerbnewt_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = S2_pstorerbnewt_io_Pv4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:1;
  local tmp4:4;
  tmp4 = newreg(dotnewreg);
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 8;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = tmp4 s>> tmp7;
  local tmp9:4;
  tmp9 = 255;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:1;
  *:1 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerbnewt_pi S2_pstorerbnewt_pi_Rx32 S2_pstorerbnewt_pi_Pv4 S2_pstorerbnewt_pi_Nt8 S2_pstorerbnewt_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 0 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerbnewt_pi_Rx32 & S2_pstorerbnewt_pi_Pv4 & S2_pstorerbnewt_pi_Nt8 & S2_pstorerbnewt_pi_s4_0 & hasnew = 0                      unimpl

:S2_pstorerbnewt_pi S2_pstorerbnewt_pi_Rx32 S2_pstorerbnewt_pi_Pv4 dotnewreg S2_pstorerbnewt_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 0 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerbnewt_pi_Rx32 & S2_pstorerbnewt_pi_Pv4 & S2_pstorerbnewt_pi_Nt8 & S2_pstorerbnewt_pi_s4_0 & dotnewreg {
  local EA:4;
  EA = S2_pstorerbnewt_pi_Rx32;
  local tmp0:1;
  tmp0 = S2_pstorerbnewt_pi_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = S2_pstorerbnewt_pi_Rx32 + S2_pstorerbnewt_pi_s4_0;
  S2_pstorerbnewt_pi_Rx32 = tmp2;
  local tmp3:1;
  local tmp4:4;
  tmp4 = newreg(dotnewreg);
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 8;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = tmp4 s>> tmp7;
  local tmp9:4;
  tmp9 = 255;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:1;
  *:1 EA = tmp3;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S2_pstorerbnewf_io S2_pstorerbnewf_io_Pv4 S2_pstorerbnewf_io_Rs32 S2_pstorerbnewf_io_Nt8 S2_pstorerbnewf_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerbnewf_io_Pv4 & S2_pstorerbnewf_io_Rs32 & S2_pstorerbnewf_io_Nt8 & S2_pstorerbnewf_io_u6_0 & hasnew = 0                      unimpl

:S2_pstorerbnewf_io S2_pstorerbnewf_io_Pv4 S2_pstorerbnewf_io_Rs32 dotnewreg S2_pstorerbnewf_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerbnewf_io_Pv4 & S2_pstorerbnewf_io_Rs32 & S2_pstorerbnewf_io_Nt8 & S2_pstorerbnewf_io_u6_0 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerbnewf_io_Rs32 + S2_pstorerbnewf_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! S2_pstorerbnewf_io_Pv4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:1;
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 8;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = tmp5 s>> tmp8;
  local tmp10:4;
  tmp10 = 255;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp4 = tmp11:1;
  *:1 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S2_pstorerbnewf_pi S2_pstorerbnewf_pi_Rx32 S2_pstorerbnewf_pi_Pv4 S2_pstorerbnewf_pi_Nt8 S2_pstorerbnewf_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 0 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerbnewf_pi_Rx32 & S2_pstorerbnewf_pi_Pv4 & S2_pstorerbnewf_pi_Nt8 & S2_pstorerbnewf_pi_s4_0 & hasnew = 0                      unimpl

:S2_pstorerbnewf_pi S2_pstorerbnewf_pi_Rx32 S2_pstorerbnewf_pi_Pv4 dotnewreg S2_pstorerbnewf_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 0 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerbnewf_pi_Rx32 & S2_pstorerbnewf_pi_Pv4 & S2_pstorerbnewf_pi_Nt8 & S2_pstorerbnewf_pi_s4_0 & dotnewreg {
  local EA:4;
  EA = S2_pstorerbnewf_pi_Rx32;
  local tmp0:1;
  tmp0 = ! S2_pstorerbnewf_pi_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstorerbnewf_pi_Rx32 + S2_pstorerbnewf_pi_s4_0;
  S2_pstorerbnewf_pi_Rx32 = tmp3;
  local tmp4:1;
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 8;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = tmp5 s>> tmp8;
  local tmp10:4;
  tmp10 = 255;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp4 = tmp11:1;
  *:1 EA = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerbnewt_rr S4_pstorerbnewt_rr_Pv4 S4_pstorerbnewt_rr_Rs32 S4_pstorerbnewt_rr_Ru32 S4_pstorerbnewt_rr_Nt8 S4_pstorerbnewt_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerbnewt_rr_Pv4 & S4_pstorerbnewt_rr_Rs32 & S4_pstorerbnewt_rr_Ru32 & S4_pstorerbnewt_rr_Nt8 & S4_pstorerbnewt_rr_u2 & hasnew = 0                      unimpl

:S4_pstorerbnewt_rr S4_pstorerbnewt_rr_Pv4 S4_pstorerbnewt_rr_Rs32 S4_pstorerbnewt_rr_Ru32 dotnewreg S4_pstorerbnewt_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerbnewt_rr_Pv4 & S4_pstorerbnewt_rr_Rs32 & S4_pstorerbnewt_rr_Ru32 & S4_pstorerbnewt_rr_Nt8 & S4_pstorerbnewt_rr_u2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerbnewt_rr_Ru32 << S4_pstorerbnewt_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerbnewt_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = S4_pstorerbnewt_rr_Pv4;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:1;
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 8;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = tmp5 s>> tmp8;
  local tmp10:4;
  tmp10 = 255;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp4 = tmp11:1;
  *:1 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerbnewf_rr S4_pstorerbnewf_rr_Pv4 S4_pstorerbnewf_rr_Rs32 S4_pstorerbnewf_rr_Ru32 S4_pstorerbnewf_rr_Nt8 S4_pstorerbnewf_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerbnewf_rr_Pv4 & S4_pstorerbnewf_rr_Rs32 & S4_pstorerbnewf_rr_Ru32 & S4_pstorerbnewf_rr_Nt8 & S4_pstorerbnewf_rr_u2 & hasnew = 0                      unimpl

:S4_pstorerbnewf_rr S4_pstorerbnewf_rr_Pv4 S4_pstorerbnewf_rr_Rs32 S4_pstorerbnewf_rr_Ru32 dotnewreg S4_pstorerbnewf_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerbnewf_rr_Pv4 & S4_pstorerbnewf_rr_Rs32 & S4_pstorerbnewf_rr_Ru32 & S4_pstorerbnewf_rr_Nt8 & S4_pstorerbnewf_rr_u2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerbnewf_rr_Ru32 << S4_pstorerbnewf_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerbnewf_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = ! S4_pstorerbnewf_rr_Pv4;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:1;
  local tmp6:4;
  tmp6 = newreg(dotnewreg);
  local tmp7:4;
  tmp7 = 0;
  local tmp8:4;
  tmp8 = 8;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:4;
  tmp10 = tmp6 s>> tmp9;
  local tmp11:4;
  tmp11 = 255;
  local tmp12:4;
  tmp12 = tmp10 & tmp11;
  tmp5 = tmp12:1;
  *:1 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerbnewtnew_io S4_pstorerbnewtnew_io_Pv4 S4_pstorerbnewtnew_io_Rs32 S4_pstorerbnewtnew_io_Nt8 S4_pstorerbnewtnew_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerbnewtnew_io_Pv4 & S4_pstorerbnewtnew_io_Rs32 & S4_pstorerbnewtnew_io_Nt8 & S4_pstorerbnewtnew_io_u6_0 & hasnew = 0                      unimpl

:S4_pstorerbnewtnew_io S4_pstorerbnewtnew_io_Pv4 S4_pstorerbnewtnew_io_Rs32 dotnewreg S4_pstorerbnewtnew_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerbnewtnew_io_Pv4 & S4_pstorerbnewtnew_io_Rs32 & S4_pstorerbnewtnew_io_Nt8 & S4_pstorerbnewtnew_io_u6_0 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerbnewtnew_io_Rs32 + S4_pstorerbnewtnew_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstorerbnewtnew_io_Pv4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:1;
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 8;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = tmp5 s>> tmp8;
  local tmp10:4;
  tmp10 = 255;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp4 = tmp11:1;
  *:1 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerbnewfnew_io S4_pstorerbnewfnew_io_Pv4 S4_pstorerbnewfnew_io_Rs32 S4_pstorerbnewfnew_io_Nt8 S4_pstorerbnewfnew_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerbnewfnew_io_Pv4 & S4_pstorerbnewfnew_io_Rs32 & S4_pstorerbnewfnew_io_Nt8 & S4_pstorerbnewfnew_io_u6_0 & hasnew = 0                      unimpl

:S4_pstorerbnewfnew_io S4_pstorerbnewfnew_io_Pv4 S4_pstorerbnewfnew_io_Rs32 dotnewreg S4_pstorerbnewfnew_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerbnewfnew_io_Pv4 & S4_pstorerbnewfnew_io_Rs32 & S4_pstorerbnewfnew_io_Nt8 & S4_pstorerbnewfnew_io_u6_0 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerbnewfnew_io_Rs32 + S4_pstorerbnewfnew_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstorerbnewfnew_io_Pv4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:1;
  local tmp6:4;
  tmp6 = newreg(dotnewreg);
  local tmp7:4;
  tmp7 = 0;
  local tmp8:4;
  tmp8 = 8;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:4;
  tmp10 = tmp6 s>> tmp9;
  local tmp11:4;
  tmp11 = 255;
  local tmp12:4;
  tmp12 = tmp10 & tmp11;
  tmp5 = tmp12:1;
  *:1 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerbnewtnew_rr S4_pstorerbnewtnew_rr_Pv4 S4_pstorerbnewtnew_rr_Rs32 S4_pstorerbnewtnew_rr_Ru32 S4_pstorerbnewtnew_rr_Nt8 S4_pstorerbnewtnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerbnewtnew_rr_Pv4 & S4_pstorerbnewtnew_rr_Rs32 & S4_pstorerbnewtnew_rr_Ru32 & S4_pstorerbnewtnew_rr_Nt8 & S4_pstorerbnewtnew_rr_u2 & hasnew = 0                      unimpl

:S4_pstorerbnewtnew_rr S4_pstorerbnewtnew_rr_Pv4 S4_pstorerbnewtnew_rr_Rs32 S4_pstorerbnewtnew_rr_Ru32 dotnewreg S4_pstorerbnewtnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerbnewtnew_rr_Pv4 & S4_pstorerbnewtnew_rr_Rs32 & S4_pstorerbnewtnew_rr_Ru32 & S4_pstorerbnewtnew_rr_Nt8 & S4_pstorerbnewtnew_rr_u2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerbnewtnew_rr_Ru32 << S4_pstorerbnewtnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerbnewtnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstorerbnewtnew_rr_Pv4);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:1;
  local tmp6:4;
  tmp6 = newreg(dotnewreg);
  local tmp7:4;
  tmp7 = 0;
  local tmp8:4;
  tmp8 = 8;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:4;
  tmp10 = tmp6 s>> tmp9;
  local tmp11:4;
  tmp11 = 255;
  local tmp12:4;
  tmp12 = tmp10 & tmp11;
  tmp5 = tmp12:1;
  *:1 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerbnewfnew_rr S4_pstorerbnewfnew_rr_Pv4 S4_pstorerbnewfnew_rr_Rs32 S4_pstorerbnewfnew_rr_Ru32 S4_pstorerbnewfnew_rr_Nt8 S4_pstorerbnewfnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerbnewfnew_rr_Pv4 & S4_pstorerbnewfnew_rr_Rs32 & S4_pstorerbnewfnew_rr_Ru32 & S4_pstorerbnewfnew_rr_Nt8 & S4_pstorerbnewfnew_rr_u2 & hasnew = 0                      unimpl

:S4_pstorerbnewfnew_rr S4_pstorerbnewfnew_rr_Pv4 S4_pstorerbnewfnew_rr_Rs32 S4_pstorerbnewfnew_rr_Ru32 dotnewreg S4_pstorerbnewfnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerbnewfnew_rr_Pv4 & S4_pstorerbnewfnew_rr_Rs32 & S4_pstorerbnewfnew_rr_Ru32 & S4_pstorerbnewfnew_rr_Nt8 & S4_pstorerbnewfnew_rr_u2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerbnewfnew_rr_Ru32 << S4_pstorerbnewfnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerbnewfnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstorerbnewfnew_rr_Pv4);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  local tmp6:1;
  local tmp7:4;
  tmp7 = newreg(dotnewreg);
  local tmp8:4;
  tmp8 = 0;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = tmp7 s>> tmp10;
  local tmp12:4;
  tmp12 = 255;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp6 = tmp13:1;
  *:1 EA = tmp6;
  goto <done_6>;
<f_branch_6>
<done_6>
}

:S2_pstorerbnewtnew_pi S2_pstorerbnewtnew_pi_Rx32 S2_pstorerbnewtnew_pi_Pv4 S2_pstorerbnewtnew_pi_Nt8 S2_pstorerbnewtnew_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerbnewtnew_pi_Rx32 & S2_pstorerbnewtnew_pi_Pv4 & S2_pstorerbnewtnew_pi_Nt8 & S2_pstorerbnewtnew_pi_s4_0 & hasnew = 0                      unimpl

:S2_pstorerbnewtnew_pi S2_pstorerbnewtnew_pi_Rx32 S2_pstorerbnewtnew_pi_Pv4 dotnewreg S2_pstorerbnewtnew_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerbnewtnew_pi_Rx32 & S2_pstorerbnewtnew_pi_Pv4 & S2_pstorerbnewtnew_pi_Nt8 & S2_pstorerbnewtnew_pi_s4_0 & dotnewreg {
  local EA:4;
  EA = S2_pstorerbnewtnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstorerbnewtnew_pi_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstorerbnewtnew_pi_Rx32 + S2_pstorerbnewtnew_pi_s4_0;
  S2_pstorerbnewtnew_pi_Rx32 = tmp3;
  local tmp4:1;
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 8;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = tmp5 s>> tmp8;
  local tmp10:4;
  tmp10 = 255;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp4 = tmp11:1;
  *:1 EA = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerbnewfnew_pi S2_pstorerbnewfnew_pi_Rx32 S2_pstorerbnewfnew_pi_Pv4 S2_pstorerbnewfnew_pi_Nt8 S2_pstorerbnewfnew_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerbnewfnew_pi_Rx32 & S2_pstorerbnewfnew_pi_Pv4 & S2_pstorerbnewfnew_pi_Nt8 & S2_pstorerbnewfnew_pi_s4_0 & hasnew = 0                      unimpl

:S2_pstorerbnewfnew_pi S2_pstorerbnewfnew_pi_Rx32 S2_pstorerbnewfnew_pi_Pv4 dotnewreg S2_pstorerbnewfnew_pi_s4_0 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerbnewfnew_pi_Rx32 & S2_pstorerbnewfnew_pi_Pv4 & S2_pstorerbnewfnew_pi_Nt8 & S2_pstorerbnewfnew_pi_s4_0 & dotnewreg {
  local EA:4;
  EA = S2_pstorerbnewfnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstorerbnewfnew_pi_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = S2_pstorerbnewfnew_pi_Rx32 + S2_pstorerbnewfnew_pi_s4_0;
  S2_pstorerbnewfnew_pi_Rx32 = tmp4;
  local tmp5:1;
  local tmp6:4;
  tmp6 = newreg(dotnewreg);
  local tmp7:4;
  tmp7 = 0;
  local tmp8:4;
  tmp8 = 8;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:4;
  tmp10 = tmp6 s>> tmp9;
  local tmp11:4;
  tmp11 = 255;
  local tmp12:4;
  tmp12 = tmp10 & tmp11;
  tmp5 = tmp12:1;
  *:1 EA = tmp5;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerbnewt_abs S4_pstorerbnewt_abs_Pv4 S4_pstorerbnewt_abs_Nt8 S4_pstorerbnewt_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerbnewt_abs_Pv4 & S4_pstorerbnewt_abs_Nt8 & S4_pstorerbnewt_abs_u6 & hasnew = 0                      unimpl

:S4_pstorerbnewt_abs S4_pstorerbnewt_abs_Pv4 dotnewreg S4_pstorerbnewt_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerbnewt_abs_Pv4 & S4_pstorerbnewt_abs_Nt8 & S4_pstorerbnewt_abs_u6 & dotnewreg {
  local EA:4;
  EA = S4_pstorerbnewt_abs_u6;
  local tmp0:1;
  tmp0 = S4_pstorerbnewt_abs_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:1;
  local tmp3:4;
  tmp3 = newreg(dotnewreg);
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 8;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = tmp3 s>> tmp6;
  local tmp8:4;
  tmp8 = 255;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp2 = tmp9:1;
  *:1 EA = tmp2;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S4_pstorerbnewf_abs S4_pstorerbnewf_abs_Pv4 S4_pstorerbnewf_abs_Nt8 S4_pstorerbnewf_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerbnewf_abs_Pv4 & S4_pstorerbnewf_abs_Nt8 & S4_pstorerbnewf_abs_u6 & hasnew = 0                      unimpl

:S4_pstorerbnewf_abs S4_pstorerbnewf_abs_Pv4 dotnewreg S4_pstorerbnewf_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerbnewf_abs_Pv4 & S4_pstorerbnewf_abs_Nt8 & S4_pstorerbnewf_abs_u6 & dotnewreg {
  local EA:4;
  EA = S4_pstorerbnewf_abs_u6;
  local tmp0:1;
  tmp0 = ! S4_pstorerbnewf_abs_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:1;
  local tmp4:4;
  tmp4 = newreg(dotnewreg);
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 8;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = tmp4 s>> tmp7;
  local tmp9:4;
  tmp9 = 255;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:1;
  *:1 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerbnewtnew_abs S4_pstorerbnewtnew_abs_Pv4 S4_pstorerbnewtnew_abs_Nt8 S4_pstorerbnewtnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerbnewtnew_abs_Pv4 & S4_pstorerbnewtnew_abs_Nt8 & S4_pstorerbnewtnew_abs_u6 & hasnew = 0                      unimpl

:S4_pstorerbnewtnew_abs S4_pstorerbnewtnew_abs_Pv4 dotnewreg S4_pstorerbnewtnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerbnewtnew_abs_Pv4 & S4_pstorerbnewtnew_abs_Nt8 & S4_pstorerbnewtnew_abs_u6 & dotnewreg {
  local EA:4;
  EA = S4_pstorerbnewtnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstorerbnewtnew_abs_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:1;
  local tmp4:4;
  tmp4 = newreg(dotnewreg);
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 8;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = tmp4 s>> tmp7;
  local tmp9:4;
  tmp9 = 255;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:1;
  *:1 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerbnewfnew_abs S4_pstorerbnewfnew_abs_Pv4 S4_pstorerbnewfnew_abs_Nt8 S4_pstorerbnewfnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerbnewfnew_abs_Pv4 & S4_pstorerbnewfnew_abs_Nt8 & S4_pstorerbnewfnew_abs_u6 & hasnew = 0                      unimpl

:S4_pstorerbnewfnew_abs S4_pstorerbnewfnew_abs_Pv4 dotnewreg S4_pstorerbnewfnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 0 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerbnewfnew_abs_Pv4 & S4_pstorerbnewfnew_abs_Nt8 & S4_pstorerbnewfnew_abs_u6 & dotnewreg {
  local EA:4;
  EA = S4_pstorerbnewfnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstorerbnewfnew_abs_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:1;
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 8;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = tmp5 s>> tmp8;
  local tmp10:4;
  tmp10 = 255;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp4 = tmp11:1;
  *:1 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_storerhnew_rr S4_storerhnew_rr_Rs32 S4_storerhnew_rr_Ru32 S4_storerhnew_rr_Nt8 S4_storerhnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storerhnew_rr_Rs32 & S4_storerhnew_rr_Ru32 & S4_storerhnew_rr_Nt8 & S4_storerhnew_rr_u2 & hasnew = 0                      unimpl

:S4_storerhnew_rr S4_storerhnew_rr_Rs32 S4_storerhnew_rr_Ru32 dotnewreg S4_storerhnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storerhnew_rr_Rs32 & S4_storerhnew_rr_Ru32 & S4_storerhnew_rr_Nt8 & S4_storerhnew_rr_u2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storerhnew_rr_Ru32 << S4_storerhnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_storerhnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:2;
  local tmp3:4;
  tmp3 = newreg(dotnewreg);
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 16;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = tmp3 s>> tmp6;
  local tmp8:4;
  tmp8 = 65535;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp2 = tmp9:2;
  *:2 EA = tmp2;
}

:S2_pstorerhnewt_io S2_pstorerhnewt_io_Pv4 S2_pstorerhnewt_io_Rs32 S2_pstorerhnewt_io_Nt8 S2_pstorerhnewt_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerhnewt_io_Pv4 & S2_pstorerhnewt_io_Rs32 & S2_pstorerhnewt_io_Nt8 & S2_pstorerhnewt_io_u6_1 & hasnew = 0                      unimpl

:S2_pstorerhnewt_io S2_pstorerhnewt_io_Pv4 S2_pstorerhnewt_io_Rs32 dotnewreg S2_pstorerhnewt_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerhnewt_io_Pv4 & S2_pstorerhnewt_io_Rs32 & S2_pstorerhnewt_io_Nt8 & S2_pstorerhnewt_io_u6_1 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerhnewt_io_Rs32 + S2_pstorerhnewt_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = S2_pstorerhnewt_io_Pv4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:2;
  local tmp4:4;
  tmp4 = newreg(dotnewreg);
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = tmp4 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:2;
  *:2 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerhnewt_pi S2_pstorerhnewt_pi_Rx32 S2_pstorerhnewt_pi_Pv4 S2_pstorerhnewt_pi_Nt8 S2_pstorerhnewt_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 0 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerhnewt_pi_Rx32 & S2_pstorerhnewt_pi_Pv4 & S2_pstorerhnewt_pi_Nt8 & S2_pstorerhnewt_pi_s4_1 & hasnew = 0                      unimpl

:S2_pstorerhnewt_pi S2_pstorerhnewt_pi_Rx32 S2_pstorerhnewt_pi_Pv4 dotnewreg S2_pstorerhnewt_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 0 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerhnewt_pi_Rx32 & S2_pstorerhnewt_pi_Pv4 & S2_pstorerhnewt_pi_Nt8 & S2_pstorerhnewt_pi_s4_1 & dotnewreg {
  local EA:4;
  EA = S2_pstorerhnewt_pi_Rx32;
  local tmp0:1;
  tmp0 = S2_pstorerhnewt_pi_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = S2_pstorerhnewt_pi_Rx32 + S2_pstorerhnewt_pi_s4_1;
  S2_pstorerhnewt_pi_Rx32 = tmp2;
  local tmp3:2;
  local tmp4:4;
  tmp4 = newreg(dotnewreg);
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = tmp4 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:2;
  *:2 EA = tmp3;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S2_pstorerhnewf_io S2_pstorerhnewf_io_Pv4 S2_pstorerhnewf_io_Rs32 S2_pstorerhnewf_io_Nt8 S2_pstorerhnewf_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerhnewf_io_Pv4 & S2_pstorerhnewf_io_Rs32 & S2_pstorerhnewf_io_Nt8 & S2_pstorerhnewf_io_u6_1 & hasnew = 0                      unimpl

:S2_pstorerhnewf_io S2_pstorerhnewf_io_Pv4 S2_pstorerhnewf_io_Rs32 dotnewreg S2_pstorerhnewf_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S2_pstorerhnewf_io_Pv4 & S2_pstorerhnewf_io_Rs32 & S2_pstorerhnewf_io_Nt8 & S2_pstorerhnewf_io_u6_1 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S2_pstorerhnewf_io_Rs32 + S2_pstorerhnewf_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! S2_pstorerhnewf_io_Pv4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:2;
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = tmp5 s>> tmp8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp4 = tmp11:2;
  *:2 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S2_pstorerhnewf_pi S2_pstorerhnewf_pi_Rx32 S2_pstorerhnewf_pi_Pv4 S2_pstorerhnewf_pi_Nt8 S2_pstorerhnewf_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 0 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerhnewf_pi_Rx32 & S2_pstorerhnewf_pi_Pv4 & S2_pstorerhnewf_pi_Nt8 & S2_pstorerhnewf_pi_s4_1 & hasnew = 0                      unimpl

:S2_pstorerhnewf_pi S2_pstorerhnewf_pi_Rx32 S2_pstorerhnewf_pi_Pv4 dotnewreg S2_pstorerhnewf_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 0 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerhnewf_pi_Rx32 & S2_pstorerhnewf_pi_Pv4 & S2_pstorerhnewf_pi_Nt8 & S2_pstorerhnewf_pi_s4_1 & dotnewreg {
  local EA:4;
  EA = S2_pstorerhnewf_pi_Rx32;
  local tmp0:1;
  tmp0 = ! S2_pstorerhnewf_pi_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstorerhnewf_pi_Rx32 + S2_pstorerhnewf_pi_s4_1;
  S2_pstorerhnewf_pi_Rx32 = tmp3;
  local tmp4:2;
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = tmp5 s>> tmp8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp4 = tmp11:2;
  *:2 EA = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerhnewt_rr S4_pstorerhnewt_rr_Pv4 S4_pstorerhnewt_rr_Rs32 S4_pstorerhnewt_rr_Ru32 S4_pstorerhnewt_rr_Nt8 S4_pstorerhnewt_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerhnewt_rr_Pv4 & S4_pstorerhnewt_rr_Rs32 & S4_pstorerhnewt_rr_Ru32 & S4_pstorerhnewt_rr_Nt8 & S4_pstorerhnewt_rr_u2 & hasnew = 0                      unimpl

:S4_pstorerhnewt_rr S4_pstorerhnewt_rr_Pv4 S4_pstorerhnewt_rr_Rs32 S4_pstorerhnewt_rr_Ru32 dotnewreg S4_pstorerhnewt_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerhnewt_rr_Pv4 & S4_pstorerhnewt_rr_Rs32 & S4_pstorerhnewt_rr_Ru32 & S4_pstorerhnewt_rr_Nt8 & S4_pstorerhnewt_rr_u2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerhnewt_rr_Ru32 << S4_pstorerhnewt_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerhnewt_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = S4_pstorerhnewt_rr_Pv4;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:2;
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = tmp5 s>> tmp8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp4 = tmp11:2;
  *:2 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerhnewf_rr S4_pstorerhnewf_rr_Pv4 S4_pstorerhnewf_rr_Rs32 S4_pstorerhnewf_rr_Ru32 S4_pstorerhnewf_rr_Nt8 S4_pstorerhnewf_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerhnewf_rr_Pv4 & S4_pstorerhnewf_rr_Rs32 & S4_pstorerhnewf_rr_Ru32 & S4_pstorerhnewf_rr_Nt8 & S4_pstorerhnewf_rr_u2 & hasnew = 0                      unimpl

:S4_pstorerhnewf_rr S4_pstorerhnewf_rr_Pv4 S4_pstorerhnewf_rr_Rs32 S4_pstorerhnewf_rr_Ru32 dotnewreg S4_pstorerhnewf_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerhnewf_rr_Pv4 & S4_pstorerhnewf_rr_Rs32 & S4_pstorerhnewf_rr_Ru32 & S4_pstorerhnewf_rr_Nt8 & S4_pstorerhnewf_rr_u2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerhnewf_rr_Ru32 << S4_pstorerhnewf_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerhnewf_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = ! S4_pstorerhnewf_rr_Pv4;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:2;
  local tmp6:4;
  tmp6 = newreg(dotnewreg);
  local tmp7:4;
  tmp7 = 0;
  local tmp8:4;
  tmp8 = 16;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:4;
  tmp10 = tmp6 s>> tmp9;
  local tmp11:4;
  tmp11 = 65535;
  local tmp12:4;
  tmp12 = tmp10 & tmp11;
  tmp5 = tmp12:2;
  *:2 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerhnewtnew_io S4_pstorerhnewtnew_io_Pv4 S4_pstorerhnewtnew_io_Rs32 S4_pstorerhnewtnew_io_Nt8 S4_pstorerhnewtnew_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerhnewtnew_io_Pv4 & S4_pstorerhnewtnew_io_Rs32 & S4_pstorerhnewtnew_io_Nt8 & S4_pstorerhnewtnew_io_u6_1 & hasnew = 0                      unimpl

:S4_pstorerhnewtnew_io S4_pstorerhnewtnew_io_Pv4 S4_pstorerhnewtnew_io_Rs32 dotnewreg S4_pstorerhnewtnew_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerhnewtnew_io_Pv4 & S4_pstorerhnewtnew_io_Rs32 & S4_pstorerhnewtnew_io_Nt8 & S4_pstorerhnewtnew_io_u6_1 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerhnewtnew_io_Rs32 + S4_pstorerhnewtnew_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstorerhnewtnew_io_Pv4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:2;
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = tmp5 s>> tmp8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp4 = tmp11:2;
  *:2 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerhnewfnew_io S4_pstorerhnewfnew_io_Pv4 S4_pstorerhnewfnew_io_Rs32 S4_pstorerhnewfnew_io_Nt8 S4_pstorerhnewfnew_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerhnewfnew_io_Pv4 & S4_pstorerhnewfnew_io_Rs32 & S4_pstorerhnewfnew_io_Nt8 & S4_pstorerhnewfnew_io_u6_1 & hasnew = 0                      unimpl

:S4_pstorerhnewfnew_io S4_pstorerhnewfnew_io_Pv4 S4_pstorerhnewfnew_io_Rs32 dotnewreg S4_pstorerhnewfnew_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & S4_pstorerhnewfnew_io_Pv4 & S4_pstorerhnewfnew_io_Rs32 & S4_pstorerhnewfnew_io_Nt8 & S4_pstorerhnewfnew_io_u6_1 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerhnewfnew_io_Rs32 + S4_pstorerhnewfnew_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_pstorerhnewfnew_io_Pv4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:2;
  local tmp6:4;
  tmp6 = newreg(dotnewreg);
  local tmp7:4;
  tmp7 = 0;
  local tmp8:4;
  tmp8 = 16;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:4;
  tmp10 = tmp6 s>> tmp9;
  local tmp11:4;
  tmp11 = 65535;
  local tmp12:4;
  tmp12 = tmp10 & tmp11;
  tmp5 = tmp12:2;
  *:2 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerhnewtnew_rr S4_pstorerhnewtnew_rr_Pv4 S4_pstorerhnewtnew_rr_Rs32 S4_pstorerhnewtnew_rr_Ru32 S4_pstorerhnewtnew_rr_Nt8 S4_pstorerhnewtnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerhnewtnew_rr_Pv4 & S4_pstorerhnewtnew_rr_Rs32 & S4_pstorerhnewtnew_rr_Ru32 & S4_pstorerhnewtnew_rr_Nt8 & S4_pstorerhnewtnew_rr_u2 & hasnew = 0                      unimpl

:S4_pstorerhnewtnew_rr S4_pstorerhnewtnew_rr_Pv4 S4_pstorerhnewtnew_rr_Rs32 S4_pstorerhnewtnew_rr_Ru32 dotnewreg S4_pstorerhnewtnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerhnewtnew_rr_Pv4 & S4_pstorerhnewtnew_rr_Rs32 & S4_pstorerhnewtnew_rr_Ru32 & S4_pstorerhnewtnew_rr_Nt8 & S4_pstorerhnewtnew_rr_u2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerhnewtnew_rr_Ru32 << S4_pstorerhnewtnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerhnewtnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstorerhnewtnew_rr_Pv4);
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:2;
  local tmp6:4;
  tmp6 = newreg(dotnewreg);
  local tmp7:4;
  tmp7 = 0;
  local tmp8:4;
  tmp8 = 16;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:4;
  tmp10 = tmp6 s>> tmp9;
  local tmp11:4;
  tmp11 = 65535;
  local tmp12:4;
  tmp12 = tmp10 & tmp11;
  tmp5 = tmp12:2;
  *:2 EA = tmp5;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_pstorerhnewfnew_rr S4_pstorerhnewfnew_rr_Pv4 S4_pstorerhnewfnew_rr_Rs32 S4_pstorerhnewfnew_rr_Ru32 S4_pstorerhnewfnew_rr_Nt8 S4_pstorerhnewfnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerhnewfnew_rr_Pv4 & S4_pstorerhnewfnew_rr_Rs32 & S4_pstorerhnewfnew_rr_Ru32 & S4_pstorerhnewfnew_rr_Nt8 & S4_pstorerhnewfnew_rr_u2 & hasnew = 0                      unimpl

:S4_pstorerhnewfnew_rr S4_pstorerhnewfnew_rr_Pv4 S4_pstorerhnewfnew_rr_Rs32 S4_pstorerhnewfnew_rr_Ru32 dotnewreg S4_pstorerhnewfnew_rr_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_pstorerhnewfnew_rr_Pv4 & S4_pstorerhnewfnew_rr_Rs32 & S4_pstorerhnewfnew_rr_Ru32 & S4_pstorerhnewfnew_rr_Nt8 & S4_pstorerhnewfnew_rr_u2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_pstorerhnewfnew_rr_Ru32 << S4_pstorerhnewfnew_rr_u2;
  local tmp1:4;
  tmp1 = S4_pstorerhnewfnew_rr_Rs32 + tmp0;
  EA = tmp1;
  local tmp2:1;
  tmp2 = newreg(S4_pstorerhnewfnew_rr_Pv4);
  local tmp3:1;
  tmp3 = ! tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  local tmp6:2;
  local tmp7:4;
  tmp7 = newreg(dotnewreg);
  local tmp8:4;
  tmp8 = 0;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = tmp7 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp6 = tmp13:2;
  *:2 EA = tmp6;
  goto <done_6>;
<f_branch_6>
<done_6>
}

:S2_pstorerhnewtnew_pi S2_pstorerhnewtnew_pi_Rx32 S2_pstorerhnewtnew_pi_Pv4 S2_pstorerhnewtnew_pi_Nt8 S2_pstorerhnewtnew_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerhnewtnew_pi_Rx32 & S2_pstorerhnewtnew_pi_Pv4 & S2_pstorerhnewtnew_pi_Nt8 & S2_pstorerhnewtnew_pi_s4_1 & hasnew = 0                      unimpl

:S2_pstorerhnewtnew_pi S2_pstorerhnewtnew_pi_Rx32 S2_pstorerhnewtnew_pi_Pv4 dotnewreg S2_pstorerhnewtnew_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerhnewtnew_pi_Rx32 & S2_pstorerhnewtnew_pi_Pv4 & S2_pstorerhnewtnew_pi_Nt8 & S2_pstorerhnewtnew_pi_s4_1 & dotnewreg {
  local EA:4;
  EA = S2_pstorerhnewtnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstorerhnewtnew_pi_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = S2_pstorerhnewtnew_pi_Rx32 + S2_pstorerhnewtnew_pi_s4_1;
  S2_pstorerhnewtnew_pi_Rx32 = tmp3;
  local tmp4:2;
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = tmp5 s>> tmp8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp4 = tmp11:2;
  *:2 EA = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S2_pstorerhnewfnew_pi S2_pstorerhnewfnew_pi_Rx32 S2_pstorerhnewfnew_pi_Pv4 S2_pstorerhnewfnew_pi_Nt8 S2_pstorerhnewfnew_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerhnewfnew_pi_Rx32 & S2_pstorerhnewfnew_pi_Pv4 & S2_pstorerhnewfnew_pi_Nt8 & S2_pstorerhnewfnew_pi_s4_1 & hasnew = 0                      unimpl

:S2_pstorerhnewfnew_pi S2_pstorerhnewfnew_pi_Rx32 S2_pstorerhnewfnew_pi_Pv4 dotnewreg S2_pstorerhnewfnew_pi_s4_1 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S2_pstorerhnewfnew_pi_Rx32 & S2_pstorerhnewfnew_pi_Pv4 & S2_pstorerhnewfnew_pi_Nt8 & S2_pstorerhnewfnew_pi_s4_1 & dotnewreg {
  local EA:4;
  EA = S2_pstorerhnewfnew_pi_Rx32;
  local tmp0:1;
  tmp0 = newreg(S2_pstorerhnewfnew_pi_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = S2_pstorerhnewfnew_pi_Rx32 + S2_pstorerhnewfnew_pi_s4_1;
  S2_pstorerhnewfnew_pi_Rx32 = tmp4;
  local tmp5:2;
  local tmp6:4;
  tmp6 = newreg(dotnewreg);
  local tmp7:4;
  tmp7 = 0;
  local tmp8:4;
  tmp8 = 16;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:4;
  tmp10 = tmp6 s>> tmp9;
  local tmp11:4;
  tmp11 = 65535;
  local tmp12:4;
  tmp12 = tmp10 & tmp11;
  tmp5 = tmp12:2;
  *:2 EA = tmp5;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_pstorerhnewt_abs S4_pstorerhnewt_abs_Pv4 S4_pstorerhnewt_abs_Nt8 S4_pstorerhnewt_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerhnewt_abs_Pv4 & S4_pstorerhnewt_abs_Nt8 & S4_pstorerhnewt_abs_u6 & hasnew = 0                      unimpl

:S4_pstorerhnewt_abs S4_pstorerhnewt_abs_Pv4 dotnewreg S4_pstorerhnewt_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerhnewt_abs_Pv4 & S4_pstorerhnewt_abs_Nt8 & S4_pstorerhnewt_abs_u6 & dotnewreg {
  local EA:4;
  EA = S4_pstorerhnewt_abs_u6;
  local tmp0:1;
  tmp0 = S4_pstorerhnewt_abs_Pv4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:2;
  local tmp3:4;
  tmp3 = newreg(dotnewreg);
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 16;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:4;
  tmp7 = tmp3 s>> tmp6;
  local tmp8:4;
  tmp8 = 65535;
  local tmp9:4;
  tmp9 = tmp7 & tmp8;
  tmp2 = tmp9:2;
  *:2 EA = tmp2;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:S4_pstorerhnewf_abs S4_pstorerhnewf_abs_Pv4 S4_pstorerhnewf_abs_Nt8 S4_pstorerhnewf_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerhnewf_abs_Pv4 & S4_pstorerhnewf_abs_Nt8 & S4_pstorerhnewf_abs_u6 & hasnew = 0                      unimpl

:S4_pstorerhnewf_abs S4_pstorerhnewf_abs_Pv4 dotnewreg S4_pstorerhnewf_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerhnewf_abs_Pv4 & S4_pstorerhnewf_abs_Nt8 & S4_pstorerhnewf_abs_u6 & dotnewreg {
  local EA:4;
  EA = S4_pstorerhnewf_abs_u6;
  local tmp0:1;
  tmp0 = ! S4_pstorerhnewf_abs_Pv4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:2;
  local tmp4:4;
  tmp4 = newreg(dotnewreg);
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = tmp4 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:2;
  *:2 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerhnewtnew_abs S4_pstorerhnewtnew_abs_Pv4 S4_pstorerhnewtnew_abs_Nt8 S4_pstorerhnewtnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerhnewtnew_abs_Pv4 & S4_pstorerhnewtnew_abs_Nt8 & S4_pstorerhnewtnew_abs_u6 & hasnew = 0                      unimpl

:S4_pstorerhnewtnew_abs S4_pstorerhnewtnew_abs_Pv4 dotnewreg S4_pstorerhnewtnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerhnewtnew_abs_Pv4 & S4_pstorerhnewtnew_abs_Nt8 & S4_pstorerhnewtnew_abs_u6 & dotnewreg {
  local EA:4;
  EA = S4_pstorerhnewtnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstorerhnewtnew_abs_Pv4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:2;
  local tmp4:4;
  tmp4 = newreg(dotnewreg);
  local tmp5:4;
  tmp5 = 0;
  local tmp6:4;
  tmp6 = 16;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:4;
  tmp8 = tmp4 s>> tmp7;
  local tmp9:4;
  tmp9 = 65535;
  local tmp10:4;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:2;
  *:2 EA = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_pstorerhnewfnew_abs S4_pstorerhnewfnew_abs_Pv4 S4_pstorerhnewfnew_abs_Nt8 S4_pstorerhnewfnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerhnewfnew_abs_Pv4 & S4_pstorerhnewfnew_abs_Nt8 & S4_pstorerhnewfnew_abs_u6 & hasnew = 0                      unimpl

:S4_pstorerhnewfnew_abs S4_pstorerhnewfnew_abs_Pv4 dotnewreg S4_pstorerhnewfnew_abs_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 1 & b7 = 1 & b11 = 1 & b12 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & S4_pstorerhnewfnew_abs_Pv4 & S4_pstorerhnewfnew_abs_Nt8 & S4_pstorerhnewfnew_abs_u6 & dotnewreg {
  local EA:4;
  EA = S4_pstorerhnewfnew_abs_u6;
  local tmp0:1;
  tmp0 = newreg(S4_pstorerhnewfnew_abs_Pv4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:2;
  local tmp5:4;
  tmp5 = newreg(dotnewreg);
  local tmp6:4;
  tmp6 = 0;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:4;
  tmp9 = tmp5 s>> tmp8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = tmp9 & tmp10;
  tmp4 = tmp11:2;
  *:2 EA = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:L4_add_memopw_io L4_add_memopw_io_Rs32 L4_add_memopw_io_Rt32 L4_add_memopw_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_add_memopw_io_Rs32 & L4_add_memopw_io_Rt32 & L4_add_memopw_io_u6_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_add_memopw_io_Rs32 + L4_add_memopw_io_u6_2;
  EA = tmp0;
  local tmp:4;
  tmp = *:4 EA;
  local tmp1:4;
  tmp1 = tmp + L4_add_memopw_io_Rt32;
  tmp = tmp1;
  *:4 EA = tmp;
}

:L4_add_memopb_io L4_add_memopb_io_Rs32 L4_add_memopb_io_Rt32 L4_add_memopb_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_add_memopb_io_Rs32 & L4_add_memopb_io_Rt32 & L4_add_memopb_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_add_memopb_io_Rs32 + L4_add_memopb_io_u6_0;
  EA = tmp0;
  local tmp:4;
  tmp = *:1 EA;
  local tmp1:4;
  tmp1 = tmp + L4_add_memopb_io_Rt32;
  tmp = tmp1;
  *:1 EA = tmp;
}

:L4_add_memoph_io L4_add_memoph_io_Rs32 L4_add_memoph_io_Rt32 L4_add_memoph_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_add_memoph_io_Rs32 & L4_add_memoph_io_Rt32 & L4_add_memoph_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_add_memoph_io_Rs32 + L4_add_memoph_io_u6_1;
  EA = tmp0;
  local tmp:4;
  tmp = *:2 EA;
  local tmp1:4;
  tmp1 = tmp + L4_add_memoph_io_Rt32;
  tmp = tmp1;
  *:2 EA = tmp;
}

:L4_sub_memopw_io L4_sub_memopw_io_Rs32 L4_sub_memopw_io_Rt32 L4_sub_memopw_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_sub_memopw_io_Rs32 & L4_sub_memopw_io_Rt32 & L4_sub_memopw_io_u6_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_sub_memopw_io_Rs32 + L4_sub_memopw_io_u6_2;
  EA = tmp0;
  local tmp:4;
  tmp = *:4 EA;
  local tmp1:4;
  tmp1 = tmp - L4_sub_memopw_io_Rt32;
  tmp = tmp1;
  *:4 EA = tmp;
}

:L4_sub_memopb_io L4_sub_memopb_io_Rs32 L4_sub_memopb_io_Rt32 L4_sub_memopb_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_sub_memopb_io_Rs32 & L4_sub_memopb_io_Rt32 & L4_sub_memopb_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_sub_memopb_io_Rs32 + L4_sub_memopb_io_u6_0;
  EA = tmp0;
  local tmp:4;
  tmp = *:1 EA;
  local tmp1:4;
  tmp1 = tmp - L4_sub_memopb_io_Rt32;
  tmp = tmp1;
  *:1 EA = tmp;
}

:L4_sub_memoph_io L4_sub_memoph_io_Rs32 L4_sub_memoph_io_Rt32 L4_sub_memoph_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_sub_memoph_io_Rs32 & L4_sub_memoph_io_Rt32 & L4_sub_memoph_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_sub_memoph_io_Rs32 + L4_sub_memoph_io_u6_1;
  EA = tmp0;
  local tmp:4;
  tmp = *:2 EA;
  local tmp1:4;
  tmp1 = tmp - L4_sub_memoph_io_Rt32;
  tmp = tmp1;
  *:2 EA = tmp;
}

:L4_and_memopw_io L4_and_memopw_io_Rs32 L4_and_memopw_io_Rt32 L4_and_memopw_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_and_memopw_io_Rs32 & L4_and_memopw_io_Rt32 & L4_and_memopw_io_u6_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_and_memopw_io_Rs32 + L4_and_memopw_io_u6_2;
  EA = tmp0;
  local tmp:4;
  tmp = *:4 EA;
  local tmp1:4;
  tmp1 = tmp & L4_and_memopw_io_Rt32;
  tmp = tmp1;
  *:4 EA = tmp;
}

:L4_and_memopb_io L4_and_memopb_io_Rs32 L4_and_memopb_io_Rt32 L4_and_memopb_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_and_memopb_io_Rs32 & L4_and_memopb_io_Rt32 & L4_and_memopb_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_and_memopb_io_Rs32 + L4_and_memopb_io_u6_0;
  EA = tmp0;
  local tmp:4;
  tmp = *:1 EA;
  local tmp1:4;
  tmp1 = tmp & L4_and_memopb_io_Rt32;
  tmp = tmp1;
  *:1 EA = tmp;
}

:L4_and_memoph_io L4_and_memoph_io_Rs32 L4_and_memoph_io_Rt32 L4_and_memoph_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_and_memoph_io_Rs32 & L4_and_memoph_io_Rt32 & L4_and_memoph_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_and_memoph_io_Rs32 + L4_and_memoph_io_u6_1;
  EA = tmp0;
  local tmp:4;
  tmp = *:2 EA;
  local tmp1:4;
  tmp1 = tmp & L4_and_memoph_io_Rt32;
  tmp = tmp1;
  *:2 EA = tmp;
}

:L4_or_memopw_io L4_or_memopw_io_Rs32 L4_or_memopw_io_Rt32 L4_or_memopw_io_u6_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_or_memopw_io_Rs32 & L4_or_memopw_io_Rt32 & L4_or_memopw_io_u6_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_or_memopw_io_Rs32 + L4_or_memopw_io_u6_2;
  EA = tmp0;
  local tmp:4;
  tmp = *:4 EA;
  local tmp1:4;
  tmp1 = tmp | L4_or_memopw_io_Rt32;
  tmp = tmp1;
  *:4 EA = tmp;
}

:L4_or_memopb_io L4_or_memopb_io_Rs32 L4_or_memopb_io_Rt32 L4_or_memopb_io_u6_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_or_memopb_io_Rs32 & L4_or_memopb_io_Rt32 & L4_or_memopb_io_u6_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_or_memopb_io_Rs32 + L4_or_memopb_io_u6_0;
  EA = tmp0;
  local tmp:4;
  tmp = *:1 EA;
  local tmp1:4;
  tmp1 = tmp | L4_or_memopb_io_Rt32;
  tmp = tmp1;
  *:1 EA = tmp;
}

:L4_or_memoph_io L4_or_memoph_io_Rs32 L4_or_memoph_io_Rt32 L4_or_memoph_io_u6_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_or_memoph_io_Rs32 & L4_or_memoph_io_Rt32 & L4_or_memoph_io_u6_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_or_memoph_io_Rs32 + L4_or_memoph_io_u6_1;
  EA = tmp0;
  local tmp:4;
  tmp = *:2 EA;
  local tmp1:4;
  tmp1 = tmp | L4_or_memoph_io_Rt32;
  tmp = tmp1;
  *:2 EA = tmp;
}

:L4_iadd_memopw_io L4_iadd_memopw_io_Rs32 L4_iadd_memopw_io_u6_2 L4_iadd_memopw_io_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_iadd_memopw_io_Rs32 & L4_iadd_memopw_io_u6_2 & L4_iadd_memopw_io_U5 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_iadd_memopw_io_Rs32 + L4_iadd_memopw_io_u6_2;
  EA = tmp0;
  local tmp:4;
  tmp = *:4 EA;
  local tmp1:4;
  tmp1 = tmp + L4_iadd_memopw_io_U5;
  tmp = tmp1;
  *:4 EA = tmp;
}

:L4_iadd_memopb_io L4_iadd_memopb_io_Rs32 L4_iadd_memopb_io_u6_0 L4_iadd_memopb_io_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_iadd_memopb_io_Rs32 & L4_iadd_memopb_io_u6_0 & L4_iadd_memopb_io_U5 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_iadd_memopb_io_Rs32 + L4_iadd_memopb_io_u6_0;
  EA = tmp0;
  local tmp:4;
  tmp = *:1 EA;
  local tmp1:4;
  tmp1 = tmp + L4_iadd_memopb_io_U5;
  tmp = tmp1;
  *:1 EA = tmp;
}

:L4_iadd_memoph_io L4_iadd_memoph_io_Rs32 L4_iadd_memoph_io_u6_1 L4_iadd_memoph_io_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_iadd_memoph_io_Rs32 & L4_iadd_memoph_io_u6_1 & L4_iadd_memoph_io_U5 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_iadd_memoph_io_Rs32 + L4_iadd_memoph_io_u6_1;
  EA = tmp0;
  local tmp:4;
  tmp = *:2 EA;
  local tmp1:4;
  tmp1 = tmp + L4_iadd_memoph_io_U5;
  tmp = tmp1;
  *:2 EA = tmp;
}

:L4_isub_memopw_io L4_isub_memopw_io_Rs32 L4_isub_memopw_io_u6_2 L4_isub_memopw_io_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_isub_memopw_io_Rs32 & L4_isub_memopw_io_u6_2 & L4_isub_memopw_io_U5 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_isub_memopw_io_Rs32 + L4_isub_memopw_io_u6_2;
  EA = tmp0;
  local tmp:4;
  tmp = *:4 EA;
  local tmp1:4;
  tmp1 = tmp - L4_isub_memopw_io_U5;
  tmp = tmp1;
  *:4 EA = tmp;
}

:L4_isub_memopb_io L4_isub_memopb_io_Rs32 L4_isub_memopb_io_u6_0 L4_isub_memopb_io_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_isub_memopb_io_Rs32 & L4_isub_memopb_io_u6_0 & L4_isub_memopb_io_U5 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_isub_memopb_io_Rs32 + L4_isub_memopb_io_u6_0;
  EA = tmp0;
  local tmp:4;
  tmp = *:1 EA;
  local tmp1:4;
  tmp1 = tmp - L4_isub_memopb_io_U5;
  tmp = tmp1;
  *:1 EA = tmp;
}

:L4_isub_memoph_io L4_isub_memoph_io_Rs32 L4_isub_memoph_io_u6_1 L4_isub_memoph_io_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_isub_memoph_io_Rs32 & L4_isub_memoph_io_u6_1 & L4_isub_memoph_io_U5 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_isub_memoph_io_Rs32 + L4_isub_memoph_io_u6_1;
  EA = tmp0;
  local tmp:4;
  tmp = *:2 EA;
  local tmp1:4;
  tmp1 = tmp - L4_isub_memoph_io_U5;
  tmp = tmp1;
  *:2 EA = tmp;
}

:L4_iand_memopw_io L4_iand_memopw_io_Rs32 L4_iand_memopw_io_u6_2 L4_iand_memopw_io_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_iand_memopw_io_Rs32 & L4_iand_memopw_io_u6_2 & L4_iand_memopw_io_U5 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_iand_memopw_io_Rs32 + L4_iand_memopw_io_u6_2;
  EA = tmp0;
  local tmp:4;
  tmp = *:4 EA;
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = tmp1 << L4_iand_memopw_io_U5;
  local tmp3:4;
  tmp3 = ~ tmp2;
  local tmp4:4;
  tmp4 = tmp & tmp3;
  tmp = tmp4;
  *:4 EA = tmp;
}

:L4_iand_memopb_io L4_iand_memopb_io_Rs32 L4_iand_memopb_io_u6_0 L4_iand_memopb_io_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_iand_memopb_io_Rs32 & L4_iand_memopb_io_u6_0 & L4_iand_memopb_io_U5 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_iand_memopb_io_Rs32 + L4_iand_memopb_io_u6_0;
  EA = tmp0;
  local tmp:4;
  tmp = *:1 EA;
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = tmp1 << L4_iand_memopb_io_U5;
  local tmp3:4;
  tmp3 = ~ tmp2;
  local tmp4:4;
  tmp4 = tmp & tmp3;
  tmp = tmp4;
  *:1 EA = tmp;
}

:L4_iand_memoph_io L4_iand_memoph_io_Rs32 L4_iand_memoph_io_u6_1 L4_iand_memoph_io_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_iand_memoph_io_Rs32 & L4_iand_memoph_io_u6_1 & L4_iand_memoph_io_U5 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_iand_memoph_io_Rs32 + L4_iand_memoph_io_u6_1;
  EA = tmp0;
  local tmp:4;
  tmp = *:2 EA;
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = tmp1 << L4_iand_memoph_io_U5;
  local tmp3:4;
  tmp3 = ~ tmp2;
  local tmp4:4;
  tmp4 = tmp & tmp3;
  tmp = tmp4;
  *:2 EA = tmp;
}

:L4_ior_memopw_io L4_ior_memopw_io_Rs32 L4_ior_memopw_io_u6_2 L4_ior_memopw_io_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ior_memopw_io_Rs32 & L4_ior_memopw_io_u6_2 & L4_ior_memopw_io_U5 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ior_memopw_io_Rs32 + L4_ior_memopw_io_u6_2;
  EA = tmp0;
  local tmp:4;
  tmp = *:4 EA;
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = tmp1 << L4_ior_memopw_io_U5;
  local tmp3:4;
  tmp3 = tmp | tmp2;
  tmp = tmp3;
  *:4 EA = tmp;
}

:L4_ior_memopb_io L4_ior_memopb_io_Rs32 L4_ior_memopb_io_u6_0 L4_ior_memopb_io_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ior_memopb_io_Rs32 & L4_ior_memopb_io_u6_0 & L4_ior_memopb_io_U5 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ior_memopb_io_Rs32 + L4_ior_memopb_io_u6_0;
  EA = tmp0;
  local tmp:4;
  tmp = *:1 EA;
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = tmp1 << L4_ior_memopb_io_U5;
  local tmp3:4;
  tmp3 = tmp | tmp2;
  tmp = tmp3;
  *:1 EA = tmp;
}

:L4_ior_memoph_io L4_ior_memoph_io_Rs32 L4_ior_memoph_io_u6_1 L4_ior_memoph_io_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & L4_ior_memoph_io_Rs32 & L4_ior_memoph_io_u6_1 & L4_ior_memoph_io_U5 {
  local EA:4;
  local tmp0:4;
  tmp0 = L4_ior_memoph_io_Rs32 + L4_ior_memoph_io_u6_1;
  EA = tmp0;
  local tmp:4;
  tmp = *:2 EA;
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = tmp1 << L4_ior_memoph_io_U5;
  local tmp3:4;
  tmp3 = tmp | tmp2;
  tmp = tmp3;
  *:2 EA = tmp;
}

:S4_storeirbt_io S4_storeirbt_io_Pv4 S4_storeirbt_io_Rs32 S4_storeirbt_io_u6_0 S4_storeirbt_io_S6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeirbt_io_Pv4 & S4_storeirbt_io_Rs32 & S4_storeirbt_io_u6_0 & S4_storeirbt_io_S6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeirbt_io_Rs32 + S4_storeirbt_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = S4_storeirbt_io_Pv4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  *:1 EA = S4_storeirbt_io_S6;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_storeirbf_io S4_storeirbf_io_Pv4 S4_storeirbf_io_Rs32 S4_storeirbf_io_u6_0 S4_storeirbf_io_S6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeirbf_io_Pv4 & S4_storeirbf_io_Rs32 & S4_storeirbf_io_u6_0 & S4_storeirbf_io_S6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeirbf_io_Rs32 + S4_storeirbf_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! S4_storeirbf_io_Pv4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  *:1 EA = S4_storeirbf_io_S6;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_storeirbtnew_io S4_storeirbtnew_io_Pv4 S4_storeirbtnew_io_Rs32 S4_storeirbtnew_io_u6_0 S4_storeirbtnew_io_S6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeirbtnew_io_Pv4 & S4_storeirbtnew_io_Rs32 & S4_storeirbtnew_io_u6_0 & S4_storeirbtnew_io_S6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeirbtnew_io_Rs32 + S4_storeirbtnew_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_storeirbtnew_io_Pv4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  *:1 EA = S4_storeirbtnew_io_S6;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_storeirbfnew_io S4_storeirbfnew_io_Pv4 S4_storeirbfnew_io_Rs32 S4_storeirbfnew_io_u6_0 S4_storeirbfnew_io_S6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeirbfnew_io_Pv4 & S4_storeirbfnew_io_Rs32 & S4_storeirbfnew_io_u6_0 & S4_storeirbfnew_io_S6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeirbfnew_io_Rs32 + S4_storeirbfnew_io_u6_0;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_storeirbfnew_io_Pv4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  *:1 EA = S4_storeirbfnew_io_S6;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_storeirht_io S4_storeirht_io_Pv4 S4_storeirht_io_Rs32 S4_storeirht_io_u6_1 S4_storeirht_io_S6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeirht_io_Pv4 & S4_storeirht_io_Rs32 & S4_storeirht_io_u6_1 & S4_storeirht_io_S6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeirht_io_Rs32 + S4_storeirht_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = S4_storeirht_io_Pv4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  *:2 EA = S4_storeirht_io_S6;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_storeirhf_io S4_storeirhf_io_Pv4 S4_storeirhf_io_Rs32 S4_storeirhf_io_u6_1 S4_storeirhf_io_S6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeirhf_io_Pv4 & S4_storeirhf_io_Rs32 & S4_storeirhf_io_u6_1 & S4_storeirhf_io_S6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeirhf_io_Rs32 + S4_storeirhf_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! S4_storeirhf_io_Pv4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  *:2 EA = S4_storeirhf_io_S6;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_storeirhtnew_io S4_storeirhtnew_io_Pv4 S4_storeirhtnew_io_Rs32 S4_storeirhtnew_io_u6_1 S4_storeirhtnew_io_S6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeirhtnew_io_Pv4 & S4_storeirhtnew_io_Rs32 & S4_storeirhtnew_io_u6_1 & S4_storeirhtnew_io_S6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeirhtnew_io_Rs32 + S4_storeirhtnew_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_storeirhtnew_io_Pv4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  *:2 EA = S4_storeirhtnew_io_S6;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_storeirhfnew_io S4_storeirhfnew_io_Pv4 S4_storeirhfnew_io_Rs32 S4_storeirhfnew_io_u6_1 S4_storeirhfnew_io_S6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeirhfnew_io_Pv4 & S4_storeirhfnew_io_Rs32 & S4_storeirhfnew_io_u6_1 & S4_storeirhfnew_io_S6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeirhfnew_io_Rs32 + S4_storeirhfnew_io_u6_1;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_storeirhfnew_io_Pv4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  *:2 EA = S4_storeirhfnew_io_S6;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_storeirit_io S4_storeirit_io_Pv4 S4_storeirit_io_Rs32 S4_storeirit_io_u6_2 S4_storeirit_io_S6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeirit_io_Pv4 & S4_storeirit_io_Rs32 & S4_storeirit_io_u6_2 & S4_storeirit_io_S6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeirit_io_Rs32 + S4_storeirit_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = S4_storeirit_io_Pv4;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  *:4 EA = S4_storeirit_io_S6;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:S4_storeirif_io S4_storeirif_io_Pv4 S4_storeirif_io_Rs32 S4_storeirif_io_u6_2 S4_storeirif_io_S6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeirif_io_Pv4 & S4_storeirif_io_Rs32 & S4_storeirif_io_u6_2 & S4_storeirif_io_S6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeirif_io_Rs32 + S4_storeirif_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = ! S4_storeirif_io_Pv4;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  *:4 EA = S4_storeirif_io_S6;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_storeiritnew_io S4_storeiritnew_io_Pv4 S4_storeiritnew_io_Rs32 S4_storeiritnew_io_u6_2 S4_storeiritnew_io_S6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeiritnew_io_Pv4 & S4_storeiritnew_io_Rs32 & S4_storeiritnew_io_u6_2 & S4_storeiritnew_io_S6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeiritnew_io_Rs32 + S4_storeiritnew_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_storeiritnew_io_Pv4);
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  *:4 EA = S4_storeiritnew_io_S6;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:S4_storeirifnew_io S4_storeirifnew_io_Pv4 S4_storeirifnew_io_Rs32 S4_storeirifnew_io_u6_2 S4_storeirifnew_io_S6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeirifnew_io_Pv4 & S4_storeirifnew_io_Rs32 & S4_storeirifnew_io_u6_2 & S4_storeirifnew_io_S6 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeirifnew_io_Rs32 + S4_storeirifnew_io_u6_2;
  EA = tmp0;
  local tmp1:1;
  tmp1 = newreg(S4_storeirifnew_io_Pv4);
  local tmp2:1;
  tmp2 = ! tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  *:4 EA = S4_storeirifnew_io_S6;
  goto <done_5>;
<f_branch_5>
<done_5>
}

:S4_storeirb_io S4_storeirb_io_Rs32 S4_storeirb_io_u6_0 S4_storeirb_io_S8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeirb_io_Rs32 & S4_storeirb_io_u6_0 & S4_storeirb_io_S8 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeirb_io_Rs32 + S4_storeirb_io_u6_0;
  EA = tmp0;
  *:1 EA = S4_storeirb_io_S8;
}

:S4_storeirh_io S4_storeirh_io_Rs32 S4_storeirh_io_u6_1 S4_storeirh_io_S8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeirh_io_Rs32 & S4_storeirh_io_u6_1 & S4_storeirh_io_S8 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeirh_io_Rs32 + S4_storeirh_io_u6_1;
  EA = tmp0;
  *:2 EA = S4_storeirh_io_S8;
}

:S4_storeiri_io S4_storeiri_io_Rs32 S4_storeiri_io_u6_2 S4_storeiri_io_S8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 0 & S4_storeiri_io_Rs32 & S4_storeiri_io_u6_2 & S4_storeiri_io_S8 {
  local EA:4;
  local tmp0:4;
  tmp0 = S4_storeiri_io_Rs32 + S4_storeiri_io_u6_2;
  EA = tmp0;
  *:4 EA = S4_storeiri_io_S8;
}

:L2_loadrubgp L2_loadrubgp_Rd32 gp L2_loadrubgp_u16_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & L2_loadrubgp_Rd32 & L2_loadrubgp_u16_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = gp + L2_loadrubgp_u16_0;
  EA = tmp0;
  L2_loadrubgp_Rd32 = *:1 EA;
}

:L2_loadrbgp L2_loadrbgp_Rd32 gp L2_loadrbgp_u16_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & L2_loadrbgp_Rd32 & L2_loadrbgp_u16_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = gp + L2_loadrbgp_u16_0;
  EA = tmp0;
  L2_loadrbgp_Rd32 = *:1 EA;
}

:L2_loadruhgp L2_loadruhgp_Rd32 gp L2_loadruhgp_u16_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & L2_loadruhgp_Rd32 & L2_loadruhgp_u16_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = gp + L2_loadruhgp_u16_1;
  EA = tmp0;
  L2_loadruhgp_Rd32 = *:2 EA;
}

:L2_loadrhgp L2_loadrhgp_Rd32 gp L2_loadrhgp_u16_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & L2_loadrhgp_Rd32 & L2_loadrhgp_u16_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = gp + L2_loadrhgp_u16_1;
  EA = tmp0;
  L2_loadrhgp_Rd32 = *:2 EA;
}

:L2_loadrigp L2_loadrigp_Rd32 gp L2_loadrigp_u16_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & L2_loadrigp_Rd32 & L2_loadrigp_u16_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = gp + L2_loadrigp_u16_2;
  EA = tmp0;
  L2_loadrigp_Rd32 = *:4 EA;
}

:L2_loadrdgp L2_loadrdgp_Rdd32 gp L2_loadrdgp_u16_3 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & L2_loadrdgp_Rdd32 & L2_loadrdgp_u16_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = gp + L2_loadrdgp_u16_3;
  EA = tmp0;
  L2_loadrdgp_Rdd32 = *:8 EA;
}

:S2_storerbgp S2_storerbgp_Rt32 gp S2_storerbgp_u16_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & S2_storerbgp_Rt32 & S2_storerbgp_u16_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = gp + S2_storerbgp_u16_0;
  EA = tmp0;
  local tmp1:1;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 8;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:4;
  tmp5 = S2_storerbgp_Rt32 s>> tmp4;
  local tmp6:4;
  tmp6 = 255;
  local tmp7:4;
  tmp7 = tmp5 & tmp6;
  tmp1 = tmp7:1;
  *:1 EA = tmp1;
}

:S2_storerhgp S2_storerhgp_Rt32 gp S2_storerhgp_u16_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & S2_storerhgp_Rt32 & S2_storerhgp_u16_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = gp + S2_storerhgp_u16_1;
  EA = tmp0;
  local tmp1:2;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:4;
  tmp5 = S2_storerhgp_Rt32 s>> tmp4;
  local tmp6:4;
  tmp6 = 65535;
  local tmp7:4;
  tmp7 = tmp5 & tmp6;
  tmp1 = tmp7:2;
  *:2 EA = tmp1;
}

:S2_storerfgp S2_storerfgp_Rt32 gp S2_storerfgp_u16_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & S2_storerfgp_Rt32 & S2_storerfgp_u16_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = gp + S2_storerfgp_u16_1;
  EA = tmp0;
  local tmp1:2;
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:4;
  tmp5 = S2_storerfgp_Rt32 s>> tmp4;
  local tmp6:4;
  tmp6 = 65535;
  local tmp7:4;
  tmp7 = tmp5 & tmp6;
  tmp1 = tmp7:2;
  *:2 EA = tmp1;
}

:S2_storerigp S2_storerigp_Rt32 gp S2_storerigp_u16_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & S2_storerigp_Rt32 & S2_storerigp_u16_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = gp + S2_storerigp_u16_2;
  EA = tmp0;
  *:4 EA = S2_storerigp_Rt32;
}

:S2_storerdgp S2_storerdgp_Rtt32 gp S2_storerdgp_u16_3 is phase = 1 & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & S2_storerdgp_Rtt32 & S2_storerdgp_u16_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = gp + S2_storerdgp_u16_3;
  EA = tmp0;
  *:8 EA = S2_storerdgp_Rtt32;
}

:S2_storerinewgp S2_storerinewgp_Nt8 gp S2_storerinewgp_u16_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & S2_storerinewgp_Nt8 & S2_storerinewgp_u16_2 & hasnew = 0                      unimpl

:S2_storerinewgp dotnewreg gp S2_storerinewgp_u16_2 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & S2_storerinewgp_Nt8 & S2_storerinewgp_u16_2 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = gp + S2_storerinewgp_u16_2;
  EA = tmp0;
  local tmp1:4;
  tmp1 = newreg(dotnewreg);
  *:4 EA = tmp1;
}

:S2_storerbnewgp S2_storerbnewgp_Nt8 gp S2_storerbnewgp_u16_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & S2_storerbnewgp_Nt8 & S2_storerbnewgp_u16_0 & hasnew = 0                      unimpl

:S2_storerbnewgp dotnewreg gp S2_storerbnewgp_u16_0 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & S2_storerbnewgp_Nt8 & S2_storerbnewgp_u16_0 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = gp + S2_storerbnewgp_u16_0;
  EA = tmp0;
  local tmp1:1;
  local tmp2:4;
  tmp2 = newreg(dotnewreg);
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = tmp2 s>> tmp5;
  local tmp7:4;
  tmp7 = 255;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:1;
  *:1 EA = tmp1;
}

:S2_storerhnewgp S2_storerhnewgp_Nt8 gp S2_storerhnewgp_u16_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & S2_storerhnewgp_Nt8 & S2_storerhnewgp_u16_1 & hasnew = 0                      unimpl

:S2_storerhnewgp dotnewreg gp S2_storerhnewgp_u16_1 is phase = 1 & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 0 & gp & S2_storerhnewgp_Nt8 & S2_storerhnewgp_u16_1 & dotnewreg {
  local EA:4;
  local tmp0:4;
  tmp0 = gp + S2_storerhnewgp_u16_1;
  EA = tmp0;
  local tmp1:2;
  local tmp2:4;
  tmp2 = newreg(dotnewreg);
  local tmp3:4;
  tmp3 = 0;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:4;
  tmp6 = tmp2 s>> tmp5;
  local tmp7:4;
  tmp7 = 65535;
  local tmp8:4;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:2;
  *:2 EA = tmp1;
}

:C2_cmpeq C2_cmpeq_Pd4 C2_cmpeq_Rs32 C2_cmpeq_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b3 = 0 & b4 = 0 & b21 = 0 & b22 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & C2_cmpeq_Pd4 & C2_cmpeq_Rs32 & C2_cmpeq_Rt32 {
  local tmp0:1;
  tmp0 = C2_cmpeq_Rs32 == C2_cmpeq_Rt32;
  C2_cmpeq_Pd4 = tmp0;
}

:C2_cmpgt C2_cmpgt_Pd4 C2_cmpgt_Rs32 C2_cmpgt_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b3 = 0 & b4 = 0 & b21 = 0 & b22 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & C2_cmpgt_Pd4 & C2_cmpgt_Rs32 & C2_cmpgt_Rt32 {
  local tmp0:1;
  tmp0 = C2_cmpgt_Rs32 s> C2_cmpgt_Rt32;
  C2_cmpgt_Pd4 = tmp0;
}

:C2_cmpgtu C2_cmpgtu_Pd4 C2_cmpgtu_Rs32 C2_cmpgtu_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b3 = 0 & b4 = 0 & b21 = 1 & b22 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & C2_cmpgtu_Pd4 & C2_cmpgtu_Rs32 & C2_cmpgtu_Rt32 {
  local tmp0:4;
  tmp0 = C2_cmpgtu_Rs32;
  local tmp1:4;
  tmp1 = C2_cmpgtu_Rt32;
  local tmp2:1;
  tmp2 = tmp0 > tmp1;
  C2_cmpgtu_Pd4 = tmp2;
}

:C2_cmpeqp C2_cmpeqp_Pd4 C2_cmpeqp_Rss32 C2_cmpeqp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & C2_cmpeqp_Pd4 & C2_cmpeqp_Rss32 & C2_cmpeqp_Rtt32 {
  local tmp0:1;
  tmp0 = C2_cmpeqp_Rss32 == C2_cmpeqp_Rtt32;
  C2_cmpeqp_Pd4 = tmp0;
}

:C2_cmpgtp C2_cmpgtp_Pd4 C2_cmpgtp_Rss32 C2_cmpgtp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & C2_cmpgtp_Pd4 & C2_cmpgtp_Rss32 & C2_cmpgtp_Rtt32 {
  local tmp0:1;
  tmp0 = C2_cmpgtp_Rss32 s> C2_cmpgtp_Rtt32;
  C2_cmpgtp_Pd4 = tmp0;
}

:C2_cmpgtup C2_cmpgtup_Pd4 C2_cmpgtup_Rss32 C2_cmpgtup_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & C2_cmpgtup_Pd4 & C2_cmpgtup_Rss32 & C2_cmpgtup_Rtt32 {
  local tmp0:8;
  tmp0 = C2_cmpgtup_Rss32;
  local tmp1:8;
  tmp1 = C2_cmpgtup_Rtt32;
  local tmp2:1;
  tmp2 = tmp0 > tmp1;
  C2_cmpgtup_Pd4 = tmp2;
}

:A4_rcmpeqi A4_rcmpeqi_Rd32 A4_rcmpeqi_Rs32 A4_rcmpeqi_s8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_rcmpeqi_Rd32 & A4_rcmpeqi_Rs32 & A4_rcmpeqi_s8 {
  local tmp0:1;
  tmp0 = A4_rcmpeqi_Rs32 == A4_rcmpeqi_s8;
  A4_rcmpeqi_Rd32 = zext(tmp0);
}

:A4_rcmpneqi A4_rcmpneqi_Rd32 A4_rcmpneqi_Rs32 A4_rcmpneqi_s8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b21 = 1 & b22 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_rcmpneqi_Rd32 & A4_rcmpneqi_Rs32 & A4_rcmpneqi_s8 {
  local tmp0:1;
  tmp0 = A4_rcmpneqi_Rs32 != A4_rcmpneqi_s8;
  A4_rcmpneqi_Rd32 = zext(tmp0);
}

:A4_rcmpeq A4_rcmpeq_Rd32 A4_rcmpeq_Rs32 A4_rcmpeq_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A4_rcmpeq_Rd32 & A4_rcmpeq_Rs32 & A4_rcmpeq_Rt32 {
  local tmp0:1;
  tmp0 = A4_rcmpeq_Rs32 == A4_rcmpeq_Rt32;
  A4_rcmpeq_Rd32 = zext(tmp0);
}

:A4_rcmpneq A4_rcmpneq_Rd32 A4_rcmpneq_Rs32 A4_rcmpneq_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A4_rcmpneq_Rd32 & A4_rcmpneq_Rs32 & A4_rcmpneq_Rt32 {
  local tmp0:1;
  tmp0 = A4_rcmpneq_Rs32 != A4_rcmpneq_Rt32;
  A4_rcmpneq_Rd32 = zext(tmp0);
}

:C2_bitsset C2_bitsset_Pd4 C2_bitsset_Rs32 C2_bitsset_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & C2_bitsset_Pd4 & C2_bitsset_Rs32 & C2_bitsset_Rt32 {
  local tmp0:4;
  tmp0 = C2_bitsset_Rs32 & C2_bitsset_Rt32;
  local tmp1:1;
  tmp1 = tmp0 == C2_bitsset_Rt32;
  C2_bitsset_Pd4 = tmp1;
}

:C2_bitsclr C2_bitsclr_Pd4 C2_bitsclr_Rs32 C2_bitsclr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & C2_bitsclr_Pd4 & C2_bitsclr_Rs32 & C2_bitsclr_Rt32 {
  local tmp0:4;
  tmp0 = C2_bitsclr_Rs32 & C2_bitsclr_Rt32;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:1;
  tmp2 = tmp0 == tmp1;
  C2_bitsclr_Pd4 = tmp2;
}

:C4_nbitsset C4_nbitsset_Pd4 C4_nbitsset_Rs32 C4_nbitsset_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & C4_nbitsset_Pd4 & C4_nbitsset_Rs32 & C4_nbitsset_Rt32 {
  local tmp0:4;
  tmp0 = C4_nbitsset_Rs32 & C4_nbitsset_Rt32;
  local tmp1:1;
  tmp1 = tmp0 != C4_nbitsset_Rt32;
  C4_nbitsset_Pd4 = tmp1;
}

:C4_nbitsclr C4_nbitsclr_Pd4 C4_nbitsclr_Rs32 C4_nbitsclr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & C4_nbitsclr_Pd4 & C4_nbitsclr_Rs32 & C4_nbitsclr_Rt32 {
  local tmp0:4;
  tmp0 = C4_nbitsclr_Rs32 & C4_nbitsclr_Rt32;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:1;
  tmp2 = tmp0 != tmp1;
  C4_nbitsclr_Pd4 = tmp2;
}

:C2_cmpeqi C2_cmpeqi_Pd4 C2_cmpeqi_Rs32 C2_cmpeqi_s10 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b3 = 0 & b4 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & C2_cmpeqi_Pd4 & C2_cmpeqi_Rs32 & C2_cmpeqi_s10 {
  local tmp0:1;
  tmp0 = C2_cmpeqi_Rs32 == C2_cmpeqi_s10;
  C2_cmpeqi_Pd4 = tmp0;
}

:C2_cmpgti C2_cmpgti_Pd4 C2_cmpgti_Rs32 C2_cmpgti_s10 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b3 = 0 & b4 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & C2_cmpgti_Pd4 & C2_cmpgti_Rs32 & C2_cmpgti_s10 {
  local tmp0:1;
  tmp0 = C2_cmpgti_Rs32 s> C2_cmpgti_s10;
  C2_cmpgti_Pd4 = tmp0;
}

:C2_cmpgtui C2_cmpgtui_Pd4 C2_cmpgtui_Rs32 C2_cmpgtui_u9 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b3 = 0 & b4 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & C2_cmpgtui_Pd4 & C2_cmpgtui_Rs32 & C2_cmpgtui_u9 {
  local tmp0:4;
  tmp0 = C2_cmpgtui_Rs32;
  local tmp1:4;
  tmp1 = C2_cmpgtui_u9;
  local tmp2:1;
  tmp2 = tmp0 > tmp1;
  C2_cmpgtui_Pd4 = tmp2;
}

:C2_bitsclri C2_bitsclri_Pd4 C2_bitsclri_Rs32 C2_bitsclri_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & C2_bitsclri_Pd4 & C2_bitsclri_Rs32 & C2_bitsclri_u6 {
  local tmp0:4;
  tmp0 = C2_bitsclri_Rs32 & C2_bitsclri_u6;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:1;
  tmp2 = tmp0 == tmp1;
  C2_bitsclri_Pd4 = tmp2;
}

:C4_nbitsclri C4_nbitsclri_Pd4 C4_nbitsclri_Rs32 C4_nbitsclri_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & C4_nbitsclri_Pd4 & C4_nbitsclri_Rs32 & C4_nbitsclri_u6 {
  local tmp0:4;
  tmp0 = C4_nbitsclri_Rs32 & C4_nbitsclri_u6;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:1;
  tmp2 = tmp0 != tmp1;
  C4_nbitsclri_Pd4 = tmp2;
}

:C4_cmpneqi C4_cmpneqi_Pd4 C4_cmpneqi_Rs32 C4_cmpneqi_s10 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b3 = 0 & b4 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & C4_cmpneqi_Pd4 & C4_cmpneqi_Rs32 & C4_cmpneqi_s10 {
  local tmp0:1;
  tmp0 = C4_cmpneqi_Rs32 != C4_cmpneqi_s10;
  C4_cmpneqi_Pd4 = tmp0;
}

:C4_cmpltei C4_cmpltei_Pd4 C4_cmpltei_Rs32 C4_cmpltei_s10 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b3 = 0 & b4 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & C4_cmpltei_Pd4 & C4_cmpltei_Rs32 & C4_cmpltei_s10 {
  local tmp0:1;
  tmp0 = C4_cmpltei_Rs32 s<= C4_cmpltei_s10;
  C4_cmpltei_Pd4 = tmp0;
}

:C4_cmplteui C4_cmplteui_Pd4 C4_cmplteui_Rs32 C4_cmplteui_u9 is phase = 1 & Parse != 0b00 & subinsn = 0 & b2 = 0 & b3 = 0 & b4 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & C4_cmplteui_Pd4 & C4_cmplteui_Rs32 & C4_cmplteui_u9 {
  local tmp0:4;
  tmp0 = C4_cmplteui_Rs32;
  local tmp1:4;
  tmp1 = C4_cmplteui_u9;
  local tmp2:1;
  tmp2 = tmp0 <= tmp1;
  C4_cmplteui_Pd4 = tmp2;
}

:C4_cmpneq C4_cmpneq_Pd4 C4_cmpneq_Rs32 C4_cmpneq_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b3 = 0 & b4 = 1 & b21 = 0 & b22 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & C4_cmpneq_Pd4 & C4_cmpneq_Rs32 & C4_cmpneq_Rt32 {
  local tmp0:1;
  tmp0 = C4_cmpneq_Rs32 != C4_cmpneq_Rt32;
  C4_cmpneq_Pd4 = tmp0;
}

:C4_cmplte C4_cmplte_Pd4 C4_cmplte_Rs32 C4_cmplte_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b3 = 0 & b4 = 1 & b21 = 0 & b22 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & C4_cmplte_Pd4 & C4_cmplte_Rs32 & C4_cmplte_Rt32 {
  local tmp0:1;
  tmp0 = C4_cmplte_Rs32 s<= C4_cmplte_Rt32;
  C4_cmplte_Pd4 = tmp0;
}

:C4_cmplteu C4_cmplteu_Pd4 C4_cmplteu_Rs32 C4_cmplteu_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b2 = 0 & b3 = 0 & b4 = 1 & b21 = 1 & b22 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & C4_cmplteu_Pd4 & C4_cmplteu_Rs32 & C4_cmplteu_Rt32 {
  local tmp0:4;
  tmp0 = C4_cmplteu_Rs32;
  local tmp1:4;
  tmp1 = C4_cmplteu_Rt32;
  local tmp2:1;
  tmp2 = tmp0 <= tmp1;
  C4_cmplteu_Pd4 = tmp2;
}

:C2_and C2_and_Pd4 C2_and_Pt4 C2_and_Ps4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C2_and_Pd4 & C2_and_Pt4 & C2_and_Ps4 {
  local tmp0:1;
  tmp0 = C2_and_Ps4 & C2_and_Pt4;
  C2_and_Pd4 = tmp0;
}

:C2_or C2_or_Pd4 C2_or_Pt4 C2_or_Ps4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C2_or_Pd4 & C2_or_Pt4 & C2_or_Ps4 {
  local tmp0:1;
  tmp0 = C2_or_Ps4 | C2_or_Pt4;
  C2_or_Pd4 = tmp0;
}

:C2_xor C2_xor_Pd4 C2_xor_Ps4 C2_xor_Pt4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C2_xor_Pd4 & C2_xor_Ps4 & C2_xor_Pt4 {
  local tmp0:1;
  tmp0 = C2_xor_Ps4 ^ C2_xor_Pt4;
  C2_xor_Pd4 = tmp0;
}

:C2_andn C2_andn_Pd4 C2_andn_Pt4 C2_andn_Ps4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C2_andn_Pd4 & C2_andn_Pt4 & C2_andn_Ps4 {
  local tmp0:1;
  tmp0 = ~ C2_andn_Ps4;
  local tmp1:1;
  tmp1 = C2_andn_Pt4 & tmp0;
  C2_andn_Pd4 = tmp1;
}

:C2_not C2_not_Pd4 C2_not_Ps4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C2_not_Pd4 & C2_not_Ps4 {
  local tmp0:1;
  tmp0 = ~ C2_not_Ps4;
  C2_not_Pd4 = tmp0;
}

:C2_orn C2_orn_Pd4 C2_orn_Pt4 C2_orn_Ps4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C2_orn_Pd4 & C2_orn_Pt4 & C2_orn_Ps4 {
  local tmp0:1;
  tmp0 = ~ C2_orn_Ps4;
  local tmp1:1;
  tmp1 = C2_orn_Pt4 | tmp0;
  C2_orn_Pd4 = tmp1;
}

:C4_and_and C4_and_and_Pd4 C4_and_and_Ps4 C4_and_and_Pt4 C4_and_and_Pu4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C4_and_and_Pd4 & C4_and_and_Ps4 & C4_and_and_Pt4 & C4_and_and_Pu4 {
  local tmp0:1;
  tmp0 = C4_and_and_Ps4 & C4_and_and_Pt4;
  local tmp1:1;
  tmp1 = tmp0 & C4_and_and_Pu4;
  C4_and_and_Pd4 = tmp1;
}

:C4_and_or C4_and_or_Pd4 C4_and_or_Ps4 C4_and_or_Pt4 C4_and_or_Pu4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C4_and_or_Pd4 & C4_and_or_Ps4 & C4_and_or_Pt4 & C4_and_or_Pu4 {
  local tmp0:1;
  tmp0 = C4_and_or_Pt4 | C4_and_or_Pu4;
  local tmp1:1;
  tmp1 = C4_and_or_Ps4 & tmp0;
  C4_and_or_Pd4 = tmp1;
}

:C4_or_and C4_or_and_Pd4 C4_or_and_Ps4 C4_or_and_Pt4 C4_or_and_Pu4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C4_or_and_Pd4 & C4_or_and_Ps4 & C4_or_and_Pt4 & C4_or_and_Pu4 {
  local tmp0:1;
  tmp0 = C4_or_and_Pt4 & C4_or_and_Pu4;
  local tmp1:1;
  tmp1 = C4_or_and_Ps4 | tmp0;
  C4_or_and_Pd4 = tmp1;
}

:C4_or_or C4_or_or_Pd4 C4_or_or_Ps4 C4_or_or_Pt4 C4_or_or_Pu4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C4_or_or_Pd4 & C4_or_or_Ps4 & C4_or_or_Pt4 & C4_or_or_Pu4 {
  local tmp0:1;
  tmp0 = C4_or_or_Ps4 | C4_or_or_Pt4;
  local tmp1:1;
  tmp1 = tmp0 | C4_or_or_Pu4;
  C4_or_or_Pd4 = tmp1;
}

:C4_and_andn C4_and_andn_Pd4 C4_and_andn_Ps4 C4_and_andn_Pt4 C4_and_andn_Pu4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C4_and_andn_Pd4 & C4_and_andn_Ps4 & C4_and_andn_Pt4 & C4_and_andn_Pu4 {
  local tmp0:1;
  tmp0 = C4_and_andn_Ps4 & C4_and_andn_Pt4;
  local tmp1:1;
  tmp1 = ~ C4_and_andn_Pu4;
  local tmp2:1;
  tmp2 = tmp0 & tmp1;
  C4_and_andn_Pd4 = tmp2;
}

:C4_and_orn C4_and_orn_Pd4 C4_and_orn_Ps4 C4_and_orn_Pt4 C4_and_orn_Pu4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C4_and_orn_Pd4 & C4_and_orn_Ps4 & C4_and_orn_Pt4 & C4_and_orn_Pu4 {
  local tmp0:1;
  tmp0 = ~ C4_and_orn_Pu4;
  local tmp1:1;
  tmp1 = C4_and_orn_Pt4 | tmp0;
  local tmp2:1;
  tmp2 = C4_and_orn_Ps4 & tmp1;
  C4_and_orn_Pd4 = tmp2;
}

:C4_or_andn C4_or_andn_Pd4 C4_or_andn_Ps4 C4_or_andn_Pt4 C4_or_andn_Pu4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C4_or_andn_Pd4 & C4_or_andn_Ps4 & C4_or_andn_Pt4 & C4_or_andn_Pu4 {
  local tmp0:1;
  tmp0 = ~ C4_or_andn_Pu4;
  local tmp1:1;
  tmp1 = C4_or_andn_Pt4 & tmp0;
  local tmp2:1;
  tmp2 = C4_or_andn_Ps4 | tmp1;
  C4_or_andn_Pd4 = tmp2;
}

:C4_or_orn C4_or_orn_Pd4 C4_or_orn_Ps4 C4_or_orn_Pt4 C4_or_orn_Pu4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 1 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C4_or_orn_Pd4 & C4_or_orn_Ps4 & C4_or_orn_Pt4 & C4_or_orn_Pu4 {
  local tmp0:1;
  tmp0 = C4_or_orn_Ps4 | C4_or_orn_Pt4;
  local tmp1:1;
  tmp1 = ~ C4_or_orn_Pu4;
  local tmp2:1;
  tmp2 = tmp0 | tmp1;
  C4_or_orn_Pd4 = tmp2;
}

:C2_any8 C2_any8_Pd4 C2_any8_Ps4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C2_any8_Pd4 & C2_any8_Ps4 {
  local tmp0:1;
  tmp0 = C2_any8_Ps4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = 255;
  C2_any8_Pd4 = tmp2:1;
  goto <done_2>;
<f_branch_2>
  local tmp3:4;
  tmp3 = 0;
  C2_any8_Pd4 = tmp3:1;
<done_2>
}

:C2_all8 C2_all8_Pd4 C2_all8_Ps4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C2_all8_Pd4 & C2_all8_Ps4 {
  local tmp0:4;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = zext(C2_all8_Ps4);
  local tmp2:1;
  tmp2 = tmp1 == tmp0;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:4;
  tmp5 = 255;
  C2_all8_Pd4 = tmp5:1;
  goto <done_5>;
<f_branch_5>
  local tmp6:4;
  tmp6 = 0;
  C2_all8_Pd4 = tmp6:1;
<done_5>
}

:C2_vitpack C2_vitpack_Rd32 C2_vitpack_Ps4 C2_vitpack_Pt4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & C2_vitpack_Rd32 & C2_vitpack_Ps4 & C2_vitpack_Pt4 {
  local tmp0:4;
  tmp0 = 85;
  local tmp1:4;
  tmp1 = zext(C2_vitpack_Ps4);
  local tmp2:4;
  tmp2 = tmp1 & tmp0;
  local tmp3:4;
  tmp3 = 170;
  local tmp4:4;
  tmp4 = zext(C2_vitpack_Pt4);
  local tmp5:4;
  tmp5 = tmp4 & tmp3;
  local tmp6:4;
  tmp6 = tmp2 | tmp5;
  C2_vitpack_Rd32 = tmp6;
}

:C2_mux C2_mux_Rd32 C2_mux_Pu4 C2_mux_Rs32 C2_mux_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & C2_mux_Rd32 & C2_mux_Pu4 & C2_mux_Rs32 & C2_mux_Rt32 {
  local tmp0:1;
  tmp0 = C2_mux_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  C2_mux_Rd32 = C2_mux_Rs32;
  goto <done_2>;
<f_branch_2>
  C2_mux_Rd32 = C2_mux_Rt32;
<done_2>
}

:C2_cmovenewit C2_cmovenewit_Rd32 C2_cmovenewit_Pu4 C2_cmovenewit_s12 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b20 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & C2_cmovenewit_Rd32 & C2_cmovenewit_Pu4 & C2_cmovenewit_s12 {
  local tmp0:1;
  tmp0 = newreg(C2_cmovenewit_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  C2_cmovenewit_Rd32 = C2_cmovenewit_s12;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:C2_cmovenewif C2_cmovenewif_Rd32 C2_cmovenewif_Pu4 C2_cmovenewif_s12 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b20 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & C2_cmovenewif_Rd32 & C2_cmovenewif_Pu4 & C2_cmovenewif_s12 {
  local tmp0:1;
  tmp0 = newreg(C2_cmovenewif_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  C2_cmovenewif_Rd32 = C2_cmovenewif_s12;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:C2_cmoveit C2_cmoveit_Rd32 C2_cmoveit_Pu4 C2_cmoveit_s12 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & C2_cmoveit_Rd32 & C2_cmoveit_Pu4 & C2_cmoveit_s12 {
  local tmp0:1;
  tmp0 = C2_cmoveit_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  C2_cmoveit_Rd32 = C2_cmoveit_s12;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:C2_cmoveif C2_cmoveif_Rd32 C2_cmoveif_Pu4 C2_cmoveif_s12 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b20 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & C2_cmoveif_Rd32 & C2_cmoveif_Pu4 & C2_cmoveif_s12 {
  local tmp0:1;
  tmp0 = ! C2_cmoveif_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  C2_cmoveif_Rd32 = C2_cmoveif_s12;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:C2_muxii C2_muxii_Rd32 C2_muxii_Pu4 C2_muxii_s8 C2_muxii_S8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & C2_muxii_Rd32 & C2_muxii_Pu4 & C2_muxii_s8 & C2_muxii_S8 {
  local tmp0:1;
  tmp0 = C2_muxii_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  C2_muxii_Rd32 = C2_muxii_s8;
  goto <done_2>;
<f_branch_2>
  C2_muxii_Rd32 = C2_muxii_S8;
<done_2>
}

:C2_muxir C2_muxir_Rd32 C2_muxir_Pu4 C2_muxir_Rs32 C2_muxir_s8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & C2_muxir_Rd32 & C2_muxir_Pu4 & C2_muxir_Rs32 & C2_muxir_s8 {
  local tmp0:1;
  tmp0 = C2_muxir_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  C2_muxir_Rd32 = C2_muxir_Rs32;
  goto <done_2>;
<f_branch_2>
  C2_muxir_Rd32 = C2_muxir_s8;
<done_2>
}

:C2_muxri C2_muxri_Rd32 C2_muxri_Pu4 C2_muxri_Rs32 C2_muxri_s8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & C2_muxri_Rd32 & C2_muxri_Pu4 & C2_muxri_Rs32 & C2_muxri_s8 {
  local tmp0:1;
  tmp0 = C2_muxri_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  C2_muxri_Rd32 = C2_muxri_s8;
  goto <done_2>;
<f_branch_2>
  C2_muxri_Rd32 = C2_muxri_Rs32;
<done_2>
}

:C2_vmux C2_vmux_Rdd32 C2_vmux_Pu4 C2_vmux_Rss32 C2_vmux_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & C2_vmux_Rdd32 & C2_vmux_Pu4 & C2_vmux_Rss32 & C2_vmux_Rtt32 unimpl

:C2_mask C2_mask_Rdd32 C2_mask_Pt4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & C2_mask_Rdd32 & C2_mask_Pt4 unimpl

:A2_vcmpbeq A2_vcmpbeq_Pd4 A2_vcmpbeq_Rss32 A2_vcmpbeq_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vcmpbeq_Pd4 & A2_vcmpbeq_Rss32 & A2_vcmpbeq_Rtt32 unimpl

:A4_vcmpbeqi A4_vcmpbeqi_Pd4 A4_vcmpbeqi_Rss32 A4_vcmpbeqi_u8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vcmpbeqi_Pd4 & A4_vcmpbeqi_Rss32 & A4_vcmpbeqi_u8 unimpl

:A4_vcmpbeq_any A4_vcmpbeq_any_Pd4 A4_vcmpbeq_any_Rss32 A4_vcmpbeq_any_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vcmpbeq_any_Pd4 & A4_vcmpbeq_any_Rss32 & A4_vcmpbeq_any_Rtt32 {
  local i:4;
  local tmp0:4;
  tmp0 = 0;
  A4_vcmpbeq_any_Pd4 = tmp0:1;
  local tmp1:1;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 8;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = A4_vcmpbeq_any_Rss32 s>> tmp5;
  local tmp7:4;
  tmp7 = 255;
  local tmp8:8;
  tmp8 = zext(tmp7);
  local tmp9:8;
  tmp9 = tmp6 & tmp8;
  tmp1 = tmp9:1;
  local tmp10:1;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 8;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = A4_vcmpbeq_any_Rtt32 s>> tmp14;
  local tmp16:4;
  tmp16 = 255;
  local tmp17:8;
  tmp17 = zext(tmp16);
  local tmp18:8;
  tmp18 = tmp15 & tmp17;
  tmp10 = tmp18:1;
  local tmp19:1;
  tmp19 = tmp1 == tmp10;
  local tmp20:1;
  tmp20 = tmp19;
  if (tmp20) goto <t_branch_22>;
  goto <done_22>;
<t_branch_22>
  local tmp22:4;
  tmp22 = 255;
  A4_vcmpbeq_any_Pd4 = tmp22:1;
  goto <done_22>;
<done_22>
  local tmp23:1;
  local tmp24:4;
  tmp24 = 1;
  local tmp25:4;
  tmp25 = 8;
  local tmp26:4;
  tmp26 = tmp24 * tmp25;
  local tmp27:8;
  tmp27 = zext(tmp26);
  local tmp28:8;
  tmp28 = A4_vcmpbeq_any_Rss32 s>> tmp27;
  local tmp29:4;
  tmp29 = 255;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp28 & tmp30;
  tmp23 = tmp31:1;
  local tmp32:1;
  local tmp33:4;
  tmp33 = 1;
  local tmp34:4;
  tmp34 = 8;
  local tmp35:4;
  tmp35 = tmp33 * tmp34;
  local tmp36:8;
  tmp36 = zext(tmp35);
  local tmp37:8;
  tmp37 = A4_vcmpbeq_any_Rtt32 s>> tmp36;
  local tmp38:4;
  tmp38 = 255;
  local tmp39:8;
  tmp39 = zext(tmp38);
  local tmp40:8;
  tmp40 = tmp37 & tmp39;
  tmp32 = tmp40:1;
  local tmp41:1;
  tmp41 = tmp23 == tmp32;
  local tmp42:1;
  tmp42 = tmp41;
  if (tmp42) goto <t_branch_44>;
  goto <done_44>;
<t_branch_44>
  local tmp44:4;
  tmp44 = 255;
  A4_vcmpbeq_any_Pd4 = tmp44:1;
  goto <done_44>;
<done_44>
  local tmp45:1;
  local tmp46:4;
  tmp46 = 2;
  local tmp47:4;
  tmp47 = 8;
  local tmp48:4;
  tmp48 = tmp46 * tmp47;
  local tmp49:8;
  tmp49 = zext(tmp48);
  local tmp50:8;
  tmp50 = A4_vcmpbeq_any_Rss32 s>> tmp49;
  local tmp51:4;
  tmp51 = 255;
  local tmp52:8;
  tmp52 = zext(tmp51);
  local tmp53:8;
  tmp53 = tmp50 & tmp52;
  tmp45 = tmp53:1;
  local tmp54:1;
  local tmp55:4;
  tmp55 = 2;
  local tmp56:4;
  tmp56 = 8;
  local tmp57:4;
  tmp57 = tmp55 * tmp56;
  local tmp58:8;
  tmp58 = zext(tmp57);
  local tmp59:8;
  tmp59 = A4_vcmpbeq_any_Rtt32 s>> tmp58;
  local tmp60:4;
  tmp60 = 255;
  local tmp61:8;
  tmp61 = zext(tmp60);
  local tmp62:8;
  tmp62 = tmp59 & tmp61;
  tmp54 = tmp62:1;
  local tmp63:1;
  tmp63 = tmp45 == tmp54;
  local tmp64:1;
  tmp64 = tmp63;
  if (tmp64) goto <t_branch_66>;
  goto <done_66>;
<t_branch_66>
  local tmp66:4;
  tmp66 = 255;
  A4_vcmpbeq_any_Pd4 = tmp66:1;
  goto <done_66>;
<done_66>
  local tmp67:1;
  local tmp68:4;
  tmp68 = 3;
  local tmp69:4;
  tmp69 = 8;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = A4_vcmpbeq_any_Rss32 s>> tmp71;
  local tmp73:4;
  tmp73 = 255;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = tmp72 & tmp74;
  tmp67 = tmp75:1;
  local tmp76:1;
  local tmp77:4;
  tmp77 = 3;
  local tmp78:4;
  tmp78 = 8;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = A4_vcmpbeq_any_Rtt32 s>> tmp80;
  local tmp82:4;
  tmp82 = 255;
  local tmp83:8;
  tmp83 = zext(tmp82);
  local tmp84:8;
  tmp84 = tmp81 & tmp83;
  tmp76 = tmp84:1;
  local tmp85:1;
  tmp85 = tmp67 == tmp76;
  local tmp86:1;
  tmp86 = tmp85;
  if (tmp86) goto <t_branch_88>;
  goto <done_88>;
<t_branch_88>
  local tmp88:4;
  tmp88 = 255;
  A4_vcmpbeq_any_Pd4 = tmp88:1;
  goto <done_88>;
<done_88>
  local tmp89:1;
  local tmp90:4;
  tmp90 = 4;
  local tmp91:4;
  tmp91 = 8;
  local tmp92:4;
  tmp92 = tmp90 * tmp91;
  local tmp93:8;
  tmp93 = zext(tmp92);
  local tmp94:8;
  tmp94 = A4_vcmpbeq_any_Rss32 s>> tmp93;
  local tmp95:4;
  tmp95 = 255;
  local tmp96:8;
  tmp96 = zext(tmp95);
  local tmp97:8;
  tmp97 = tmp94 & tmp96;
  tmp89 = tmp97:1;
  local tmp98:1;
  local tmp99:4;
  tmp99 = 4;
  local tmp100:4;
  tmp100 = 8;
  local tmp101:4;
  tmp101 = tmp99 * tmp100;
  local tmp102:8;
  tmp102 = zext(tmp101);
  local tmp103:8;
  tmp103 = A4_vcmpbeq_any_Rtt32 s>> tmp102;
  local tmp104:4;
  tmp104 = 255;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp103 & tmp105;
  tmp98 = tmp106:1;
  local tmp107:1;
  tmp107 = tmp89 == tmp98;
  local tmp108:1;
  tmp108 = tmp107;
  if (tmp108) goto <t_branch_110>;
  goto <done_110>;
<t_branch_110>
  local tmp110:4;
  tmp110 = 255;
  A4_vcmpbeq_any_Pd4 = tmp110:1;
  goto <done_110>;
<done_110>
  local tmp111:1;
  local tmp112:4;
  tmp112 = 5;
  local tmp113:4;
  tmp113 = 8;
  local tmp114:4;
  tmp114 = tmp112 * tmp113;
  local tmp115:8;
  tmp115 = zext(tmp114);
  local tmp116:8;
  tmp116 = A4_vcmpbeq_any_Rss32 s>> tmp115;
  local tmp117:4;
  tmp117 = 255;
  local tmp118:8;
  tmp118 = zext(tmp117);
  local tmp119:8;
  tmp119 = tmp116 & tmp118;
  tmp111 = tmp119:1;
  local tmp120:1;
  local tmp121:4;
  tmp121 = 5;
  local tmp122:4;
  tmp122 = 8;
  local tmp123:4;
  tmp123 = tmp121 * tmp122;
  local tmp124:8;
  tmp124 = zext(tmp123);
  local tmp125:8;
  tmp125 = A4_vcmpbeq_any_Rtt32 s>> tmp124;
  local tmp126:4;
  tmp126 = 255;
  local tmp127:8;
  tmp127 = zext(tmp126);
  local tmp128:8;
  tmp128 = tmp125 & tmp127;
  tmp120 = tmp128:1;
  local tmp129:1;
  tmp129 = tmp111 == tmp120;
  local tmp130:1;
  tmp130 = tmp129;
  if (tmp130) goto <t_branch_132>;
  goto <done_132>;
<t_branch_132>
  local tmp132:4;
  tmp132 = 255;
  A4_vcmpbeq_any_Pd4 = tmp132:1;
  goto <done_132>;
<done_132>
  local tmp133:1;
  local tmp134:4;
  tmp134 = 6;
  local tmp135:4;
  tmp135 = 8;
  local tmp136:4;
  tmp136 = tmp134 * tmp135;
  local tmp137:8;
  tmp137 = zext(tmp136);
  local tmp138:8;
  tmp138 = A4_vcmpbeq_any_Rss32 s>> tmp137;
  local tmp139:4;
  tmp139 = 255;
  local tmp140:8;
  tmp140 = zext(tmp139);
  local tmp141:8;
  tmp141 = tmp138 & tmp140;
  tmp133 = tmp141:1;
  local tmp142:1;
  local tmp143:4;
  tmp143 = 6;
  local tmp144:4;
  tmp144 = 8;
  local tmp145:4;
  tmp145 = tmp143 * tmp144;
  local tmp146:8;
  tmp146 = zext(tmp145);
  local tmp147:8;
  tmp147 = A4_vcmpbeq_any_Rtt32 s>> tmp146;
  local tmp148:4;
  tmp148 = 255;
  local tmp149:8;
  tmp149 = zext(tmp148);
  local tmp150:8;
  tmp150 = tmp147 & tmp149;
  tmp142 = tmp150:1;
  local tmp151:1;
  tmp151 = tmp133 == tmp142;
  local tmp152:1;
  tmp152 = tmp151;
  if (tmp152) goto <t_branch_154>;
  goto <done_154>;
<t_branch_154>
  local tmp154:4;
  tmp154 = 255;
  A4_vcmpbeq_any_Pd4 = tmp154:1;
  goto <done_154>;
<done_154>
  local tmp155:1;
  local tmp156:4;
  tmp156 = 7;
  local tmp157:4;
  tmp157 = 8;
  local tmp158:4;
  tmp158 = tmp156 * tmp157;
  local tmp159:8;
  tmp159 = zext(tmp158);
  local tmp160:8;
  tmp160 = A4_vcmpbeq_any_Rss32 s>> tmp159;
  local tmp161:4;
  tmp161 = 255;
  local tmp162:8;
  tmp162 = zext(tmp161);
  local tmp163:8;
  tmp163 = tmp160 & tmp162;
  tmp155 = tmp163:1;
  local tmp164:1;
  local tmp165:4;
  tmp165 = 7;
  local tmp166:4;
  tmp166 = 8;
  local tmp167:4;
  tmp167 = tmp165 * tmp166;
  local tmp168:8;
  tmp168 = zext(tmp167);
  local tmp169:8;
  tmp169 = A4_vcmpbeq_any_Rtt32 s>> tmp168;
  local tmp170:4;
  tmp170 = 255;
  local tmp171:8;
  tmp171 = zext(tmp170);
  local tmp172:8;
  tmp172 = tmp169 & tmp171;
  tmp164 = tmp172:1;
  local tmp173:1;
  tmp173 = tmp155 == tmp164;
  local tmp174:1;
  tmp174 = tmp173;
  if (tmp174) goto <t_branch_176>;
  goto <done_176>;
<t_branch_176>
  local tmp176:4;
  tmp176 = 255;
  A4_vcmpbeq_any_Pd4 = tmp176:1;
  goto <done_176>;
<done_176>
}

:A6_vcmpbeq_notany A6_vcmpbeq_notany_Pd4 A6_vcmpbeq_notany_Rss32 A6_vcmpbeq_notany_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A6_vcmpbeq_notany_Pd4 & A6_vcmpbeq_notany_Rss32 & A6_vcmpbeq_notany_Rtt32 {
  local i:4;
  local tmp0:4;
  tmp0 = 0;
  A6_vcmpbeq_notany_Pd4 = tmp0:1;
  local tmp1:1;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 8;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = A6_vcmpbeq_notany_Rss32 s>> tmp5;
  local tmp7:4;
  tmp7 = 255;
  local tmp8:8;
  tmp8 = zext(tmp7);
  local tmp9:8;
  tmp9 = tmp6 & tmp8;
  tmp1 = tmp9:1;
  local tmp10:1;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 8;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = A6_vcmpbeq_notany_Rtt32 s>> tmp14;
  local tmp16:4;
  tmp16 = 255;
  local tmp17:8;
  tmp17 = zext(tmp16);
  local tmp18:8;
  tmp18 = tmp15 & tmp17;
  tmp10 = tmp18:1;
  local tmp19:1;
  tmp19 = tmp1 == tmp10;
  local tmp20:1;
  tmp20 = tmp19;
  if (tmp20) goto <t_branch_22>;
  goto <done_22>;
<t_branch_22>
  local tmp22:4;
  tmp22 = 255;
  A6_vcmpbeq_notany_Pd4 = tmp22:1;
  goto <done_22>;
<done_22>
  local tmp23:1;
  local tmp24:4;
  tmp24 = 1;
  local tmp25:4;
  tmp25 = 8;
  local tmp26:4;
  tmp26 = tmp24 * tmp25;
  local tmp27:8;
  tmp27 = zext(tmp26);
  local tmp28:8;
  tmp28 = A6_vcmpbeq_notany_Rss32 s>> tmp27;
  local tmp29:4;
  tmp29 = 255;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp28 & tmp30;
  tmp23 = tmp31:1;
  local tmp32:1;
  local tmp33:4;
  tmp33 = 1;
  local tmp34:4;
  tmp34 = 8;
  local tmp35:4;
  tmp35 = tmp33 * tmp34;
  local tmp36:8;
  tmp36 = zext(tmp35);
  local tmp37:8;
  tmp37 = A6_vcmpbeq_notany_Rtt32 s>> tmp36;
  local tmp38:4;
  tmp38 = 255;
  local tmp39:8;
  tmp39 = zext(tmp38);
  local tmp40:8;
  tmp40 = tmp37 & tmp39;
  tmp32 = tmp40:1;
  local tmp41:1;
  tmp41 = tmp23 == tmp32;
  local tmp42:1;
  tmp42 = tmp41;
  if (tmp42) goto <t_branch_44>;
  goto <done_44>;
<t_branch_44>
  local tmp44:4;
  tmp44 = 255;
  A6_vcmpbeq_notany_Pd4 = tmp44:1;
  goto <done_44>;
<done_44>
  local tmp45:1;
  local tmp46:4;
  tmp46 = 2;
  local tmp47:4;
  tmp47 = 8;
  local tmp48:4;
  tmp48 = tmp46 * tmp47;
  local tmp49:8;
  tmp49 = zext(tmp48);
  local tmp50:8;
  tmp50 = A6_vcmpbeq_notany_Rss32 s>> tmp49;
  local tmp51:4;
  tmp51 = 255;
  local tmp52:8;
  tmp52 = zext(tmp51);
  local tmp53:8;
  tmp53 = tmp50 & tmp52;
  tmp45 = tmp53:1;
  local tmp54:1;
  local tmp55:4;
  tmp55 = 2;
  local tmp56:4;
  tmp56 = 8;
  local tmp57:4;
  tmp57 = tmp55 * tmp56;
  local tmp58:8;
  tmp58 = zext(tmp57);
  local tmp59:8;
  tmp59 = A6_vcmpbeq_notany_Rtt32 s>> tmp58;
  local tmp60:4;
  tmp60 = 255;
  local tmp61:8;
  tmp61 = zext(tmp60);
  local tmp62:8;
  tmp62 = tmp59 & tmp61;
  tmp54 = tmp62:1;
  local tmp63:1;
  tmp63 = tmp45 == tmp54;
  local tmp64:1;
  tmp64 = tmp63;
  if (tmp64) goto <t_branch_66>;
  goto <done_66>;
<t_branch_66>
  local tmp66:4;
  tmp66 = 255;
  A6_vcmpbeq_notany_Pd4 = tmp66:1;
  goto <done_66>;
<done_66>
  local tmp67:1;
  local tmp68:4;
  tmp68 = 3;
  local tmp69:4;
  tmp69 = 8;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = A6_vcmpbeq_notany_Rss32 s>> tmp71;
  local tmp73:4;
  tmp73 = 255;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = tmp72 & tmp74;
  tmp67 = tmp75:1;
  local tmp76:1;
  local tmp77:4;
  tmp77 = 3;
  local tmp78:4;
  tmp78 = 8;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = A6_vcmpbeq_notany_Rtt32 s>> tmp80;
  local tmp82:4;
  tmp82 = 255;
  local tmp83:8;
  tmp83 = zext(tmp82);
  local tmp84:8;
  tmp84 = tmp81 & tmp83;
  tmp76 = tmp84:1;
  local tmp85:1;
  tmp85 = tmp67 == tmp76;
  local tmp86:1;
  tmp86 = tmp85;
  if (tmp86) goto <t_branch_88>;
  goto <done_88>;
<t_branch_88>
  local tmp88:4;
  tmp88 = 255;
  A6_vcmpbeq_notany_Pd4 = tmp88:1;
  goto <done_88>;
<done_88>
  local tmp89:1;
  local tmp90:4;
  tmp90 = 4;
  local tmp91:4;
  tmp91 = 8;
  local tmp92:4;
  tmp92 = tmp90 * tmp91;
  local tmp93:8;
  tmp93 = zext(tmp92);
  local tmp94:8;
  tmp94 = A6_vcmpbeq_notany_Rss32 s>> tmp93;
  local tmp95:4;
  tmp95 = 255;
  local tmp96:8;
  tmp96 = zext(tmp95);
  local tmp97:8;
  tmp97 = tmp94 & tmp96;
  tmp89 = tmp97:1;
  local tmp98:1;
  local tmp99:4;
  tmp99 = 4;
  local tmp100:4;
  tmp100 = 8;
  local tmp101:4;
  tmp101 = tmp99 * tmp100;
  local tmp102:8;
  tmp102 = zext(tmp101);
  local tmp103:8;
  tmp103 = A6_vcmpbeq_notany_Rtt32 s>> tmp102;
  local tmp104:4;
  tmp104 = 255;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp103 & tmp105;
  tmp98 = tmp106:1;
  local tmp107:1;
  tmp107 = tmp89 == tmp98;
  local tmp108:1;
  tmp108 = tmp107;
  if (tmp108) goto <t_branch_110>;
  goto <done_110>;
<t_branch_110>
  local tmp110:4;
  tmp110 = 255;
  A6_vcmpbeq_notany_Pd4 = tmp110:1;
  goto <done_110>;
<done_110>
  local tmp111:1;
  local tmp112:4;
  tmp112 = 5;
  local tmp113:4;
  tmp113 = 8;
  local tmp114:4;
  tmp114 = tmp112 * tmp113;
  local tmp115:8;
  tmp115 = zext(tmp114);
  local tmp116:8;
  tmp116 = A6_vcmpbeq_notany_Rss32 s>> tmp115;
  local tmp117:4;
  tmp117 = 255;
  local tmp118:8;
  tmp118 = zext(tmp117);
  local tmp119:8;
  tmp119 = tmp116 & tmp118;
  tmp111 = tmp119:1;
  local tmp120:1;
  local tmp121:4;
  tmp121 = 5;
  local tmp122:4;
  tmp122 = 8;
  local tmp123:4;
  tmp123 = tmp121 * tmp122;
  local tmp124:8;
  tmp124 = zext(tmp123);
  local tmp125:8;
  tmp125 = A6_vcmpbeq_notany_Rtt32 s>> tmp124;
  local tmp126:4;
  tmp126 = 255;
  local tmp127:8;
  tmp127 = zext(tmp126);
  local tmp128:8;
  tmp128 = tmp125 & tmp127;
  tmp120 = tmp128:1;
  local tmp129:1;
  tmp129 = tmp111 == tmp120;
  local tmp130:1;
  tmp130 = tmp129;
  if (tmp130) goto <t_branch_132>;
  goto <done_132>;
<t_branch_132>
  local tmp132:4;
  tmp132 = 255;
  A6_vcmpbeq_notany_Pd4 = tmp132:1;
  goto <done_132>;
<done_132>
  local tmp133:1;
  local tmp134:4;
  tmp134 = 6;
  local tmp135:4;
  tmp135 = 8;
  local tmp136:4;
  tmp136 = tmp134 * tmp135;
  local tmp137:8;
  tmp137 = zext(tmp136);
  local tmp138:8;
  tmp138 = A6_vcmpbeq_notany_Rss32 s>> tmp137;
  local tmp139:4;
  tmp139 = 255;
  local tmp140:8;
  tmp140 = zext(tmp139);
  local tmp141:8;
  tmp141 = tmp138 & tmp140;
  tmp133 = tmp141:1;
  local tmp142:1;
  local tmp143:4;
  tmp143 = 6;
  local tmp144:4;
  tmp144 = 8;
  local tmp145:4;
  tmp145 = tmp143 * tmp144;
  local tmp146:8;
  tmp146 = zext(tmp145);
  local tmp147:8;
  tmp147 = A6_vcmpbeq_notany_Rtt32 s>> tmp146;
  local tmp148:4;
  tmp148 = 255;
  local tmp149:8;
  tmp149 = zext(tmp148);
  local tmp150:8;
  tmp150 = tmp147 & tmp149;
  tmp142 = tmp150:1;
  local tmp151:1;
  tmp151 = tmp133 == tmp142;
  local tmp152:1;
  tmp152 = tmp151;
  if (tmp152) goto <t_branch_154>;
  goto <done_154>;
<t_branch_154>
  local tmp154:4;
  tmp154 = 255;
  A6_vcmpbeq_notany_Pd4 = tmp154:1;
  goto <done_154>;
<done_154>
  local tmp155:1;
  local tmp156:4;
  tmp156 = 7;
  local tmp157:4;
  tmp157 = 8;
  local tmp158:4;
  tmp158 = tmp156 * tmp157;
  local tmp159:8;
  tmp159 = zext(tmp158);
  local tmp160:8;
  tmp160 = A6_vcmpbeq_notany_Rss32 s>> tmp159;
  local tmp161:4;
  tmp161 = 255;
  local tmp162:8;
  tmp162 = zext(tmp161);
  local tmp163:8;
  tmp163 = tmp160 & tmp162;
  tmp155 = tmp163:1;
  local tmp164:1;
  local tmp165:4;
  tmp165 = 7;
  local tmp166:4;
  tmp166 = 8;
  local tmp167:4;
  tmp167 = tmp165 * tmp166;
  local tmp168:8;
  tmp168 = zext(tmp167);
  local tmp169:8;
  tmp169 = A6_vcmpbeq_notany_Rtt32 s>> tmp168;
  local tmp170:4;
  tmp170 = 255;
  local tmp171:8;
  tmp171 = zext(tmp170);
  local tmp172:8;
  tmp172 = tmp169 & tmp171;
  tmp164 = tmp172:1;
  local tmp173:1;
  tmp173 = tmp155 == tmp164;
  local tmp174:1;
  tmp174 = tmp173;
  if (tmp174) goto <t_branch_176>;
  goto <done_176>;
<t_branch_176>
  local tmp176:4;
  tmp176 = 255;
  A6_vcmpbeq_notany_Pd4 = tmp176:1;
  goto <done_176>;
<done_176>
  local tmp177:1;
  tmp177 = ~ A6_vcmpbeq_notany_Pd4;
  A6_vcmpbeq_notany_Pd4 = tmp177;
}

:A2_vcmpbgtu A2_vcmpbgtu_Pd4 A2_vcmpbgtu_Rss32 A2_vcmpbgtu_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vcmpbgtu_Pd4 & A2_vcmpbgtu_Rss32 & A2_vcmpbgtu_Rtt32 unimpl

:A4_vcmpbgtui A4_vcmpbgtui_Pd4 A4_vcmpbgtui_Rss32 A4_vcmpbgtui_u7 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vcmpbgtui_Pd4 & A4_vcmpbgtui_Rss32 & A4_vcmpbgtui_u7 unimpl

:A4_vcmpbgt A4_vcmpbgt_Pd4 A4_vcmpbgt_Rss32 A4_vcmpbgt_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vcmpbgt_Pd4 & A4_vcmpbgt_Rss32 & A4_vcmpbgt_Rtt32 unimpl

:A4_vcmpbgti A4_vcmpbgti_Pd4 A4_vcmpbgti_Rss32 A4_vcmpbgti_s8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vcmpbgti_Pd4 & A4_vcmpbgti_Rss32 & A4_vcmpbgti_s8 unimpl

:A4_cmpbeq A4_cmpbeq_Pd4 A4_cmpbeq_Rs32 A4_cmpbeq_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_cmpbeq_Pd4 & A4_cmpbeq_Rs32 & A4_cmpbeq_Rt32 {
  local tmp0:1;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A4_cmpbeq_Rs32 s>> tmp3;
  local tmp5:4;
  tmp5 = 255;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:1;
  local tmp7:1;
  local tmp8:4;
  tmp8 = 0;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A4_cmpbeq_Rt32 s>> tmp10;
  local tmp12:4;
  tmp12 = 255;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:1;
  local tmp14:1;
  tmp14 = tmp0 == tmp7;
  A4_cmpbeq_Pd4 = tmp14;
}

:A4_cmpbeqi A4_cmpbeqi_Pd4 A4_cmpbeqi_Rs32 A4_cmpbeqi_u8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b21 = 0 & b22 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_cmpbeqi_Pd4 & A4_cmpbeqi_Rs32 & A4_cmpbeqi_u8 {
  local tmp0:1;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A4_cmpbeqi_Rs32 s>> tmp3;
  local tmp5:4;
  tmp5 = 255;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:1;
  local tmp7:4;
  tmp7 = sext(tmp0);
  local tmp8:1;
  tmp8 = tmp7 == A4_cmpbeqi_u8;
  A4_cmpbeqi_Pd4 = tmp8;
}

:A4_cmpbgtu A4_cmpbgtu_Pd4 A4_cmpbgtu_Rs32 A4_cmpbgtu_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_cmpbgtu_Pd4 & A4_cmpbgtu_Rs32 & A4_cmpbgtu_Rt32 {
  local tmp0:1;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A4_cmpbgtu_Rs32 s>> tmp3;
  local tmp5:4;
  tmp5 = 255;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:1;
  local tmp7:1;
  local tmp8:4;
  tmp8 = 0;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A4_cmpbgtu_Rt32 s>> tmp10;
  local tmp12:4;
  tmp12 = 255;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:1;
  local tmp14:1;
  tmp14 = tmp0 > tmp7;
  A4_cmpbgtu_Pd4 = tmp14;
}

:A4_cmpbgtui A4_cmpbgtui_Pd4 A4_cmpbgtui_Rs32 A4_cmpbgtui_u7 is phase = 1 & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b12 = 0 & b21 = 0 & b22 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_cmpbgtui_Pd4 & A4_cmpbgtui_Rs32 & A4_cmpbgtui_u7 {
  local tmp0:1;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A4_cmpbgtui_Rs32 s>> tmp3;
  local tmp5:4;
  tmp5 = 255;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:1;
  local tmp7:4;
  tmp7 = A4_cmpbgtui_u7;
  local tmp8:4;
  tmp8 = sext(tmp0);
  local tmp9:1;
  tmp9 = tmp8 > tmp7;
  A4_cmpbgtui_Pd4 = tmp9;
}

:A4_cmpbgt A4_cmpbgt_Pd4 A4_cmpbgt_Rs32 A4_cmpbgt_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_cmpbgt_Pd4 & A4_cmpbgt_Rs32 & A4_cmpbgt_Rt32 {
  local tmp0:1;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A4_cmpbgt_Rs32 s>> tmp3;
  local tmp5:4;
  tmp5 = 255;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:1;
  local tmp7:1;
  local tmp8:4;
  tmp8 = 0;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A4_cmpbgt_Rt32 s>> tmp10;
  local tmp12:4;
  tmp12 = 255;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:1;
  local tmp14:1;
  tmp14 = tmp0 s> tmp7;
  A4_cmpbgt_Pd4 = tmp14;
}

:A4_cmpbgti A4_cmpbgti_Pd4 A4_cmpbgti_Rs32 A4_cmpbgti_s8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 0 & b21 = 1 & b22 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_cmpbgti_Pd4 & A4_cmpbgti_Rs32 & A4_cmpbgti_s8 {
  local tmp0:1;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A4_cmpbgti_Rs32 s>> tmp3;
  local tmp5:4;
  tmp5 = 255;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:1;
  local tmp7:4;
  tmp7 = zext(tmp0);
  local tmp8:1;
  tmp8 = tmp7 s> A4_cmpbgti_s8;
  A4_cmpbgti_Pd4 = tmp8;
}

:A2_vcmpheq A2_vcmpheq_Pd4 A2_vcmpheq_Rss32 A2_vcmpheq_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vcmpheq_Pd4 & A2_vcmpheq_Rss32 & A2_vcmpheq_Rtt32 unimpl

:A2_vcmphgt A2_vcmphgt_Pd4 A2_vcmphgt_Rss32 A2_vcmphgt_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vcmphgt_Pd4 & A2_vcmphgt_Rss32 & A2_vcmphgt_Rtt32 unimpl

:A2_vcmphgtu A2_vcmphgtu_Pd4 A2_vcmphgtu_Rss32 A2_vcmphgtu_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vcmphgtu_Pd4 & A2_vcmphgtu_Rss32 & A2_vcmphgtu_Rtt32 unimpl

:A4_vcmpheqi A4_vcmpheqi_Pd4 A4_vcmpheqi_Rss32 A4_vcmpheqi_s8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vcmpheqi_Pd4 & A4_vcmpheqi_Rss32 & A4_vcmpheqi_s8 unimpl

:A4_vcmphgti A4_vcmphgti_Pd4 A4_vcmphgti_Rss32 A4_vcmphgti_s8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vcmphgti_Pd4 & A4_vcmphgti_Rss32 & A4_vcmphgti_s8 unimpl

:A4_vcmphgtui A4_vcmphgtui_Pd4 A4_vcmphgtui_Rss32 A4_vcmphgtui_u7 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vcmphgtui_Pd4 & A4_vcmphgtui_Rss32 & A4_vcmphgtui_u7 unimpl

:A4_cmpheq A4_cmpheq_Pd4 A4_cmpheq_Rs32 A4_cmpheq_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_cmpheq_Pd4 & A4_cmpheq_Rs32 & A4_cmpheq_Rt32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A4_cmpheq_Rs32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:2;
  local tmp8:4;
  tmp8 = 0;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A4_cmpheq_Rt32 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:2;
  local tmp14:1;
  tmp14 = tmp0 == tmp7;
  A4_cmpheq_Pd4 = tmp14;
}

:A4_cmphgt A4_cmphgt_Pd4 A4_cmphgt_Rs32 A4_cmphgt_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_cmphgt_Pd4 & A4_cmphgt_Rs32 & A4_cmphgt_Rt32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A4_cmphgt_Rs32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:2;
  local tmp8:4;
  tmp8 = 0;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A4_cmphgt_Rt32 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:2;
  local tmp14:1;
  tmp14 = tmp0 s> tmp7;
  A4_cmphgt_Pd4 = tmp14;
}

:A4_cmphgtu A4_cmphgtu_Pd4 A4_cmphgtu_Rs32 A4_cmphgtu_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_cmphgtu_Pd4 & A4_cmphgtu_Rs32 & A4_cmphgtu_Rt32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A4_cmphgtu_Rs32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:2;
  local tmp8:4;
  tmp8 = 0;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A4_cmphgtu_Rt32 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:2;
  local tmp14:1;
  tmp14 = tmp0 > tmp7;
  A4_cmphgtu_Pd4 = tmp14;
}

:A4_cmpheqi A4_cmpheqi_Pd4 A4_cmpheqi_Rs32 A4_cmpheqi_s8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b21 = 0 & b22 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_cmpheqi_Pd4 & A4_cmpheqi_Rs32 & A4_cmpheqi_s8 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A4_cmpheqi_Rs32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:4;
  tmp7 = zext(tmp0);
  local tmp8:1;
  tmp8 = tmp7 == A4_cmpheqi_s8;
  A4_cmpheqi_Pd4 = tmp8;
}

:A4_cmphgti A4_cmphgti_Pd4 A4_cmphgti_Rs32 A4_cmphgti_s8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b21 = 1 & b22 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_cmphgti_Pd4 & A4_cmphgti_Rs32 & A4_cmphgti_s8 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A4_cmphgti_Rs32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:4;
  tmp7 = zext(tmp0);
  local tmp8:1;
  tmp8 = tmp7 s> A4_cmphgti_s8;
  A4_cmphgti_Pd4 = tmp8;
}

:A4_cmphgtui A4_cmphgtui_Pd4 A4_cmphgtui_Rs32 A4_cmphgtui_u7 is phase = 1 & Parse != 0b00 & subinsn = 0 & b3 = 1 & b4 = 0 & b12 = 0 & b21 = 0 & b22 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_cmphgtui_Pd4 & A4_cmphgtui_Rs32 & A4_cmphgtui_u7 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A4_cmphgtui_Rs32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:4;
  tmp7 = A4_cmphgtui_u7;
  local tmp8:4;
  tmp8 = sext(tmp0);
  local tmp9:1;
  tmp9 = tmp8 > tmp7;
  A4_cmphgtui_Pd4 = tmp9;
}

:A2_vcmpweq A2_vcmpweq_Pd4 A2_vcmpweq_Rss32 A2_vcmpweq_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vcmpweq_Pd4 & A2_vcmpweq_Rss32 & A2_vcmpweq_Rtt32 unimpl

:A2_vcmpwgt A2_vcmpwgt_Pd4 A2_vcmpwgt_Rss32 A2_vcmpwgt_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vcmpwgt_Pd4 & A2_vcmpwgt_Rss32 & A2_vcmpwgt_Rtt32 unimpl

:A2_vcmpwgtu A2_vcmpwgtu_Pd4 A2_vcmpwgtu_Rss32 A2_vcmpwgtu_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vcmpwgtu_Pd4 & A2_vcmpwgtu_Rss32 & A2_vcmpwgtu_Rtt32 unimpl

:A4_vcmpweqi A4_vcmpweqi_Pd4 A4_vcmpweqi_Rss32 A4_vcmpweqi_s8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vcmpweqi_Pd4 & A4_vcmpweqi_Rss32 & A4_vcmpweqi_s8 unimpl

:A4_vcmpwgti A4_vcmpwgti_Pd4 A4_vcmpwgti_Rss32 A4_vcmpwgti_s8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vcmpwgti_Pd4 & A4_vcmpwgti_Rss32 & A4_vcmpwgti_s8 unimpl

:A4_vcmpwgtui A4_vcmpwgtui_Pd4 A4_vcmpwgtui_Rss32 A4_vcmpwgtui_u7 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 1 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vcmpwgtui_Pd4 & A4_vcmpwgtui_Rss32 & A4_vcmpwgtui_u7 unimpl

:A4_boundscheck_hi A4_boundscheck_hi_Pd4 A4_boundscheck_hi_Rss32 A4_boundscheck_hi_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_boundscheck_hi_Pd4 & A4_boundscheck_hi_Rss32 & A4_boundscheck_hi_Rtt32 unimpl

:A4_boundscheck_lo A4_boundscheck_lo_Pd4 A4_boundscheck_lo_Rss32 A4_boundscheck_lo_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_boundscheck_lo_Pd4 & A4_boundscheck_lo_Rss32 & A4_boundscheck_lo_Rtt32 unimpl

:A4_tlbmatch A4_tlbmatch_Pd4 A4_tlbmatch_Rss32 A4_tlbmatch_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_tlbmatch_Pd4 & A4_tlbmatch_Rss32 & A4_tlbmatch_Rt32 unimpl

:C2_tfrpr C2_tfrpr_Rd32 C2_tfrpr_Ps4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b22 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & C2_tfrpr_Rd32 & C2_tfrpr_Ps4 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 8;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = zext(C2_tfrpr_Ps4);
  local tmp6:4;
  tmp6 = tmp5 & tmp4;
  C2_tfrpr_Rd32 = tmp6;
}

:C2_tfrrp C2_tfrrp_Pd4 C2_tfrrp_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & C2_tfrrp_Pd4 & C2_tfrrp_Rs32 {
  local tmp0:1;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = C2_tfrrp_Rs32 s>> tmp3;
  local tmp5:4;
  tmp5 = 255;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:1;
  C2_tfrrp_Pd4 = tmp0;
}

:C4_fastcorner9 C4_fastcorner9_Pd4 C4_fastcorner9_Ps4 C4_fastcorner9_Pt4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b4 = 1 & b7 = 1 & b13 = 1 & b20 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C4_fastcorner9_Pd4 & C4_fastcorner9_Ps4 & C4_fastcorner9_Pt4 unimpl

:C4_fastcorner9_not C4_fastcorner9_not_Pd4 C4_fastcorner9_not_Ps4 C4_fastcorner9_not_Pt4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b4 = 1 & b7 = 1 & b13 = 1 & b20 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C4_fastcorner9_not_Pd4 & C4_fastcorner9_not_Ps4 & C4_fastcorner9_not_Pt4 unimpl

:M2_mpy_acc_hh_s0 M2_mpy_acc_hh_s0_Rx32 M2_mpy_acc_hh_s0_Rs32 M2_mpy_acc_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_hh_s0_Rx32 & M2_mpy_acc_hh_s0_Rs32 & M2_mpy_acc_hh_s0_Rt32 unimpl

:M2_mpy_acc_hh_s1 M2_mpy_acc_hh_s1_Rx32 M2_mpy_acc_hh_s1_Rs32 M2_mpy_acc_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_hh_s1_Rx32 & M2_mpy_acc_hh_s1_Rs32 & M2_mpy_acc_hh_s1_Rt32 unimpl

:M2_mpy_acc_hl_s0 M2_mpy_acc_hl_s0_Rx32 M2_mpy_acc_hl_s0_Rs32 M2_mpy_acc_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_hl_s0_Rx32 & M2_mpy_acc_hl_s0_Rs32 & M2_mpy_acc_hl_s0_Rt32 unimpl

:M2_mpy_acc_hl_s1 M2_mpy_acc_hl_s1_Rx32 M2_mpy_acc_hl_s1_Rs32 M2_mpy_acc_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_hl_s1_Rx32 & M2_mpy_acc_hl_s1_Rs32 & M2_mpy_acc_hl_s1_Rt32 unimpl

:M2_mpy_acc_lh_s0 M2_mpy_acc_lh_s0_Rx32 M2_mpy_acc_lh_s0_Rs32 M2_mpy_acc_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_lh_s0_Rx32 & M2_mpy_acc_lh_s0_Rs32 & M2_mpy_acc_lh_s0_Rt32 unimpl

:M2_mpy_acc_lh_s1 M2_mpy_acc_lh_s1_Rx32 M2_mpy_acc_lh_s1_Rs32 M2_mpy_acc_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_lh_s1_Rx32 & M2_mpy_acc_lh_s1_Rs32 & M2_mpy_acc_lh_s1_Rt32 unimpl

:M2_mpy_acc_ll_s0 M2_mpy_acc_ll_s0_Rx32 M2_mpy_acc_ll_s0_Rs32 M2_mpy_acc_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_ll_s0_Rx32 & M2_mpy_acc_ll_s0_Rs32 & M2_mpy_acc_ll_s0_Rt32 unimpl

:M2_mpy_acc_ll_s1 M2_mpy_acc_ll_s1_Rx32 M2_mpy_acc_ll_s1_Rs32 M2_mpy_acc_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_ll_s1_Rx32 & M2_mpy_acc_ll_s1_Rs32 & M2_mpy_acc_ll_s1_Rt32 unimpl

:M2_mpy_nac_hh_s0 M2_mpy_nac_hh_s0_Rx32 M2_mpy_nac_hh_s0_Rs32 M2_mpy_nac_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_hh_s0_Rx32 & M2_mpy_nac_hh_s0_Rs32 & M2_mpy_nac_hh_s0_Rt32 unimpl

:M2_mpy_nac_hh_s1 M2_mpy_nac_hh_s1_Rx32 M2_mpy_nac_hh_s1_Rs32 M2_mpy_nac_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_hh_s1_Rx32 & M2_mpy_nac_hh_s1_Rs32 & M2_mpy_nac_hh_s1_Rt32 unimpl

:M2_mpy_nac_hl_s0 M2_mpy_nac_hl_s0_Rx32 M2_mpy_nac_hl_s0_Rs32 M2_mpy_nac_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_hl_s0_Rx32 & M2_mpy_nac_hl_s0_Rs32 & M2_mpy_nac_hl_s0_Rt32 unimpl

:M2_mpy_nac_hl_s1 M2_mpy_nac_hl_s1_Rx32 M2_mpy_nac_hl_s1_Rs32 M2_mpy_nac_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_hl_s1_Rx32 & M2_mpy_nac_hl_s1_Rs32 & M2_mpy_nac_hl_s1_Rt32 unimpl

:M2_mpy_nac_lh_s0 M2_mpy_nac_lh_s0_Rx32 M2_mpy_nac_lh_s0_Rs32 M2_mpy_nac_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_lh_s0_Rx32 & M2_mpy_nac_lh_s0_Rs32 & M2_mpy_nac_lh_s0_Rt32 unimpl

:M2_mpy_nac_lh_s1 M2_mpy_nac_lh_s1_Rx32 M2_mpy_nac_lh_s1_Rs32 M2_mpy_nac_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_lh_s1_Rx32 & M2_mpy_nac_lh_s1_Rs32 & M2_mpy_nac_lh_s1_Rt32 unimpl

:M2_mpy_nac_ll_s0 M2_mpy_nac_ll_s0_Rx32 M2_mpy_nac_ll_s0_Rs32 M2_mpy_nac_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_ll_s0_Rx32 & M2_mpy_nac_ll_s0_Rs32 & M2_mpy_nac_ll_s0_Rt32 unimpl

:M2_mpy_nac_ll_s1 M2_mpy_nac_ll_s1_Rx32 M2_mpy_nac_ll_s1_Rs32 M2_mpy_nac_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_ll_s1_Rx32 & M2_mpy_nac_ll_s1_Rs32 & M2_mpy_nac_ll_s1_Rt32 unimpl

:M2_mpy_acc_sat_hh_s0 M2_mpy_acc_sat_hh_s0_Rx32 M2_mpy_acc_sat_hh_s0_Rs32 M2_mpy_acc_sat_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_sat_hh_s0_Rx32 & M2_mpy_acc_sat_hh_s0_Rs32 & M2_mpy_acc_sat_hh_s0_Rt32 unimpl

:M2_mpy_acc_sat_hh_s1 M2_mpy_acc_sat_hh_s1_Rx32 M2_mpy_acc_sat_hh_s1_Rs32 M2_mpy_acc_sat_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_sat_hh_s1_Rx32 & M2_mpy_acc_sat_hh_s1_Rs32 & M2_mpy_acc_sat_hh_s1_Rt32 unimpl

:M2_mpy_acc_sat_hl_s0 M2_mpy_acc_sat_hl_s0_Rx32 M2_mpy_acc_sat_hl_s0_Rs32 M2_mpy_acc_sat_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_sat_hl_s0_Rx32 & M2_mpy_acc_sat_hl_s0_Rs32 & M2_mpy_acc_sat_hl_s0_Rt32 unimpl

:M2_mpy_acc_sat_hl_s1 M2_mpy_acc_sat_hl_s1_Rx32 M2_mpy_acc_sat_hl_s1_Rs32 M2_mpy_acc_sat_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_sat_hl_s1_Rx32 & M2_mpy_acc_sat_hl_s1_Rs32 & M2_mpy_acc_sat_hl_s1_Rt32 unimpl

:M2_mpy_acc_sat_lh_s0 M2_mpy_acc_sat_lh_s0_Rx32 M2_mpy_acc_sat_lh_s0_Rs32 M2_mpy_acc_sat_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_sat_lh_s0_Rx32 & M2_mpy_acc_sat_lh_s0_Rs32 & M2_mpy_acc_sat_lh_s0_Rt32 unimpl

:M2_mpy_acc_sat_lh_s1 M2_mpy_acc_sat_lh_s1_Rx32 M2_mpy_acc_sat_lh_s1_Rs32 M2_mpy_acc_sat_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_sat_lh_s1_Rx32 & M2_mpy_acc_sat_lh_s1_Rs32 & M2_mpy_acc_sat_lh_s1_Rt32 unimpl

:M2_mpy_acc_sat_ll_s0 M2_mpy_acc_sat_ll_s0_Rx32 M2_mpy_acc_sat_ll_s0_Rs32 M2_mpy_acc_sat_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_sat_ll_s0_Rx32 & M2_mpy_acc_sat_ll_s0_Rs32 & M2_mpy_acc_sat_ll_s0_Rt32 unimpl

:M2_mpy_acc_sat_ll_s1 M2_mpy_acc_sat_ll_s1_Rx32 M2_mpy_acc_sat_ll_s1_Rs32 M2_mpy_acc_sat_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_acc_sat_ll_s1_Rx32 & M2_mpy_acc_sat_ll_s1_Rs32 & M2_mpy_acc_sat_ll_s1_Rt32 unimpl

:M2_mpy_nac_sat_hh_s0 M2_mpy_nac_sat_hh_s0_Rx32 M2_mpy_nac_sat_hh_s0_Rs32 M2_mpy_nac_sat_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_sat_hh_s0_Rx32 & M2_mpy_nac_sat_hh_s0_Rs32 & M2_mpy_nac_sat_hh_s0_Rt32 unimpl

:M2_mpy_nac_sat_hh_s1 M2_mpy_nac_sat_hh_s1_Rx32 M2_mpy_nac_sat_hh_s1_Rs32 M2_mpy_nac_sat_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_sat_hh_s1_Rx32 & M2_mpy_nac_sat_hh_s1_Rs32 & M2_mpy_nac_sat_hh_s1_Rt32 unimpl

:M2_mpy_nac_sat_hl_s0 M2_mpy_nac_sat_hl_s0_Rx32 M2_mpy_nac_sat_hl_s0_Rs32 M2_mpy_nac_sat_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_sat_hl_s0_Rx32 & M2_mpy_nac_sat_hl_s0_Rs32 & M2_mpy_nac_sat_hl_s0_Rt32 unimpl

:M2_mpy_nac_sat_hl_s1 M2_mpy_nac_sat_hl_s1_Rx32 M2_mpy_nac_sat_hl_s1_Rs32 M2_mpy_nac_sat_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_sat_hl_s1_Rx32 & M2_mpy_nac_sat_hl_s1_Rs32 & M2_mpy_nac_sat_hl_s1_Rt32 unimpl

:M2_mpy_nac_sat_lh_s0 M2_mpy_nac_sat_lh_s0_Rx32 M2_mpy_nac_sat_lh_s0_Rs32 M2_mpy_nac_sat_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_sat_lh_s0_Rx32 & M2_mpy_nac_sat_lh_s0_Rs32 & M2_mpy_nac_sat_lh_s0_Rt32 unimpl

:M2_mpy_nac_sat_lh_s1 M2_mpy_nac_sat_lh_s1_Rx32 M2_mpy_nac_sat_lh_s1_Rs32 M2_mpy_nac_sat_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_sat_lh_s1_Rx32 & M2_mpy_nac_sat_lh_s1_Rs32 & M2_mpy_nac_sat_lh_s1_Rt32 unimpl

:M2_mpy_nac_sat_ll_s0 M2_mpy_nac_sat_ll_s0_Rx32 M2_mpy_nac_sat_ll_s0_Rs32 M2_mpy_nac_sat_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_sat_ll_s0_Rx32 & M2_mpy_nac_sat_ll_s0_Rs32 & M2_mpy_nac_sat_ll_s0_Rt32 unimpl

:M2_mpy_nac_sat_ll_s1 M2_mpy_nac_sat_ll_s1_Rx32 M2_mpy_nac_sat_ll_s1_Rs32 M2_mpy_nac_sat_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_nac_sat_ll_s1_Rx32 & M2_mpy_nac_sat_ll_s1_Rs32 & M2_mpy_nac_sat_ll_s1_Rt32 unimpl

:M2_mpy_hh_s0 M2_mpy_hh_s0_Rd32 M2_mpy_hh_s0_Rs32 M2_mpy_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_hh_s0_Rd32 & M2_mpy_hh_s0_Rs32 & M2_mpy_hh_s0_Rt32 unimpl

:M2_mpy_hh_s1 M2_mpy_hh_s1_Rd32 M2_mpy_hh_s1_Rs32 M2_mpy_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_hh_s1_Rd32 & M2_mpy_hh_s1_Rs32 & M2_mpy_hh_s1_Rt32 unimpl

:M2_mpy_hl_s0 M2_mpy_hl_s0_Rd32 M2_mpy_hl_s0_Rs32 M2_mpy_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_hl_s0_Rd32 & M2_mpy_hl_s0_Rs32 & M2_mpy_hl_s0_Rt32 unimpl

:M2_mpy_hl_s1 M2_mpy_hl_s1_Rd32 M2_mpy_hl_s1_Rs32 M2_mpy_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_hl_s1_Rd32 & M2_mpy_hl_s1_Rs32 & M2_mpy_hl_s1_Rt32 unimpl

:M2_mpy_lh_s0 M2_mpy_lh_s0_Rd32 M2_mpy_lh_s0_Rs32 M2_mpy_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_lh_s0_Rd32 & M2_mpy_lh_s0_Rs32 & M2_mpy_lh_s0_Rt32 unimpl

:M2_mpy_lh_s1 M2_mpy_lh_s1_Rd32 M2_mpy_lh_s1_Rs32 M2_mpy_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_lh_s1_Rd32 & M2_mpy_lh_s1_Rs32 & M2_mpy_lh_s1_Rt32 unimpl

:M2_mpy_ll_s0 M2_mpy_ll_s0_Rd32 M2_mpy_ll_s0_Rs32 M2_mpy_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_ll_s0_Rd32 & M2_mpy_ll_s0_Rs32 & M2_mpy_ll_s0_Rt32 unimpl

:M2_mpy_ll_s1 M2_mpy_ll_s1_Rd32 M2_mpy_ll_s1_Rs32 M2_mpy_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_ll_s1_Rd32 & M2_mpy_ll_s1_Rs32 & M2_mpy_ll_s1_Rt32 unimpl

:M2_mpy_sat_hh_s0 M2_mpy_sat_hh_s0_Rd32 M2_mpy_sat_hh_s0_Rs32 M2_mpy_sat_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_hh_s0_Rd32 & M2_mpy_sat_hh_s0_Rs32 & M2_mpy_sat_hh_s0_Rt32 unimpl

:M2_mpy_sat_hh_s1 M2_mpy_sat_hh_s1_Rd32 M2_mpy_sat_hh_s1_Rs32 M2_mpy_sat_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_hh_s1_Rd32 & M2_mpy_sat_hh_s1_Rs32 & M2_mpy_sat_hh_s1_Rt32 unimpl

:M2_mpy_sat_hl_s0 M2_mpy_sat_hl_s0_Rd32 M2_mpy_sat_hl_s0_Rs32 M2_mpy_sat_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_hl_s0_Rd32 & M2_mpy_sat_hl_s0_Rs32 & M2_mpy_sat_hl_s0_Rt32 unimpl

:M2_mpy_sat_hl_s1 M2_mpy_sat_hl_s1_Rd32 M2_mpy_sat_hl_s1_Rs32 M2_mpy_sat_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_hl_s1_Rd32 & M2_mpy_sat_hl_s1_Rs32 & M2_mpy_sat_hl_s1_Rt32 unimpl

:M2_mpy_sat_lh_s0 M2_mpy_sat_lh_s0_Rd32 M2_mpy_sat_lh_s0_Rs32 M2_mpy_sat_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_lh_s0_Rd32 & M2_mpy_sat_lh_s0_Rs32 & M2_mpy_sat_lh_s0_Rt32 unimpl

:M2_mpy_sat_lh_s1 M2_mpy_sat_lh_s1_Rd32 M2_mpy_sat_lh_s1_Rs32 M2_mpy_sat_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_lh_s1_Rd32 & M2_mpy_sat_lh_s1_Rs32 & M2_mpy_sat_lh_s1_Rt32 unimpl

:M2_mpy_sat_ll_s0 M2_mpy_sat_ll_s0_Rd32 M2_mpy_sat_ll_s0_Rs32 M2_mpy_sat_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_ll_s0_Rd32 & M2_mpy_sat_ll_s0_Rs32 & M2_mpy_sat_ll_s0_Rt32 unimpl

:M2_mpy_sat_ll_s1 M2_mpy_sat_ll_s1_Rd32 M2_mpy_sat_ll_s1_Rs32 M2_mpy_sat_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_ll_s1_Rd32 & M2_mpy_sat_ll_s1_Rs32 & M2_mpy_sat_ll_s1_Rt32 unimpl

:M2_mpy_rnd_hh_s0 M2_mpy_rnd_hh_s0_Rd32 M2_mpy_rnd_hh_s0_Rs32 M2_mpy_rnd_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_rnd_hh_s0_Rd32 & M2_mpy_rnd_hh_s0_Rs32 & M2_mpy_rnd_hh_s0_Rt32 unimpl

:M2_mpy_rnd_hh_s1 M2_mpy_rnd_hh_s1_Rd32 M2_mpy_rnd_hh_s1_Rs32 M2_mpy_rnd_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_rnd_hh_s1_Rd32 & M2_mpy_rnd_hh_s1_Rs32 & M2_mpy_rnd_hh_s1_Rt32 unimpl

:M2_mpy_rnd_hl_s0 M2_mpy_rnd_hl_s0_Rd32 M2_mpy_rnd_hl_s0_Rs32 M2_mpy_rnd_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_rnd_hl_s0_Rd32 & M2_mpy_rnd_hl_s0_Rs32 & M2_mpy_rnd_hl_s0_Rt32 unimpl

:M2_mpy_rnd_hl_s1 M2_mpy_rnd_hl_s1_Rd32 M2_mpy_rnd_hl_s1_Rs32 M2_mpy_rnd_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_rnd_hl_s1_Rd32 & M2_mpy_rnd_hl_s1_Rs32 & M2_mpy_rnd_hl_s1_Rt32 unimpl

:M2_mpy_rnd_lh_s0 M2_mpy_rnd_lh_s0_Rd32 M2_mpy_rnd_lh_s0_Rs32 M2_mpy_rnd_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_rnd_lh_s0_Rd32 & M2_mpy_rnd_lh_s0_Rs32 & M2_mpy_rnd_lh_s0_Rt32 unimpl

:M2_mpy_rnd_lh_s1 M2_mpy_rnd_lh_s1_Rd32 M2_mpy_rnd_lh_s1_Rs32 M2_mpy_rnd_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_rnd_lh_s1_Rd32 & M2_mpy_rnd_lh_s1_Rs32 & M2_mpy_rnd_lh_s1_Rt32 unimpl

:M2_mpy_rnd_ll_s0 M2_mpy_rnd_ll_s0_Rd32 M2_mpy_rnd_ll_s0_Rs32 M2_mpy_rnd_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_rnd_ll_s0_Rd32 & M2_mpy_rnd_ll_s0_Rs32 & M2_mpy_rnd_ll_s0_Rt32 unimpl

:M2_mpy_rnd_ll_s1 M2_mpy_rnd_ll_s1_Rd32 M2_mpy_rnd_ll_s1_Rs32 M2_mpy_rnd_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_rnd_ll_s1_Rd32 & M2_mpy_rnd_ll_s1_Rs32 & M2_mpy_rnd_ll_s1_Rt32 unimpl

:M2_mpy_sat_rnd_hh_s0 M2_mpy_sat_rnd_hh_s0_Rd32 M2_mpy_sat_rnd_hh_s0_Rs32 M2_mpy_sat_rnd_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_rnd_hh_s0_Rd32 & M2_mpy_sat_rnd_hh_s0_Rs32 & M2_mpy_sat_rnd_hh_s0_Rt32 unimpl

:M2_mpy_sat_rnd_hh_s1 M2_mpy_sat_rnd_hh_s1_Rd32 M2_mpy_sat_rnd_hh_s1_Rs32 M2_mpy_sat_rnd_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_rnd_hh_s1_Rd32 & M2_mpy_sat_rnd_hh_s1_Rs32 & M2_mpy_sat_rnd_hh_s1_Rt32 unimpl

:M2_mpy_sat_rnd_hl_s0 M2_mpy_sat_rnd_hl_s0_Rd32 M2_mpy_sat_rnd_hl_s0_Rs32 M2_mpy_sat_rnd_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_rnd_hl_s0_Rd32 & M2_mpy_sat_rnd_hl_s0_Rs32 & M2_mpy_sat_rnd_hl_s0_Rt32 unimpl

:M2_mpy_sat_rnd_hl_s1 M2_mpy_sat_rnd_hl_s1_Rd32 M2_mpy_sat_rnd_hl_s1_Rs32 M2_mpy_sat_rnd_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_rnd_hl_s1_Rd32 & M2_mpy_sat_rnd_hl_s1_Rs32 & M2_mpy_sat_rnd_hl_s1_Rt32 unimpl

:M2_mpy_sat_rnd_lh_s0 M2_mpy_sat_rnd_lh_s0_Rd32 M2_mpy_sat_rnd_lh_s0_Rs32 M2_mpy_sat_rnd_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_rnd_lh_s0_Rd32 & M2_mpy_sat_rnd_lh_s0_Rs32 & M2_mpy_sat_rnd_lh_s0_Rt32 unimpl

:M2_mpy_sat_rnd_lh_s1 M2_mpy_sat_rnd_lh_s1_Rd32 M2_mpy_sat_rnd_lh_s1_Rs32 M2_mpy_sat_rnd_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_rnd_lh_s1_Rd32 & M2_mpy_sat_rnd_lh_s1_Rs32 & M2_mpy_sat_rnd_lh_s1_Rt32 unimpl

:M2_mpy_sat_rnd_ll_s0 M2_mpy_sat_rnd_ll_s0_Rd32 M2_mpy_sat_rnd_ll_s0_Rs32 M2_mpy_sat_rnd_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_rnd_ll_s0_Rd32 & M2_mpy_sat_rnd_ll_s0_Rs32 & M2_mpy_sat_rnd_ll_s0_Rt32 unimpl

:M2_mpy_sat_rnd_ll_s1 M2_mpy_sat_rnd_ll_s1_Rd32 M2_mpy_sat_rnd_ll_s1_Rs32 M2_mpy_sat_rnd_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_sat_rnd_ll_s1_Rd32 & M2_mpy_sat_rnd_ll_s1_Rs32 & M2_mpy_sat_rnd_ll_s1_Rt32 unimpl

:M2_mpyd_acc_hh_s0 M2_mpyd_acc_hh_s0_Rxx32 M2_mpyd_acc_hh_s0_Rs32 M2_mpyd_acc_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_acc_hh_s0_Rxx32 & M2_mpyd_acc_hh_s0_Rs32 & M2_mpyd_acc_hh_s0_Rt32 unimpl

:M2_mpyd_acc_hh_s1 M2_mpyd_acc_hh_s1_Rxx32 M2_mpyd_acc_hh_s1_Rs32 M2_mpyd_acc_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_acc_hh_s1_Rxx32 & M2_mpyd_acc_hh_s1_Rs32 & M2_mpyd_acc_hh_s1_Rt32 unimpl

:M2_mpyd_acc_hl_s0 M2_mpyd_acc_hl_s0_Rxx32 M2_mpyd_acc_hl_s0_Rs32 M2_mpyd_acc_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_acc_hl_s0_Rxx32 & M2_mpyd_acc_hl_s0_Rs32 & M2_mpyd_acc_hl_s0_Rt32 unimpl

:M2_mpyd_acc_hl_s1 M2_mpyd_acc_hl_s1_Rxx32 M2_mpyd_acc_hl_s1_Rs32 M2_mpyd_acc_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_acc_hl_s1_Rxx32 & M2_mpyd_acc_hl_s1_Rs32 & M2_mpyd_acc_hl_s1_Rt32 unimpl

:M2_mpyd_acc_lh_s0 M2_mpyd_acc_lh_s0_Rxx32 M2_mpyd_acc_lh_s0_Rs32 M2_mpyd_acc_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_acc_lh_s0_Rxx32 & M2_mpyd_acc_lh_s0_Rs32 & M2_mpyd_acc_lh_s0_Rt32 unimpl

:M2_mpyd_acc_lh_s1 M2_mpyd_acc_lh_s1_Rxx32 M2_mpyd_acc_lh_s1_Rs32 M2_mpyd_acc_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_acc_lh_s1_Rxx32 & M2_mpyd_acc_lh_s1_Rs32 & M2_mpyd_acc_lh_s1_Rt32 unimpl

:M2_mpyd_acc_ll_s0 M2_mpyd_acc_ll_s0_Rxx32 M2_mpyd_acc_ll_s0_Rs32 M2_mpyd_acc_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_acc_ll_s0_Rxx32 & M2_mpyd_acc_ll_s0_Rs32 & M2_mpyd_acc_ll_s0_Rt32 unimpl

:M2_mpyd_acc_ll_s1 M2_mpyd_acc_ll_s1_Rxx32 M2_mpyd_acc_ll_s1_Rs32 M2_mpyd_acc_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_acc_ll_s1_Rxx32 & M2_mpyd_acc_ll_s1_Rs32 & M2_mpyd_acc_ll_s1_Rt32 unimpl

:M2_mpyd_nac_hh_s0 M2_mpyd_nac_hh_s0_Rxx32 M2_mpyd_nac_hh_s0_Rs32 M2_mpyd_nac_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_nac_hh_s0_Rxx32 & M2_mpyd_nac_hh_s0_Rs32 & M2_mpyd_nac_hh_s0_Rt32 unimpl

:M2_mpyd_nac_hh_s1 M2_mpyd_nac_hh_s1_Rxx32 M2_mpyd_nac_hh_s1_Rs32 M2_mpyd_nac_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_nac_hh_s1_Rxx32 & M2_mpyd_nac_hh_s1_Rs32 & M2_mpyd_nac_hh_s1_Rt32 unimpl

:M2_mpyd_nac_hl_s0 M2_mpyd_nac_hl_s0_Rxx32 M2_mpyd_nac_hl_s0_Rs32 M2_mpyd_nac_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_nac_hl_s0_Rxx32 & M2_mpyd_nac_hl_s0_Rs32 & M2_mpyd_nac_hl_s0_Rt32 unimpl

:M2_mpyd_nac_hl_s1 M2_mpyd_nac_hl_s1_Rxx32 M2_mpyd_nac_hl_s1_Rs32 M2_mpyd_nac_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_nac_hl_s1_Rxx32 & M2_mpyd_nac_hl_s1_Rs32 & M2_mpyd_nac_hl_s1_Rt32 unimpl

:M2_mpyd_nac_lh_s0 M2_mpyd_nac_lh_s0_Rxx32 M2_mpyd_nac_lh_s0_Rs32 M2_mpyd_nac_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_nac_lh_s0_Rxx32 & M2_mpyd_nac_lh_s0_Rs32 & M2_mpyd_nac_lh_s0_Rt32 unimpl

:M2_mpyd_nac_lh_s1 M2_mpyd_nac_lh_s1_Rxx32 M2_mpyd_nac_lh_s1_Rs32 M2_mpyd_nac_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_nac_lh_s1_Rxx32 & M2_mpyd_nac_lh_s1_Rs32 & M2_mpyd_nac_lh_s1_Rt32 unimpl

:M2_mpyd_nac_ll_s0 M2_mpyd_nac_ll_s0_Rxx32 M2_mpyd_nac_ll_s0_Rs32 M2_mpyd_nac_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_nac_ll_s0_Rxx32 & M2_mpyd_nac_ll_s0_Rs32 & M2_mpyd_nac_ll_s0_Rt32 unimpl

:M2_mpyd_nac_ll_s1 M2_mpyd_nac_ll_s1_Rxx32 M2_mpyd_nac_ll_s1_Rs32 M2_mpyd_nac_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_nac_ll_s1_Rxx32 & M2_mpyd_nac_ll_s1_Rs32 & M2_mpyd_nac_ll_s1_Rt32 unimpl

:M2_mpyd_hh_s0 M2_mpyd_hh_s0_Rdd32 M2_mpyd_hh_s0_Rs32 M2_mpyd_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_hh_s0_Rdd32 & M2_mpyd_hh_s0_Rs32 & M2_mpyd_hh_s0_Rt32 unimpl

:M2_mpyd_hh_s1 M2_mpyd_hh_s1_Rdd32 M2_mpyd_hh_s1_Rs32 M2_mpyd_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_hh_s1_Rdd32 & M2_mpyd_hh_s1_Rs32 & M2_mpyd_hh_s1_Rt32 unimpl

:M2_mpyd_hl_s0 M2_mpyd_hl_s0_Rdd32 M2_mpyd_hl_s0_Rs32 M2_mpyd_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_hl_s0_Rdd32 & M2_mpyd_hl_s0_Rs32 & M2_mpyd_hl_s0_Rt32 unimpl

:M2_mpyd_hl_s1 M2_mpyd_hl_s1_Rdd32 M2_mpyd_hl_s1_Rs32 M2_mpyd_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_hl_s1_Rdd32 & M2_mpyd_hl_s1_Rs32 & M2_mpyd_hl_s1_Rt32 unimpl

:M2_mpyd_lh_s0 M2_mpyd_lh_s0_Rdd32 M2_mpyd_lh_s0_Rs32 M2_mpyd_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_lh_s0_Rdd32 & M2_mpyd_lh_s0_Rs32 & M2_mpyd_lh_s0_Rt32 unimpl

:M2_mpyd_lh_s1 M2_mpyd_lh_s1_Rdd32 M2_mpyd_lh_s1_Rs32 M2_mpyd_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_lh_s1_Rdd32 & M2_mpyd_lh_s1_Rs32 & M2_mpyd_lh_s1_Rt32 unimpl

:M2_mpyd_ll_s0 M2_mpyd_ll_s0_Rdd32 M2_mpyd_ll_s0_Rs32 M2_mpyd_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_ll_s0_Rdd32 & M2_mpyd_ll_s0_Rs32 & M2_mpyd_ll_s0_Rt32 unimpl

:M2_mpyd_ll_s1 M2_mpyd_ll_s1_Rdd32 M2_mpyd_ll_s1_Rs32 M2_mpyd_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_ll_s1_Rdd32 & M2_mpyd_ll_s1_Rs32 & M2_mpyd_ll_s1_Rt32 unimpl

:M2_mpyd_rnd_hh_s0 M2_mpyd_rnd_hh_s0_Rdd32 M2_mpyd_rnd_hh_s0_Rs32 M2_mpyd_rnd_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_rnd_hh_s0_Rdd32 & M2_mpyd_rnd_hh_s0_Rs32 & M2_mpyd_rnd_hh_s0_Rt32 unimpl

:M2_mpyd_rnd_hh_s1 M2_mpyd_rnd_hh_s1_Rdd32 M2_mpyd_rnd_hh_s1_Rs32 M2_mpyd_rnd_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_rnd_hh_s1_Rdd32 & M2_mpyd_rnd_hh_s1_Rs32 & M2_mpyd_rnd_hh_s1_Rt32 unimpl

:M2_mpyd_rnd_hl_s0 M2_mpyd_rnd_hl_s0_Rdd32 M2_mpyd_rnd_hl_s0_Rs32 M2_mpyd_rnd_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_rnd_hl_s0_Rdd32 & M2_mpyd_rnd_hl_s0_Rs32 & M2_mpyd_rnd_hl_s0_Rt32 unimpl

:M2_mpyd_rnd_hl_s1 M2_mpyd_rnd_hl_s1_Rdd32 M2_mpyd_rnd_hl_s1_Rs32 M2_mpyd_rnd_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_rnd_hl_s1_Rdd32 & M2_mpyd_rnd_hl_s1_Rs32 & M2_mpyd_rnd_hl_s1_Rt32 unimpl

:M2_mpyd_rnd_lh_s0 M2_mpyd_rnd_lh_s0_Rdd32 M2_mpyd_rnd_lh_s0_Rs32 M2_mpyd_rnd_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_rnd_lh_s0_Rdd32 & M2_mpyd_rnd_lh_s0_Rs32 & M2_mpyd_rnd_lh_s0_Rt32 unimpl

:M2_mpyd_rnd_lh_s1 M2_mpyd_rnd_lh_s1_Rdd32 M2_mpyd_rnd_lh_s1_Rs32 M2_mpyd_rnd_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_rnd_lh_s1_Rdd32 & M2_mpyd_rnd_lh_s1_Rs32 & M2_mpyd_rnd_lh_s1_Rt32 unimpl

:M2_mpyd_rnd_ll_s0 M2_mpyd_rnd_ll_s0_Rdd32 M2_mpyd_rnd_ll_s0_Rs32 M2_mpyd_rnd_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_rnd_ll_s0_Rdd32 & M2_mpyd_rnd_ll_s0_Rs32 & M2_mpyd_rnd_ll_s0_Rt32 unimpl

:M2_mpyd_rnd_ll_s1 M2_mpyd_rnd_ll_s1_Rdd32 M2_mpyd_rnd_ll_s1_Rs32 M2_mpyd_rnd_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyd_rnd_ll_s1_Rdd32 & M2_mpyd_rnd_ll_s1_Rs32 & M2_mpyd_rnd_ll_s1_Rt32 unimpl

:M2_mpyu_acc_hh_s0 M2_mpyu_acc_hh_s0_Rx32 M2_mpyu_acc_hh_s0_Rs32 M2_mpyu_acc_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_acc_hh_s0_Rx32 & M2_mpyu_acc_hh_s0_Rs32 & M2_mpyu_acc_hh_s0_Rt32 unimpl

:M2_mpyu_acc_hh_s1 M2_mpyu_acc_hh_s1_Rx32 M2_mpyu_acc_hh_s1_Rs32 M2_mpyu_acc_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_acc_hh_s1_Rx32 & M2_mpyu_acc_hh_s1_Rs32 & M2_mpyu_acc_hh_s1_Rt32 unimpl

:M2_mpyu_acc_hl_s0 M2_mpyu_acc_hl_s0_Rx32 M2_mpyu_acc_hl_s0_Rs32 M2_mpyu_acc_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_acc_hl_s0_Rx32 & M2_mpyu_acc_hl_s0_Rs32 & M2_mpyu_acc_hl_s0_Rt32 unimpl

:M2_mpyu_acc_hl_s1 M2_mpyu_acc_hl_s1_Rx32 M2_mpyu_acc_hl_s1_Rs32 M2_mpyu_acc_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_acc_hl_s1_Rx32 & M2_mpyu_acc_hl_s1_Rs32 & M2_mpyu_acc_hl_s1_Rt32 unimpl

:M2_mpyu_acc_lh_s0 M2_mpyu_acc_lh_s0_Rx32 M2_mpyu_acc_lh_s0_Rs32 M2_mpyu_acc_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_acc_lh_s0_Rx32 & M2_mpyu_acc_lh_s0_Rs32 & M2_mpyu_acc_lh_s0_Rt32 unimpl

:M2_mpyu_acc_lh_s1 M2_mpyu_acc_lh_s1_Rx32 M2_mpyu_acc_lh_s1_Rs32 M2_mpyu_acc_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_acc_lh_s1_Rx32 & M2_mpyu_acc_lh_s1_Rs32 & M2_mpyu_acc_lh_s1_Rt32 unimpl

:M2_mpyu_acc_ll_s0 M2_mpyu_acc_ll_s0_Rx32 M2_mpyu_acc_ll_s0_Rs32 M2_mpyu_acc_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_acc_ll_s0_Rx32 & M2_mpyu_acc_ll_s0_Rs32 & M2_mpyu_acc_ll_s0_Rt32 unimpl

:M2_mpyu_acc_ll_s1 M2_mpyu_acc_ll_s1_Rx32 M2_mpyu_acc_ll_s1_Rs32 M2_mpyu_acc_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_acc_ll_s1_Rx32 & M2_mpyu_acc_ll_s1_Rs32 & M2_mpyu_acc_ll_s1_Rt32 unimpl

:M2_mpyu_nac_hh_s0 M2_mpyu_nac_hh_s0_Rx32 M2_mpyu_nac_hh_s0_Rs32 M2_mpyu_nac_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_nac_hh_s0_Rx32 & M2_mpyu_nac_hh_s0_Rs32 & M2_mpyu_nac_hh_s0_Rt32 unimpl

:M2_mpyu_nac_hh_s1 M2_mpyu_nac_hh_s1_Rx32 M2_mpyu_nac_hh_s1_Rs32 M2_mpyu_nac_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_nac_hh_s1_Rx32 & M2_mpyu_nac_hh_s1_Rs32 & M2_mpyu_nac_hh_s1_Rt32 unimpl

:M2_mpyu_nac_hl_s0 M2_mpyu_nac_hl_s0_Rx32 M2_mpyu_nac_hl_s0_Rs32 M2_mpyu_nac_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_nac_hl_s0_Rx32 & M2_mpyu_nac_hl_s0_Rs32 & M2_mpyu_nac_hl_s0_Rt32 unimpl

:M2_mpyu_nac_hl_s1 M2_mpyu_nac_hl_s1_Rx32 M2_mpyu_nac_hl_s1_Rs32 M2_mpyu_nac_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_nac_hl_s1_Rx32 & M2_mpyu_nac_hl_s1_Rs32 & M2_mpyu_nac_hl_s1_Rt32 unimpl

:M2_mpyu_nac_lh_s0 M2_mpyu_nac_lh_s0_Rx32 M2_mpyu_nac_lh_s0_Rs32 M2_mpyu_nac_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_nac_lh_s0_Rx32 & M2_mpyu_nac_lh_s0_Rs32 & M2_mpyu_nac_lh_s0_Rt32 unimpl

:M2_mpyu_nac_lh_s1 M2_mpyu_nac_lh_s1_Rx32 M2_mpyu_nac_lh_s1_Rs32 M2_mpyu_nac_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_nac_lh_s1_Rx32 & M2_mpyu_nac_lh_s1_Rs32 & M2_mpyu_nac_lh_s1_Rt32 unimpl

:M2_mpyu_nac_ll_s0 M2_mpyu_nac_ll_s0_Rx32 M2_mpyu_nac_ll_s0_Rs32 M2_mpyu_nac_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_nac_ll_s0_Rx32 & M2_mpyu_nac_ll_s0_Rs32 & M2_mpyu_nac_ll_s0_Rt32 unimpl

:M2_mpyu_nac_ll_s1 M2_mpyu_nac_ll_s1_Rx32 M2_mpyu_nac_ll_s1_Rs32 M2_mpyu_nac_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_nac_ll_s1_Rx32 & M2_mpyu_nac_ll_s1_Rs32 & M2_mpyu_nac_ll_s1_Rt32 unimpl

:M2_mpyu_hh_s0 M2_mpyu_hh_s0_Rd32 M2_mpyu_hh_s0_Rs32 M2_mpyu_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_hh_s0_Rd32 & M2_mpyu_hh_s0_Rs32 & M2_mpyu_hh_s0_Rt32 unimpl

:M2_mpyu_hh_s1 M2_mpyu_hh_s1_Rd32 M2_mpyu_hh_s1_Rs32 M2_mpyu_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_hh_s1_Rd32 & M2_mpyu_hh_s1_Rs32 & M2_mpyu_hh_s1_Rt32 unimpl

:M2_mpyu_hl_s0 M2_mpyu_hl_s0_Rd32 M2_mpyu_hl_s0_Rs32 M2_mpyu_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_hl_s0_Rd32 & M2_mpyu_hl_s0_Rs32 & M2_mpyu_hl_s0_Rt32 unimpl

:M2_mpyu_hl_s1 M2_mpyu_hl_s1_Rd32 M2_mpyu_hl_s1_Rs32 M2_mpyu_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_hl_s1_Rd32 & M2_mpyu_hl_s1_Rs32 & M2_mpyu_hl_s1_Rt32 unimpl

:M2_mpyu_lh_s0 M2_mpyu_lh_s0_Rd32 M2_mpyu_lh_s0_Rs32 M2_mpyu_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_lh_s0_Rd32 & M2_mpyu_lh_s0_Rs32 & M2_mpyu_lh_s0_Rt32 unimpl

:M2_mpyu_lh_s1 M2_mpyu_lh_s1_Rd32 M2_mpyu_lh_s1_Rs32 M2_mpyu_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_lh_s1_Rd32 & M2_mpyu_lh_s1_Rs32 & M2_mpyu_lh_s1_Rt32 unimpl

:M2_mpyu_ll_s0 M2_mpyu_ll_s0_Rd32 M2_mpyu_ll_s0_Rs32 M2_mpyu_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_ll_s0_Rd32 & M2_mpyu_ll_s0_Rs32 & M2_mpyu_ll_s0_Rt32 unimpl

:M2_mpyu_ll_s1 M2_mpyu_ll_s1_Rd32 M2_mpyu_ll_s1_Rs32 M2_mpyu_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_ll_s1_Rd32 & M2_mpyu_ll_s1_Rs32 & M2_mpyu_ll_s1_Rt32 unimpl

:M2_mpyud_acc_hh_s0 M2_mpyud_acc_hh_s0_Rxx32 M2_mpyud_acc_hh_s0_Rs32 M2_mpyud_acc_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_acc_hh_s0_Rxx32 & M2_mpyud_acc_hh_s0_Rs32 & M2_mpyud_acc_hh_s0_Rt32 unimpl

:M2_mpyud_acc_hh_s1 M2_mpyud_acc_hh_s1_Rxx32 M2_mpyud_acc_hh_s1_Rs32 M2_mpyud_acc_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_acc_hh_s1_Rxx32 & M2_mpyud_acc_hh_s1_Rs32 & M2_mpyud_acc_hh_s1_Rt32 unimpl

:M2_mpyud_acc_hl_s0 M2_mpyud_acc_hl_s0_Rxx32 M2_mpyud_acc_hl_s0_Rs32 M2_mpyud_acc_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_acc_hl_s0_Rxx32 & M2_mpyud_acc_hl_s0_Rs32 & M2_mpyud_acc_hl_s0_Rt32 unimpl

:M2_mpyud_acc_hl_s1 M2_mpyud_acc_hl_s1_Rxx32 M2_mpyud_acc_hl_s1_Rs32 M2_mpyud_acc_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_acc_hl_s1_Rxx32 & M2_mpyud_acc_hl_s1_Rs32 & M2_mpyud_acc_hl_s1_Rt32 unimpl

:M2_mpyud_acc_lh_s0 M2_mpyud_acc_lh_s0_Rxx32 M2_mpyud_acc_lh_s0_Rs32 M2_mpyud_acc_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_acc_lh_s0_Rxx32 & M2_mpyud_acc_lh_s0_Rs32 & M2_mpyud_acc_lh_s0_Rt32 unimpl

:M2_mpyud_acc_lh_s1 M2_mpyud_acc_lh_s1_Rxx32 M2_mpyud_acc_lh_s1_Rs32 M2_mpyud_acc_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_acc_lh_s1_Rxx32 & M2_mpyud_acc_lh_s1_Rs32 & M2_mpyud_acc_lh_s1_Rt32 unimpl

:M2_mpyud_acc_ll_s0 M2_mpyud_acc_ll_s0_Rxx32 M2_mpyud_acc_ll_s0_Rs32 M2_mpyud_acc_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_acc_ll_s0_Rxx32 & M2_mpyud_acc_ll_s0_Rs32 & M2_mpyud_acc_ll_s0_Rt32 unimpl

:M2_mpyud_acc_ll_s1 M2_mpyud_acc_ll_s1_Rxx32 M2_mpyud_acc_ll_s1_Rs32 M2_mpyud_acc_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_acc_ll_s1_Rxx32 & M2_mpyud_acc_ll_s1_Rs32 & M2_mpyud_acc_ll_s1_Rt32 unimpl

:M2_mpyud_nac_hh_s0 M2_mpyud_nac_hh_s0_Rxx32 M2_mpyud_nac_hh_s0_Rs32 M2_mpyud_nac_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_nac_hh_s0_Rxx32 & M2_mpyud_nac_hh_s0_Rs32 & M2_mpyud_nac_hh_s0_Rt32 unimpl

:M2_mpyud_nac_hh_s1 M2_mpyud_nac_hh_s1_Rxx32 M2_mpyud_nac_hh_s1_Rs32 M2_mpyud_nac_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_nac_hh_s1_Rxx32 & M2_mpyud_nac_hh_s1_Rs32 & M2_mpyud_nac_hh_s1_Rt32 unimpl

:M2_mpyud_nac_hl_s0 M2_mpyud_nac_hl_s0_Rxx32 M2_mpyud_nac_hl_s0_Rs32 M2_mpyud_nac_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_nac_hl_s0_Rxx32 & M2_mpyud_nac_hl_s0_Rs32 & M2_mpyud_nac_hl_s0_Rt32 unimpl

:M2_mpyud_nac_hl_s1 M2_mpyud_nac_hl_s1_Rxx32 M2_mpyud_nac_hl_s1_Rs32 M2_mpyud_nac_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_nac_hl_s1_Rxx32 & M2_mpyud_nac_hl_s1_Rs32 & M2_mpyud_nac_hl_s1_Rt32 unimpl

:M2_mpyud_nac_lh_s0 M2_mpyud_nac_lh_s0_Rxx32 M2_mpyud_nac_lh_s0_Rs32 M2_mpyud_nac_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_nac_lh_s0_Rxx32 & M2_mpyud_nac_lh_s0_Rs32 & M2_mpyud_nac_lh_s0_Rt32 unimpl

:M2_mpyud_nac_lh_s1 M2_mpyud_nac_lh_s1_Rxx32 M2_mpyud_nac_lh_s1_Rs32 M2_mpyud_nac_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_nac_lh_s1_Rxx32 & M2_mpyud_nac_lh_s1_Rs32 & M2_mpyud_nac_lh_s1_Rt32 unimpl

:M2_mpyud_nac_ll_s0 M2_mpyud_nac_ll_s0_Rxx32 M2_mpyud_nac_ll_s0_Rs32 M2_mpyud_nac_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_nac_ll_s0_Rxx32 & M2_mpyud_nac_ll_s0_Rs32 & M2_mpyud_nac_ll_s0_Rt32 unimpl

:M2_mpyud_nac_ll_s1 M2_mpyud_nac_ll_s1_Rxx32 M2_mpyud_nac_ll_s1_Rs32 M2_mpyud_nac_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_nac_ll_s1_Rxx32 & M2_mpyud_nac_ll_s1_Rs32 & M2_mpyud_nac_ll_s1_Rt32 unimpl

:M2_mpyud_hh_s0 M2_mpyud_hh_s0_Rdd32 M2_mpyud_hh_s0_Rs32 M2_mpyud_hh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_hh_s0_Rdd32 & M2_mpyud_hh_s0_Rs32 & M2_mpyud_hh_s0_Rt32 unimpl

:M2_mpyud_hh_s1 M2_mpyud_hh_s1_Rdd32 M2_mpyud_hh_s1_Rs32 M2_mpyud_hh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_hh_s1_Rdd32 & M2_mpyud_hh_s1_Rs32 & M2_mpyud_hh_s1_Rt32 unimpl

:M2_mpyud_hl_s0 M2_mpyud_hl_s0_Rdd32 M2_mpyud_hl_s0_Rs32 M2_mpyud_hl_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_hl_s0_Rdd32 & M2_mpyud_hl_s0_Rs32 & M2_mpyud_hl_s0_Rt32 unimpl

:M2_mpyud_hl_s1 M2_mpyud_hl_s1_Rdd32 M2_mpyud_hl_s1_Rs32 M2_mpyud_hl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_hl_s1_Rdd32 & M2_mpyud_hl_s1_Rs32 & M2_mpyud_hl_s1_Rt32 unimpl

:M2_mpyud_lh_s0 M2_mpyud_lh_s0_Rdd32 M2_mpyud_lh_s0_Rs32 M2_mpyud_lh_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_lh_s0_Rdd32 & M2_mpyud_lh_s0_Rs32 & M2_mpyud_lh_s0_Rt32 unimpl

:M2_mpyud_lh_s1 M2_mpyud_lh_s1_Rdd32 M2_mpyud_lh_s1_Rs32 M2_mpyud_lh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_lh_s1_Rdd32 & M2_mpyud_lh_s1_Rs32 & M2_mpyud_lh_s1_Rt32 unimpl

:M2_mpyud_ll_s0 M2_mpyud_ll_s0_Rdd32 M2_mpyud_ll_s0_Rs32 M2_mpyud_ll_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_ll_s0_Rdd32 & M2_mpyud_ll_s0_Rs32 & M2_mpyud_ll_s0_Rt32 unimpl

:M2_mpyud_ll_s1 M2_mpyud_ll_s1_Rdd32 M2_mpyud_ll_s1_Rs32 M2_mpyud_ll_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyud_ll_s1_Rdd32 & M2_mpyud_ll_s1_Rs32 & M2_mpyud_ll_s1_Rt32 unimpl

:M2_mpysip M2_mpysip_Rd32 M2_mpysip_Rs32 M2_mpysip_u8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpysip_Rd32 & M2_mpysip_Rs32 & M2_mpysip_u8 {
  local tmp0:4;
  tmp0 = M2_mpysip_Rs32 * M2_mpysip_u8;
  M2_mpysip_Rd32 = tmp0;
}

:M2_mpysin M2_mpysin_Rd32 M2_mpysin_Rs32 M2_mpysin_u8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpysin_Rd32 & M2_mpysin_Rs32 & M2_mpysin_u8 {
  local tmp0:4;
  tmp0 = - M2_mpysin_u8;
  local tmp1:4;
  tmp1 = M2_mpysin_Rs32 * tmp0;
  M2_mpysin_Rd32 = tmp1;
}

:M2_macsip M2_macsip_Rx32 M2_macsip_Rs32 M2_macsip_u8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_macsip_Rx32 & M2_macsip_Rs32 & M2_macsip_u8 {
  local tmp0:4;
  tmp0 = M2_macsip_Rs32 * M2_macsip_u8;
  local tmp1:4;
  tmp1 = M2_macsip_Rx32 + tmp0;
  M2_macsip_Rx32 = tmp1;
}

:M2_macsin M2_macsin_Rx32 M2_macsin_Rs32 M2_macsin_u8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_macsin_Rx32 & M2_macsin_Rs32 & M2_macsin_u8 {
  local tmp0:4;
  tmp0 = M2_macsin_Rs32 * M2_macsin_u8;
  local tmp1:4;
  tmp1 = M2_macsin_Rx32 - tmp0;
  M2_macsin_Rx32 = tmp1;
}

:M2_dpmpyss_s0 M2_dpmpyss_s0_Rdd32 M2_dpmpyss_s0_Rs32 M2_dpmpyss_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_dpmpyss_s0_Rdd32 & M2_dpmpyss_s0_Rs32 & M2_dpmpyss_s0_Rt32 {
  local tmp0:8;
  local tmp1:4;
  tmp1 = M2_dpmpyss_s0_Rs32;
  tmp0 = zext(tmp1);
  local tmp2:8;
  local tmp3:4;
  tmp3 = M2_dpmpyss_s0_Rt32;
  tmp2 = zext(tmp3);
  local tmp4:8;
  tmp4 = tmp0 * tmp2;
  M2_dpmpyss_s0_Rdd32 = tmp4;
}

:M2_dpmpyss_acc_s0 M2_dpmpyss_acc_s0_Rxx32 M2_dpmpyss_acc_s0_Rs32 M2_dpmpyss_acc_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_dpmpyss_acc_s0_Rxx32 & M2_dpmpyss_acc_s0_Rs32 & M2_dpmpyss_acc_s0_Rt32 {
  local tmp0:8;
  local tmp1:4;
  tmp1 = M2_dpmpyss_acc_s0_Rs32;
  tmp0 = zext(tmp1);
  local tmp2:8;
  local tmp3:4;
  tmp3 = M2_dpmpyss_acc_s0_Rt32;
  tmp2 = zext(tmp3);
  local tmp4:8;
  tmp4 = tmp0 * tmp2;
  local tmp5:8;
  tmp5 = M2_dpmpyss_acc_s0_Rxx32 + tmp4;
  M2_dpmpyss_acc_s0_Rxx32 = tmp5;
}

:M2_dpmpyss_nac_s0 M2_dpmpyss_nac_s0_Rxx32 M2_dpmpyss_nac_s0_Rs32 M2_dpmpyss_nac_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_dpmpyss_nac_s0_Rxx32 & M2_dpmpyss_nac_s0_Rs32 & M2_dpmpyss_nac_s0_Rt32 {
  local tmp0:8;
  local tmp1:4;
  tmp1 = M2_dpmpyss_nac_s0_Rs32;
  tmp0 = zext(tmp1);
  local tmp2:8;
  local tmp3:4;
  tmp3 = M2_dpmpyss_nac_s0_Rt32;
  tmp2 = zext(tmp3);
  local tmp4:8;
  tmp4 = tmp0 * tmp2;
  local tmp5:8;
  tmp5 = M2_dpmpyss_nac_s0_Rxx32 - tmp4;
  M2_dpmpyss_nac_s0_Rxx32 = tmp5;
}

:M2_dpmpyuu_s0 M2_dpmpyuu_s0_Rdd32 M2_dpmpyuu_s0_Rs32 M2_dpmpyuu_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_dpmpyuu_s0_Rdd32 & M2_dpmpyuu_s0_Rs32 & M2_dpmpyuu_s0_Rt32 {
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = M2_dpmpyuu_s0_Rs32;
  tmp1 = tmp2;
  tmp0 = sext(tmp1);
  local tmp3:8;
  local tmp4:4;
  local tmp5:4;
  tmp5 = M2_dpmpyuu_s0_Rt32;
  tmp4 = tmp5;
  tmp3 = sext(tmp4);
  local tmp6:8;
  tmp6 = tmp0 * tmp3;
  M2_dpmpyuu_s0_Rdd32 = tmp6;
}

:M2_dpmpyuu_acc_s0 M2_dpmpyuu_acc_s0_Rxx32 M2_dpmpyuu_acc_s0_Rs32 M2_dpmpyuu_acc_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_dpmpyuu_acc_s0_Rxx32 & M2_dpmpyuu_acc_s0_Rs32 & M2_dpmpyuu_acc_s0_Rt32 {
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = M2_dpmpyuu_acc_s0_Rs32;
  tmp1 = tmp2;
  tmp0 = sext(tmp1);
  local tmp3:8;
  local tmp4:4;
  local tmp5:4;
  tmp5 = M2_dpmpyuu_acc_s0_Rt32;
  tmp4 = tmp5;
  tmp3 = sext(tmp4);
  local tmp6:8;
  tmp6 = tmp0 * tmp3;
  local tmp7:8;
  tmp7 = M2_dpmpyuu_acc_s0_Rxx32 + tmp6;
  M2_dpmpyuu_acc_s0_Rxx32 = tmp7;
}

:M2_dpmpyuu_nac_s0 M2_dpmpyuu_nac_s0_Rxx32 M2_dpmpyuu_nac_s0_Rs32 M2_dpmpyuu_nac_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_dpmpyuu_nac_s0_Rxx32 & M2_dpmpyuu_nac_s0_Rs32 & M2_dpmpyuu_nac_s0_Rt32 {
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = M2_dpmpyuu_nac_s0_Rs32;
  tmp1 = tmp2;
  tmp0 = sext(tmp1);
  local tmp3:8;
  local tmp4:4;
  local tmp5:4;
  tmp5 = M2_dpmpyuu_nac_s0_Rt32;
  tmp4 = tmp5;
  tmp3 = sext(tmp4);
  local tmp6:8;
  tmp6 = tmp0 * tmp3;
  local tmp7:8;
  tmp7 = M2_dpmpyuu_nac_s0_Rxx32 - tmp6;
  M2_dpmpyuu_nac_s0_Rxx32 = tmp7;
}

:M2_mpy_up M2_mpy_up_Rd32 M2_mpy_up_Rs32 M2_mpy_up_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_up_Rd32 & M2_mpy_up_Rs32 & M2_mpy_up_Rt32 {
  local tmp0:8;
  local tmp1:4;
  tmp1 = M2_mpy_up_Rs32;
  tmp0 = zext(tmp1);
  local tmp2:8;
  local tmp3:4;
  tmp3 = M2_mpy_up_Rt32;
  tmp2 = zext(tmp3);
  local tmp4:8;
  tmp4 = tmp0 * tmp2;
  local tmp5:4;
  tmp5 = 32;
  local tmp6:8;
  tmp6 = zext(tmp5);
  local tmp7:8;
  tmp7 = tmp4 s>> tmp6;
  M2_mpy_up_Rd32 = tmp7:4;
}

:M2_mpy_up_s1 M2_mpy_up_s1_Rd32 M2_mpy_up_s1_Rs32 M2_mpy_up_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_up_s1_Rd32 & M2_mpy_up_s1_Rs32 & M2_mpy_up_s1_Rt32 {
  local tmp0:8;
  local tmp1:4;
  tmp1 = M2_mpy_up_s1_Rs32;
  tmp0 = zext(tmp1);
  local tmp2:8;
  local tmp3:4;
  tmp3 = M2_mpy_up_s1_Rt32;
  tmp2 = zext(tmp3);
  local tmp4:8;
  tmp4 = tmp0 * tmp2;
  local tmp5:4;
  tmp5 = 31;
  local tmp6:8;
  tmp6 = zext(tmp5);
  local tmp7:8;
  tmp7 = tmp4 s>> tmp6;
  M2_mpy_up_s1_Rd32 = tmp7:4;
}

:M2_mpy_up_s1_sat M2_mpy_up_s1_sat_Rd32 M2_mpy_up_s1_sat_Rs32 M2_mpy_up_s1_sat_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpy_up_s1_sat_Rd32 & M2_mpy_up_s1_sat_Rs32 & M2_mpy_up_s1_sat_Rt32 unimpl

:M2_mpyu_up M2_mpyu_up_Rd32 M2_mpyu_up_Rs32 M2_mpyu_up_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyu_up_Rd32 & M2_mpyu_up_Rs32 & M2_mpyu_up_Rt32 {
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = M2_mpyu_up_Rs32;
  tmp1 = tmp2;
  tmp0 = sext(tmp1);
  local tmp3:8;
  local tmp4:4;
  local tmp5:4;
  tmp5 = M2_mpyu_up_Rt32;
  tmp4 = tmp5;
  tmp3 = sext(tmp4);
  local tmp6:8;
  tmp6 = tmp0 * tmp3;
  local tmp7:4;
  tmp7 = 32;
  local tmp8:8;
  tmp8 = zext(tmp7);
  local tmp9:8;
  tmp9 = tmp6 s>> tmp8;
  M2_mpyu_up_Rd32 = tmp9:4;
}

:M2_mpysu_up M2_mpysu_up_Rd32 M2_mpysu_up_Rs32 M2_mpysu_up_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpysu_up_Rd32 & M2_mpysu_up_Rs32 & M2_mpysu_up_Rt32 {
  local tmp0:8;
  local tmp1:4;
  tmp1 = M2_mpysu_up_Rs32;
  tmp0 = zext(tmp1);
  local tmp2:8;
  local tmp3:4;
  local tmp4:4;
  tmp4 = M2_mpysu_up_Rt32;
  tmp3 = tmp4;
  tmp2 = sext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 * tmp2;
  local tmp6:4;
  tmp6 = 32;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = tmp5 s>> tmp7;
  M2_mpysu_up_Rd32 = tmp8:4;
}

:M2_dpmpyss_rnd_s0 M2_dpmpyss_rnd_s0_Rd32 M2_dpmpyss_rnd_s0_Rs32 M2_dpmpyss_rnd_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_dpmpyss_rnd_s0_Rd32 & M2_dpmpyss_rnd_s0_Rs32 & M2_dpmpyss_rnd_s0_Rt32 {
  local tmp0:8;
  local tmp1:4;
  tmp1 = M2_dpmpyss_rnd_s0_Rs32;
  tmp0 = zext(tmp1);
  local tmp2:8;
  local tmp3:4;
  tmp3 = M2_dpmpyss_rnd_s0_Rt32;
  tmp2 = zext(tmp3);
  local tmp4:8;
  tmp4 = tmp0 * tmp2;
  local tmp5:8;
  local tmp6:4;
  tmp6 = 2147483648;
  tmp5 = zext(tmp6);
  local tmp7:8;
  tmp7 = tmp4 + tmp5;
  local tmp8:4;
  tmp8 = 32;
  local tmp9:8;
  tmp9 = zext(tmp8);
  local tmp10:8;
  tmp10 = tmp7 s>> tmp9;
  M2_dpmpyss_rnd_s0_Rd32 = tmp10:4;
}

:M4_mac_up_s1_sat M4_mac_up_s1_sat_Rx32 M4_mac_up_s1_sat_Rs32 M4_mac_up_s1_sat_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_mac_up_s1_sat_Rx32 & M4_mac_up_s1_sat_Rs32 & M4_mac_up_s1_sat_Rt32 unimpl

:M4_nac_up_s1_sat M4_nac_up_s1_sat_Rx32 M4_nac_up_s1_sat_Rs32 M4_nac_up_s1_sat_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_nac_up_s1_sat_Rx32 & M4_nac_up_s1_sat_Rs32 & M4_nac_up_s1_sat_Rt32 unimpl

:M2_mpyi M2_mpyi_Rd32 M2_mpyi_Rs32 M2_mpyi_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mpyi_Rd32 & M2_mpyi_Rs32 & M2_mpyi_Rt32 {
  local tmp0:4;
  tmp0 = M2_mpyi_Rs32 * M2_mpyi_Rt32;
  M2_mpyi_Rd32 = tmp0;
}

:M2_maci M2_maci_Rx32 M2_maci_Rs32 M2_maci_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_maci_Rx32 & M2_maci_Rs32 & M2_maci_Rt32 {
  local tmp0:4;
  tmp0 = M2_maci_Rs32 * M2_maci_Rt32;
  local tmp1:4;
  tmp1 = M2_maci_Rx32 + tmp0;
  M2_maci_Rx32 = tmp1;
}

:M2_mnaci M2_mnaci_Rx32 M2_mnaci_Rs32 M2_mnaci_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mnaci_Rx32 & M2_mnaci_Rs32 & M2_mnaci_Rt32 {
  local tmp0:4;
  tmp0 = M2_mnaci_Rs32 * M2_mnaci_Rt32;
  local tmp1:4;
  tmp1 = M2_mnaci_Rx32 - tmp0;
  M2_mnaci_Rx32 = tmp1;
}

:M2_acci M2_acci_Rx32 M2_acci_Rs32 M2_acci_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_acci_Rx32 & M2_acci_Rs32 & M2_acci_Rt32 {
  local tmp0:4;
  tmp0 = M2_acci_Rx32 + M2_acci_Rs32;
  local tmp1:4;
  tmp1 = tmp0 + M2_acci_Rt32;
  M2_acci_Rx32 = tmp1;
}

:M2_accii M2_accii_Rx32 M2_accii_Rs32 M2_accii_s8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_accii_Rx32 & M2_accii_Rs32 & M2_accii_s8 {
  local tmp0:4;
  tmp0 = M2_accii_Rx32 + M2_accii_Rs32;
  local tmp1:4;
  tmp1 = tmp0 + M2_accii_s8;
  M2_accii_Rx32 = tmp1;
}

:M2_nacci M2_nacci_Rx32 M2_nacci_Rs32 M2_nacci_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_nacci_Rx32 & M2_nacci_Rs32 & M2_nacci_Rt32 {
  local tmp0:4;
  tmp0 = M2_nacci_Rs32 + M2_nacci_Rt32;
  local tmp1:4;
  tmp1 = M2_nacci_Rx32 - tmp0;
  M2_nacci_Rx32 = tmp1;
}

:M2_naccii M2_naccii_Rx32 M2_naccii_Rs32 M2_naccii_s8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_naccii_Rx32 & M2_naccii_Rs32 & M2_naccii_s8 {
  local tmp0:4;
  tmp0 = M2_naccii_Rs32 + M2_naccii_s8;
  local tmp1:4;
  tmp1 = M2_naccii_Rx32 - tmp0;
  M2_naccii_Rx32 = tmp1;
}

:M2_subacc M2_subacc_Rx32 M2_subacc_Rt32 M2_subacc_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_subacc_Rx32 & M2_subacc_Rt32 & M2_subacc_Rs32 {
  local tmp0:4;
  tmp0 = M2_subacc_Rx32 + M2_subacc_Rt32;
  local tmp1:4;
  tmp1 = tmp0 - M2_subacc_Rs32;
  M2_subacc_Rx32 = tmp1;
}

:M4_mpyrr_addr M4_mpyrr_addr_Ry32 M4_mpyrr_addr_Ru32 M4_mpyrr_addr_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_mpyrr_addr_Ry32 & M4_mpyrr_addr_Ru32 & M4_mpyrr_addr_Rs32 {
  local tmp0:4;
  tmp0 = M4_mpyrr_addr_Rs32 * M4_mpyrr_addr_Ry32;
  local tmp1:4;
  tmp1 = M4_mpyrr_addr_Ru32 + tmp0;
  M4_mpyrr_addr_Ry32 = tmp1;
}

:M4_mpyri_addr_u2 M4_mpyri_addr_u2_Rd32 M4_mpyri_addr_u2_Ru32 M4_mpyri_addr_u2_Rs32 M4_mpyri_addr_u2_u6_2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & M4_mpyri_addr_u2_Rd32 & M4_mpyri_addr_u2_Ru32 & M4_mpyri_addr_u2_Rs32 & M4_mpyri_addr_u2_u6_2 {
  local tmp0:4;
  tmp0 = M4_mpyri_addr_u2_Rs32 * M4_mpyri_addr_u2_u6_2;
  local tmp1:4;
  tmp1 = M4_mpyri_addr_u2_Ru32 + tmp0;
  M4_mpyri_addr_u2_Rd32 = tmp1;
}

:M4_mpyri_addr M4_mpyri_addr_Rd32 M4_mpyri_addr_Ru32 M4_mpyri_addr_Rs32 M4_mpyri_addr_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & M4_mpyri_addr_Rd32 & M4_mpyri_addr_Ru32 & M4_mpyri_addr_Rs32 & M4_mpyri_addr_u6 {
  local tmp0:4;
  tmp0 = M4_mpyri_addr_Rs32 * M4_mpyri_addr_u6;
  local tmp1:4;
  tmp1 = M4_mpyri_addr_Ru32 + tmp0;
  M4_mpyri_addr_Rd32 = tmp1;
}

:M4_mpyri_addi M4_mpyri_addi_Rd32 M4_mpyri_addi_Rs32 M4_mpyri_addi_u6 M4_mpyri_addi_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & M4_mpyri_addi_Rd32 & M4_mpyri_addi_Rs32 & M4_mpyri_addi_u6 & M4_mpyri_addi_U6 {
  local tmp0:4;
  tmp0 = M4_mpyri_addi_Rs32 * M4_mpyri_addi_U6;
  local tmp1:4;
  tmp1 = M4_mpyri_addi_u6 + tmp0;
  M4_mpyri_addi_Rd32 = tmp1;
}

:M4_mpyrr_addi M4_mpyrr_addi_Rd32 M4_mpyrr_addi_Rs32 M4_mpyrr_addi_Rt32 M4_mpyrr_addi_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & M4_mpyrr_addi_Rd32 & M4_mpyrr_addi_Rs32 & M4_mpyrr_addi_Rt32 & M4_mpyrr_addi_u6 {
  local tmp0:4;
  tmp0 = M4_mpyrr_addi_Rs32 * M4_mpyrr_addi_Rt32;
  local tmp1:4;
  tmp1 = M4_mpyrr_addi_u6 + tmp0;
  M4_mpyrr_addi_Rd32 = tmp1;
}

:M2_vmpy2s_s0 M2_vmpy2s_s0_Rdd32 M2_vmpy2s_s0_Rs32 M2_vmpy2s_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmpy2s_s0_Rdd32 & M2_vmpy2s_s0_Rs32 & M2_vmpy2s_s0_Rt32 unimpl

:M2_vmpy2s_s1 M2_vmpy2s_s1_Rdd32 M2_vmpy2s_s1_Rs32 M2_vmpy2s_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmpy2s_s1_Rdd32 & M2_vmpy2s_s1_Rs32 & M2_vmpy2s_s1_Rt32 unimpl

:M2_vmac2s_s0 M2_vmac2s_s0_Rxx32 M2_vmac2s_s0_Rs32 M2_vmac2s_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmac2s_s0_Rxx32 & M2_vmac2s_s0_Rs32 & M2_vmac2s_s0_Rt32 unimpl

:M2_vmac2s_s1 M2_vmac2s_s1_Rxx32 M2_vmac2s_s1_Rs32 M2_vmac2s_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmac2s_s1_Rxx32 & M2_vmac2s_s1_Rs32 & M2_vmac2s_s1_Rt32 unimpl

:M2_vmpy2su_s0 M2_vmpy2su_s0_Rdd32 M2_vmpy2su_s0_Rs32 M2_vmpy2su_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmpy2su_s0_Rdd32 & M2_vmpy2su_s0_Rs32 & M2_vmpy2su_s0_Rt32 unimpl

:M2_vmpy2su_s1 M2_vmpy2su_s1_Rdd32 M2_vmpy2su_s1_Rs32 M2_vmpy2su_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmpy2su_s1_Rdd32 & M2_vmpy2su_s1_Rs32 & M2_vmpy2su_s1_Rt32 unimpl

:M2_vmac2su_s0 M2_vmac2su_s0_Rxx32 M2_vmac2su_s0_Rs32 M2_vmac2su_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmac2su_s0_Rxx32 & M2_vmac2su_s0_Rs32 & M2_vmac2su_s0_Rt32 unimpl

:M2_vmac2su_s1 M2_vmac2su_s1_Rxx32 M2_vmac2su_s1_Rs32 M2_vmac2su_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmac2su_s1_Rxx32 & M2_vmac2su_s1_Rs32 & M2_vmac2su_s1_Rt32 unimpl

:M2_vmpy2s_s0pack M2_vmpy2s_s0pack_Rd32 M2_vmpy2s_s0pack_Rs32 M2_vmpy2s_s0pack_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmpy2s_s0pack_Rd32 & M2_vmpy2s_s0pack_Rs32 & M2_vmpy2s_s0pack_Rt32 unimpl

:M2_vmpy2s_s1pack M2_vmpy2s_s1pack_Rd32 M2_vmpy2s_s1pack_Rs32 M2_vmpy2s_s1pack_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmpy2s_s1pack_Rd32 & M2_vmpy2s_s1pack_Rs32 & M2_vmpy2s_s1pack_Rt32 unimpl

:M2_vmac2 M2_vmac2_Rxx32 M2_vmac2_Rs32 M2_vmac2_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmac2_Rxx32 & M2_vmac2_Rs32 & M2_vmac2_Rt32 unimpl

:M2_vmpy2es_s0 M2_vmpy2es_s0_Rdd32 M2_vmpy2es_s0_Rss32 M2_vmpy2es_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmpy2es_s0_Rdd32 & M2_vmpy2es_s0_Rss32 & M2_vmpy2es_s0_Rtt32 unimpl

:M2_vmpy2es_s1 M2_vmpy2es_s1_Rdd32 M2_vmpy2es_s1_Rss32 M2_vmpy2es_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmpy2es_s1_Rdd32 & M2_vmpy2es_s1_Rss32 & M2_vmpy2es_s1_Rtt32 unimpl

:M2_vmac2es_s0 M2_vmac2es_s0_Rxx32 M2_vmac2es_s0_Rss32 M2_vmac2es_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmac2es_s0_Rxx32 & M2_vmac2es_s0_Rss32 & M2_vmac2es_s0_Rtt32 unimpl

:M2_vmac2es_s1 M2_vmac2es_s1_Rxx32 M2_vmac2es_s1_Rss32 M2_vmac2es_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmac2es_s1_Rxx32 & M2_vmac2es_s1_Rss32 & M2_vmac2es_s1_Rtt32 unimpl

:M2_vmac2es M2_vmac2es_Rxx32 M2_vmac2es_Rss32 M2_vmac2es_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vmac2es_Rxx32 & M2_vmac2es_Rss32 & M2_vmac2es_Rtt32 unimpl

:M2_vrmac_s0 M2_vrmac_s0_Rxx32 M2_vrmac_s0_Rss32 M2_vrmac_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrmac_s0_Rxx32 & M2_vrmac_s0_Rss32 & M2_vrmac_s0_Rtt32 unimpl

:M2_vrmpy_s0 M2_vrmpy_s0_Rdd32 M2_vrmpy_s0_Rss32 M2_vrmpy_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrmpy_s0_Rdd32 & M2_vrmpy_s0_Rss32 & M2_vrmpy_s0_Rtt32 unimpl

:M2_vdmpyrs_s0 M2_vdmpyrs_s0_Rd32 M2_vdmpyrs_s0_Rss32 M2_vdmpyrs_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vdmpyrs_s0_Rd32 & M2_vdmpyrs_s0_Rss32 & M2_vdmpyrs_s0_Rtt32 unimpl

:M2_vdmpyrs_s1 M2_vdmpyrs_s1_Rd32 M2_vdmpyrs_s1_Rss32 M2_vdmpyrs_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vdmpyrs_s1_Rd32 & M2_vdmpyrs_s1_Rss32 & M2_vdmpyrs_s1_Rtt32 unimpl

:M5_vrmpybuu M5_vrmpybuu_Rdd32 M5_vrmpybuu_Rss32 M5_vrmpybuu_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M5_vrmpybuu_Rdd32 & M5_vrmpybuu_Rss32 & M5_vrmpybuu_Rtt32 unimpl

:M5_vrmacbuu M5_vrmacbuu_Rxx32 M5_vrmacbuu_Rss32 M5_vrmacbuu_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M5_vrmacbuu_Rxx32 & M5_vrmacbuu_Rss32 & M5_vrmacbuu_Rtt32 unimpl

:M5_vrmpybsu M5_vrmpybsu_Rdd32 M5_vrmpybsu_Rss32 M5_vrmpybsu_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M5_vrmpybsu_Rdd32 & M5_vrmpybsu_Rss32 & M5_vrmpybsu_Rtt32 unimpl

:M5_vrmacbsu M5_vrmacbsu_Rxx32 M5_vrmacbsu_Rss32 M5_vrmacbsu_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M5_vrmacbsu_Rxx32 & M5_vrmacbsu_Rss32 & M5_vrmacbsu_Rtt32 unimpl

:M5_vmpybuu M5_vmpybuu_Rdd32 M5_vmpybuu_Rs32 M5_vmpybuu_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M5_vmpybuu_Rdd32 & M5_vmpybuu_Rs32 & M5_vmpybuu_Rt32 unimpl

:M5_vmpybsu M5_vmpybsu_Rdd32 M5_vmpybsu_Rs32 M5_vmpybsu_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M5_vmpybsu_Rdd32 & M5_vmpybsu_Rs32 & M5_vmpybsu_Rt32 unimpl

:M5_vmacbuu M5_vmacbuu_Rxx32 M5_vmacbuu_Rs32 M5_vmacbuu_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M5_vmacbuu_Rxx32 & M5_vmacbuu_Rs32 & M5_vmacbuu_Rt32 unimpl

:M5_vmacbsu M5_vmacbsu_Rxx32 M5_vmacbsu_Rs32 M5_vmacbsu_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M5_vmacbsu_Rxx32 & M5_vmacbsu_Rs32 & M5_vmacbsu_Rt32 unimpl

:M5_vdmpybsu M5_vdmpybsu_Rdd32 M5_vdmpybsu_Rss32 M5_vdmpybsu_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M5_vdmpybsu_Rdd32 & M5_vdmpybsu_Rss32 & M5_vdmpybsu_Rtt32 unimpl

:M5_vdmacbsu M5_vdmacbsu_Rxx32 M5_vdmacbsu_Rss32 M5_vdmacbsu_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M5_vdmacbsu_Rxx32 & M5_vdmacbsu_Rss32 & M5_vdmacbsu_Rtt32 unimpl

:M2_vdmacs_s0 M2_vdmacs_s0_Rxx32 M2_vdmacs_s0_Rss32 M2_vdmacs_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vdmacs_s0_Rxx32 & M2_vdmacs_s0_Rss32 & M2_vdmacs_s0_Rtt32 unimpl

:M2_vdmacs_s1 M2_vdmacs_s1_Rxx32 M2_vdmacs_s1_Rss32 M2_vdmacs_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vdmacs_s1_Rxx32 & M2_vdmacs_s1_Rss32 & M2_vdmacs_s1_Rtt32 unimpl

:M2_vdmpys_s0 M2_vdmpys_s0_Rdd32 M2_vdmpys_s0_Rss32 M2_vdmpys_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vdmpys_s0_Rdd32 & M2_vdmpys_s0_Rss32 & M2_vdmpys_s0_Rtt32 unimpl

:M2_vdmpys_s1 M2_vdmpys_s1_Rdd32 M2_vdmpys_s1_Rss32 M2_vdmpys_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vdmpys_s1_Rdd32 & M2_vdmpys_s1_Rss32 & M2_vdmpys_s1_Rtt32 unimpl

:M2_cmpyrs_s0 M2_cmpyrs_s0_Rd32 M2_cmpyrs_s0_Rs32 M2_cmpyrs_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmpyrs_s0_Rd32 & M2_cmpyrs_s0_Rs32 & M2_cmpyrs_s0_Rt32 unimpl

:M2_cmpyrs_s1 M2_cmpyrs_s1_Rd32 M2_cmpyrs_s1_Rs32 M2_cmpyrs_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmpyrs_s1_Rd32 & M2_cmpyrs_s1_Rs32 & M2_cmpyrs_s1_Rt32 unimpl

:M2_cmpyrsc_s0 M2_cmpyrsc_s0_Rd32 M2_cmpyrsc_s0_Rs32 M2_cmpyrsc_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmpyrsc_s0_Rd32 & M2_cmpyrsc_s0_Rs32 & M2_cmpyrsc_s0_Rt32 unimpl

:M2_cmpyrsc_s1 M2_cmpyrsc_s1_Rd32 M2_cmpyrsc_s1_Rs32 M2_cmpyrsc_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmpyrsc_s1_Rd32 & M2_cmpyrsc_s1_Rs32 & M2_cmpyrsc_s1_Rt32 unimpl

:M2_cmacs_s0 M2_cmacs_s0_Rxx32 M2_cmacs_s0_Rs32 M2_cmacs_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmacs_s0_Rxx32 & M2_cmacs_s0_Rs32 & M2_cmacs_s0_Rt32 unimpl

:M2_cmacs_s1 M2_cmacs_s1_Rxx32 M2_cmacs_s1_Rs32 M2_cmacs_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmacs_s1_Rxx32 & M2_cmacs_s1_Rs32 & M2_cmacs_s1_Rt32 unimpl

:M2_cmacsc_s0 M2_cmacsc_s0_Rxx32 M2_cmacsc_s0_Rs32 M2_cmacsc_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmacsc_s0_Rxx32 & M2_cmacsc_s0_Rs32 & M2_cmacsc_s0_Rt32 unimpl

:M2_cmacsc_s1 M2_cmacsc_s1_Rxx32 M2_cmacsc_s1_Rs32 M2_cmacsc_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmacsc_s1_Rxx32 & M2_cmacsc_s1_Rs32 & M2_cmacsc_s1_Rt32 unimpl

:M2_cmpys_s0 M2_cmpys_s0_Rdd32 M2_cmpys_s0_Rs32 M2_cmpys_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmpys_s0_Rdd32 & M2_cmpys_s0_Rs32 & M2_cmpys_s0_Rt32 unimpl

:M2_cmpys_s1 M2_cmpys_s1_Rdd32 M2_cmpys_s1_Rs32 M2_cmpys_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmpys_s1_Rdd32 & M2_cmpys_s1_Rs32 & M2_cmpys_s1_Rt32 unimpl

:M2_cmpysc_s0 M2_cmpysc_s0_Rdd32 M2_cmpysc_s0_Rs32 M2_cmpysc_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmpysc_s0_Rdd32 & M2_cmpysc_s0_Rs32 & M2_cmpysc_s0_Rt32 unimpl

:M2_cmpysc_s1 M2_cmpysc_s1_Rdd32 M2_cmpysc_s1_Rs32 M2_cmpysc_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmpysc_s1_Rdd32 & M2_cmpysc_s1_Rs32 & M2_cmpysc_s1_Rt32 unimpl

:M2_cnacs_s0 M2_cnacs_s0_Rxx32 M2_cnacs_s0_Rs32 M2_cnacs_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cnacs_s0_Rxx32 & M2_cnacs_s0_Rs32 & M2_cnacs_s0_Rt32 unimpl

:M2_cnacs_s1 M2_cnacs_s1_Rxx32 M2_cnacs_s1_Rs32 M2_cnacs_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cnacs_s1_Rxx32 & M2_cnacs_s1_Rs32 & M2_cnacs_s1_Rt32 unimpl

:M2_cnacsc_s0 M2_cnacsc_s0_Rxx32 M2_cnacsc_s0_Rs32 M2_cnacsc_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cnacsc_s0_Rxx32 & M2_cnacsc_s0_Rs32 & M2_cnacsc_s0_Rt32 unimpl

:M2_cnacsc_s1 M2_cnacsc_s1_Rxx32 M2_cnacsc_s1_Rs32 M2_cnacsc_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cnacsc_s1_Rxx32 & M2_cnacsc_s1_Rs32 & M2_cnacsc_s1_Rt32 unimpl

:M2_vrcmpys_s1_h M2_vrcmpys_s1_h_Rdd32 M2_vrcmpys_s1_h_Rss32 M2_vrcmpys_s1_h_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrcmpys_s1_h_Rdd32 & M2_vrcmpys_s1_h_Rss32 & M2_vrcmpys_s1_h_Rtt32 unimpl

:M2_vrcmpys_s1_l M2_vrcmpys_s1_l_Rdd32 M2_vrcmpys_s1_l_Rss32 M2_vrcmpys_s1_l_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrcmpys_s1_l_Rdd32 & M2_vrcmpys_s1_l_Rss32 & M2_vrcmpys_s1_l_Rtt32 unimpl

:M2_vrcmpys_acc_s1_h M2_vrcmpys_acc_s1_h_Rxx32 M2_vrcmpys_acc_s1_h_Rss32 M2_vrcmpys_acc_s1_h_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrcmpys_acc_s1_h_Rxx32 & M2_vrcmpys_acc_s1_h_Rss32 & M2_vrcmpys_acc_s1_h_Rtt32 unimpl

:M2_vrcmpys_acc_s1_l M2_vrcmpys_acc_s1_l_Rxx32 M2_vrcmpys_acc_s1_l_Rss32 M2_vrcmpys_acc_s1_l_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrcmpys_acc_s1_l_Rxx32 & M2_vrcmpys_acc_s1_l_Rss32 & M2_vrcmpys_acc_s1_l_Rtt32 unimpl

:M2_vrcmpys_s1rp_h M2_vrcmpys_s1rp_h_Rd32 M2_vrcmpys_s1rp_h_Rss32 M2_vrcmpys_s1rp_h_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrcmpys_s1rp_h_Rd32 & M2_vrcmpys_s1rp_h_Rss32 & M2_vrcmpys_s1rp_h_Rtt32 unimpl

:M2_vrcmpys_s1rp_l M2_vrcmpys_s1rp_l_Rd32 M2_vrcmpys_s1rp_l_Rss32 M2_vrcmpys_s1rp_l_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrcmpys_s1rp_l_Rd32 & M2_vrcmpys_s1rp_l_Rss32 & M2_vrcmpys_s1rp_l_Rtt32 unimpl

:M2_mmacls_s0 M2_mmacls_s0_Rxx32 M2_mmacls_s0_Rss32 M2_mmacls_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmacls_s0_Rxx32 & M2_mmacls_s0_Rss32 & M2_mmacls_s0_Rtt32 unimpl

:M2_mmacls_s1 M2_mmacls_s1_Rxx32 M2_mmacls_s1_Rss32 M2_mmacls_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmacls_s1_Rxx32 & M2_mmacls_s1_Rss32 & M2_mmacls_s1_Rtt32 unimpl

:M2_mmachs_s0 M2_mmachs_s0_Rxx32 M2_mmachs_s0_Rss32 M2_mmachs_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmachs_s0_Rxx32 & M2_mmachs_s0_Rss32 & M2_mmachs_s0_Rtt32 unimpl

:M2_mmachs_s1 M2_mmachs_s1_Rxx32 M2_mmachs_s1_Rss32 M2_mmachs_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmachs_s1_Rxx32 & M2_mmachs_s1_Rss32 & M2_mmachs_s1_Rtt32 unimpl

:M2_mmpyl_s0 M2_mmpyl_s0_Rdd32 M2_mmpyl_s0_Rss32 M2_mmpyl_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyl_s0_Rdd32 & M2_mmpyl_s0_Rss32 & M2_mmpyl_s0_Rtt32 unimpl

:M2_mmpyl_s1 M2_mmpyl_s1_Rdd32 M2_mmpyl_s1_Rss32 M2_mmpyl_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyl_s1_Rdd32 & M2_mmpyl_s1_Rss32 & M2_mmpyl_s1_Rtt32 unimpl

:M2_mmpyh_s0 M2_mmpyh_s0_Rdd32 M2_mmpyh_s0_Rss32 M2_mmpyh_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyh_s0_Rdd32 & M2_mmpyh_s0_Rss32 & M2_mmpyh_s0_Rtt32 unimpl

:M2_mmpyh_s1 M2_mmpyh_s1_Rdd32 M2_mmpyh_s1_Rss32 M2_mmpyh_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyh_s1_Rdd32 & M2_mmpyh_s1_Rss32 & M2_mmpyh_s1_Rtt32 unimpl

:M2_mmacls_rs0 M2_mmacls_rs0_Rxx32 M2_mmacls_rs0_Rss32 M2_mmacls_rs0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmacls_rs0_Rxx32 & M2_mmacls_rs0_Rss32 & M2_mmacls_rs0_Rtt32 unimpl

:M2_mmacls_rs1 M2_mmacls_rs1_Rxx32 M2_mmacls_rs1_Rss32 M2_mmacls_rs1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmacls_rs1_Rxx32 & M2_mmacls_rs1_Rss32 & M2_mmacls_rs1_Rtt32 unimpl

:M2_mmachs_rs0 M2_mmachs_rs0_Rxx32 M2_mmachs_rs0_Rss32 M2_mmachs_rs0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmachs_rs0_Rxx32 & M2_mmachs_rs0_Rss32 & M2_mmachs_rs0_Rtt32 unimpl

:M2_mmachs_rs1 M2_mmachs_rs1_Rxx32 M2_mmachs_rs1_Rss32 M2_mmachs_rs1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmachs_rs1_Rxx32 & M2_mmachs_rs1_Rss32 & M2_mmachs_rs1_Rtt32 unimpl

:M2_mmpyl_rs0 M2_mmpyl_rs0_Rdd32 M2_mmpyl_rs0_Rss32 M2_mmpyl_rs0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyl_rs0_Rdd32 & M2_mmpyl_rs0_Rss32 & M2_mmpyl_rs0_Rtt32 unimpl

:M2_mmpyl_rs1 M2_mmpyl_rs1_Rdd32 M2_mmpyl_rs1_Rss32 M2_mmpyl_rs1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyl_rs1_Rdd32 & M2_mmpyl_rs1_Rss32 & M2_mmpyl_rs1_Rtt32 unimpl

:M2_mmpyh_rs0 M2_mmpyh_rs0_Rdd32 M2_mmpyh_rs0_Rss32 M2_mmpyh_rs0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyh_rs0_Rdd32 & M2_mmpyh_rs0_Rss32 & M2_mmpyh_rs0_Rtt32 unimpl

:M2_mmpyh_rs1 M2_mmpyh_rs1_Rdd32 M2_mmpyh_rs1_Rss32 M2_mmpyh_rs1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyh_rs1_Rdd32 & M2_mmpyh_rs1_Rss32 & M2_mmpyh_rs1_Rtt32 unimpl

:M4_vrmpyeh_s0 M4_vrmpyeh_s0_Rdd32 M4_vrmpyeh_s0_Rss32 M4_vrmpyeh_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_vrmpyeh_s0_Rdd32 & M4_vrmpyeh_s0_Rss32 & M4_vrmpyeh_s0_Rtt32 unimpl

:M4_vrmpyeh_s1 M4_vrmpyeh_s1_Rdd32 M4_vrmpyeh_s1_Rss32 M4_vrmpyeh_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_vrmpyeh_s1_Rdd32 & M4_vrmpyeh_s1_Rss32 & M4_vrmpyeh_s1_Rtt32 unimpl

:M4_vrmpyeh_acc_s0 M4_vrmpyeh_acc_s0_Rxx32 M4_vrmpyeh_acc_s0_Rss32 M4_vrmpyeh_acc_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_vrmpyeh_acc_s0_Rxx32 & M4_vrmpyeh_acc_s0_Rss32 & M4_vrmpyeh_acc_s0_Rtt32 unimpl

:M4_vrmpyeh_acc_s1 M4_vrmpyeh_acc_s1_Rxx32 M4_vrmpyeh_acc_s1_Rss32 M4_vrmpyeh_acc_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_vrmpyeh_acc_s1_Rxx32 & M4_vrmpyeh_acc_s1_Rss32 & M4_vrmpyeh_acc_s1_Rtt32 unimpl

:M4_vrmpyoh_s0 M4_vrmpyoh_s0_Rdd32 M4_vrmpyoh_s0_Rss32 M4_vrmpyoh_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_vrmpyoh_s0_Rdd32 & M4_vrmpyoh_s0_Rss32 & M4_vrmpyoh_s0_Rtt32 unimpl

:M4_vrmpyoh_s1 M4_vrmpyoh_s1_Rdd32 M4_vrmpyoh_s1_Rss32 M4_vrmpyoh_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_vrmpyoh_s1_Rdd32 & M4_vrmpyoh_s1_Rss32 & M4_vrmpyoh_s1_Rtt32 unimpl

:M4_vrmpyoh_acc_s0 M4_vrmpyoh_acc_s0_Rxx32 M4_vrmpyoh_acc_s0_Rss32 M4_vrmpyoh_acc_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_vrmpyoh_acc_s0_Rxx32 & M4_vrmpyoh_acc_s0_Rss32 & M4_vrmpyoh_acc_s0_Rtt32 unimpl

:M4_vrmpyoh_acc_s1 M4_vrmpyoh_acc_s1_Rxx32 M4_vrmpyoh_acc_s1_Rss32 M4_vrmpyoh_acc_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_vrmpyoh_acc_s1_Rxx32 & M4_vrmpyoh_acc_s1_Rss32 & M4_vrmpyoh_acc_s1_Rtt32 unimpl

:M2_hmmpyl_rs1 M2_hmmpyl_rs1_Rd32 M2_hmmpyl_rs1_Rs32 M2_hmmpyl_rs1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_hmmpyl_rs1_Rd32 & M2_hmmpyl_rs1_Rs32 & M2_hmmpyl_rs1_Rt32 unimpl

:M2_hmmpyh_rs1 M2_hmmpyh_rs1_Rd32 M2_hmmpyh_rs1_Rs32 M2_hmmpyh_rs1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_hmmpyh_rs1_Rd32 & M2_hmmpyh_rs1_Rs32 & M2_hmmpyh_rs1_Rt32 unimpl

:M2_hmmpyl_s1 M2_hmmpyl_s1_Rd32 M2_hmmpyl_s1_Rs32 M2_hmmpyl_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_hmmpyl_s1_Rd32 & M2_hmmpyl_s1_Rs32 & M2_hmmpyl_s1_Rt32 unimpl

:M2_hmmpyh_s1 M2_hmmpyh_s1_Rd32 M2_hmmpyh_s1_Rs32 M2_hmmpyh_s1_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_hmmpyh_s1_Rd32 & M2_hmmpyh_s1_Rs32 & M2_hmmpyh_s1_Rt32 unimpl

:M2_mmaculs_s0 M2_mmaculs_s0_Rxx32 M2_mmaculs_s0_Rss32 M2_mmaculs_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmaculs_s0_Rxx32 & M2_mmaculs_s0_Rss32 & M2_mmaculs_s0_Rtt32 unimpl

:M2_mmaculs_s1 M2_mmaculs_s1_Rxx32 M2_mmaculs_s1_Rss32 M2_mmaculs_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmaculs_s1_Rxx32 & M2_mmaculs_s1_Rss32 & M2_mmaculs_s1_Rtt32 unimpl

:M2_mmacuhs_s0 M2_mmacuhs_s0_Rxx32 M2_mmacuhs_s0_Rss32 M2_mmacuhs_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmacuhs_s0_Rxx32 & M2_mmacuhs_s0_Rss32 & M2_mmacuhs_s0_Rtt32 unimpl

:M2_mmacuhs_s1 M2_mmacuhs_s1_Rxx32 M2_mmacuhs_s1_Rss32 M2_mmacuhs_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmacuhs_s1_Rxx32 & M2_mmacuhs_s1_Rss32 & M2_mmacuhs_s1_Rtt32 unimpl

:M2_mmpyul_s0 M2_mmpyul_s0_Rdd32 M2_mmpyul_s0_Rss32 M2_mmpyul_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyul_s0_Rdd32 & M2_mmpyul_s0_Rss32 & M2_mmpyul_s0_Rtt32 unimpl

:M2_mmpyul_s1 M2_mmpyul_s1_Rdd32 M2_mmpyul_s1_Rss32 M2_mmpyul_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyul_s1_Rdd32 & M2_mmpyul_s1_Rss32 & M2_mmpyul_s1_Rtt32 unimpl

:M2_mmpyuh_s0 M2_mmpyuh_s0_Rdd32 M2_mmpyuh_s0_Rss32 M2_mmpyuh_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyuh_s0_Rdd32 & M2_mmpyuh_s0_Rss32 & M2_mmpyuh_s0_Rtt32 unimpl

:M2_mmpyuh_s1 M2_mmpyuh_s1_Rdd32 M2_mmpyuh_s1_Rss32 M2_mmpyuh_s1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyuh_s1_Rdd32 & M2_mmpyuh_s1_Rss32 & M2_mmpyuh_s1_Rtt32 unimpl

:M2_mmaculs_rs0 M2_mmaculs_rs0_Rxx32 M2_mmaculs_rs0_Rss32 M2_mmaculs_rs0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmaculs_rs0_Rxx32 & M2_mmaculs_rs0_Rss32 & M2_mmaculs_rs0_Rtt32 unimpl

:M2_mmaculs_rs1 M2_mmaculs_rs1_Rxx32 M2_mmaculs_rs1_Rss32 M2_mmaculs_rs1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmaculs_rs1_Rxx32 & M2_mmaculs_rs1_Rss32 & M2_mmaculs_rs1_Rtt32 unimpl

:M2_mmacuhs_rs0 M2_mmacuhs_rs0_Rxx32 M2_mmacuhs_rs0_Rss32 M2_mmacuhs_rs0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmacuhs_rs0_Rxx32 & M2_mmacuhs_rs0_Rss32 & M2_mmacuhs_rs0_Rtt32 unimpl

:M2_mmacuhs_rs1 M2_mmacuhs_rs1_Rxx32 M2_mmacuhs_rs1_Rss32 M2_mmacuhs_rs1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmacuhs_rs1_Rxx32 & M2_mmacuhs_rs1_Rss32 & M2_mmacuhs_rs1_Rtt32 unimpl

:M2_mmpyul_rs0 M2_mmpyul_rs0_Rdd32 M2_mmpyul_rs0_Rss32 M2_mmpyul_rs0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyul_rs0_Rdd32 & M2_mmpyul_rs0_Rss32 & M2_mmpyul_rs0_Rtt32 unimpl

:M2_mmpyul_rs1 M2_mmpyul_rs1_Rdd32 M2_mmpyul_rs1_Rss32 M2_mmpyul_rs1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyul_rs1_Rdd32 & M2_mmpyul_rs1_Rss32 & M2_mmpyul_rs1_Rtt32 unimpl

:M2_mmpyuh_rs0 M2_mmpyuh_rs0_Rdd32 M2_mmpyuh_rs0_Rss32 M2_mmpyuh_rs0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyuh_rs0_Rdd32 & M2_mmpyuh_rs0_Rss32 & M2_mmpyuh_rs0_Rtt32 unimpl

:M2_mmpyuh_rs1 M2_mmpyuh_rs1_Rdd32 M2_mmpyuh_rs1_Rss32 M2_mmpyuh_rs1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_mmpyuh_rs1_Rdd32 & M2_mmpyuh_rs1_Rss32 & M2_mmpyuh_rs1_Rtt32 unimpl

:M2_vrcmaci_s0 M2_vrcmaci_s0_Rxx32 M2_vrcmaci_s0_Rss32 M2_vrcmaci_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrcmaci_s0_Rxx32 & M2_vrcmaci_s0_Rss32 & M2_vrcmaci_s0_Rtt32 unimpl

:M2_vrcmacr_s0 M2_vrcmacr_s0_Rxx32 M2_vrcmacr_s0_Rss32 M2_vrcmacr_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrcmacr_s0_Rxx32 & M2_vrcmacr_s0_Rss32 & M2_vrcmacr_s0_Rtt32 unimpl

:M2_vrcmaci_s0c M2_vrcmaci_s0c_Rxx32 M2_vrcmaci_s0c_Rss32 M2_vrcmaci_s0c_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrcmaci_s0c_Rxx32 & M2_vrcmaci_s0c_Rss32 & M2_vrcmaci_s0c_Rtt32 unimpl

:M2_vrcmacr_s0c M2_vrcmacr_s0c_Rxx32 M2_vrcmacr_s0c_Rss32 M2_vrcmacr_s0c_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrcmacr_s0c_Rxx32 & M2_vrcmacr_s0c_Rss32 & M2_vrcmacr_s0c_Rtt32 unimpl

:M2_cmaci_s0 M2_cmaci_s0_Rxx32 M2_cmaci_s0_Rs32 M2_cmaci_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmaci_s0_Rxx32 & M2_cmaci_s0_Rs32 & M2_cmaci_s0_Rt32 unimpl

:M2_cmacr_s0 M2_cmacr_s0_Rxx32 M2_cmacr_s0_Rs32 M2_cmacr_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmacr_s0_Rxx32 & M2_cmacr_s0_Rs32 & M2_cmacr_s0_Rt32 unimpl

:M2_vrcmpyi_s0 M2_vrcmpyi_s0_Rdd32 M2_vrcmpyi_s0_Rss32 M2_vrcmpyi_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrcmpyi_s0_Rdd32 & M2_vrcmpyi_s0_Rss32 & M2_vrcmpyi_s0_Rtt32 unimpl

:M2_vrcmpyr_s0 M2_vrcmpyr_s0_Rdd32 M2_vrcmpyr_s0_Rss32 M2_vrcmpyr_s0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrcmpyr_s0_Rdd32 & M2_vrcmpyr_s0_Rss32 & M2_vrcmpyr_s0_Rtt32 unimpl

:M2_vrcmpyi_s0c M2_vrcmpyi_s0c_Rdd32 M2_vrcmpyi_s0c_Rss32 M2_vrcmpyi_s0c_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrcmpyi_s0c_Rdd32 & M2_vrcmpyi_s0c_Rss32 & M2_vrcmpyi_s0c_Rtt32 unimpl

:M2_vrcmpyr_s0c M2_vrcmpyr_s0c_Rdd32 M2_vrcmpyr_s0c_Rss32 M2_vrcmpyr_s0c_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vrcmpyr_s0c_Rdd32 & M2_vrcmpyr_s0c_Rss32 & M2_vrcmpyr_s0c_Rtt32 unimpl

:M2_cmpyi_s0 M2_cmpyi_s0_Rdd32 M2_cmpyi_s0_Rs32 M2_cmpyi_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmpyi_s0_Rdd32 & M2_cmpyi_s0_Rs32 & M2_cmpyi_s0_Rt32 unimpl

:M2_cmpyr_s0 M2_cmpyr_s0_Rdd32 M2_cmpyr_s0_Rs32 M2_cmpyr_s0_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_cmpyr_s0_Rdd32 & M2_cmpyr_s0_Rs32 & M2_cmpyr_s0_Rt32 unimpl

:M4_cmpyi_wh M4_cmpyi_wh_Rd32 M4_cmpyi_wh_Rss32 M4_cmpyi_wh_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & M4_cmpyi_wh_Rd32 & M4_cmpyi_wh_Rss32 & M4_cmpyi_wh_Rt32 unimpl

:M4_cmpyr_wh M4_cmpyr_wh_Rd32 M4_cmpyr_wh_Rss32 M4_cmpyr_wh_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & M4_cmpyr_wh_Rd32 & M4_cmpyr_wh_Rss32 & M4_cmpyr_wh_Rt32 unimpl

:M4_cmpyi_whc M4_cmpyi_whc_Rd32 M4_cmpyi_whc_Rss32 M4_cmpyi_whc_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & M4_cmpyi_whc_Rd32 & M4_cmpyi_whc_Rss32 & M4_cmpyi_whc_Rt32 unimpl

:M4_cmpyr_whc M4_cmpyr_whc_Rd32 M4_cmpyr_whc_Rss32 M4_cmpyr_whc_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & M4_cmpyr_whc_Rd32 & M4_cmpyr_whc_Rss32 & M4_cmpyr_whc_Rt32 unimpl

:M2_vcmpy_s0_sat_i M2_vcmpy_s0_sat_i_Rdd32 M2_vcmpy_s0_sat_i_Rss32 M2_vcmpy_s0_sat_i_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vcmpy_s0_sat_i_Rdd32 & M2_vcmpy_s0_sat_i_Rss32 & M2_vcmpy_s0_sat_i_Rtt32 unimpl

:M2_vcmpy_s0_sat_r M2_vcmpy_s0_sat_r_Rdd32 M2_vcmpy_s0_sat_r_Rss32 M2_vcmpy_s0_sat_r_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vcmpy_s0_sat_r_Rdd32 & M2_vcmpy_s0_sat_r_Rss32 & M2_vcmpy_s0_sat_r_Rtt32 unimpl

:M2_vcmpy_s1_sat_i M2_vcmpy_s1_sat_i_Rdd32 M2_vcmpy_s1_sat_i_Rss32 M2_vcmpy_s1_sat_i_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vcmpy_s1_sat_i_Rdd32 & M2_vcmpy_s1_sat_i_Rss32 & M2_vcmpy_s1_sat_i_Rtt32 unimpl

:M2_vcmpy_s1_sat_r M2_vcmpy_s1_sat_r_Rdd32 M2_vcmpy_s1_sat_r_Rss32 M2_vcmpy_s1_sat_r_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vcmpy_s1_sat_r_Rdd32 & M2_vcmpy_s1_sat_r_Rss32 & M2_vcmpy_s1_sat_r_Rtt32 unimpl

:M2_vcmac_s0_sat_i M2_vcmac_s0_sat_i_Rxx32 M2_vcmac_s0_sat_i_Rss32 M2_vcmac_s0_sat_i_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vcmac_s0_sat_i_Rxx32 & M2_vcmac_s0_sat_i_Rss32 & M2_vcmac_s0_sat_i_Rtt32 unimpl

:M2_vcmac_s0_sat_r M2_vcmac_s0_sat_r_Rxx32 M2_vcmac_s0_sat_r_Rss32 M2_vcmac_s0_sat_r_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vcmac_s0_sat_r_Rxx32 & M2_vcmac_s0_sat_r_Rss32 & M2_vcmac_s0_sat_r_Rtt32 unimpl

:S2_vcrotate S2_vcrotate_Rdd32 S2_vcrotate_Rss32 S2_vcrotate_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_vcrotate_Rdd32 & S2_vcrotate_Rss32 & S2_vcrotate_Rt32 unimpl

:S4_vrcrotate_acc S4_vrcrotate_acc_Rxx32 S4_vrcrotate_acc_Rss32 S4_vrcrotate_acc_Rt32 S4_vrcrotate_acc_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S4_vrcrotate_acc_Rxx32 & S4_vrcrotate_acc_Rss32 & S4_vrcrotate_acc_Rt32 & S4_vrcrotate_acc_u2 unimpl

:S4_vrcrotate S4_vrcrotate_Rdd32 S4_vrcrotate_Rss32 S4_vrcrotate_Rt32 S4_vrcrotate_u2 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S4_vrcrotate_Rdd32 & S4_vrcrotate_Rss32 & S4_vrcrotate_Rt32 & S4_vrcrotate_u2 unimpl

:S2_vcnegh S2_vcnegh_Rdd32 S2_vcnegh_Rss32 S2_vcnegh_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_vcnegh_Rdd32 & S2_vcnegh_Rss32 & S2_vcnegh_Rt32 unimpl

:S2_vrcnegh S2_vrcnegh_Rxx32 S2_vrcnegh_Rss32 S2_vrcnegh_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_vrcnegh_Rxx32 & S2_vrcnegh_Rss32 & S2_vrcnegh_Rt32 unimpl

:M4_pmpyw M4_pmpyw_Rdd32 M4_pmpyw_Rs32 M4_pmpyw_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_pmpyw_Rdd32 & M4_pmpyw_Rs32 & M4_pmpyw_Rt32 unimpl

:M4_vpmpyh M4_vpmpyh_Rdd32 M4_vpmpyh_Rs32 M4_vpmpyh_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_vpmpyh_Rdd32 & M4_vpmpyh_Rs32 & M4_vpmpyh_Rt32 unimpl

:M4_pmpyw_acc M4_pmpyw_acc_Rxx32 M4_pmpyw_acc_Rs32 M4_pmpyw_acc_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_pmpyw_acc_Rxx32 & M4_pmpyw_acc_Rs32 & M4_pmpyw_acc_Rt32 unimpl

:M4_vpmpyh_acc M4_vpmpyh_acc_Rxx32 M4_vpmpyh_acc_Rs32 M4_vpmpyh_acc_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_vpmpyh_acc_Rxx32 & M4_vpmpyh_acc_Rs32 & M4_vpmpyh_acc_Rt32 unimpl

:M7_dcmpyrw M7_dcmpyrw_Rdd32 M7_dcmpyrw_Rss32 M7_dcmpyrw_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_dcmpyrw_Rdd32 & M7_dcmpyrw_Rss32 & M7_dcmpyrw_Rtt32 {
  local tmp0:8;
  local tmp1:4;
  local tmp2:8;
  local tmp3:4;
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 32;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = M7_dcmpyrw_Rss32 s>> tmp7;
  local tmp9:8;
  tmp9 = 4294967295;
  local tmp10:8;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:4;
  tmp2 = zext(tmp3);
  tmp1 = tmp2:4;
  tmp0 = zext(tmp1);
  local tmp11:8;
  local tmp12:4;
  local tmp13:8;
  local tmp14:4;
  local tmp15:4;
  tmp15 = 0;
  local tmp16:4;
  tmp16 = 32;
  local tmp17:4;
  tmp17 = tmp15 * tmp16;
  local tmp18:8;
  tmp18 = zext(tmp17);
  local tmp19:8;
  tmp19 = M7_dcmpyrw_Rtt32 s>> tmp18;
  local tmp20:8;
  tmp20 = 4294967295;
  local tmp21:8;
  tmp21 = tmp19 & tmp20;
  tmp14 = tmp21:4;
  tmp13 = zext(tmp14);
  tmp12 = tmp13:4;
  tmp11 = zext(tmp12);
  local tmp22:8;
  tmp22 = tmp0 * tmp11;
  local tmp23:8;
  local tmp24:4;
  local tmp25:8;
  local tmp26:4;
  local tmp27:4;
  tmp27 = 1;
  local tmp28:4;
  tmp28 = 32;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = M7_dcmpyrw_Rss32 s>> tmp30;
  local tmp32:8;
  tmp32 = 4294967295;
  local tmp33:8;
  tmp33 = tmp31 & tmp32;
  tmp26 = tmp33:4;
  tmp25 = zext(tmp26);
  tmp24 = tmp25:4;
  tmp23 = zext(tmp24);
  local tmp34:8;
  local tmp35:4;
  local tmp36:8;
  local tmp37:4;
  local tmp38:4;
  tmp38 = 1;
  local tmp39:4;
  tmp39 = 32;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = M7_dcmpyrw_Rtt32 s>> tmp41;
  local tmp43:8;
  tmp43 = 4294967295;
  local tmp44:8;
  tmp44 = tmp42 & tmp43;
  tmp37 = tmp44:4;
  tmp36 = zext(tmp37);
  tmp35 = tmp36:4;
  tmp34 = zext(tmp35);
  local tmp45:8;
  tmp45 = tmp23 * tmp34;
  local tmp46:8;
  tmp46 = tmp22 - tmp45;
  M7_dcmpyrw_Rdd32 = tmp46;
}

:M7_dcmpyrw_acc M7_dcmpyrw_acc_Rxx32 M7_dcmpyrw_acc_Rss32 M7_dcmpyrw_acc_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_dcmpyrw_acc_Rxx32 & M7_dcmpyrw_acc_Rss32 & M7_dcmpyrw_acc_Rtt32 {
  local tmp0:8;
  local tmp1:4;
  local tmp2:8;
  local tmp3:4;
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 32;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = M7_dcmpyrw_acc_Rss32 s>> tmp7;
  local tmp9:8;
  tmp9 = 4294967295;
  local tmp10:8;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:4;
  tmp2 = zext(tmp3);
  tmp1 = tmp2:4;
  tmp0 = zext(tmp1);
  local tmp11:8;
  local tmp12:4;
  local tmp13:8;
  local tmp14:4;
  local tmp15:4;
  tmp15 = 0;
  local tmp16:4;
  tmp16 = 32;
  local tmp17:4;
  tmp17 = tmp15 * tmp16;
  local tmp18:8;
  tmp18 = zext(tmp17);
  local tmp19:8;
  tmp19 = M7_dcmpyrw_acc_Rtt32 s>> tmp18;
  local tmp20:8;
  tmp20 = 4294967295;
  local tmp21:8;
  tmp21 = tmp19 & tmp20;
  tmp14 = tmp21:4;
  tmp13 = zext(tmp14);
  tmp12 = tmp13:4;
  tmp11 = zext(tmp12);
  local tmp22:8;
  tmp22 = tmp0 * tmp11;
  local tmp23:8;
  local tmp24:4;
  local tmp25:8;
  local tmp26:4;
  local tmp27:4;
  tmp27 = 1;
  local tmp28:4;
  tmp28 = 32;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = M7_dcmpyrw_acc_Rss32 s>> tmp30;
  local tmp32:8;
  tmp32 = 4294967295;
  local tmp33:8;
  tmp33 = tmp31 & tmp32;
  tmp26 = tmp33:4;
  tmp25 = zext(tmp26);
  tmp24 = tmp25:4;
  tmp23 = zext(tmp24);
  local tmp34:8;
  local tmp35:4;
  local tmp36:8;
  local tmp37:4;
  local tmp38:4;
  tmp38 = 1;
  local tmp39:4;
  tmp39 = 32;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = M7_dcmpyrw_acc_Rtt32 s>> tmp41;
  local tmp43:8;
  tmp43 = 4294967295;
  local tmp44:8;
  tmp44 = tmp42 & tmp43;
  tmp37 = tmp44:4;
  tmp36 = zext(tmp37);
  tmp35 = tmp36:4;
  tmp34 = zext(tmp35);
  local tmp45:8;
  tmp45 = tmp23 * tmp34;
  local tmp46:8;
  tmp46 = tmp22 - tmp45;
  local tmp47:8;
  tmp47 = M7_dcmpyrw_acc_Rxx32 + tmp46;
  M7_dcmpyrw_acc_Rxx32 = tmp47;
}

:M7_dcmpyrwc M7_dcmpyrwc_Rdd32 M7_dcmpyrwc_Rss32 M7_dcmpyrwc_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_dcmpyrwc_Rdd32 & M7_dcmpyrwc_Rss32 & M7_dcmpyrwc_Rtt32 {
  local tmp0:8;
  local tmp1:4;
  local tmp2:8;
  local tmp3:4;
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 32;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = M7_dcmpyrwc_Rss32 s>> tmp7;
  local tmp9:8;
  tmp9 = 4294967295;
  local tmp10:8;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:4;
  tmp2 = zext(tmp3);
  tmp1 = tmp2:4;
  tmp0 = zext(tmp1);
  local tmp11:8;
  local tmp12:4;
  local tmp13:8;
  local tmp14:4;
  local tmp15:4;
  tmp15 = 0;
  local tmp16:4;
  tmp16 = 32;
  local tmp17:4;
  tmp17 = tmp15 * tmp16;
  local tmp18:8;
  tmp18 = zext(tmp17);
  local tmp19:8;
  tmp19 = M7_dcmpyrwc_Rtt32 s>> tmp18;
  local tmp20:8;
  tmp20 = 4294967295;
  local tmp21:8;
  tmp21 = tmp19 & tmp20;
  tmp14 = tmp21:4;
  tmp13 = zext(tmp14);
  tmp12 = tmp13:4;
  tmp11 = zext(tmp12);
  local tmp22:8;
  tmp22 = tmp0 * tmp11;
  local tmp23:8;
  local tmp24:4;
  local tmp25:8;
  local tmp26:4;
  local tmp27:4;
  tmp27 = 1;
  local tmp28:4;
  tmp28 = 32;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = M7_dcmpyrwc_Rss32 s>> tmp30;
  local tmp32:8;
  tmp32 = 4294967295;
  local tmp33:8;
  tmp33 = tmp31 & tmp32;
  tmp26 = tmp33:4;
  tmp25 = zext(tmp26);
  tmp24 = tmp25:4;
  tmp23 = zext(tmp24);
  local tmp34:8;
  local tmp35:4;
  local tmp36:8;
  local tmp37:4;
  local tmp38:4;
  tmp38 = 1;
  local tmp39:4;
  tmp39 = 32;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = M7_dcmpyrwc_Rtt32 s>> tmp41;
  local tmp43:8;
  tmp43 = 4294967295;
  local tmp44:8;
  tmp44 = tmp42 & tmp43;
  tmp37 = tmp44:4;
  tmp36 = zext(tmp37);
  tmp35 = tmp36:4;
  tmp34 = zext(tmp35);
  local tmp45:8;
  tmp45 = tmp23 * tmp34;
  local tmp46:8;
  tmp46 = tmp22 + tmp45;
  M7_dcmpyrwc_Rdd32 = tmp46;
}

:M7_dcmpyrwc_acc M7_dcmpyrwc_acc_Rxx32 M7_dcmpyrwc_acc_Rss32 M7_dcmpyrwc_acc_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_dcmpyrwc_acc_Rxx32 & M7_dcmpyrwc_acc_Rss32 & M7_dcmpyrwc_acc_Rtt32 {
  local tmp0:8;
  local tmp1:4;
  local tmp2:8;
  local tmp3:4;
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 32;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = M7_dcmpyrwc_acc_Rss32 s>> tmp7;
  local tmp9:8;
  tmp9 = 4294967295;
  local tmp10:8;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:4;
  tmp2 = zext(tmp3);
  tmp1 = tmp2:4;
  tmp0 = zext(tmp1);
  local tmp11:8;
  local tmp12:4;
  local tmp13:8;
  local tmp14:4;
  local tmp15:4;
  tmp15 = 0;
  local tmp16:4;
  tmp16 = 32;
  local tmp17:4;
  tmp17 = tmp15 * tmp16;
  local tmp18:8;
  tmp18 = zext(tmp17);
  local tmp19:8;
  tmp19 = M7_dcmpyrwc_acc_Rtt32 s>> tmp18;
  local tmp20:8;
  tmp20 = 4294967295;
  local tmp21:8;
  tmp21 = tmp19 & tmp20;
  tmp14 = tmp21:4;
  tmp13 = zext(tmp14);
  tmp12 = tmp13:4;
  tmp11 = zext(tmp12);
  local tmp22:8;
  tmp22 = tmp0 * tmp11;
  local tmp23:8;
  local tmp24:4;
  local tmp25:8;
  local tmp26:4;
  local tmp27:4;
  tmp27 = 1;
  local tmp28:4;
  tmp28 = 32;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = M7_dcmpyrwc_acc_Rss32 s>> tmp30;
  local tmp32:8;
  tmp32 = 4294967295;
  local tmp33:8;
  tmp33 = tmp31 & tmp32;
  tmp26 = tmp33:4;
  tmp25 = zext(tmp26);
  tmp24 = tmp25:4;
  tmp23 = zext(tmp24);
  local tmp34:8;
  local tmp35:4;
  local tmp36:8;
  local tmp37:4;
  local tmp38:4;
  tmp38 = 1;
  local tmp39:4;
  tmp39 = 32;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = M7_dcmpyrwc_acc_Rtt32 s>> tmp41;
  local tmp43:8;
  tmp43 = 4294967295;
  local tmp44:8;
  tmp44 = tmp42 & tmp43;
  tmp37 = tmp44:4;
  tmp36 = zext(tmp37);
  tmp35 = tmp36:4;
  tmp34 = zext(tmp35);
  local tmp45:8;
  tmp45 = tmp23 * tmp34;
  local tmp46:8;
  tmp46 = tmp22 + tmp45;
  local tmp47:8;
  tmp47 = M7_dcmpyrwc_acc_Rxx32 + tmp46;
  M7_dcmpyrwc_acc_Rxx32 = tmp47;
}

:M7_dcmpyiw M7_dcmpyiw_Rdd32 M7_dcmpyiw_Rss32 M7_dcmpyiw_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_dcmpyiw_Rdd32 & M7_dcmpyiw_Rss32 & M7_dcmpyiw_Rtt32 {
  local tmp0:8;
  local tmp1:4;
  local tmp2:8;
  local tmp3:4;
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 32;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = M7_dcmpyiw_Rss32 s>> tmp7;
  local tmp9:8;
  tmp9 = 4294967295;
  local tmp10:8;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:4;
  tmp2 = zext(tmp3);
  tmp1 = tmp2:4;
  tmp0 = zext(tmp1);
  local tmp11:8;
  local tmp12:4;
  local tmp13:8;
  local tmp14:4;
  local tmp15:4;
  tmp15 = 1;
  local tmp16:4;
  tmp16 = 32;
  local tmp17:4;
  tmp17 = tmp15 * tmp16;
  local tmp18:8;
  tmp18 = zext(tmp17);
  local tmp19:8;
  tmp19 = M7_dcmpyiw_Rtt32 s>> tmp18;
  local tmp20:8;
  tmp20 = 4294967295;
  local tmp21:8;
  tmp21 = tmp19 & tmp20;
  tmp14 = tmp21:4;
  tmp13 = zext(tmp14);
  tmp12 = tmp13:4;
  tmp11 = zext(tmp12);
  local tmp22:8;
  tmp22 = tmp0 * tmp11;
  local tmp23:8;
  local tmp24:4;
  local tmp25:8;
  local tmp26:4;
  local tmp27:4;
  tmp27 = 1;
  local tmp28:4;
  tmp28 = 32;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = M7_dcmpyiw_Rss32 s>> tmp30;
  local tmp32:8;
  tmp32 = 4294967295;
  local tmp33:8;
  tmp33 = tmp31 & tmp32;
  tmp26 = tmp33:4;
  tmp25 = zext(tmp26);
  tmp24 = tmp25:4;
  tmp23 = zext(tmp24);
  local tmp34:8;
  local tmp35:4;
  local tmp36:8;
  local tmp37:4;
  local tmp38:4;
  tmp38 = 0;
  local tmp39:4;
  tmp39 = 32;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = M7_dcmpyiw_Rtt32 s>> tmp41;
  local tmp43:8;
  tmp43 = 4294967295;
  local tmp44:8;
  tmp44 = tmp42 & tmp43;
  tmp37 = tmp44:4;
  tmp36 = zext(tmp37);
  tmp35 = tmp36:4;
  tmp34 = zext(tmp35);
  local tmp45:8;
  tmp45 = tmp23 * tmp34;
  local tmp46:8;
  tmp46 = tmp22 + tmp45;
  M7_dcmpyiw_Rdd32 = tmp46;
}

:M7_dcmpyiw_acc M7_dcmpyiw_acc_Rxx32 M7_dcmpyiw_acc_Rss32 M7_dcmpyiw_acc_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_dcmpyiw_acc_Rxx32 & M7_dcmpyiw_acc_Rss32 & M7_dcmpyiw_acc_Rtt32 {
  local tmp0:8;
  local tmp1:4;
  local tmp2:8;
  local tmp3:4;
  local tmp4:4;
  tmp4 = 0;
  local tmp5:4;
  tmp5 = 32;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = M7_dcmpyiw_acc_Rss32 s>> tmp7;
  local tmp9:8;
  tmp9 = 4294967295;
  local tmp10:8;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:4;
  tmp2 = zext(tmp3);
  tmp1 = tmp2:4;
  tmp0 = zext(tmp1);
  local tmp11:8;
  local tmp12:4;
  local tmp13:8;
  local tmp14:4;
  local tmp15:4;
  tmp15 = 1;
  local tmp16:4;
  tmp16 = 32;
  local tmp17:4;
  tmp17 = tmp15 * tmp16;
  local tmp18:8;
  tmp18 = zext(tmp17);
  local tmp19:8;
  tmp19 = M7_dcmpyiw_acc_Rtt32 s>> tmp18;
  local tmp20:8;
  tmp20 = 4294967295;
  local tmp21:8;
  tmp21 = tmp19 & tmp20;
  tmp14 = tmp21:4;
  tmp13 = zext(tmp14);
  tmp12 = tmp13:4;
  tmp11 = zext(tmp12);
  local tmp22:8;
  tmp22 = tmp0 * tmp11;
  local tmp23:8;
  local tmp24:4;
  local tmp25:8;
  local tmp26:4;
  local tmp27:4;
  tmp27 = 1;
  local tmp28:4;
  tmp28 = 32;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = M7_dcmpyiw_acc_Rss32 s>> tmp30;
  local tmp32:8;
  tmp32 = 4294967295;
  local tmp33:8;
  tmp33 = tmp31 & tmp32;
  tmp26 = tmp33:4;
  tmp25 = zext(tmp26);
  tmp24 = tmp25:4;
  tmp23 = zext(tmp24);
  local tmp34:8;
  local tmp35:4;
  local tmp36:8;
  local tmp37:4;
  local tmp38:4;
  tmp38 = 0;
  local tmp39:4;
  tmp39 = 32;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = M7_dcmpyiw_acc_Rtt32 s>> tmp41;
  local tmp43:8;
  tmp43 = 4294967295;
  local tmp44:8;
  tmp44 = tmp42 & tmp43;
  tmp37 = tmp44:4;
  tmp36 = zext(tmp37);
  tmp35 = tmp36:4;
  tmp34 = zext(tmp35);
  local tmp45:8;
  tmp45 = tmp23 * tmp34;
  local tmp46:8;
  tmp46 = tmp22 + tmp45;
  local tmp47:8;
  tmp47 = M7_dcmpyiw_acc_Rxx32 + tmp46;
  M7_dcmpyiw_acc_Rxx32 = tmp47;
}

:M7_dcmpyiwc M7_dcmpyiwc_Rdd32 M7_dcmpyiwc_Rss32 M7_dcmpyiwc_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_dcmpyiwc_Rdd32 & M7_dcmpyiwc_Rss32 & M7_dcmpyiwc_Rtt32 {
  local tmp0:8;
  local tmp1:4;
  local tmp2:8;
  local tmp3:4;
  local tmp4:4;
  tmp4 = 1;
  local tmp5:4;
  tmp5 = 32;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = M7_dcmpyiwc_Rss32 s>> tmp7;
  local tmp9:8;
  tmp9 = 4294967295;
  local tmp10:8;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:4;
  tmp2 = zext(tmp3);
  tmp1 = tmp2:4;
  tmp0 = zext(tmp1);
  local tmp11:8;
  local tmp12:4;
  local tmp13:8;
  local tmp14:4;
  local tmp15:4;
  tmp15 = 0;
  local tmp16:4;
  tmp16 = 32;
  local tmp17:4;
  tmp17 = tmp15 * tmp16;
  local tmp18:8;
  tmp18 = zext(tmp17);
  local tmp19:8;
  tmp19 = M7_dcmpyiwc_Rtt32 s>> tmp18;
  local tmp20:8;
  tmp20 = 4294967295;
  local tmp21:8;
  tmp21 = tmp19 & tmp20;
  tmp14 = tmp21:4;
  tmp13 = zext(tmp14);
  tmp12 = tmp13:4;
  tmp11 = zext(tmp12);
  local tmp22:8;
  tmp22 = tmp0 * tmp11;
  local tmp23:8;
  local tmp24:4;
  local tmp25:8;
  local tmp26:4;
  local tmp27:4;
  tmp27 = 0;
  local tmp28:4;
  tmp28 = 32;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = M7_dcmpyiwc_Rss32 s>> tmp30;
  local tmp32:8;
  tmp32 = 4294967295;
  local tmp33:8;
  tmp33 = tmp31 & tmp32;
  tmp26 = tmp33:4;
  tmp25 = zext(tmp26);
  tmp24 = tmp25:4;
  tmp23 = zext(tmp24);
  local tmp34:8;
  local tmp35:4;
  local tmp36:8;
  local tmp37:4;
  local tmp38:4;
  tmp38 = 1;
  local tmp39:4;
  tmp39 = 32;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = M7_dcmpyiwc_Rtt32 s>> tmp41;
  local tmp43:8;
  tmp43 = 4294967295;
  local tmp44:8;
  tmp44 = tmp42 & tmp43;
  tmp37 = tmp44:4;
  tmp36 = zext(tmp37);
  tmp35 = tmp36:4;
  tmp34 = zext(tmp35);
  local tmp45:8;
  tmp45 = tmp23 * tmp34;
  local tmp46:8;
  tmp46 = tmp22 - tmp45;
  M7_dcmpyiwc_Rdd32 = tmp46;
}

:M7_dcmpyiwc_acc M7_dcmpyiwc_acc_Rxx32 M7_dcmpyiwc_acc_Rss32 M7_dcmpyiwc_acc_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_dcmpyiwc_acc_Rxx32 & M7_dcmpyiwc_acc_Rss32 & M7_dcmpyiwc_acc_Rtt32 {
  local tmp0:8;
  local tmp1:4;
  local tmp2:8;
  local tmp3:4;
  local tmp4:4;
  tmp4 = 1;
  local tmp5:4;
  tmp5 = 32;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = M7_dcmpyiwc_acc_Rss32 s>> tmp7;
  local tmp9:8;
  tmp9 = 4294967295;
  local tmp10:8;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:4;
  tmp2 = zext(tmp3);
  tmp1 = tmp2:4;
  tmp0 = zext(tmp1);
  local tmp11:8;
  local tmp12:4;
  local tmp13:8;
  local tmp14:4;
  local tmp15:4;
  tmp15 = 0;
  local tmp16:4;
  tmp16 = 32;
  local tmp17:4;
  tmp17 = tmp15 * tmp16;
  local tmp18:8;
  tmp18 = zext(tmp17);
  local tmp19:8;
  tmp19 = M7_dcmpyiwc_acc_Rtt32 s>> tmp18;
  local tmp20:8;
  tmp20 = 4294967295;
  local tmp21:8;
  tmp21 = tmp19 & tmp20;
  tmp14 = tmp21:4;
  tmp13 = zext(tmp14);
  tmp12 = tmp13:4;
  tmp11 = zext(tmp12);
  local tmp22:8;
  tmp22 = tmp0 * tmp11;
  local tmp23:8;
  local tmp24:4;
  local tmp25:8;
  local tmp26:4;
  local tmp27:4;
  tmp27 = 0;
  local tmp28:4;
  tmp28 = 32;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = M7_dcmpyiwc_acc_Rss32 s>> tmp30;
  local tmp32:8;
  tmp32 = 4294967295;
  local tmp33:8;
  tmp33 = tmp31 & tmp32;
  tmp26 = tmp33:4;
  tmp25 = zext(tmp26);
  tmp24 = tmp25:4;
  tmp23 = zext(tmp24);
  local tmp34:8;
  local tmp35:4;
  local tmp36:8;
  local tmp37:4;
  local tmp38:4;
  tmp38 = 1;
  local tmp39:4;
  tmp39 = 32;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = M7_dcmpyiwc_acc_Rtt32 s>> tmp41;
  local tmp43:8;
  tmp43 = 4294967295;
  local tmp44:8;
  tmp44 = tmp42 & tmp43;
  tmp37 = tmp44:4;
  tmp36 = zext(tmp37);
  tmp35 = tmp36:4;
  tmp34 = zext(tmp35);
  local tmp45:8;
  tmp45 = tmp23 * tmp34;
  local tmp46:8;
  tmp46 = tmp22 - tmp45;
  local tmp47:8;
  tmp47 = M7_dcmpyiwc_acc_Rxx32 + tmp46;
  M7_dcmpyiwc_acc_Rxx32 = tmp47;
}

:M7_wcmpyrw M7_wcmpyrw_Rd32 M7_wcmpyrw_Rss32 M7_wcmpyrw_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_wcmpyrw_Rd32 & M7_wcmpyrw_Rss32 & M7_wcmpyrw_Rtt32 unimpl

:M7_wcmpyrwc M7_wcmpyrwc_Rd32 M7_wcmpyrwc_Rss32 M7_wcmpyrwc_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_wcmpyrwc_Rd32 & M7_wcmpyrwc_Rss32 & M7_wcmpyrwc_Rtt32 unimpl

:M7_wcmpyiw M7_wcmpyiw_Rd32 M7_wcmpyiw_Rss32 M7_wcmpyiw_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_wcmpyiw_Rd32 & M7_wcmpyiw_Rss32 & M7_wcmpyiw_Rtt32 unimpl

:M7_wcmpyiwc M7_wcmpyiwc_Rd32 M7_wcmpyiwc_Rss32 M7_wcmpyiwc_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_wcmpyiwc_Rd32 & M7_wcmpyiwc_Rss32 & M7_wcmpyiwc_Rtt32 unimpl

:M7_wcmpyrw_rnd M7_wcmpyrw_rnd_Rd32 M7_wcmpyrw_rnd_Rss32 M7_wcmpyrw_rnd_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_wcmpyrw_rnd_Rd32 & M7_wcmpyrw_rnd_Rss32 & M7_wcmpyrw_rnd_Rtt32 unimpl

:M7_wcmpyrwc_rnd M7_wcmpyrwc_rnd_Rd32 M7_wcmpyrwc_rnd_Rss32 M7_wcmpyrwc_rnd_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_wcmpyrwc_rnd_Rd32 & M7_wcmpyrwc_rnd_Rss32 & M7_wcmpyrwc_rnd_Rtt32 unimpl

:M7_wcmpyiw_rnd M7_wcmpyiw_rnd_Rd32 M7_wcmpyiw_rnd_Rss32 M7_wcmpyiw_rnd_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_wcmpyiw_rnd_Rd32 & M7_wcmpyiw_rnd_Rss32 & M7_wcmpyiw_rnd_Rtt32 unimpl

:M7_wcmpyiwc_rnd M7_wcmpyiwc_rnd_Rd32 M7_wcmpyiwc_rnd_Rss32 M7_wcmpyiwc_rnd_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M7_wcmpyiwc_rnd_Rd32 & M7_wcmpyiwc_rnd_Rss32 & M7_wcmpyiwc_rnd_Rtt32 unimpl

:A2_add A2_add_Rd32 A2_add_Rs32 A2_add_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_add_Rd32 & A2_add_Rs32 & A2_add_Rt32 {
  local tmp0:4;
  tmp0 = A2_add_Rs32 + A2_add_Rt32;
  A2_add_Rd32 = tmp0;
}

:A2_sub A2_sub_Rd32 A2_sub_Rt32 A2_sub_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_sub_Rd32 & A2_sub_Rt32 & A2_sub_Rs32 {
  local tmp0:4;
  tmp0 = A2_sub_Rt32 - A2_sub_Rs32;
  A2_sub_Rd32 = tmp0;
}

:A2_paddt A2_paddt_Rd32 A2_paddt_Pu4 A2_paddt_Rs32 A2_paddt_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_paddt_Rd32 & A2_paddt_Pu4 & A2_paddt_Rs32 & A2_paddt_Rt32 {
  local tmp0:1;
  tmp0 = A2_paddt_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = A2_paddt_Rs32 + A2_paddt_Rt32;
  A2_paddt_Rd32 = tmp2;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:A2_paddf A2_paddf_Rd32 A2_paddf_Pu4 A2_paddf_Rs32 A2_paddf_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_paddf_Rd32 & A2_paddf_Pu4 & A2_paddf_Rs32 & A2_paddf_Rt32 {
  local tmp0:1;
  tmp0 = ! A2_paddf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = A2_paddf_Rs32 + A2_paddf_Rt32;
  A2_paddf_Rd32 = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A2_paddtnew A2_paddtnew_Rd32 A2_paddtnew_Pu4 A2_paddtnew_Rs32 A2_paddtnew_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b13 = 1 & b21 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_paddtnew_Rd32 & A2_paddtnew_Pu4 & A2_paddtnew_Rs32 & A2_paddtnew_Rt32 {
  local tmp0:1;
  tmp0 = newreg(A2_paddtnew_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = A2_paddtnew_Rs32 + A2_paddtnew_Rt32;
  A2_paddtnew_Rd32 = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A2_paddfnew A2_paddfnew_Rd32 A2_paddfnew_Pu4 A2_paddfnew_Rs32 A2_paddfnew_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 1 & b21 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_paddfnew_Rd32 & A2_paddfnew_Pu4 & A2_paddfnew_Rs32 & A2_paddfnew_Rt32 {
  local tmp0:1;
  tmp0 = newreg(A2_paddfnew_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = A2_paddfnew_Rs32 + A2_paddfnew_Rt32;
  A2_paddfnew_Rd32 = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:A2_psubt A2_psubt_Rd32 A2_psubt_Pu4 A2_psubt_Rt32 A2_psubt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_psubt_Rd32 & A2_psubt_Pu4 & A2_psubt_Rt32 & A2_psubt_Rs32 {
  local tmp0:1;
  tmp0 = A2_psubt_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = A2_psubt_Rt32 - A2_psubt_Rs32;
  A2_psubt_Rd32 = tmp2;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:A2_psubf A2_psubf_Rd32 A2_psubf_Pu4 A2_psubf_Rt32 A2_psubf_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_psubf_Rd32 & A2_psubf_Pu4 & A2_psubf_Rt32 & A2_psubf_Rs32 {
  local tmp0:1;
  tmp0 = ! A2_psubf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = A2_psubf_Rt32 - A2_psubf_Rs32;
  A2_psubf_Rd32 = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A2_psubtnew A2_psubtnew_Rd32 A2_psubtnew_Pu4 A2_psubtnew_Rt32 A2_psubtnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b13 = 1 & b21 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_psubtnew_Rd32 & A2_psubtnew_Pu4 & A2_psubtnew_Rt32 & A2_psubtnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(A2_psubtnew_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = A2_psubtnew_Rt32 - A2_psubtnew_Rs32;
  A2_psubtnew_Rd32 = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A2_psubfnew A2_psubfnew_Rd32 A2_psubfnew_Pu4 A2_psubfnew_Rt32 A2_psubfnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 1 & b21 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_psubfnew_Rd32 & A2_psubfnew_Pu4 & A2_psubfnew_Rt32 & A2_psubfnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(A2_psubfnew_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = A2_psubfnew_Rt32 - A2_psubfnew_Rs32;
  A2_psubfnew_Rd32 = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:A2_paddit A2_paddit_Rd32 A2_paddit_Pu4 A2_paddit_Rs32 A2_paddit_s8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_paddit_Rd32 & A2_paddit_Pu4 & A2_paddit_Rs32 & A2_paddit_s8 {
  local tmp0:1;
  tmp0 = A2_paddit_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = A2_paddit_Rs32 + A2_paddit_s8;
  A2_paddit_Rd32 = tmp2;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:A2_paddif A2_paddif_Rd32 A2_paddif_Pu4 A2_paddif_Rs32 A2_paddif_s8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_paddif_Rd32 & A2_paddif_Pu4 & A2_paddif_Rs32 & A2_paddif_s8 {
  local tmp0:1;
  tmp0 = ! A2_paddif_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = A2_paddif_Rs32 + A2_paddif_s8;
  A2_paddif_Rd32 = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A2_padditnew A2_padditnew_Rd32 A2_padditnew_Pu4 A2_padditnew_Rs32 A2_padditnew_s8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_padditnew_Rd32 & A2_padditnew_Pu4 & A2_padditnew_Rs32 & A2_padditnew_s8 {
  local tmp0:1;
  tmp0 = newreg(A2_padditnew_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = A2_padditnew_Rs32 + A2_padditnew_s8;
  A2_padditnew_Rd32 = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A2_paddifnew A2_paddifnew_Rd32 A2_paddifnew_Pu4 A2_paddifnew_Rs32 A2_paddifnew_s8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_paddifnew_Rd32 & A2_paddifnew_Pu4 & A2_paddifnew_Rs32 & A2_paddifnew_s8 {
  local tmp0:1;
  tmp0 = newreg(A2_paddifnew_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = A2_paddifnew_Rs32 + A2_paddifnew_s8;
  A2_paddifnew_Rd32 = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:A2_pxort A2_pxort_Rd32 A2_pxort_Pu4 A2_pxort_Rs32 A2_pxort_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_pxort_Rd32 & A2_pxort_Pu4 & A2_pxort_Rs32 & A2_pxort_Rt32 {
  local tmp0:1;
  tmp0 = A2_pxort_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = A2_pxort_Rs32 ^ A2_pxort_Rt32;
  A2_pxort_Rd32 = tmp2;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:A2_pxorf A2_pxorf_Rd32 A2_pxorf_Pu4 A2_pxorf_Rs32 A2_pxorf_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_pxorf_Rd32 & A2_pxorf_Pu4 & A2_pxorf_Rs32 & A2_pxorf_Rt32 {
  local tmp0:1;
  tmp0 = ! A2_pxorf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = A2_pxorf_Rs32 ^ A2_pxorf_Rt32;
  A2_pxorf_Rd32 = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A2_pxortnew A2_pxortnew_Rd32 A2_pxortnew_Pu4 A2_pxortnew_Rs32 A2_pxortnew_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b13 = 1 & b21 = 1 & b22 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_pxortnew_Rd32 & A2_pxortnew_Pu4 & A2_pxortnew_Rs32 & A2_pxortnew_Rt32 {
  local tmp0:1;
  tmp0 = newreg(A2_pxortnew_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = A2_pxortnew_Rs32 ^ A2_pxortnew_Rt32;
  A2_pxortnew_Rd32 = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A2_pxorfnew A2_pxorfnew_Rd32 A2_pxorfnew_Pu4 A2_pxorfnew_Rs32 A2_pxorfnew_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 1 & b21 = 1 & b22 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_pxorfnew_Rd32 & A2_pxorfnew_Pu4 & A2_pxorfnew_Rs32 & A2_pxorfnew_Rt32 {
  local tmp0:1;
  tmp0 = newreg(A2_pxorfnew_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = A2_pxorfnew_Rs32 ^ A2_pxorfnew_Rt32;
  A2_pxorfnew_Rd32 = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:A2_pandt A2_pandt_Rd32 A2_pandt_Pu4 A2_pandt_Rs32 A2_pandt_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_pandt_Rd32 & A2_pandt_Pu4 & A2_pandt_Rs32 & A2_pandt_Rt32 {
  local tmp0:1;
  tmp0 = A2_pandt_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = A2_pandt_Rs32 & A2_pandt_Rt32;
  A2_pandt_Rd32 = tmp2;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:A2_pandf A2_pandf_Rd32 A2_pandf_Pu4 A2_pandf_Rs32 A2_pandf_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_pandf_Rd32 & A2_pandf_Pu4 & A2_pandf_Rs32 & A2_pandf_Rt32 {
  local tmp0:1;
  tmp0 = ! A2_pandf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = A2_pandf_Rs32 & A2_pandf_Rt32;
  A2_pandf_Rd32 = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A2_pandtnew A2_pandtnew_Rd32 A2_pandtnew_Pu4 A2_pandtnew_Rs32 A2_pandtnew_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_pandtnew_Rd32 & A2_pandtnew_Pu4 & A2_pandtnew_Rs32 & A2_pandtnew_Rt32 {
  local tmp0:1;
  tmp0 = newreg(A2_pandtnew_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = A2_pandtnew_Rs32 & A2_pandtnew_Rt32;
  A2_pandtnew_Rd32 = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A2_pandfnew A2_pandfnew_Rd32 A2_pandfnew_Pu4 A2_pandfnew_Rs32 A2_pandfnew_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_pandfnew_Rd32 & A2_pandfnew_Pu4 & A2_pandfnew_Rs32 & A2_pandfnew_Rt32 {
  local tmp0:1;
  tmp0 = newreg(A2_pandfnew_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = A2_pandfnew_Rs32 & A2_pandfnew_Rt32;
  A2_pandfnew_Rd32 = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:A2_port A2_port_Rd32 A2_port_Pu4 A2_port_Rs32 A2_port_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_port_Rd32 & A2_port_Pu4 & A2_port_Rs32 & A2_port_Rt32 {
  local tmp0:1;
  tmp0 = A2_port_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = A2_port_Rs32 | A2_port_Rt32;
  A2_port_Rd32 = tmp2;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:A2_porf A2_porf_Rd32 A2_porf_Pu4 A2_porf_Rs32 A2_porf_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_porf_Rd32 & A2_porf_Pu4 & A2_porf_Rs32 & A2_porf_Rt32 {
  local tmp0:1;
  tmp0 = ! A2_porf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = A2_porf_Rs32 | A2_porf_Rt32;
  A2_porf_Rd32 = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A2_portnew A2_portnew_Rd32 A2_portnew_Pu4 A2_portnew_Rs32 A2_portnew_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_portnew_Rd32 & A2_portnew_Pu4 & A2_portnew_Rs32 & A2_portnew_Rt32 {
  local tmp0:1;
  tmp0 = newreg(A2_portnew_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = A2_portnew_Rs32 | A2_portnew_Rt32;
  A2_portnew_Rd32 = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A2_porfnew A2_porfnew_Rd32 A2_porfnew_Pu4 A2_porfnew_Rs32 A2_porfnew_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_porfnew_Rd32 & A2_porfnew_Pu4 & A2_porfnew_Rs32 & A2_porfnew_Rt32 {
  local tmp0:1;
  tmp0 = newreg(A2_porfnew_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = A2_porfnew_Rs32 | A2_porfnew_Rt32;
  A2_porfnew_Rd32 = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:A4_psxtbt A4_psxtbt_Rd32 A4_psxtbt_Pu4 A4_psxtbt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_psxtbt_Rd32 & A4_psxtbt_Pu4 & A4_psxtbt_Rs32 {
  local tmp0:1;
  tmp0 = A4_psxtbt_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 8;
  local tmp4:4;
  tmp4 = tmp2 << tmp3;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = tmp4 - tmp5;
  local tmp7:4;
  tmp7 = A4_psxtbt_Rs32 & tmp6;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = 1;
  local tmp11:4;
  tmp11 = tmp9 - tmp10;
  local tmp12:4;
  tmp12 = tmp8 << tmp11;
  local tmp13:4;
  tmp13 = tmp7 ^ tmp12;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = 8;
  local tmp16:4;
  tmp16 = 1;
  local tmp17:4;
  tmp17 = tmp15 - tmp16;
  local tmp18:4;
  tmp18 = tmp14 << tmp17;
  local tmp19:4;
  tmp19 = tmp13 - tmp18;
  A4_psxtbt_Rd32 = tmp19;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:A4_psxtbf A4_psxtbf_Rd32 A4_psxtbf_Pu4 A4_psxtbf_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_psxtbf_Rd32 & A4_psxtbf_Pu4 & A4_psxtbf_Rs32 {
  local tmp0:1;
  tmp0 = ! A4_psxtbf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = tmp3 << tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = tmp5 - tmp6;
  local tmp8:4;
  tmp8 = A4_psxtbf_Rs32 & tmp7;
  local tmp9:4;
  tmp9 = 1;
  local tmp10:4;
  tmp10 = 8;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = tmp10 - tmp11;
  local tmp13:4;
  tmp13 = tmp9 << tmp12;
  local tmp14:4;
  tmp14 = tmp8 ^ tmp13;
  local tmp15:4;
  tmp15 = 1;
  local tmp16:4;
  tmp16 = 8;
  local tmp17:4;
  tmp17 = 1;
  local tmp18:4;
  tmp18 = tmp16 - tmp17;
  local tmp19:4;
  tmp19 = tmp15 << tmp18;
  local tmp20:4;
  tmp20 = tmp14 - tmp19;
  A4_psxtbf_Rd32 = tmp20;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A4_psxtbtnew A4_psxtbtnew_Rd32 A4_psxtbtnew_Pu4 A4_psxtbtnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 1 & b11 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_psxtbtnew_Rd32 & A4_psxtbtnew_Pu4 & A4_psxtbtnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(A4_psxtbtnew_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = tmp3 << tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = tmp5 - tmp6;
  local tmp8:4;
  tmp8 = A4_psxtbtnew_Rs32 & tmp7;
  local tmp9:4;
  tmp9 = 1;
  local tmp10:4;
  tmp10 = 8;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = tmp10 - tmp11;
  local tmp13:4;
  tmp13 = tmp9 << tmp12;
  local tmp14:4;
  tmp14 = tmp8 ^ tmp13;
  local tmp15:4;
  tmp15 = 1;
  local tmp16:4;
  tmp16 = 8;
  local tmp17:4;
  tmp17 = 1;
  local tmp18:4;
  tmp18 = tmp16 - tmp17;
  local tmp19:4;
  tmp19 = tmp15 << tmp18;
  local tmp20:4;
  tmp20 = tmp14 - tmp19;
  A4_psxtbtnew_Rd32 = tmp20;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A4_psxtbfnew A4_psxtbfnew_Rd32 A4_psxtbfnew_Pu4 A4_psxtbfnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 1 & b11 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_psxtbfnew_Rd32 & A4_psxtbfnew_Pu4 & A4_psxtbfnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(A4_psxtbfnew_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = 1;
  local tmp5:4;
  tmp5 = 8;
  local tmp6:4;
  tmp6 = tmp4 << tmp5;
  local tmp7:4;
  tmp7 = 1;
  local tmp8:4;
  tmp8 = tmp6 - tmp7;
  local tmp9:4;
  tmp9 = A4_psxtbfnew_Rs32 & tmp8;
  local tmp10:4;
  tmp10 = 1;
  local tmp11:4;
  tmp11 = 8;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = tmp11 - tmp12;
  local tmp14:4;
  tmp14 = tmp10 << tmp13;
  local tmp15:4;
  tmp15 = tmp9 ^ tmp14;
  local tmp16:4;
  tmp16 = 1;
  local tmp17:4;
  tmp17 = 8;
  local tmp18:4;
  tmp18 = 1;
  local tmp19:4;
  tmp19 = tmp17 - tmp18;
  local tmp20:4;
  tmp20 = tmp16 << tmp19;
  local tmp21:4;
  tmp21 = tmp15 - tmp20;
  A4_psxtbfnew_Rd32 = tmp21;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:A4_pzxtbt A4_pzxtbt_Rd32 A4_pzxtbt_Pu4 A4_pzxtbt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_pzxtbt_Rd32 & A4_pzxtbt_Pu4 & A4_pzxtbt_Rs32 {
  local tmp0:1;
  tmp0 = A4_pzxtbt_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 8;
  local tmp4:4;
  tmp4 = tmp2 << tmp3;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = tmp4 - tmp5;
  local tmp7:4;
  tmp7 = A4_pzxtbt_Rs32 & tmp6;
  A4_pzxtbt_Rd32 = tmp7;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:A4_pzxtbf A4_pzxtbf_Rd32 A4_pzxtbf_Pu4 A4_pzxtbf_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_pzxtbf_Rd32 & A4_pzxtbf_Pu4 & A4_pzxtbf_Rs32 {
  local tmp0:1;
  tmp0 = ! A4_pzxtbf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = tmp3 << tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = tmp5 - tmp6;
  local tmp8:4;
  tmp8 = A4_pzxtbf_Rs32 & tmp7;
  A4_pzxtbf_Rd32 = tmp8;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A4_pzxtbtnew A4_pzxtbtnew_Rd32 A4_pzxtbtnew_Pu4 A4_pzxtbtnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 1 & b11 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_pzxtbtnew_Rd32 & A4_pzxtbtnew_Pu4 & A4_pzxtbtnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(A4_pzxtbtnew_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = tmp3 << tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = tmp5 - tmp6;
  local tmp8:4;
  tmp8 = A4_pzxtbtnew_Rs32 & tmp7;
  A4_pzxtbtnew_Rd32 = tmp8;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A4_pzxtbfnew A4_pzxtbfnew_Rd32 A4_pzxtbfnew_Pu4 A4_pzxtbfnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 1 & b11 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_pzxtbfnew_Rd32 & A4_pzxtbfnew_Pu4 & A4_pzxtbfnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(A4_pzxtbfnew_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = 1;
  local tmp5:4;
  tmp5 = 8;
  local tmp6:4;
  tmp6 = tmp4 << tmp5;
  local tmp7:4;
  tmp7 = 1;
  local tmp8:4;
  tmp8 = tmp6 - tmp7;
  local tmp9:4;
  tmp9 = A4_pzxtbfnew_Rs32 & tmp8;
  A4_pzxtbfnew_Rd32 = tmp9;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:A4_psxtht A4_psxtht_Rd32 A4_psxtht_Pu4 A4_psxtht_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 0 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_psxtht_Rd32 & A4_psxtht_Pu4 & A4_psxtht_Rs32 {
  local tmp0:1;
  tmp0 = A4_psxtht_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 << tmp3;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = tmp4 - tmp5;
  local tmp7:4;
  tmp7 = A4_psxtht_Rs32 & tmp6;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = 1;
  local tmp11:4;
  tmp11 = tmp9 - tmp10;
  local tmp12:4;
  tmp12 = tmp8 << tmp11;
  local tmp13:4;
  tmp13 = tmp7 ^ tmp12;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = 16;
  local tmp16:4;
  tmp16 = 1;
  local tmp17:4;
  tmp17 = tmp15 - tmp16;
  local tmp18:4;
  tmp18 = tmp14 << tmp17;
  local tmp19:4;
  tmp19 = tmp13 - tmp18;
  A4_psxtht_Rd32 = tmp19;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:A4_psxthf A4_psxthf_Rd32 A4_psxthf_Pu4 A4_psxthf_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 1 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_psxthf_Rd32 & A4_psxthf_Pu4 & A4_psxthf_Rs32 {
  local tmp0:1;
  tmp0 = ! A4_psxthf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 << tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = tmp5 - tmp6;
  local tmp8:4;
  tmp8 = A4_psxthf_Rs32 & tmp7;
  local tmp9:4;
  tmp9 = 1;
  local tmp10:4;
  tmp10 = 16;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = tmp10 - tmp11;
  local tmp13:4;
  tmp13 = tmp9 << tmp12;
  local tmp14:4;
  tmp14 = tmp8 ^ tmp13;
  local tmp15:4;
  tmp15 = 1;
  local tmp16:4;
  tmp16 = 16;
  local tmp17:4;
  tmp17 = 1;
  local tmp18:4;
  tmp18 = tmp16 - tmp17;
  local tmp19:4;
  tmp19 = tmp15 << tmp18;
  local tmp20:4;
  tmp20 = tmp14 - tmp19;
  A4_psxthf_Rd32 = tmp20;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A4_psxthtnew A4_psxthtnew_Rd32 A4_psxthtnew_Pu4 A4_psxthtnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 1 & b11 = 0 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_psxthtnew_Rd32 & A4_psxthtnew_Pu4 & A4_psxthtnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(A4_psxthtnew_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 << tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = tmp5 - tmp6;
  local tmp8:4;
  tmp8 = A4_psxthtnew_Rs32 & tmp7;
  local tmp9:4;
  tmp9 = 1;
  local tmp10:4;
  tmp10 = 16;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = tmp10 - tmp11;
  local tmp13:4;
  tmp13 = tmp9 << tmp12;
  local tmp14:4;
  tmp14 = tmp8 ^ tmp13;
  local tmp15:4;
  tmp15 = 1;
  local tmp16:4;
  tmp16 = 16;
  local tmp17:4;
  tmp17 = 1;
  local tmp18:4;
  tmp18 = tmp16 - tmp17;
  local tmp19:4;
  tmp19 = tmp15 << tmp18;
  local tmp20:4;
  tmp20 = tmp14 - tmp19;
  A4_psxthtnew_Rd32 = tmp20;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A4_psxthfnew A4_psxthfnew_Rd32 A4_psxthfnew_Pu4 A4_psxthfnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 1 & b11 = 1 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_psxthfnew_Rd32 & A4_psxthfnew_Pu4 & A4_psxthfnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(A4_psxthfnew_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = 1;
  local tmp5:4;
  tmp5 = 16;
  local tmp6:4;
  tmp6 = tmp4 << tmp5;
  local tmp7:4;
  tmp7 = 1;
  local tmp8:4;
  tmp8 = tmp6 - tmp7;
  local tmp9:4;
  tmp9 = A4_psxthfnew_Rs32 & tmp8;
  local tmp10:4;
  tmp10 = 1;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = tmp11 - tmp12;
  local tmp14:4;
  tmp14 = tmp10 << tmp13;
  local tmp15:4;
  tmp15 = tmp9 ^ tmp14;
  local tmp16:4;
  tmp16 = 1;
  local tmp17:4;
  tmp17 = 16;
  local tmp18:4;
  tmp18 = 1;
  local tmp19:4;
  tmp19 = tmp17 - tmp18;
  local tmp20:4;
  tmp20 = tmp16 << tmp19;
  local tmp21:4;
  tmp21 = tmp15 - tmp20;
  A4_psxthfnew_Rd32 = tmp21;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:A4_pzxtht A4_pzxtht_Rd32 A4_pzxtht_Pu4 A4_pzxtht_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_pzxtht_Rd32 & A4_pzxtht_Pu4 & A4_pzxtht_Rs32 {
  local tmp0:1;
  tmp0 = A4_pzxtht_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 << tmp3;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = tmp4 - tmp5;
  local tmp7:4;
  tmp7 = A4_pzxtht_Rs32 & tmp6;
  A4_pzxtht_Rd32 = tmp7;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:A4_pzxthf A4_pzxthf_Rd32 A4_pzxthf_Pu4 A4_pzxthf_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_pzxthf_Rd32 & A4_pzxthf_Pu4 & A4_pzxthf_Rs32 {
  local tmp0:1;
  tmp0 = ! A4_pzxthf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 << tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = tmp5 - tmp6;
  local tmp8:4;
  tmp8 = A4_pzxthf_Rs32 & tmp7;
  A4_pzxthf_Rd32 = tmp8;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A4_pzxthtnew A4_pzxthtnew_Rd32 A4_pzxthtnew_Pu4 A4_pzxthtnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 1 & b11 = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_pzxthtnew_Rd32 & A4_pzxthtnew_Pu4 & A4_pzxthtnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(A4_pzxthtnew_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 << tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = tmp5 - tmp6;
  local tmp8:4;
  tmp8 = A4_pzxthtnew_Rs32 & tmp7;
  A4_pzxthtnew_Rd32 = tmp8;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A4_pzxthfnew A4_pzxthfnew_Rd32 A4_pzxthfnew_Pu4 A4_pzxthfnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 1 & b11 = 1 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_pzxthfnew_Rd32 & A4_pzxthfnew_Pu4 & A4_pzxthfnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(A4_pzxthfnew_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = 1;
  local tmp5:4;
  tmp5 = 16;
  local tmp6:4;
  tmp6 = tmp4 << tmp5;
  local tmp7:4;
  tmp7 = 1;
  local tmp8:4;
  tmp8 = tmp6 - tmp7;
  local tmp9:4;
  tmp9 = A4_pzxthfnew_Rs32 & tmp8;
  A4_pzxthfnew_Rd32 = tmp9;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:A4_paslht A4_paslht_Rd32 A4_paslht_Pu4 A4_paslht_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_paslht_Rd32 & A4_paslht_Pu4 & A4_paslht_Rs32 {
  local tmp0:1;
  tmp0 = A4_paslht_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = A4_paslht_Rs32 << tmp2;
  A4_paslht_Rd32 = tmp3;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:A4_paslhf A4_paslhf_Rd32 A4_paslhf_Pu4 A4_paslhf_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_paslhf_Rd32 & A4_paslhf_Pu4 & A4_paslhf_Rs32 {
  local tmp0:1;
  tmp0 = ! A4_paslhf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = A4_paslhf_Rs32 << tmp3;
  A4_paslhf_Rd32 = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A4_paslhtnew A4_paslhtnew_Rd32 A4_paslhtnew_Pu4 A4_paslhtnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 1 & b11 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_paslhtnew_Rd32 & A4_paslhtnew_Pu4 & A4_paslhtnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(A4_paslhtnew_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = A4_paslhtnew_Rs32 << tmp3;
  A4_paslhtnew_Rd32 = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A4_paslhfnew A4_paslhfnew_Rd32 A4_paslhfnew_Pu4 A4_paslhfnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 1 & b11 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_paslhfnew_Rd32 & A4_paslhfnew_Pu4 & A4_paslhfnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(A4_paslhfnew_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = A4_paslhfnew_Rs32 << tmp4;
  A4_paslhfnew_Rd32 = tmp5;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:A4_pasrht A4_pasrht_Rd32 A4_pasrht_Pu4 A4_pasrht_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_pasrht_Rd32 & A4_pasrht_Pu4 & A4_pasrht_Rs32 {
  local tmp0:1;
  tmp0 = A4_pasrht_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = A4_pasrht_Rs32 s>> tmp2;
  A4_pasrht_Rd32 = tmp3;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:A4_pasrhf A4_pasrhf_Rd32 A4_pasrhf_Pu4 A4_pasrhf_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_pasrhf_Rd32 & A4_pasrhf_Pu4 & A4_pasrhf_Rs32 {
  local tmp0:1;
  tmp0 = ! A4_pasrhf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = A4_pasrhf_Rs32 s>> tmp3;
  A4_pasrhf_Rd32 = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A4_pasrhtnew A4_pasrhtnew_Rd32 A4_pasrhtnew_Pu4 A4_pasrhtnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 1 & b11 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_pasrhtnew_Rd32 & A4_pasrhtnew_Pu4 & A4_pasrhtnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(A4_pasrhtnew_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = A4_pasrhtnew_Rs32 s>> tmp3;
  A4_pasrhtnew_Rd32 = tmp4;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:A4_pasrhfnew A4_pasrhfnew_Rd32 A4_pasrhfnew_Pu4 A4_pasrhfnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 1 & b11 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_pasrhfnew_Rd32 & A4_pasrhfnew_Pu4 & A4_pasrhfnew_Rs32 {
  local tmp0:1;
  tmp0 = newreg(A4_pasrhfnew_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = A4_pasrhfnew_Rs32 s>> tmp4;
  A4_pasrhfnew_Rd32 = tmp5;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:A2_addsat A2_addsat_Rd32 A2_addsat_Rs32 A2_addsat_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_addsat_Rd32 & A2_addsat_Rs32 & A2_addsat_Rt32 unimpl

:A2_subsat A2_subsat_Rd32 A2_subsat_Rt32 A2_subsat_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_subsat_Rd32 & A2_subsat_Rt32 & A2_subsat_Rs32 unimpl

:A2_addi A2_addi_Rd32 A2_addi_Rs32 A2_addi_s16 is phase = 1 & Parse != 0b00 & subinsn = 0 & b28 = 1 & b29 = 1 & b30 = 0 & b31 = 1 & A2_addi_Rd32 & A2_addi_Rs32 & A2_addi_s16 {
  local tmp0:4;
  tmp0 = A2_addi_Rs32 + A2_addi_s16;
  A2_addi_Rd32 = tmp0;
}

:C4_addipc C4_addipc_Rd32 C4_addipc_u6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b16 = 1 & b17 = 0 & b18 = 0 & b19 = 1 & b20 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & C4_addipc_pkt_start & C4_addipc_Rd32 & C4_addipc_u6 {
  local tmp0:4;
  tmp0 = C4_addipc_pkt_start + C4_addipc_u6;
  C4_addipc_Rd32 = tmp0;
}

:A2_addh_l16_ll A2_addh_l16_ll_Rd32 A2_addh_l16_ll_Rt32 A2_addh_l16_ll_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addh_l16_ll_Rd32 & A2_addh_l16_ll_Rt32 & A2_addh_l16_ll_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_addh_l16_ll_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:2;
  local tmp8:4;
  tmp8 = 0;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A2_addh_l16_ll_Rs32 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:2;
  local tmp14:2;
  tmp14 = tmp0 + tmp7;
  local tmp15:4;
  tmp15 = 1;
  local tmp16:4;
  tmp16 = 16;
  local tmp17:4;
  tmp17 = tmp15 << tmp16;
  local tmp18:4;
  tmp18 = 1;
  local tmp19:4;
  tmp19 = tmp17 - tmp18;
  local tmp20:4;
  tmp20 = zext(tmp14);
  local tmp21:4;
  tmp21 = tmp20 & tmp19;
  local tmp22:4;
  tmp22 = 1;
  local tmp23:4;
  tmp23 = 16;
  local tmp24:4;
  tmp24 = 1;
  local tmp25:4;
  tmp25 = tmp23 - tmp24;
  local tmp26:4;
  tmp26 = tmp22 << tmp25;
  local tmp27:4;
  tmp27 = tmp21 ^ tmp26;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = 16;
  local tmp30:4;
  tmp30 = 1;
  local tmp31:4;
  tmp31 = tmp29 - tmp30;
  local tmp32:4;
  tmp32 = tmp28 << tmp31;
  local tmp33:4;
  tmp33 = tmp27 - tmp32;
  A2_addh_l16_ll_Rd32 = tmp33;
}

:A2_addh_l16_hl A2_addh_l16_hl_Rd32 A2_addh_l16_hl_Rt32 A2_addh_l16_hl_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addh_l16_hl_Rd32 & A2_addh_l16_hl_Rt32 & A2_addh_l16_hl_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_addh_l16_hl_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:2;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A2_addh_l16_hl_Rs32 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:2;
  local tmp14:2;
  tmp14 = tmp0 + tmp7;
  local tmp15:4;
  tmp15 = 1;
  local tmp16:4;
  tmp16 = 16;
  local tmp17:4;
  tmp17 = tmp15 << tmp16;
  local tmp18:4;
  tmp18 = 1;
  local tmp19:4;
  tmp19 = tmp17 - tmp18;
  local tmp20:4;
  tmp20 = zext(tmp14);
  local tmp21:4;
  tmp21 = tmp20 & tmp19;
  local tmp22:4;
  tmp22 = 1;
  local tmp23:4;
  tmp23 = 16;
  local tmp24:4;
  tmp24 = 1;
  local tmp25:4;
  tmp25 = tmp23 - tmp24;
  local tmp26:4;
  tmp26 = tmp22 << tmp25;
  local tmp27:4;
  tmp27 = tmp21 ^ tmp26;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = 16;
  local tmp30:4;
  tmp30 = 1;
  local tmp31:4;
  tmp31 = tmp29 - tmp30;
  local tmp32:4;
  tmp32 = tmp28 << tmp31;
  local tmp33:4;
  tmp33 = tmp27 - tmp32;
  A2_addh_l16_hl_Rd32 = tmp33;
}

:A2_addh_l16_sat_ll A2_addh_l16_sat_ll_Rd32 A2_addh_l16_sat_ll_Rt32 A2_addh_l16_sat_ll_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addh_l16_sat_ll_Rd32 & A2_addh_l16_sat_ll_Rt32 & A2_addh_l16_sat_ll_Rs32 unimpl

:A2_addh_l16_sat_hl A2_addh_l16_sat_hl_Rd32 A2_addh_l16_sat_hl_Rt32 A2_addh_l16_sat_hl_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addh_l16_sat_hl_Rd32 & A2_addh_l16_sat_hl_Rt32 & A2_addh_l16_sat_hl_Rs32 unimpl

:A2_subh_l16_ll A2_subh_l16_ll_Rd32 A2_subh_l16_ll_Rt32 A2_subh_l16_ll_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_subh_l16_ll_Rd32 & A2_subh_l16_ll_Rt32 & A2_subh_l16_ll_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_subh_l16_ll_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:2;
  local tmp8:4;
  tmp8 = 0;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A2_subh_l16_ll_Rs32 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:2;
  local tmp14:2;
  tmp14 = tmp0 - tmp7;
  local tmp15:4;
  tmp15 = 1;
  local tmp16:4;
  tmp16 = 16;
  local tmp17:4;
  tmp17 = tmp15 << tmp16;
  local tmp18:4;
  tmp18 = 1;
  local tmp19:4;
  tmp19 = tmp17 - tmp18;
  local tmp20:4;
  tmp20 = zext(tmp14);
  local tmp21:4;
  tmp21 = tmp20 & tmp19;
  local tmp22:4;
  tmp22 = 1;
  local tmp23:4;
  tmp23 = 16;
  local tmp24:4;
  tmp24 = 1;
  local tmp25:4;
  tmp25 = tmp23 - tmp24;
  local tmp26:4;
  tmp26 = tmp22 << tmp25;
  local tmp27:4;
  tmp27 = tmp21 ^ tmp26;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = 16;
  local tmp30:4;
  tmp30 = 1;
  local tmp31:4;
  tmp31 = tmp29 - tmp30;
  local tmp32:4;
  tmp32 = tmp28 << tmp31;
  local tmp33:4;
  tmp33 = tmp27 - tmp32;
  A2_subh_l16_ll_Rd32 = tmp33;
}

:A2_subh_l16_hl A2_subh_l16_hl_Rd32 A2_subh_l16_hl_Rt32 A2_subh_l16_hl_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_subh_l16_hl_Rd32 & A2_subh_l16_hl_Rt32 & A2_subh_l16_hl_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_subh_l16_hl_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:2;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A2_subh_l16_hl_Rs32 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:2;
  local tmp14:2;
  tmp14 = tmp0 - tmp7;
  local tmp15:4;
  tmp15 = 1;
  local tmp16:4;
  tmp16 = 16;
  local tmp17:4;
  tmp17 = tmp15 << tmp16;
  local tmp18:4;
  tmp18 = 1;
  local tmp19:4;
  tmp19 = tmp17 - tmp18;
  local tmp20:4;
  tmp20 = zext(tmp14);
  local tmp21:4;
  tmp21 = tmp20 & tmp19;
  local tmp22:4;
  tmp22 = 1;
  local tmp23:4;
  tmp23 = 16;
  local tmp24:4;
  tmp24 = 1;
  local tmp25:4;
  tmp25 = tmp23 - tmp24;
  local tmp26:4;
  tmp26 = tmp22 << tmp25;
  local tmp27:4;
  tmp27 = tmp21 ^ tmp26;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = 16;
  local tmp30:4;
  tmp30 = 1;
  local tmp31:4;
  tmp31 = tmp29 - tmp30;
  local tmp32:4;
  tmp32 = tmp28 << tmp31;
  local tmp33:4;
  tmp33 = tmp27 - tmp32;
  A2_subh_l16_hl_Rd32 = tmp33;
}

:A2_subh_l16_sat_ll A2_subh_l16_sat_ll_Rd32 A2_subh_l16_sat_ll_Rt32 A2_subh_l16_sat_ll_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_subh_l16_sat_ll_Rd32 & A2_subh_l16_sat_ll_Rt32 & A2_subh_l16_sat_ll_Rs32 unimpl

:A2_subh_l16_sat_hl A2_subh_l16_sat_hl_Rd32 A2_subh_l16_sat_hl_Rt32 A2_subh_l16_sat_hl_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_subh_l16_sat_hl_Rd32 & A2_subh_l16_sat_hl_Rt32 & A2_subh_l16_sat_hl_Rs32 unimpl

:A2_addh_h16_ll A2_addh_h16_ll_Rd32 A2_addh_h16_ll_Rt32 A2_addh_h16_ll_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addh_h16_ll_Rd32 & A2_addh_h16_ll_Rt32 & A2_addh_h16_ll_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_addh_h16_ll_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:2;
  local tmp8:4;
  tmp8 = 0;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A2_addh_h16_ll_Rs32 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:2;
  local tmp14:2;
  tmp14 = tmp0 + tmp7;
  local tmp15:4;
  tmp15 = 16;
  local tmp16:4;
  tmp16 = zext(tmp14);
  local tmp17:4;
  tmp17 = tmp16 << tmp15;
  A2_addh_h16_ll_Rd32 = tmp17;
}

:A2_addh_h16_lh A2_addh_h16_lh_Rd32 A2_addh_h16_lh_Rt32 A2_addh_h16_lh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addh_h16_lh_Rd32 & A2_addh_h16_lh_Rt32 & A2_addh_h16_lh_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_addh_h16_lh_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:2;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A2_addh_h16_lh_Rs32 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:2;
  local tmp14:2;
  tmp14 = tmp0 + tmp7;
  local tmp15:4;
  tmp15 = 16;
  local tmp16:4;
  tmp16 = zext(tmp14);
  local tmp17:4;
  tmp17 = tmp16 << tmp15;
  A2_addh_h16_lh_Rd32 = tmp17;
}

:A2_addh_h16_hl A2_addh_h16_hl_Rd32 A2_addh_h16_hl_Rt32 A2_addh_h16_hl_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addh_h16_hl_Rd32 & A2_addh_h16_hl_Rt32 & A2_addh_h16_hl_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_addh_h16_hl_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:2;
  local tmp8:4;
  tmp8 = 0;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A2_addh_h16_hl_Rs32 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:2;
  local tmp14:2;
  tmp14 = tmp0 + tmp7;
  local tmp15:4;
  tmp15 = 16;
  local tmp16:4;
  tmp16 = zext(tmp14);
  local tmp17:4;
  tmp17 = tmp16 << tmp15;
  A2_addh_h16_hl_Rd32 = tmp17;
}

:A2_addh_h16_hh A2_addh_h16_hh_Rd32 A2_addh_h16_hh_Rt32 A2_addh_h16_hh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addh_h16_hh_Rd32 & A2_addh_h16_hh_Rt32 & A2_addh_h16_hh_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_addh_h16_hh_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:2;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A2_addh_h16_hh_Rs32 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:2;
  local tmp14:2;
  tmp14 = tmp0 + tmp7;
  local tmp15:4;
  tmp15 = 16;
  local tmp16:4;
  tmp16 = zext(tmp14);
  local tmp17:4;
  tmp17 = tmp16 << tmp15;
  A2_addh_h16_hh_Rd32 = tmp17;
}

:A2_addh_h16_sat_ll A2_addh_h16_sat_ll_Rd32 A2_addh_h16_sat_ll_Rt32 A2_addh_h16_sat_ll_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addh_h16_sat_ll_Rd32 & A2_addh_h16_sat_ll_Rt32 & A2_addh_h16_sat_ll_Rs32 unimpl

:A2_addh_h16_sat_lh A2_addh_h16_sat_lh_Rd32 A2_addh_h16_sat_lh_Rt32 A2_addh_h16_sat_lh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addh_h16_sat_lh_Rd32 & A2_addh_h16_sat_lh_Rt32 & A2_addh_h16_sat_lh_Rs32 unimpl

:A2_addh_h16_sat_hl A2_addh_h16_sat_hl_Rd32 A2_addh_h16_sat_hl_Rt32 A2_addh_h16_sat_hl_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addh_h16_sat_hl_Rd32 & A2_addh_h16_sat_hl_Rt32 & A2_addh_h16_sat_hl_Rs32 unimpl

:A2_addh_h16_sat_hh A2_addh_h16_sat_hh_Rd32 A2_addh_h16_sat_hh_Rt32 A2_addh_h16_sat_hh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addh_h16_sat_hh_Rd32 & A2_addh_h16_sat_hh_Rt32 & A2_addh_h16_sat_hh_Rs32 unimpl

:A2_subh_h16_ll A2_subh_h16_ll_Rd32 A2_subh_h16_ll_Rt32 A2_subh_h16_ll_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_subh_h16_ll_Rd32 & A2_subh_h16_ll_Rt32 & A2_subh_h16_ll_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_subh_h16_ll_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:2;
  local tmp8:4;
  tmp8 = 0;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A2_subh_h16_ll_Rs32 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:2;
  local tmp14:2;
  tmp14 = tmp0 - tmp7;
  local tmp15:4;
  tmp15 = 16;
  local tmp16:4;
  tmp16 = zext(tmp14);
  local tmp17:4;
  tmp17 = tmp16 << tmp15;
  A2_subh_h16_ll_Rd32 = tmp17;
}

:A2_subh_h16_lh A2_subh_h16_lh_Rd32 A2_subh_h16_lh_Rt32 A2_subh_h16_lh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_subh_h16_lh_Rd32 & A2_subh_h16_lh_Rt32 & A2_subh_h16_lh_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_subh_h16_lh_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:2;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A2_subh_h16_lh_Rs32 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:2;
  local tmp14:2;
  tmp14 = tmp0 - tmp7;
  local tmp15:4;
  tmp15 = 16;
  local tmp16:4;
  tmp16 = zext(tmp14);
  local tmp17:4;
  tmp17 = tmp16 << tmp15;
  A2_subh_h16_lh_Rd32 = tmp17;
}

:A2_subh_h16_hl A2_subh_h16_hl_Rd32 A2_subh_h16_hl_Rt32 A2_subh_h16_hl_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_subh_h16_hl_Rd32 & A2_subh_h16_hl_Rt32 & A2_subh_h16_hl_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_subh_h16_hl_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:2;
  local tmp8:4;
  tmp8 = 0;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A2_subh_h16_hl_Rs32 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:2;
  local tmp14:2;
  tmp14 = tmp0 - tmp7;
  local tmp15:4;
  tmp15 = 16;
  local tmp16:4;
  tmp16 = zext(tmp14);
  local tmp17:4;
  tmp17 = tmp16 << tmp15;
  A2_subh_h16_hl_Rd32 = tmp17;
}

:A2_subh_h16_hh A2_subh_h16_hh_Rd32 A2_subh_h16_hh_Rt32 A2_subh_h16_hh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_subh_h16_hh_Rd32 & A2_subh_h16_hh_Rt32 & A2_subh_h16_hh_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_subh_h16_hh_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:2;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 16;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = A2_subh_h16_hh_Rs32 s>> tmp10;
  local tmp12:4;
  tmp12 = 65535;
  local tmp13:4;
  tmp13 = tmp11 & tmp12;
  tmp7 = tmp13:2;
  local tmp14:2;
  tmp14 = tmp0 - tmp7;
  local tmp15:4;
  tmp15 = 16;
  local tmp16:4;
  tmp16 = zext(tmp14);
  local tmp17:4;
  tmp17 = tmp16 << tmp15;
  A2_subh_h16_hh_Rd32 = tmp17;
}

:A2_subh_h16_sat_ll A2_subh_h16_sat_ll_Rd32 A2_subh_h16_sat_ll_Rt32 A2_subh_h16_sat_ll_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_subh_h16_sat_ll_Rd32 & A2_subh_h16_sat_ll_Rt32 & A2_subh_h16_sat_ll_Rs32 unimpl

:A2_subh_h16_sat_lh A2_subh_h16_sat_lh_Rd32 A2_subh_h16_sat_lh_Rt32 A2_subh_h16_sat_lh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_subh_h16_sat_lh_Rd32 & A2_subh_h16_sat_lh_Rt32 & A2_subh_h16_sat_lh_Rs32 unimpl

:A2_subh_h16_sat_hl A2_subh_h16_sat_hl_Rd32 A2_subh_h16_sat_hl_Rt32 A2_subh_h16_sat_hl_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_subh_h16_sat_hl_Rd32 & A2_subh_h16_sat_hl_Rt32 & A2_subh_h16_sat_hl_Rs32 unimpl

:A2_subh_h16_sat_hh A2_subh_h16_sat_hh_Rd32 A2_subh_h16_sat_hh_Rt32 A2_subh_h16_sat_hh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_subh_h16_sat_hh_Rd32 & A2_subh_h16_sat_hh_Rt32 & A2_subh_h16_sat_hh_Rs32 unimpl

:A2_aslh A2_aslh_Rd32 A2_aslh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_aslh_Rd32 & A2_aslh_Rs32 {
  local tmp0:4;
  tmp0 = 16;
  local tmp1:4;
  tmp1 = A2_aslh_Rs32 << tmp0;
  A2_aslh_Rd32 = tmp1;
}

:A2_asrh A2_asrh_Rd32 A2_asrh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_asrh_Rd32 & A2_asrh_Rs32 {
  local tmp0:4;
  tmp0 = 16;
  local tmp1:4;
  tmp1 = A2_asrh_Rs32 s>> tmp0;
  A2_asrh_Rd32 = tmp1;
}

:A2_addp A2_addp_Rdd32 A2_addp_Rss32 A2_addp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addp_Rdd32 & A2_addp_Rss32 & A2_addp_Rtt32 {
  local tmp0:8;
  tmp0 = A2_addp_Rss32 + A2_addp_Rtt32;
  A2_addp_Rdd32 = tmp0;
}

:A2_addpsat A2_addpsat_Rdd32 A2_addpsat_Rss32 A2_addpsat_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addpsat_Rdd32 & A2_addpsat_Rss32 & A2_addpsat_Rtt32 unimpl

:A2_addspl A2_addspl_Rdd32 A2_addspl_Rss32 A2_addspl_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addspl_Rdd32 & A2_addspl_Rss32 & A2_addspl_Rtt32 {
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 32;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = A2_addspl_Rss32 s>> tmp5;
  local tmp7:8;
  tmp7 = 4294967295;
  local tmp8:8;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:4;
  tmp0 = zext(tmp1);
  local tmp9:4;
  tmp9 = 1;
  local tmp10:4;
  tmp10 = 32;
  local tmp11:4;
  tmp11 = tmp9 << tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = tmp11 - tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = tmp0 & tmp14;
  local tmp16:4;
  tmp16 = 1;
  local tmp17:4;
  tmp17 = 32;
  local tmp18:4;
  tmp18 = 1;
  local tmp19:4;
  tmp19 = tmp17 - tmp18;
  local tmp20:4;
  tmp20 = tmp16 << tmp19;
  local tmp21:8;
  tmp21 = zext(tmp20);
  local tmp22:8;
  tmp22 = tmp15 ^ tmp21;
  local tmp23:4;
  tmp23 = 1;
  local tmp24:4;
  tmp24 = 32;
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = tmp24 - tmp25;
  local tmp27:4;
  tmp27 = tmp23 << tmp26;
  local tmp28:8;
  tmp28 = zext(tmp27);
  local tmp29:8;
  tmp29 = tmp22 - tmp28;
  local tmp30:8;
  tmp30 = A2_addspl_Rtt32 + tmp29;
  A2_addspl_Rdd32 = tmp30;
}

:A2_addsph A2_addsph_Rdd32 A2_addsph_Rss32 A2_addsph_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_addsph_Rdd32 & A2_addsph_Rss32 & A2_addsph_Rtt32 {
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 32;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = A2_addsph_Rss32 s>> tmp5;
  local tmp7:8;
  tmp7 = 4294967295;
  local tmp8:8;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:4;
  tmp0 = zext(tmp1);
  local tmp9:4;
  tmp9 = 1;
  local tmp10:4;
  tmp10 = 32;
  local tmp11:4;
  tmp11 = tmp9 << tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = tmp11 - tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = tmp0 & tmp14;
  local tmp16:4;
  tmp16 = 1;
  local tmp17:4;
  tmp17 = 32;
  local tmp18:4;
  tmp18 = 1;
  local tmp19:4;
  tmp19 = tmp17 - tmp18;
  local tmp20:4;
  tmp20 = tmp16 << tmp19;
  local tmp21:8;
  tmp21 = zext(tmp20);
  local tmp22:8;
  tmp22 = tmp15 ^ tmp21;
  local tmp23:4;
  tmp23 = 1;
  local tmp24:4;
  tmp24 = 32;
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = tmp24 - tmp25;
  local tmp27:4;
  tmp27 = tmp23 << tmp26;
  local tmp28:8;
  tmp28 = zext(tmp27);
  local tmp29:8;
  tmp29 = tmp22 - tmp28;
  local tmp30:8;
  tmp30 = A2_addsph_Rtt32 + tmp29;
  A2_addsph_Rdd32 = tmp30;
}

:A2_subp A2_subp_Rdd32 A2_subp_Rtt32 A2_subp_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_subp_Rdd32 & A2_subp_Rtt32 & A2_subp_Rss32 {
  local tmp0:8;
  tmp0 = A2_subp_Rtt32 - A2_subp_Rss32;
  A2_subp_Rdd32 = tmp0;
}

:A4_addp_c A4_addp_c_Rdd32 A4_addp_c_Px4 A4_addp_c_Rss32 A4_addp_c_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_addp_c_Rdd32 & A4_addp_c_Px4 & A4_addp_c_Rss32 & A4_addp_c_Rtt32 unimpl

:A4_subp_c A4_subp_c_Rdd32 A4_subp_c_Px4 A4_subp_c_Rss32 A4_subp_c_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_subp_c_Rdd32 & A4_subp_c_Px4 & A4_subp_c_Rss32 & A4_subp_c_Rtt32 unimpl

:A2_negsat A2_negsat_Rd32 A2_negsat_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_negsat_Rd32 & A2_negsat_Rs32 unimpl

:A2_abs A2_abs_Rd32 A2_abs_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_abs_Rd32 & A2_abs_Rs32 unimpl

:A2_abssat A2_abssat_Rd32 A2_abssat_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_abssat_Rd32 & A2_abssat_Rs32 unimpl

:A2_vconj A2_vconj_Rdd32 A2_vconj_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_vconj_Rdd32 & A2_vconj_Rss32 unimpl

:A2_negp A2_negp_Rdd32 A2_negp_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_negp_Rdd32 & A2_negp_Rss32 {
  local tmp0:8;
  tmp0 = - A2_negp_Rss32;
  A2_negp_Rdd32 = tmp0;
}

:A2_absp A2_absp_Rdd32 A2_absp_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_absp_Rdd32 & A2_absp_Rss32 unimpl

:A2_max A2_max_Rd32 A2_max_Rs32 A2_max_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_max_Rd32 & A2_max_Rs32 & A2_max_Rt32 {
  local tmp0:1;
  tmp0 = A2_max_Rs32 s> A2_max_Rt32;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = A2_max_Rs32;
  goto <done_3>;
<f_branch_3>
  tmp3 = A2_max_Rt32;
<done_3>
  A2_max_Rd32 = tmp3;
}

:A2_maxu A2_maxu_Rd32 A2_maxu_Rs32 A2_maxu_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_maxu_Rd32 & A2_maxu_Rs32 & A2_maxu_Rt32 {
  local tmp0:4;
  tmp0 = A2_maxu_Rs32;
  local tmp1:4;
  tmp1 = A2_maxu_Rt32;
  local tmp2:1;
  tmp2 = tmp0 > tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:4;
  tmp5 = A2_maxu_Rs32;
  local tmp6:4;
  tmp6 = tmp5;
  goto <done_5>;
<f_branch_5>
  local tmp7:4;
  tmp7 = A2_maxu_Rt32;
  tmp6 = tmp7;
<done_5>
  A2_maxu_Rd32 = tmp6;
}

:A2_min A2_min_Rd32 A2_min_Rt32 A2_min_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_min_Rd32 & A2_min_Rt32 & A2_min_Rs32 {
  local tmp0:1;
  tmp0 = A2_min_Rt32 s< A2_min_Rs32;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = A2_min_Rt32;
  goto <done_3>;
<f_branch_3>
  tmp3 = A2_min_Rs32;
<done_3>
  A2_min_Rd32 = tmp3;
}

:A2_minu A2_minu_Rd32 A2_minu_Rt32 A2_minu_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_minu_Rd32 & A2_minu_Rt32 & A2_minu_Rs32 {
  local tmp0:4;
  tmp0 = A2_minu_Rt32;
  local tmp1:4;
  tmp1 = A2_minu_Rs32;
  local tmp2:1;
  tmp2 = tmp0 < tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:4;
  tmp5 = A2_minu_Rt32;
  local tmp6:4;
  tmp6 = tmp5;
  goto <done_5>;
<f_branch_5>
  local tmp7:4;
  tmp7 = A2_minu_Rs32;
  tmp6 = tmp7;
<done_5>
  A2_minu_Rd32 = tmp6;
}

:A2_maxp A2_maxp_Rdd32 A2_maxp_Rss32 A2_maxp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_maxp_Rdd32 & A2_maxp_Rss32 & A2_maxp_Rtt32 {
  local tmp0:1;
  tmp0 = A2_maxp_Rss32 s> A2_maxp_Rtt32;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:8;
  tmp3 = A2_maxp_Rss32;
  goto <done_3>;
<f_branch_3>
  tmp3 = A2_maxp_Rtt32;
<done_3>
  A2_maxp_Rdd32 = tmp3;
}

:A2_maxup A2_maxup_Rdd32 A2_maxup_Rss32 A2_maxup_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_maxup_Rdd32 & A2_maxup_Rss32 & A2_maxup_Rtt32 {
  local tmp0:8;
  tmp0 = A2_maxup_Rss32;
  local tmp1:8;
  tmp1 = A2_maxup_Rtt32;
  local tmp2:1;
  tmp2 = tmp0 > tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:8;
  tmp5 = A2_maxup_Rss32;
  local tmp6:8;
  tmp6 = tmp5;
  goto <done_5>;
<f_branch_5>
  local tmp7:8;
  tmp7 = A2_maxup_Rtt32;
  tmp6 = tmp7;
<done_5>
  A2_maxup_Rdd32 = tmp6;
}

:A2_minp A2_minp_Rdd32 A2_minp_Rtt32 A2_minp_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_minp_Rdd32 & A2_minp_Rtt32 & A2_minp_Rss32 {
  local tmp0:1;
  tmp0 = A2_minp_Rtt32 s< A2_minp_Rss32;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:8;
  tmp3 = A2_minp_Rtt32;
  goto <done_3>;
<f_branch_3>
  tmp3 = A2_minp_Rss32;
<done_3>
  A2_minp_Rdd32 = tmp3;
}

:A2_minup A2_minup_Rdd32 A2_minup_Rtt32 A2_minup_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_minup_Rdd32 & A2_minup_Rtt32 & A2_minup_Rss32 {
  local tmp0:8;
  tmp0 = A2_minup_Rtt32;
  local tmp1:8;
  tmp1 = A2_minup_Rss32;
  local tmp2:1;
  tmp2 = tmp0 < tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:8;
  tmp5 = A2_minup_Rtt32;
  local tmp6:8;
  tmp6 = tmp5;
  goto <done_5>;
<f_branch_5>
  local tmp7:8;
  tmp7 = A2_minup_Rss32;
  tmp6 = tmp7;
<done_5>
  A2_minup_Rdd32 = tmp6;
}

:A2_nop  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 {
}

:A2_tfr A2_tfr_Rd32 A2_tfr_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_tfr_Rd32 & A2_tfr_Rs32 {
  A2_tfr_Rd32 = A2_tfr_Rs32;
}

:A2_tfrsi A2_tfrsi_Rd32 A2_tfrsi_s16 is phase = 1 & Parse != 0b00 & subinsn = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_tfrsi_Rd32 & A2_tfrsi_s16 {
  A2_tfrsi_Rd32 = A2_tfrsi_s16;
}

:A2_sxtb A2_sxtb_Rd32 A2_sxtb_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_sxtb_Rd32 & A2_sxtb_Rs32 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 8;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = A2_sxtb_Rs32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 8;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 8;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  A2_sxtb_Rd32 = tmp17;
}

:A2_zxth A2_zxth_Rd32 A2_zxth_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_zxth_Rd32 & A2_zxth_Rs32 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 16;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = A2_zxth_Rs32 & tmp4;
  A2_zxth_Rd32 = tmp5;
}

:A2_sxth A2_sxth_Rd32 A2_sxth_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_sxth_Rd32 & A2_sxth_Rs32 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 16;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = A2_sxth_Rs32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 16;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  A2_sxth_Rd32 = tmp17;
}

:A2_combine_hh A2_combine_hh_Rd32 A2_combine_hh_Rt32 A2_combine_hh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_combine_hh_Rd32 & A2_combine_hh_Rt32 & A2_combine_hh_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_combine_hh_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = sext(tmp0);
  local tmp9:4;
  tmp9 = tmp8 << tmp7;
  local tmp10:2;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = 16;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = A2_combine_hh_Rs32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:4;
  tmp16 = tmp14 & tmp15;
  tmp10 = tmp16:2;
  local tmp17:4;
  tmp17 = sext(tmp10);
  local tmp18:4;
  tmp18 = tmp9 | tmp17;
  A2_combine_hh_Rd32 = tmp18;
}

:A2_combine_hl A2_combine_hl_Rd32 A2_combine_hl_Rt32 A2_combine_hl_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_combine_hl_Rd32 & A2_combine_hl_Rt32 & A2_combine_hl_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_combine_hl_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = sext(tmp0);
  local tmp9:4;
  tmp9 = tmp8 << tmp7;
  local tmp10:2;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 16;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = A2_combine_hl_Rs32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:4;
  tmp16 = tmp14 & tmp15;
  tmp10 = tmp16:2;
  local tmp17:4;
  tmp17 = sext(tmp10);
  local tmp18:4;
  tmp18 = tmp9 | tmp17;
  A2_combine_hl_Rd32 = tmp18;
}

:A2_combine_lh A2_combine_lh_Rd32 A2_combine_lh_Rt32 A2_combine_lh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_combine_lh_Rd32 & A2_combine_lh_Rt32 & A2_combine_lh_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_combine_lh_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = sext(tmp0);
  local tmp9:4;
  tmp9 = tmp8 << tmp7;
  local tmp10:2;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = 16;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = A2_combine_lh_Rs32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:4;
  tmp16 = tmp14 & tmp15;
  tmp10 = tmp16:2;
  local tmp17:4;
  tmp17 = sext(tmp10);
  local tmp18:4;
  tmp18 = tmp9 | tmp17;
  A2_combine_lh_Rd32 = tmp18;
}

:A2_combine_ll A2_combine_ll_Rd32 A2_combine_ll_Rt32 A2_combine_ll_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_combine_ll_Rd32 & A2_combine_ll_Rt32 & A2_combine_ll_Rs32 {
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = A2_combine_ll_Rt32 s>> tmp3;
  local tmp5:4;
  tmp5 = 65535;
  local tmp6:4;
  tmp6 = tmp4 & tmp5;
  tmp0 = tmp6:2;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = sext(tmp0);
  local tmp9:4;
  tmp9 = tmp8 << tmp7;
  local tmp10:2;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 16;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = A2_combine_ll_Rs32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:4;
  tmp16 = tmp14 & tmp15;
  tmp10 = tmp16:2;
  local tmp17:4;
  tmp17 = sext(tmp10);
  local tmp18:4;
  tmp18 = tmp9 | tmp17;
  A2_combine_ll_Rd32 = tmp18;
}

:A2_tfril A2_tfril_Rx32 A2_tfril_u16 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_tfril_Rx32 & A2_tfril_u16 {
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = zext(A2_tfril_Rx32);
  local tmp8:8;
  tmp8 = tmp7 & tmp6;
  local tmp9:8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = A2_tfril_u16 & tmp10;
  tmp9 = sext(tmp11);
  local tmp12:4;
  tmp12 = 0;
  local tmp13:4;
  tmp13 = 16;
  local tmp14:4;
  tmp14 = tmp12 * tmp13;
  local tmp15:8;
  tmp15 = zext(tmp14);
  local tmp16:8;
  tmp16 = tmp9 << tmp15;
  local tmp17:8;
  tmp17 = tmp8 | tmp16;
  A2_tfril_Rx32 = tmp17:4;
}

:A2_tfrih A2_tfrih_Rx32 A2_tfrih_u16 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_tfrih_Rx32 & A2_tfrih_u16 {
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = zext(A2_tfrih_Rx32);
  local tmp8:8;
  tmp8 = tmp7 & tmp6;
  local tmp9:8;
  local tmp10:4;
  tmp10 = 65535;
  local tmp11:4;
  tmp11 = A2_tfrih_u16 & tmp10;
  tmp9 = sext(tmp11);
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 16;
  local tmp14:4;
  tmp14 = tmp12 * tmp13;
  local tmp15:8;
  tmp15 = zext(tmp14);
  local tmp16:8;
  tmp16 = tmp9 << tmp15;
  local tmp17:8;
  tmp17 = tmp8 | tmp16;
  A2_tfrih_Rx32 = tmp17:4;
}

:A2_tfrcrr A2_tfrcrr_Rd32 A2_tfrcrr_Cs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & A2_tfrcrr_Rd32 & A2_tfrcrr_Cs32 {
  A2_tfrcrr_Rd32 = A2_tfrcrr_Cs32;
}

:A2_tfrrcr A2_tfrrcr_Cd32 A2_tfrrcr_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & A2_tfrrcr_Cd32 & A2_tfrrcr_Rs32 {
  A2_tfrrcr_Cd32 = A2_tfrrcr_Rs32;
}

:A4_tfrcpp A4_tfrcpp_Rdd32 A4_tfrcpp_Css32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & A4_tfrcpp_Rdd32 & A4_tfrcpp_Css32 {
  A4_tfrcpp_Rdd32 = A4_tfrcpp_Css32;
}

:A4_tfrpcp A4_tfrpcp_Cdd32 A4_tfrpcp_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & A4_tfrpcp_Cdd32 & A4_tfrpcp_Rss32 {
  A4_tfrpcp_Cdd32 = A4_tfrpcp_Rss32;
}

:A2_and A2_and_Rd32 A2_and_Rs32 A2_and_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_and_Rd32 & A2_and_Rs32 & A2_and_Rt32 {
  local tmp0:4;
  tmp0 = A2_and_Rs32 & A2_and_Rt32;
  A2_and_Rd32 = tmp0;
}

:A2_or A2_or_Rd32 A2_or_Rs32 A2_or_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_or_Rd32 & A2_or_Rs32 & A2_or_Rt32 {
  local tmp0:4;
  tmp0 = A2_or_Rs32 | A2_or_Rt32;
  A2_or_Rd32 = tmp0;
}

:A2_xor A2_xor_Rd32 A2_xor_Rs32 A2_xor_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_xor_Rd32 & A2_xor_Rs32 & A2_xor_Rt32 {
  local tmp0:4;
  tmp0 = A2_xor_Rs32 ^ A2_xor_Rt32;
  A2_xor_Rd32 = tmp0;
}

:M2_xor_xacc M2_xor_xacc_Rx32 M2_xor_xacc_Rs32 M2_xor_xacc_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_xor_xacc_Rx32 & M2_xor_xacc_Rs32 & M2_xor_xacc_Rt32 {
  local tmp0:4;
  tmp0 = M2_xor_xacc_Rs32 ^ M2_xor_xacc_Rt32;
  local tmp1:4;
  tmp1 = M2_xor_xacc_Rx32 ^ tmp0;
  M2_xor_xacc_Rx32 = tmp1;
}

:M4_xor_xacc M4_xor_xacc_Rxx32 M4_xor_xacc_Rss32 M4_xor_xacc_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & M4_xor_xacc_Rxx32 & M4_xor_xacc_Rss32 & M4_xor_xacc_Rtt32 {
  local tmp0:8;
  tmp0 = M4_xor_xacc_Rss32 ^ M4_xor_xacc_Rtt32;
  local tmp1:8;
  tmp1 = M4_xor_xacc_Rxx32 ^ tmp0;
  M4_xor_xacc_Rxx32 = tmp1;
}

:A4_andn A4_andn_Rd32 A4_andn_Rt32 A4_andn_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A4_andn_Rd32 & A4_andn_Rt32 & A4_andn_Rs32 {
  local tmp0:4;
  tmp0 = ~ A4_andn_Rs32;
  local tmp1:4;
  tmp1 = A4_andn_Rt32 & tmp0;
  A4_andn_Rd32 = tmp1;
}

:A4_orn A4_orn_Rd32 A4_orn_Rt32 A4_orn_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A4_orn_Rd32 & A4_orn_Rt32 & A4_orn_Rs32 {
  local tmp0:4;
  tmp0 = ~ A4_orn_Rs32;
  local tmp1:4;
  tmp1 = A4_orn_Rt32 | tmp0;
  A4_orn_Rd32 = tmp1;
}

:A4_andnp A4_andnp_Rdd32 A4_andnp_Rtt32 A4_andnp_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_andnp_Rdd32 & A4_andnp_Rtt32 & A4_andnp_Rss32 {
  local tmp0:8;
  tmp0 = ~ A4_andnp_Rss32;
  local tmp1:8;
  tmp1 = A4_andnp_Rtt32 & tmp0;
  A4_andnp_Rdd32 = tmp1;
}

:A4_ornp A4_ornp_Rdd32 A4_ornp_Rtt32 A4_ornp_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_ornp_Rdd32 & A4_ornp_Rtt32 & A4_ornp_Rss32 {
  local tmp0:8;
  tmp0 = ~ A4_ornp_Rss32;
  local tmp1:8;
  tmp1 = A4_ornp_Rtt32 | tmp0;
  A4_ornp_Rdd32 = tmp1;
}

:S4_addaddi S4_addaddi_Rd32 S4_addaddi_Rs32 S4_addaddi_Ru32 S4_addaddi_s6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & S4_addaddi_Rd32 & S4_addaddi_Rs32 & S4_addaddi_Ru32 & S4_addaddi_s6 {
  local tmp0:4;
  tmp0 = S4_addaddi_Rs32 + S4_addaddi_Ru32;
  local tmp1:4;
  tmp1 = tmp0 + S4_addaddi_s6;
  S4_addaddi_Rd32 = tmp1;
}

:S4_subaddi S4_subaddi_Rd32 S4_subaddi_Rs32 S4_subaddi_Ru32 S4_subaddi_s6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & S4_subaddi_Rd32 & S4_subaddi_Rs32 & S4_subaddi_Ru32 & S4_subaddi_s6 {
  local tmp0:4;
  tmp0 = S4_subaddi_Rs32 - S4_subaddi_Ru32;
  local tmp1:4;
  tmp1 = tmp0 + S4_subaddi_s6;
  S4_subaddi_Rd32 = tmp1;
}

:M4_and_and M4_and_and_Rx32 M4_and_and_Rs32 M4_and_and_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_and_and_Rx32 & M4_and_and_Rs32 & M4_and_and_Rt32 {
  local tmp0:4;
  tmp0 = M4_and_and_Rs32 & M4_and_and_Rt32;
  local tmp1:4;
  tmp1 = M4_and_and_Rx32 & tmp0;
  M4_and_and_Rx32 = tmp1;
}

:M4_and_andn M4_and_andn_Rx32 M4_and_andn_Rs32 M4_and_andn_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_and_andn_Rx32 & M4_and_andn_Rs32 & M4_and_andn_Rt32 {
  local tmp0:4;
  tmp0 = ~ M4_and_andn_Rt32;
  local tmp1:4;
  tmp1 = M4_and_andn_Rs32 & tmp0;
  local tmp2:4;
  tmp2 = M4_and_andn_Rx32 & tmp1;
  M4_and_andn_Rx32 = tmp2;
}

:M4_and_or M4_and_or_Rx32 M4_and_or_Rs32 M4_and_or_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_and_or_Rx32 & M4_and_or_Rs32 & M4_and_or_Rt32 {
  local tmp0:4;
  tmp0 = M4_and_or_Rs32 | M4_and_or_Rt32;
  local tmp1:4;
  tmp1 = M4_and_or_Rx32 & tmp0;
  M4_and_or_Rx32 = tmp1;
}

:M4_and_xor M4_and_xor_Rx32 M4_and_xor_Rs32 M4_and_xor_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_and_xor_Rx32 & M4_and_xor_Rs32 & M4_and_xor_Rt32 {
  local tmp0:4;
  tmp0 = M4_and_xor_Rs32 ^ M4_and_xor_Rt32;
  local tmp1:4;
  tmp1 = M4_and_xor_Rx32 & tmp0;
  M4_and_xor_Rx32 = tmp1;
}

:M4_or_and M4_or_and_Rx32 M4_or_and_Rs32 M4_or_and_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_or_and_Rx32 & M4_or_and_Rs32 & M4_or_and_Rt32 {
  local tmp0:4;
  tmp0 = M4_or_and_Rs32 & M4_or_and_Rt32;
  local tmp1:4;
  tmp1 = M4_or_and_Rx32 | tmp0;
  M4_or_and_Rx32 = tmp1;
}

:M4_or_andn M4_or_andn_Rx32 M4_or_andn_Rs32 M4_or_andn_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_or_andn_Rx32 & M4_or_andn_Rs32 & M4_or_andn_Rt32 {
  local tmp0:4;
  tmp0 = ~ M4_or_andn_Rt32;
  local tmp1:4;
  tmp1 = M4_or_andn_Rs32 & tmp0;
  local tmp2:4;
  tmp2 = M4_or_andn_Rx32 | tmp1;
  M4_or_andn_Rx32 = tmp2;
}

:M4_or_or M4_or_or_Rx32 M4_or_or_Rs32 M4_or_or_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_or_or_Rx32 & M4_or_or_Rs32 & M4_or_or_Rt32 {
  local tmp0:4;
  tmp0 = M4_or_or_Rs32 | M4_or_or_Rt32;
  local tmp1:4;
  tmp1 = M4_or_or_Rx32 | tmp0;
  M4_or_or_Rx32 = tmp1;
}

:M4_or_xor M4_or_xor_Rx32 M4_or_xor_Rs32 M4_or_xor_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_or_xor_Rx32 & M4_or_xor_Rs32 & M4_or_xor_Rt32 {
  local tmp0:4;
  tmp0 = M4_or_xor_Rs32 ^ M4_or_xor_Rt32;
  local tmp1:4;
  tmp1 = M4_or_xor_Rx32 | tmp0;
  M4_or_xor_Rx32 = tmp1;
}

:S4_or_andix S4_or_andix_Rx32 S4_or_andix_Ru32 S4_or_andix_s10 is phase = 1 & Parse != 0b00 & subinsn = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & S4_or_andix_Rx32 & S4_or_andix_Ru32 & S4_or_andix_s10 {
  local tmp0:4;
  tmp0 = S4_or_andix_Rx32 & S4_or_andix_s10;
  local tmp1:4;
  tmp1 = S4_or_andix_Ru32 | tmp0;
  S4_or_andix_Rx32 = tmp1;
}

:S4_or_andi S4_or_andi_Rx32 S4_or_andi_Rs32 S4_or_andi_s10 is phase = 1 & Parse != 0b00 & subinsn = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & S4_or_andi_Rx32 & S4_or_andi_Rs32 & S4_or_andi_s10 {
  local tmp0:4;
  tmp0 = S4_or_andi_Rs32 & S4_or_andi_s10;
  local tmp1:4;
  tmp1 = S4_or_andi_Rx32 | tmp0;
  S4_or_andi_Rx32 = tmp1;
}

:S4_or_ori S4_or_ori_Rx32 S4_or_ori_Rs32 S4_or_ori_s10 is phase = 1 & Parse != 0b00 & subinsn = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & S4_or_ori_Rx32 & S4_or_ori_Rs32 & S4_or_ori_s10 {
  local tmp0:4;
  tmp0 = S4_or_ori_Rs32 | S4_or_ori_s10;
  local tmp1:4;
  tmp1 = S4_or_ori_Rx32 | tmp0;
  S4_or_ori_Rx32 = tmp1;
}

:M4_xor_and M4_xor_and_Rx32 M4_xor_and_Rs32 M4_xor_and_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_xor_and_Rx32 & M4_xor_and_Rs32 & M4_xor_and_Rt32 {
  local tmp0:4;
  tmp0 = M4_xor_and_Rs32 & M4_xor_and_Rt32;
  local tmp1:4;
  tmp1 = M4_xor_and_Rx32 ^ tmp0;
  M4_xor_and_Rx32 = tmp1;
}

:M4_xor_or M4_xor_or_Rx32 M4_xor_or_Rs32 M4_xor_or_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_xor_or_Rx32 & M4_xor_or_Rs32 & M4_xor_or_Rt32 {
  local tmp0:4;
  tmp0 = M4_xor_or_Rs32 | M4_xor_or_Rt32;
  local tmp1:4;
  tmp1 = M4_xor_or_Rx32 ^ tmp0;
  M4_xor_or_Rx32 = tmp1;
}

:M4_xor_andn M4_xor_andn_Rx32 M4_xor_andn_Rs32 M4_xor_andn_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M4_xor_andn_Rx32 & M4_xor_andn_Rs32 & M4_xor_andn_Rt32 {
  local tmp0:4;
  tmp0 = ~ M4_xor_andn_Rt32;
  local tmp1:4;
  tmp1 = M4_xor_andn_Rs32 & tmp0;
  local tmp2:4;
  tmp2 = M4_xor_andn_Rx32 ^ tmp1;
  M4_xor_andn_Rx32 = tmp2;
}

:A2_subri A2_subri_Rd32 A2_subri_Rs32 A2_subri_s10 is phase = 1 & Parse != 0b00 & subinsn = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_subri_Rd32 & A2_subri_Rs32 & A2_subri_s10 {
  local tmp0:4;
  tmp0 = A2_subri_s10 - A2_subri_Rs32;
  A2_subri_Rd32 = tmp0;
}

:A2_andir A2_andir_Rd32 A2_andir_Rs32 A2_andir_s10 is phase = 1 & Parse != 0b00 & subinsn = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_andir_Rd32 & A2_andir_Rs32 & A2_andir_s10 {
  local tmp0:4;
  tmp0 = A2_andir_Rs32 & A2_andir_s10;
  A2_andir_Rd32 = tmp0;
}

:A2_orir A2_orir_Rd32 A2_orir_Rs32 A2_orir_s10 is phase = 1 & Parse != 0b00 & subinsn = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_orir_Rd32 & A2_orir_Rs32 & A2_orir_s10 {
  local tmp0:4;
  tmp0 = A2_orir_Rs32 | A2_orir_s10;
  A2_orir_Rd32 = tmp0;
}

:A2_andp A2_andp_Rdd32 A2_andp_Rss32 A2_andp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_andp_Rdd32 & A2_andp_Rss32 & A2_andp_Rtt32 {
  local tmp0:8;
  tmp0 = A2_andp_Rss32 & A2_andp_Rtt32;
  A2_andp_Rdd32 = tmp0;
}

:A2_orp A2_orp_Rdd32 A2_orp_Rss32 A2_orp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_orp_Rdd32 & A2_orp_Rss32 & A2_orp_Rtt32 {
  local tmp0:8;
  tmp0 = A2_orp_Rss32 | A2_orp_Rtt32;
  A2_orp_Rdd32 = tmp0;
}

:A2_xorp A2_xorp_Rdd32 A2_xorp_Rss32 A2_xorp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_xorp_Rdd32 & A2_xorp_Rss32 & A2_xorp_Rtt32 {
  local tmp0:8;
  tmp0 = A2_xorp_Rss32 ^ A2_xorp_Rtt32;
  A2_xorp_Rdd32 = tmp0;
}

:A2_notp A2_notp_Rdd32 A2_notp_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_notp_Rdd32 & A2_notp_Rss32 {
  local tmp0:8;
  tmp0 = ~ A2_notp_Rss32;
  A2_notp_Rdd32 = tmp0;
}

:A2_sxtw A2_sxtw_Rdd32 A2_sxtw_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_sxtw_Rdd32 & A2_sxtw_Rs32 {
  local tmp0:8;
  local tmp1:4;
  tmp1 = A2_sxtw_Rs32;
  tmp0 = zext(tmp1);
  A2_sxtw_Rdd32 = tmp0;
}

:A2_sat A2_sat_Rd32 A2_sat_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_sat_Rd32 & A2_sat_Rss32 unimpl

:A2_roundsat A2_roundsat_Rd32 A2_roundsat_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_roundsat_Rd32 & A2_roundsat_Rss32 unimpl

:A2_sath A2_sath_Rd32 A2_sath_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_sath_Rd32 & A2_sath_Rs32 unimpl

:A2_satuh A2_satuh_Rd32 A2_satuh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_satuh_Rd32 & A2_satuh_Rs32 unimpl

:A2_satub A2_satub_Rd32 A2_satub_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_satub_Rd32 & A2_satub_Rs32 unimpl

:A2_satb A2_satb_Rd32 A2_satb_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_satb_Rd32 & A2_satb_Rs32 unimpl

:A2_vaddub A2_vaddub_Rdd32 A2_vaddub_Rss32 A2_vaddub_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vaddub_Rdd32 & A2_vaddub_Rss32 & A2_vaddub_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vaddub_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:1;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 8;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vaddub_Rss32 s>> tmp13;
  local tmp15:4;
  tmp15 = 255;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:1;
  local tmp18:1;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 8;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vaddub_Rtt32 s>> tmp22;
  local tmp24:4;
  tmp24 = 255;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:1;
  local tmp27:1;
  tmp27 = tmp9 + tmp18;
  local tmp28:8;
  tmp28 = 255;
  local tmp29:8;
  tmp29 = zext(tmp27);
  local tmp30:8;
  tmp30 = tmp29 & tmp28;
  tmp8 = tmp30;
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 8;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = tmp8 << tmp34;
  local tmp36:8;
  tmp36 = tmp7 | tmp35;
  A2_vaddub_Rdd32 = tmp36;
  local tmp37:8;
  tmp37 = 255;
  local tmp38:4;
  tmp38 = 1;
  local tmp39:4;
  tmp39 = 8;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = tmp37 << tmp41;
  local tmp43:8;
  tmp43 = ~ tmp42;
  local tmp44:8;
  tmp44 = A2_vaddub_Rdd32 & tmp43;
  local tmp45:8;
  local tmp46:1;
  local tmp47:4;
  tmp47 = 1;
  local tmp48:4;
  tmp48 = 8;
  local tmp49:4;
  tmp49 = tmp47 * tmp48;
  local tmp50:8;
  tmp50 = zext(tmp49);
  local tmp51:8;
  tmp51 = A2_vaddub_Rss32 s>> tmp50;
  local tmp52:4;
  tmp52 = 255;
  local tmp53:8;
  tmp53 = zext(tmp52);
  local tmp54:8;
  tmp54 = tmp51 & tmp53;
  tmp46 = tmp54:1;
  local tmp55:1;
  local tmp56:4;
  tmp56 = 1;
  local tmp57:4;
  tmp57 = 8;
  local tmp58:4;
  tmp58 = tmp56 * tmp57;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = A2_vaddub_Rtt32 s>> tmp59;
  local tmp61:4;
  tmp61 = 255;
  local tmp62:8;
  tmp62 = zext(tmp61);
  local tmp63:8;
  tmp63 = tmp60 & tmp62;
  tmp55 = tmp63:1;
  local tmp64:1;
  tmp64 = tmp46 + tmp55;
  local tmp65:8;
  tmp65 = 255;
  local tmp66:8;
  tmp66 = zext(tmp64);
  local tmp67:8;
  tmp67 = tmp66 & tmp65;
  tmp45 = tmp67;
  local tmp68:4;
  tmp68 = 1;
  local tmp69:4;
  tmp69 = 8;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = tmp45 << tmp71;
  local tmp73:8;
  tmp73 = tmp44 | tmp72;
  A2_vaddub_Rdd32 = tmp73;
  local tmp74:8;
  tmp74 = 255;
  local tmp75:4;
  tmp75 = 2;
  local tmp76:4;
  tmp76 = 8;
  local tmp77:4;
  tmp77 = tmp75 * tmp76;
  local tmp78:8;
  tmp78 = zext(tmp77);
  local tmp79:8;
  tmp79 = tmp74 << tmp78;
  local tmp80:8;
  tmp80 = ~ tmp79;
  local tmp81:8;
  tmp81 = A2_vaddub_Rdd32 & tmp80;
  local tmp82:8;
  local tmp83:1;
  local tmp84:4;
  tmp84 = 2;
  local tmp85:4;
  tmp85 = 8;
  local tmp86:4;
  tmp86 = tmp84 * tmp85;
  local tmp87:8;
  tmp87 = zext(tmp86);
  local tmp88:8;
  tmp88 = A2_vaddub_Rss32 s>> tmp87;
  local tmp89:4;
  tmp89 = 255;
  local tmp90:8;
  tmp90 = zext(tmp89);
  local tmp91:8;
  tmp91 = tmp88 & tmp90;
  tmp83 = tmp91:1;
  local tmp92:1;
  local tmp93:4;
  tmp93 = 2;
  local tmp94:4;
  tmp94 = 8;
  local tmp95:4;
  tmp95 = tmp93 * tmp94;
  local tmp96:8;
  tmp96 = zext(tmp95);
  local tmp97:8;
  tmp97 = A2_vaddub_Rtt32 s>> tmp96;
  local tmp98:4;
  tmp98 = 255;
  local tmp99:8;
  tmp99 = zext(tmp98);
  local tmp100:8;
  tmp100 = tmp97 & tmp99;
  tmp92 = tmp100:1;
  local tmp101:1;
  tmp101 = tmp83 + tmp92;
  local tmp102:8;
  tmp102 = 255;
  local tmp103:8;
  tmp103 = zext(tmp101);
  local tmp104:8;
  tmp104 = tmp103 & tmp102;
  tmp82 = tmp104;
  local tmp105:4;
  tmp105 = 2;
  local tmp106:4;
  tmp106 = 8;
  local tmp107:4;
  tmp107 = tmp105 * tmp106;
  local tmp108:8;
  tmp108 = zext(tmp107);
  local tmp109:8;
  tmp109 = tmp82 << tmp108;
  local tmp110:8;
  tmp110 = tmp81 | tmp109;
  A2_vaddub_Rdd32 = tmp110;
  local tmp111:8;
  tmp111 = 255;
  local tmp112:4;
  tmp112 = 3;
  local tmp113:4;
  tmp113 = 8;
  local tmp114:4;
  tmp114 = tmp112 * tmp113;
  local tmp115:8;
  tmp115 = zext(tmp114);
  local tmp116:8;
  tmp116 = tmp111 << tmp115;
  local tmp117:8;
  tmp117 = ~ tmp116;
  local tmp118:8;
  tmp118 = A2_vaddub_Rdd32 & tmp117;
  local tmp119:8;
  local tmp120:1;
  local tmp121:4;
  tmp121 = 3;
  local tmp122:4;
  tmp122 = 8;
  local tmp123:4;
  tmp123 = tmp121 * tmp122;
  local tmp124:8;
  tmp124 = zext(tmp123);
  local tmp125:8;
  tmp125 = A2_vaddub_Rss32 s>> tmp124;
  local tmp126:4;
  tmp126 = 255;
  local tmp127:8;
  tmp127 = zext(tmp126);
  local tmp128:8;
  tmp128 = tmp125 & tmp127;
  tmp120 = tmp128:1;
  local tmp129:1;
  local tmp130:4;
  tmp130 = 3;
  local tmp131:4;
  tmp131 = 8;
  local tmp132:4;
  tmp132 = tmp130 * tmp131;
  local tmp133:8;
  tmp133 = zext(tmp132);
  local tmp134:8;
  tmp134 = A2_vaddub_Rtt32 s>> tmp133;
  local tmp135:4;
  tmp135 = 255;
  local tmp136:8;
  tmp136 = zext(tmp135);
  local tmp137:8;
  tmp137 = tmp134 & tmp136;
  tmp129 = tmp137:1;
  local tmp138:1;
  tmp138 = tmp120 + tmp129;
  local tmp139:8;
  tmp139 = 255;
  local tmp140:8;
  tmp140 = zext(tmp138);
  local tmp141:8;
  tmp141 = tmp140 & tmp139;
  tmp119 = tmp141;
  local tmp142:4;
  tmp142 = 3;
  local tmp143:4;
  tmp143 = 8;
  local tmp144:4;
  tmp144 = tmp142 * tmp143;
  local tmp145:8;
  tmp145 = zext(tmp144);
  local tmp146:8;
  tmp146 = tmp119 << tmp145;
  local tmp147:8;
  tmp147 = tmp118 | tmp146;
  A2_vaddub_Rdd32 = tmp147;
  local tmp148:8;
  tmp148 = 255;
  local tmp149:4;
  tmp149 = 4;
  local tmp150:4;
  tmp150 = 8;
  local tmp151:4;
  tmp151 = tmp149 * tmp150;
  local tmp152:8;
  tmp152 = zext(tmp151);
  local tmp153:8;
  tmp153 = tmp148 << tmp152;
  local tmp154:8;
  tmp154 = ~ tmp153;
  local tmp155:8;
  tmp155 = A2_vaddub_Rdd32 & tmp154;
  local tmp156:8;
  local tmp157:1;
  local tmp158:4;
  tmp158 = 4;
  local tmp159:4;
  tmp159 = 8;
  local tmp160:4;
  tmp160 = tmp158 * tmp159;
  local tmp161:8;
  tmp161 = zext(tmp160);
  local tmp162:8;
  tmp162 = A2_vaddub_Rss32 s>> tmp161;
  local tmp163:4;
  tmp163 = 255;
  local tmp164:8;
  tmp164 = zext(tmp163);
  local tmp165:8;
  tmp165 = tmp162 & tmp164;
  tmp157 = tmp165:1;
  local tmp166:1;
  local tmp167:4;
  tmp167 = 4;
  local tmp168:4;
  tmp168 = 8;
  local tmp169:4;
  tmp169 = tmp167 * tmp168;
  local tmp170:8;
  tmp170 = zext(tmp169);
  local tmp171:8;
  tmp171 = A2_vaddub_Rtt32 s>> tmp170;
  local tmp172:4;
  tmp172 = 255;
  local tmp173:8;
  tmp173 = zext(tmp172);
  local tmp174:8;
  tmp174 = tmp171 & tmp173;
  tmp166 = tmp174:1;
  local tmp175:1;
  tmp175 = tmp157 + tmp166;
  local tmp176:8;
  tmp176 = 255;
  local tmp177:8;
  tmp177 = zext(tmp175);
  local tmp178:8;
  tmp178 = tmp177 & tmp176;
  tmp156 = tmp178;
  local tmp179:4;
  tmp179 = 4;
  local tmp180:4;
  tmp180 = 8;
  local tmp181:4;
  tmp181 = tmp179 * tmp180;
  local tmp182:8;
  tmp182 = zext(tmp181);
  local tmp183:8;
  tmp183 = tmp156 << tmp182;
  local tmp184:8;
  tmp184 = tmp155 | tmp183;
  A2_vaddub_Rdd32 = tmp184;
  local tmp185:8;
  tmp185 = 255;
  local tmp186:4;
  tmp186 = 5;
  local tmp187:4;
  tmp187 = 8;
  local tmp188:4;
  tmp188 = tmp186 * tmp187;
  local tmp189:8;
  tmp189 = zext(tmp188);
  local tmp190:8;
  tmp190 = tmp185 << tmp189;
  local tmp191:8;
  tmp191 = ~ tmp190;
  local tmp192:8;
  tmp192 = A2_vaddub_Rdd32 & tmp191;
  local tmp193:8;
  local tmp194:1;
  local tmp195:4;
  tmp195 = 5;
  local tmp196:4;
  tmp196 = 8;
  local tmp197:4;
  tmp197 = tmp195 * tmp196;
  local tmp198:8;
  tmp198 = zext(tmp197);
  local tmp199:8;
  tmp199 = A2_vaddub_Rss32 s>> tmp198;
  local tmp200:4;
  tmp200 = 255;
  local tmp201:8;
  tmp201 = zext(tmp200);
  local tmp202:8;
  tmp202 = tmp199 & tmp201;
  tmp194 = tmp202:1;
  local tmp203:1;
  local tmp204:4;
  tmp204 = 5;
  local tmp205:4;
  tmp205 = 8;
  local tmp206:4;
  tmp206 = tmp204 * tmp205;
  local tmp207:8;
  tmp207 = zext(tmp206);
  local tmp208:8;
  tmp208 = A2_vaddub_Rtt32 s>> tmp207;
  local tmp209:4;
  tmp209 = 255;
  local tmp210:8;
  tmp210 = zext(tmp209);
  local tmp211:8;
  tmp211 = tmp208 & tmp210;
  tmp203 = tmp211:1;
  local tmp212:1;
  tmp212 = tmp194 + tmp203;
  local tmp213:8;
  tmp213 = 255;
  local tmp214:8;
  tmp214 = zext(tmp212);
  local tmp215:8;
  tmp215 = tmp214 & tmp213;
  tmp193 = tmp215;
  local tmp216:4;
  tmp216 = 5;
  local tmp217:4;
  tmp217 = 8;
  local tmp218:4;
  tmp218 = tmp216 * tmp217;
  local tmp219:8;
  tmp219 = zext(tmp218);
  local tmp220:8;
  tmp220 = tmp193 << tmp219;
  local tmp221:8;
  tmp221 = tmp192 | tmp220;
  A2_vaddub_Rdd32 = tmp221;
  local tmp222:8;
  tmp222 = 255;
  local tmp223:4;
  tmp223 = 6;
  local tmp224:4;
  tmp224 = 8;
  local tmp225:4;
  tmp225 = tmp223 * tmp224;
  local tmp226:8;
  tmp226 = zext(tmp225);
  local tmp227:8;
  tmp227 = tmp222 << tmp226;
  local tmp228:8;
  tmp228 = ~ tmp227;
  local tmp229:8;
  tmp229 = A2_vaddub_Rdd32 & tmp228;
  local tmp230:8;
  local tmp231:1;
  local tmp232:4;
  tmp232 = 6;
  local tmp233:4;
  tmp233 = 8;
  local tmp234:4;
  tmp234 = tmp232 * tmp233;
  local tmp235:8;
  tmp235 = zext(tmp234);
  local tmp236:8;
  tmp236 = A2_vaddub_Rss32 s>> tmp235;
  local tmp237:4;
  tmp237 = 255;
  local tmp238:8;
  tmp238 = zext(tmp237);
  local tmp239:8;
  tmp239 = tmp236 & tmp238;
  tmp231 = tmp239:1;
  local tmp240:1;
  local tmp241:4;
  tmp241 = 6;
  local tmp242:4;
  tmp242 = 8;
  local tmp243:4;
  tmp243 = tmp241 * tmp242;
  local tmp244:8;
  tmp244 = zext(tmp243);
  local tmp245:8;
  tmp245 = A2_vaddub_Rtt32 s>> tmp244;
  local tmp246:4;
  tmp246 = 255;
  local tmp247:8;
  tmp247 = zext(tmp246);
  local tmp248:8;
  tmp248 = tmp245 & tmp247;
  tmp240 = tmp248:1;
  local tmp249:1;
  tmp249 = tmp231 + tmp240;
  local tmp250:8;
  tmp250 = 255;
  local tmp251:8;
  tmp251 = zext(tmp249);
  local tmp252:8;
  tmp252 = tmp251 & tmp250;
  tmp230 = tmp252;
  local tmp253:4;
  tmp253 = 6;
  local tmp254:4;
  tmp254 = 8;
  local tmp255:4;
  tmp255 = tmp253 * tmp254;
  local tmp256:8;
  tmp256 = zext(tmp255);
  local tmp257:8;
  tmp257 = tmp230 << tmp256;
  local tmp258:8;
  tmp258 = tmp229 | tmp257;
  A2_vaddub_Rdd32 = tmp258;
  local tmp259:8;
  tmp259 = 255;
  local tmp260:4;
  tmp260 = 7;
  local tmp261:4;
  tmp261 = 8;
  local tmp262:4;
  tmp262 = tmp260 * tmp261;
  local tmp263:8;
  tmp263 = zext(tmp262);
  local tmp264:8;
  tmp264 = tmp259 << tmp263;
  local tmp265:8;
  tmp265 = ~ tmp264;
  local tmp266:8;
  tmp266 = A2_vaddub_Rdd32 & tmp265;
  local tmp267:8;
  local tmp268:1;
  local tmp269:4;
  tmp269 = 7;
  local tmp270:4;
  tmp270 = 8;
  local tmp271:4;
  tmp271 = tmp269 * tmp270;
  local tmp272:8;
  tmp272 = zext(tmp271);
  local tmp273:8;
  tmp273 = A2_vaddub_Rss32 s>> tmp272;
  local tmp274:4;
  tmp274 = 255;
  local tmp275:8;
  tmp275 = zext(tmp274);
  local tmp276:8;
  tmp276 = tmp273 & tmp275;
  tmp268 = tmp276:1;
  local tmp277:1;
  local tmp278:4;
  tmp278 = 7;
  local tmp279:4;
  tmp279 = 8;
  local tmp280:4;
  tmp280 = tmp278 * tmp279;
  local tmp281:8;
  tmp281 = zext(tmp280);
  local tmp282:8;
  tmp282 = A2_vaddub_Rtt32 s>> tmp281;
  local tmp283:4;
  tmp283 = 255;
  local tmp284:8;
  tmp284 = zext(tmp283);
  local tmp285:8;
  tmp285 = tmp282 & tmp284;
  tmp277 = tmp285:1;
  local tmp286:1;
  tmp286 = tmp268 + tmp277;
  local tmp287:8;
  tmp287 = 255;
  local tmp288:8;
  tmp288 = zext(tmp286);
  local tmp289:8;
  tmp289 = tmp288 & tmp287;
  tmp267 = tmp289;
  local tmp290:4;
  tmp290 = 7;
  local tmp291:4;
  tmp291 = 8;
  local tmp292:4;
  tmp292 = tmp290 * tmp291;
  local tmp293:8;
  tmp293 = zext(tmp292);
  local tmp294:8;
  tmp294 = tmp267 << tmp293;
  local tmp295:8;
  tmp295 = tmp266 | tmp294;
  A2_vaddub_Rdd32 = tmp295;
}

:A2_vaddubs A2_vaddubs_Rdd32 A2_vaddubs_Rss32 A2_vaddubs_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vaddubs_Rdd32 & A2_vaddubs_Rss32 & A2_vaddubs_Rtt32 unimpl

:A2_vaddh A2_vaddh_Rdd32 A2_vaddh_Rss32 A2_vaddh_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vaddh_Rdd32 & A2_vaddh_Rss32 & A2_vaddh_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vaddh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vaddh_Rss32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:2;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vaddh_Rtt32 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:2;
  local tmp27:2;
  tmp27 = tmp9 + tmp18;
  local tmp28:4;
  tmp28 = 65535;
  local tmp29:4;
  tmp29 = zext(tmp27);
  local tmp30:4;
  tmp30 = tmp29 & tmp28;
  tmp8 = sext(tmp30);
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 16;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = tmp8 << tmp34;
  local tmp36:8;
  tmp36 = tmp7 | tmp35;
  A2_vaddh_Rdd32 = tmp36;
  local tmp37:8;
  tmp37 = 65535;
  local tmp38:4;
  tmp38 = 1;
  local tmp39:4;
  tmp39 = 16;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = tmp37 << tmp41;
  local tmp43:8;
  tmp43 = ~ tmp42;
  local tmp44:8;
  tmp44 = A2_vaddh_Rdd32 & tmp43;
  local tmp45:8;
  local tmp46:2;
  local tmp47:4;
  tmp47 = 1;
  local tmp48:4;
  tmp48 = 16;
  local tmp49:4;
  tmp49 = tmp47 * tmp48;
  local tmp50:8;
  tmp50 = zext(tmp49);
  local tmp51:8;
  tmp51 = A2_vaddh_Rss32 s>> tmp50;
  local tmp52:4;
  tmp52 = 65535;
  local tmp53:8;
  tmp53 = zext(tmp52);
  local tmp54:8;
  tmp54 = tmp51 & tmp53;
  tmp46 = tmp54:2;
  local tmp55:2;
  local tmp56:4;
  tmp56 = 1;
  local tmp57:4;
  tmp57 = 16;
  local tmp58:4;
  tmp58 = tmp56 * tmp57;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = A2_vaddh_Rtt32 s>> tmp59;
  local tmp61:4;
  tmp61 = 65535;
  local tmp62:8;
  tmp62 = zext(tmp61);
  local tmp63:8;
  tmp63 = tmp60 & tmp62;
  tmp55 = tmp63:2;
  local tmp64:2;
  tmp64 = tmp46 + tmp55;
  local tmp65:4;
  tmp65 = 65535;
  local tmp66:4;
  tmp66 = zext(tmp64);
  local tmp67:4;
  tmp67 = tmp66 & tmp65;
  tmp45 = sext(tmp67);
  local tmp68:4;
  tmp68 = 1;
  local tmp69:4;
  tmp69 = 16;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = tmp45 << tmp71;
  local tmp73:8;
  tmp73 = tmp44 | tmp72;
  A2_vaddh_Rdd32 = tmp73;
  local tmp74:8;
  tmp74 = 65535;
  local tmp75:4;
  tmp75 = 2;
  local tmp76:4;
  tmp76 = 16;
  local tmp77:4;
  tmp77 = tmp75 * tmp76;
  local tmp78:8;
  tmp78 = zext(tmp77);
  local tmp79:8;
  tmp79 = tmp74 << tmp78;
  local tmp80:8;
  tmp80 = ~ tmp79;
  local tmp81:8;
  tmp81 = A2_vaddh_Rdd32 & tmp80;
  local tmp82:8;
  local tmp83:2;
  local tmp84:4;
  tmp84 = 2;
  local tmp85:4;
  tmp85 = 16;
  local tmp86:4;
  tmp86 = tmp84 * tmp85;
  local tmp87:8;
  tmp87 = zext(tmp86);
  local tmp88:8;
  tmp88 = A2_vaddh_Rss32 s>> tmp87;
  local tmp89:4;
  tmp89 = 65535;
  local tmp90:8;
  tmp90 = zext(tmp89);
  local tmp91:8;
  tmp91 = tmp88 & tmp90;
  tmp83 = tmp91:2;
  local tmp92:2;
  local tmp93:4;
  tmp93 = 2;
  local tmp94:4;
  tmp94 = 16;
  local tmp95:4;
  tmp95 = tmp93 * tmp94;
  local tmp96:8;
  tmp96 = zext(tmp95);
  local tmp97:8;
  tmp97 = A2_vaddh_Rtt32 s>> tmp96;
  local tmp98:4;
  tmp98 = 65535;
  local tmp99:8;
  tmp99 = zext(tmp98);
  local tmp100:8;
  tmp100 = tmp97 & tmp99;
  tmp92 = tmp100:2;
  local tmp101:2;
  tmp101 = tmp83 + tmp92;
  local tmp102:4;
  tmp102 = 65535;
  local tmp103:4;
  tmp103 = zext(tmp101);
  local tmp104:4;
  tmp104 = tmp103 & tmp102;
  tmp82 = sext(tmp104);
  local tmp105:4;
  tmp105 = 2;
  local tmp106:4;
  tmp106 = 16;
  local tmp107:4;
  tmp107 = tmp105 * tmp106;
  local tmp108:8;
  tmp108 = zext(tmp107);
  local tmp109:8;
  tmp109 = tmp82 << tmp108;
  local tmp110:8;
  tmp110 = tmp81 | tmp109;
  A2_vaddh_Rdd32 = tmp110;
  local tmp111:8;
  tmp111 = 65535;
  local tmp112:4;
  tmp112 = 3;
  local tmp113:4;
  tmp113 = 16;
  local tmp114:4;
  tmp114 = tmp112 * tmp113;
  local tmp115:8;
  tmp115 = zext(tmp114);
  local tmp116:8;
  tmp116 = tmp111 << tmp115;
  local tmp117:8;
  tmp117 = ~ tmp116;
  local tmp118:8;
  tmp118 = A2_vaddh_Rdd32 & tmp117;
  local tmp119:8;
  local tmp120:2;
  local tmp121:4;
  tmp121 = 3;
  local tmp122:4;
  tmp122 = 16;
  local tmp123:4;
  tmp123 = tmp121 * tmp122;
  local tmp124:8;
  tmp124 = zext(tmp123);
  local tmp125:8;
  tmp125 = A2_vaddh_Rss32 s>> tmp124;
  local tmp126:4;
  tmp126 = 65535;
  local tmp127:8;
  tmp127 = zext(tmp126);
  local tmp128:8;
  tmp128 = tmp125 & tmp127;
  tmp120 = tmp128:2;
  local tmp129:2;
  local tmp130:4;
  tmp130 = 3;
  local tmp131:4;
  tmp131 = 16;
  local tmp132:4;
  tmp132 = tmp130 * tmp131;
  local tmp133:8;
  tmp133 = zext(tmp132);
  local tmp134:8;
  tmp134 = A2_vaddh_Rtt32 s>> tmp133;
  local tmp135:4;
  tmp135 = 65535;
  local tmp136:8;
  tmp136 = zext(tmp135);
  local tmp137:8;
  tmp137 = tmp134 & tmp136;
  tmp129 = tmp137:2;
  local tmp138:2;
  tmp138 = tmp120 + tmp129;
  local tmp139:4;
  tmp139 = 65535;
  local tmp140:4;
  tmp140 = zext(tmp138);
  local tmp141:4;
  tmp141 = tmp140 & tmp139;
  tmp119 = sext(tmp141);
  local tmp142:4;
  tmp142 = 3;
  local tmp143:4;
  tmp143 = 16;
  local tmp144:4;
  tmp144 = tmp142 * tmp143;
  local tmp145:8;
  tmp145 = zext(tmp144);
  local tmp146:8;
  tmp146 = tmp119 << tmp145;
  local tmp147:8;
  tmp147 = tmp118 | tmp146;
  A2_vaddh_Rdd32 = tmp147;
}

:A2_vaddhs A2_vaddhs_Rdd32 A2_vaddhs_Rss32 A2_vaddhs_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vaddhs_Rdd32 & A2_vaddhs_Rss32 & A2_vaddhs_Rtt32 unimpl

:A2_vadduhs A2_vadduhs_Rdd32 A2_vadduhs_Rss32 A2_vadduhs_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vadduhs_Rdd32 & A2_vadduhs_Rss32 & A2_vadduhs_Rtt32 unimpl

:A5_vaddhubs A5_vaddhubs_Rd32 A5_vaddhubs_Rss32 A5_vaddhubs_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A5_vaddhubs_Rd32 & A5_vaddhubs_Rss32 & A5_vaddhubs_Rtt32 unimpl

:A2_vaddw A2_vaddw_Rdd32 A2_vaddw_Rss32 A2_vaddw_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vaddw_Rdd32 & A2_vaddw_Rss32 & A2_vaddw_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vaddw_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:4;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 32;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vaddw_Rss32 s>> tmp13;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = tmp14 & tmp15;
  tmp9 = tmp16:4;
  tmp8 = zext(tmp9);
  local tmp17:8;
  local tmp18:4;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 32;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vaddw_Rtt32 s>> tmp22;
  local tmp24:8;
  tmp24 = 4294967295;
  local tmp25:8;
  tmp25 = tmp23 & tmp24;
  tmp18 = tmp25:4;
  tmp17 = zext(tmp18);
  local tmp26:8;
  tmp26 = tmp8 + tmp17;
  local tmp27:8;
  tmp27 = 4294967295;
  local tmp28:8;
  tmp28 = tmp26 & tmp27;
  local tmp29:4;
  tmp29 = 0;
  local tmp30:4;
  tmp30 = 32;
  local tmp31:4;
  tmp31 = tmp29 * tmp30;
  local tmp32:8;
  tmp32 = zext(tmp31);
  local tmp33:8;
  tmp33 = tmp28 << tmp32;
  local tmp34:8;
  tmp34 = tmp7 | tmp33;
  A2_vaddw_Rdd32 = tmp34;
  local tmp35:8;
  tmp35 = 4294967295;
  local tmp36:4;
  tmp36 = 1;
  local tmp37:4;
  tmp37 = 32;
  local tmp38:4;
  tmp38 = tmp36 * tmp37;
  local tmp39:8;
  tmp39 = zext(tmp38);
  local tmp40:8;
  tmp40 = tmp35 << tmp39;
  local tmp41:8;
  tmp41 = ~ tmp40;
  local tmp42:8;
  tmp42 = A2_vaddw_Rdd32 & tmp41;
  local tmp43:8;
  local tmp44:4;
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 32;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:8;
  tmp48 = zext(tmp47);
  local tmp49:8;
  tmp49 = A2_vaddw_Rss32 s>> tmp48;
  local tmp50:8;
  tmp50 = 4294967295;
  local tmp51:8;
  tmp51 = tmp49 & tmp50;
  tmp44 = tmp51:4;
  tmp43 = zext(tmp44);
  local tmp52:8;
  local tmp53:4;
  local tmp54:4;
  tmp54 = 1;
  local tmp55:4;
  tmp55 = 32;
  local tmp56:4;
  tmp56 = tmp54 * tmp55;
  local tmp57:8;
  tmp57 = zext(tmp56);
  local tmp58:8;
  tmp58 = A2_vaddw_Rtt32 s>> tmp57;
  local tmp59:8;
  tmp59 = 4294967295;
  local tmp60:8;
  tmp60 = tmp58 & tmp59;
  tmp53 = tmp60:4;
  tmp52 = zext(tmp53);
  local tmp61:8;
  tmp61 = tmp43 + tmp52;
  local tmp62:8;
  tmp62 = 4294967295;
  local tmp63:8;
  tmp63 = tmp61 & tmp62;
  local tmp64:4;
  tmp64 = 1;
  local tmp65:4;
  tmp65 = 32;
  local tmp66:4;
  tmp66 = tmp64 * tmp65;
  local tmp67:8;
  tmp67 = zext(tmp66);
  local tmp68:8;
  tmp68 = tmp63 << tmp67;
  local tmp69:8;
  tmp69 = tmp42 | tmp68;
  A2_vaddw_Rdd32 = tmp69;
}

:A2_vaddws A2_vaddws_Rdd32 A2_vaddws_Rss32 A2_vaddws_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vaddws_Rdd32 & A2_vaddws_Rss32 & A2_vaddws_Rtt32 unimpl

:S4_vxaddsubw S4_vxaddsubw_Rdd32 S4_vxaddsubw_Rss32 S4_vxaddsubw_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S4_vxaddsubw_Rdd32 & S4_vxaddsubw_Rss32 & S4_vxaddsubw_Rtt32 unimpl

:S4_vxsubaddw S4_vxsubaddw_Rdd32 S4_vxsubaddw_Rss32 S4_vxsubaddw_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S4_vxsubaddw_Rdd32 & S4_vxsubaddw_Rss32 & S4_vxsubaddw_Rtt32 unimpl

:S4_vxaddsubh S4_vxaddsubh_Rdd32 S4_vxaddsubh_Rss32 S4_vxaddsubh_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S4_vxaddsubh_Rdd32 & S4_vxaddsubh_Rss32 & S4_vxaddsubh_Rtt32 unimpl

:S4_vxsubaddh S4_vxsubaddh_Rdd32 S4_vxsubaddh_Rss32 S4_vxsubaddh_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S4_vxsubaddh_Rdd32 & S4_vxsubaddh_Rss32 & S4_vxsubaddh_Rtt32 unimpl

:S4_vxaddsubhr S4_vxaddsubhr_Rdd32 S4_vxaddsubhr_Rss32 S4_vxaddsubhr_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S4_vxaddsubhr_Rdd32 & S4_vxaddsubhr_Rss32 & S4_vxaddsubhr_Rtt32 unimpl

:S4_vxsubaddhr S4_vxsubaddhr_Rdd32 S4_vxsubaddhr_Rss32 S4_vxsubaddhr_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S4_vxsubaddhr_Rdd32 & S4_vxsubaddhr_Rss32 & S4_vxsubaddhr_Rtt32 unimpl

:A2_svavgh A2_svavgh_Rd32 A2_svavgh_Rs32 A2_svavgh_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_svavgh_Rd32 & A2_svavgh_Rs32 & A2_svavgh_Rt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = zext(A2_svavgh_Rd32);
  local tmp8:8;
  tmp8 = tmp7 & tmp6;
  local tmp9:8;
  local tmp10:2;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 16;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = A2_svavgh_Rs32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:4;
  tmp16 = tmp14 & tmp15;
  tmp10 = tmp16:2;
  local tmp17:2;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:4;
  tmp19 = 16;
  local tmp20:4;
  tmp20 = tmp18 * tmp19;
  local tmp21:4;
  tmp21 = A2_svavgh_Rt32 s>> tmp20;
  local tmp22:4;
  tmp22 = 65535;
  local tmp23:4;
  tmp23 = tmp21 & tmp22;
  tmp17 = tmp23:2;
  local tmp24:2;
  tmp24 = tmp10 + tmp17;
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = zext(tmp24);
  local tmp27:4;
  tmp27 = tmp26 s>> tmp25;
  local tmp28:4;
  tmp28 = 65535;
  local tmp29:4;
  tmp29 = tmp27 & tmp28;
  tmp9 = sext(tmp29);
  local tmp30:4;
  tmp30 = 0;
  local tmp31:4;
  tmp31 = 16;
  local tmp32:4;
  tmp32 = tmp30 * tmp31;
  local tmp33:8;
  tmp33 = zext(tmp32);
  local tmp34:8;
  tmp34 = tmp9 << tmp33;
  local tmp35:8;
  tmp35 = tmp8 | tmp34;
  A2_svavgh_Rd32 = tmp35:4;
  local tmp36:8;
  tmp36 = 65535;
  local tmp37:4;
  tmp37 = 1;
  local tmp38:4;
  tmp38 = 16;
  local tmp39:4;
  tmp39 = tmp37 * tmp38;
  local tmp40:8;
  tmp40 = zext(tmp39);
  local tmp41:8;
  tmp41 = tmp36 << tmp40;
  local tmp42:8;
  tmp42 = ~ tmp41;
  local tmp43:8;
  tmp43 = zext(A2_svavgh_Rd32);
  local tmp44:8;
  tmp44 = tmp43 & tmp42;
  local tmp45:8;
  local tmp46:2;
  local tmp47:4;
  tmp47 = 1;
  local tmp48:4;
  tmp48 = 16;
  local tmp49:4;
  tmp49 = tmp47 * tmp48;
  local tmp50:4;
  tmp50 = A2_svavgh_Rs32 s>> tmp49;
  local tmp51:4;
  tmp51 = 65535;
  local tmp52:4;
  tmp52 = tmp50 & tmp51;
  tmp46 = tmp52:2;
  local tmp53:2;
  local tmp54:4;
  tmp54 = 1;
  local tmp55:4;
  tmp55 = 16;
  local tmp56:4;
  tmp56 = tmp54 * tmp55;
  local tmp57:4;
  tmp57 = A2_svavgh_Rt32 s>> tmp56;
  local tmp58:4;
  tmp58 = 65535;
  local tmp59:4;
  tmp59 = tmp57 & tmp58;
  tmp53 = tmp59:2;
  local tmp60:2;
  tmp60 = tmp46 + tmp53;
  local tmp61:4;
  tmp61 = 1;
  local tmp62:4;
  tmp62 = zext(tmp60);
  local tmp63:4;
  tmp63 = tmp62 s>> tmp61;
  local tmp64:4;
  tmp64 = 65535;
  local tmp65:4;
  tmp65 = tmp63 & tmp64;
  tmp45 = sext(tmp65);
  local tmp66:4;
  tmp66 = 1;
  local tmp67:4;
  tmp67 = 16;
  local tmp68:4;
  tmp68 = tmp66 * tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = tmp45 << tmp69;
  local tmp71:8;
  tmp71 = tmp44 | tmp70;
  A2_svavgh_Rd32 = tmp71:4;
}

:A2_svavghs A2_svavghs_Rd32 A2_svavghs_Rs32 A2_svavghs_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_svavghs_Rd32 & A2_svavghs_Rs32 & A2_svavghs_Rt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = zext(A2_svavghs_Rd32);
  local tmp8:8;
  tmp8 = tmp7 & tmp6;
  local tmp9:8;
  local tmp10:2;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 16;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = A2_svavghs_Rs32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:4;
  tmp16 = tmp14 & tmp15;
  tmp10 = tmp16:2;
  local tmp17:2;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:4;
  tmp19 = 16;
  local tmp20:4;
  tmp20 = tmp18 * tmp19;
  local tmp21:4;
  tmp21 = A2_svavghs_Rt32 s>> tmp20;
  local tmp22:4;
  tmp22 = 65535;
  local tmp23:4;
  tmp23 = tmp21 & tmp22;
  tmp17 = tmp23:2;
  local tmp24:2;
  tmp24 = tmp10 + tmp17;
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = zext(tmp24);
  local tmp27:4;
  tmp27 = tmp26 + tmp25;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = tmp27 s>> tmp28;
  local tmp30:4;
  tmp30 = 65535;
  local tmp31:4;
  tmp31 = tmp29 & tmp30;
  tmp9 = sext(tmp31);
  local tmp32:4;
  tmp32 = 0;
  local tmp33:4;
  tmp33 = 16;
  local tmp34:4;
  tmp34 = tmp32 * tmp33;
  local tmp35:8;
  tmp35 = zext(tmp34);
  local tmp36:8;
  tmp36 = tmp9 << tmp35;
  local tmp37:8;
  tmp37 = tmp8 | tmp36;
  A2_svavghs_Rd32 = tmp37:4;
  local tmp38:8;
  tmp38 = 65535;
  local tmp39:4;
  tmp39 = 1;
  local tmp40:4;
  tmp40 = 16;
  local tmp41:4;
  tmp41 = tmp39 * tmp40;
  local tmp42:8;
  tmp42 = zext(tmp41);
  local tmp43:8;
  tmp43 = tmp38 << tmp42;
  local tmp44:8;
  tmp44 = ~ tmp43;
  local tmp45:8;
  tmp45 = zext(A2_svavghs_Rd32);
  local tmp46:8;
  tmp46 = tmp45 & tmp44;
  local tmp47:8;
  local tmp48:2;
  local tmp49:4;
  tmp49 = 1;
  local tmp50:4;
  tmp50 = 16;
  local tmp51:4;
  tmp51 = tmp49 * tmp50;
  local tmp52:4;
  tmp52 = A2_svavghs_Rs32 s>> tmp51;
  local tmp53:4;
  tmp53 = 65535;
  local tmp54:4;
  tmp54 = tmp52 & tmp53;
  tmp48 = tmp54:2;
  local tmp55:2;
  local tmp56:4;
  tmp56 = 1;
  local tmp57:4;
  tmp57 = 16;
  local tmp58:4;
  tmp58 = tmp56 * tmp57;
  local tmp59:4;
  tmp59 = A2_svavghs_Rt32 s>> tmp58;
  local tmp60:4;
  tmp60 = 65535;
  local tmp61:4;
  tmp61 = tmp59 & tmp60;
  tmp55 = tmp61:2;
  local tmp62:2;
  tmp62 = tmp48 + tmp55;
  local tmp63:4;
  tmp63 = 1;
  local tmp64:4;
  tmp64 = zext(tmp62);
  local tmp65:4;
  tmp65 = tmp64 + tmp63;
  local tmp66:4;
  tmp66 = 1;
  local tmp67:4;
  tmp67 = tmp65 s>> tmp66;
  local tmp68:4;
  tmp68 = 65535;
  local tmp69:4;
  tmp69 = tmp67 & tmp68;
  tmp47 = sext(tmp69);
  local tmp70:4;
  tmp70 = 1;
  local tmp71:4;
  tmp71 = 16;
  local tmp72:4;
  tmp72 = tmp70 * tmp71;
  local tmp73:8;
  tmp73 = zext(tmp72);
  local tmp74:8;
  tmp74 = tmp47 << tmp73;
  local tmp75:8;
  tmp75 = tmp46 | tmp74;
  A2_svavghs_Rd32 = tmp75:4;
}

:A2_svnavgh A2_svnavgh_Rd32 A2_svnavgh_Rt32 A2_svnavgh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_svnavgh_Rd32 & A2_svnavgh_Rt32 & A2_svnavgh_Rs32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = zext(A2_svnavgh_Rd32);
  local tmp8:8;
  tmp8 = tmp7 & tmp6;
  local tmp9:8;
  local tmp10:2;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 16;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = A2_svnavgh_Rt32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:4;
  tmp16 = tmp14 & tmp15;
  tmp10 = tmp16:2;
  local tmp17:2;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:4;
  tmp19 = 16;
  local tmp20:4;
  tmp20 = tmp18 * tmp19;
  local tmp21:4;
  tmp21 = A2_svnavgh_Rs32 s>> tmp20;
  local tmp22:4;
  tmp22 = 65535;
  local tmp23:4;
  tmp23 = tmp21 & tmp22;
  tmp17 = tmp23:2;
  local tmp24:2;
  tmp24 = tmp10 - tmp17;
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = zext(tmp24);
  local tmp27:4;
  tmp27 = tmp26 s>> tmp25;
  local tmp28:4;
  tmp28 = 65535;
  local tmp29:4;
  tmp29 = tmp27 & tmp28;
  tmp9 = sext(tmp29);
  local tmp30:4;
  tmp30 = 0;
  local tmp31:4;
  tmp31 = 16;
  local tmp32:4;
  tmp32 = tmp30 * tmp31;
  local tmp33:8;
  tmp33 = zext(tmp32);
  local tmp34:8;
  tmp34 = tmp9 << tmp33;
  local tmp35:8;
  tmp35 = tmp8 | tmp34;
  A2_svnavgh_Rd32 = tmp35:4;
  local tmp36:8;
  tmp36 = 65535;
  local tmp37:4;
  tmp37 = 1;
  local tmp38:4;
  tmp38 = 16;
  local tmp39:4;
  tmp39 = tmp37 * tmp38;
  local tmp40:8;
  tmp40 = zext(tmp39);
  local tmp41:8;
  tmp41 = tmp36 << tmp40;
  local tmp42:8;
  tmp42 = ~ tmp41;
  local tmp43:8;
  tmp43 = zext(A2_svnavgh_Rd32);
  local tmp44:8;
  tmp44 = tmp43 & tmp42;
  local tmp45:8;
  local tmp46:2;
  local tmp47:4;
  tmp47 = 1;
  local tmp48:4;
  tmp48 = 16;
  local tmp49:4;
  tmp49 = tmp47 * tmp48;
  local tmp50:4;
  tmp50 = A2_svnavgh_Rt32 s>> tmp49;
  local tmp51:4;
  tmp51 = 65535;
  local tmp52:4;
  tmp52 = tmp50 & tmp51;
  tmp46 = tmp52:2;
  local tmp53:2;
  local tmp54:4;
  tmp54 = 1;
  local tmp55:4;
  tmp55 = 16;
  local tmp56:4;
  tmp56 = tmp54 * tmp55;
  local tmp57:4;
  tmp57 = A2_svnavgh_Rs32 s>> tmp56;
  local tmp58:4;
  tmp58 = 65535;
  local tmp59:4;
  tmp59 = tmp57 & tmp58;
  tmp53 = tmp59:2;
  local tmp60:2;
  tmp60 = tmp46 - tmp53;
  local tmp61:4;
  tmp61 = 1;
  local tmp62:4;
  tmp62 = zext(tmp60);
  local tmp63:4;
  tmp63 = tmp62 s>> tmp61;
  local tmp64:4;
  tmp64 = 65535;
  local tmp65:4;
  tmp65 = tmp63 & tmp64;
  tmp45 = sext(tmp65);
  local tmp66:4;
  tmp66 = 1;
  local tmp67:4;
  tmp67 = 16;
  local tmp68:4;
  tmp68 = tmp66 * tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = tmp45 << tmp69;
  local tmp71:8;
  tmp71 = tmp44 | tmp70;
  A2_svnavgh_Rd32 = tmp71:4;
}

:A2_svaddh A2_svaddh_Rd32 A2_svaddh_Rs32 A2_svaddh_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_svaddh_Rd32 & A2_svaddh_Rs32 & A2_svaddh_Rt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = zext(A2_svaddh_Rd32);
  local tmp8:8;
  tmp8 = tmp7 & tmp6;
  local tmp9:8;
  local tmp10:2;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 16;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = A2_svaddh_Rs32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:4;
  tmp16 = tmp14 & tmp15;
  tmp10 = tmp16:2;
  local tmp17:2;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:4;
  tmp19 = 16;
  local tmp20:4;
  tmp20 = tmp18 * tmp19;
  local tmp21:4;
  tmp21 = A2_svaddh_Rt32 s>> tmp20;
  local tmp22:4;
  tmp22 = 65535;
  local tmp23:4;
  tmp23 = tmp21 & tmp22;
  tmp17 = tmp23:2;
  local tmp24:2;
  tmp24 = tmp10 + tmp17;
  local tmp25:4;
  tmp25 = 65535;
  local tmp26:4;
  tmp26 = zext(tmp24);
  local tmp27:4;
  tmp27 = tmp26 & tmp25;
  tmp9 = sext(tmp27);
  local tmp28:4;
  tmp28 = 0;
  local tmp29:4;
  tmp29 = 16;
  local tmp30:4;
  tmp30 = tmp28 * tmp29;
  local tmp31:8;
  tmp31 = zext(tmp30);
  local tmp32:8;
  tmp32 = tmp9 << tmp31;
  local tmp33:8;
  tmp33 = tmp8 | tmp32;
  A2_svaddh_Rd32 = tmp33:4;
  local tmp34:8;
  tmp34 = 65535;
  local tmp35:4;
  tmp35 = 1;
  local tmp36:4;
  tmp36 = 16;
  local tmp37:4;
  tmp37 = tmp35 * tmp36;
  local tmp38:8;
  tmp38 = zext(tmp37);
  local tmp39:8;
  tmp39 = tmp34 << tmp38;
  local tmp40:8;
  tmp40 = ~ tmp39;
  local tmp41:8;
  tmp41 = zext(A2_svaddh_Rd32);
  local tmp42:8;
  tmp42 = tmp41 & tmp40;
  local tmp43:8;
  local tmp44:2;
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 16;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:4;
  tmp48 = A2_svaddh_Rs32 s>> tmp47;
  local tmp49:4;
  tmp49 = 65535;
  local tmp50:4;
  tmp50 = tmp48 & tmp49;
  tmp44 = tmp50:2;
  local tmp51:2;
  local tmp52:4;
  tmp52 = 1;
  local tmp53:4;
  tmp53 = 16;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:4;
  tmp55 = A2_svaddh_Rt32 s>> tmp54;
  local tmp56:4;
  tmp56 = 65535;
  local tmp57:4;
  tmp57 = tmp55 & tmp56;
  tmp51 = tmp57:2;
  local tmp58:2;
  tmp58 = tmp44 + tmp51;
  local tmp59:4;
  tmp59 = 65535;
  local tmp60:4;
  tmp60 = zext(tmp58);
  local tmp61:4;
  tmp61 = tmp60 & tmp59;
  tmp43 = sext(tmp61);
  local tmp62:4;
  tmp62 = 1;
  local tmp63:4;
  tmp63 = 16;
  local tmp64:4;
  tmp64 = tmp62 * tmp63;
  local tmp65:8;
  tmp65 = zext(tmp64);
  local tmp66:8;
  tmp66 = tmp43 << tmp65;
  local tmp67:8;
  tmp67 = tmp42 | tmp66;
  A2_svaddh_Rd32 = tmp67:4;
}

:A2_svaddhs A2_svaddhs_Rd32 A2_svaddhs_Rs32 A2_svaddhs_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_svaddhs_Rd32 & A2_svaddhs_Rs32 & A2_svaddhs_Rt32 unimpl

:A2_svadduhs A2_svadduhs_Rd32 A2_svadduhs_Rs32 A2_svadduhs_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_svadduhs_Rd32 & A2_svadduhs_Rs32 & A2_svadduhs_Rt32 unimpl

:A2_svsubh A2_svsubh_Rd32 A2_svsubh_Rt32 A2_svsubh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_svsubh_Rd32 & A2_svsubh_Rt32 & A2_svsubh_Rs32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = zext(A2_svsubh_Rd32);
  local tmp8:8;
  tmp8 = tmp7 & tmp6;
  local tmp9:8;
  local tmp10:2;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 16;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = A2_svsubh_Rt32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:4;
  tmp16 = tmp14 & tmp15;
  tmp10 = tmp16:2;
  local tmp17:2;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:4;
  tmp19 = 16;
  local tmp20:4;
  tmp20 = tmp18 * tmp19;
  local tmp21:4;
  tmp21 = A2_svsubh_Rs32 s>> tmp20;
  local tmp22:4;
  tmp22 = 65535;
  local tmp23:4;
  tmp23 = tmp21 & tmp22;
  tmp17 = tmp23:2;
  local tmp24:2;
  tmp24 = tmp10 - tmp17;
  local tmp25:4;
  tmp25 = 65535;
  local tmp26:4;
  tmp26 = zext(tmp24);
  local tmp27:4;
  tmp27 = tmp26 & tmp25;
  tmp9 = sext(tmp27);
  local tmp28:4;
  tmp28 = 0;
  local tmp29:4;
  tmp29 = 16;
  local tmp30:4;
  tmp30 = tmp28 * tmp29;
  local tmp31:8;
  tmp31 = zext(tmp30);
  local tmp32:8;
  tmp32 = tmp9 << tmp31;
  local tmp33:8;
  tmp33 = tmp8 | tmp32;
  A2_svsubh_Rd32 = tmp33:4;
  local tmp34:8;
  tmp34 = 65535;
  local tmp35:4;
  tmp35 = 1;
  local tmp36:4;
  tmp36 = 16;
  local tmp37:4;
  tmp37 = tmp35 * tmp36;
  local tmp38:8;
  tmp38 = zext(tmp37);
  local tmp39:8;
  tmp39 = tmp34 << tmp38;
  local tmp40:8;
  tmp40 = ~ tmp39;
  local tmp41:8;
  tmp41 = zext(A2_svsubh_Rd32);
  local tmp42:8;
  tmp42 = tmp41 & tmp40;
  local tmp43:8;
  local tmp44:2;
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 16;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:4;
  tmp48 = A2_svsubh_Rt32 s>> tmp47;
  local tmp49:4;
  tmp49 = 65535;
  local tmp50:4;
  tmp50 = tmp48 & tmp49;
  tmp44 = tmp50:2;
  local tmp51:2;
  local tmp52:4;
  tmp52 = 1;
  local tmp53:4;
  tmp53 = 16;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:4;
  tmp55 = A2_svsubh_Rs32 s>> tmp54;
  local tmp56:4;
  tmp56 = 65535;
  local tmp57:4;
  tmp57 = tmp55 & tmp56;
  tmp51 = tmp57:2;
  local tmp58:2;
  tmp58 = tmp44 - tmp51;
  local tmp59:4;
  tmp59 = 65535;
  local tmp60:4;
  tmp60 = zext(tmp58);
  local tmp61:4;
  tmp61 = tmp60 & tmp59;
  tmp43 = sext(tmp61);
  local tmp62:4;
  tmp62 = 1;
  local tmp63:4;
  tmp63 = 16;
  local tmp64:4;
  tmp64 = tmp62 * tmp63;
  local tmp65:8;
  tmp65 = zext(tmp64);
  local tmp66:8;
  tmp66 = tmp43 << tmp65;
  local tmp67:8;
  tmp67 = tmp42 | tmp66;
  A2_svsubh_Rd32 = tmp67:4;
}

:A2_svsubhs A2_svsubhs_Rd32 A2_svsubhs_Rt32 A2_svsubhs_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_svsubhs_Rd32 & A2_svsubhs_Rt32 & A2_svsubhs_Rs32 unimpl

:A2_svsubuhs A2_svsubuhs_Rd32 A2_svsubuhs_Rt32 A2_svsubuhs_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_svsubuhs_Rd32 & A2_svsubuhs_Rt32 & A2_svsubuhs_Rs32 unimpl

:A2_vraddub A2_vraddub_Rdd32 A2_vraddub_Rss32 A2_vraddub_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & A2_vraddub_Rdd32 & A2_vraddub_Rss32 & A2_vraddub_Rtt32 unimpl

:A2_vraddub_acc A2_vraddub_acc_Rxx32 A2_vraddub_acc_Rss32 A2_vraddub_acc_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & A2_vraddub_acc_Rxx32 & A2_vraddub_acc_Rss32 & A2_vraddub_acc_Rtt32 unimpl

:M2_vraddh M2_vraddh_Rd32 M2_vraddh_Rss32 M2_vraddh_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vraddh_Rd32 & M2_vraddh_Rss32 & M2_vraddh_Rtt32 {
  local i:4;
  local tmp0:4;
  tmp0 = 0;
  M2_vraddh_Rd32 = tmp0;
  local tmp1:2;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = M2_vraddh_Rss32 s>> tmp5;
  local tmp7:4;
  tmp7 = 65535;
  local tmp8:8;
  tmp8 = zext(tmp7);
  local tmp9:8;
  tmp9 = tmp6 & tmp8;
  tmp1 = tmp9:2;
  local tmp10:2;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 16;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = M2_vraddh_Rtt32 s>> tmp14;
  local tmp16:4;
  tmp16 = 65535;
  local tmp17:8;
  tmp17 = zext(tmp16);
  local tmp18:8;
  tmp18 = tmp15 & tmp17;
  tmp10 = tmp18:2;
  local tmp19:2;
  tmp19 = tmp1 + tmp10;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = M2_vraddh_Rd32 + tmp20;
  M2_vraddh_Rd32 = tmp21;
  local tmp22:2;
  local tmp23:4;
  tmp23 = 1;
  local tmp24:4;
  tmp24 = 16;
  local tmp25:4;
  tmp25 = tmp23 * tmp24;
  local tmp26:8;
  tmp26 = zext(tmp25);
  local tmp27:8;
  tmp27 = M2_vraddh_Rss32 s>> tmp26;
  local tmp28:4;
  tmp28 = 65535;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp27 & tmp29;
  tmp22 = tmp30:2;
  local tmp31:2;
  local tmp32:4;
  tmp32 = 1;
  local tmp33:4;
  tmp33 = 16;
  local tmp34:4;
  tmp34 = tmp32 * tmp33;
  local tmp35:8;
  tmp35 = zext(tmp34);
  local tmp36:8;
  tmp36 = M2_vraddh_Rtt32 s>> tmp35;
  local tmp37:4;
  tmp37 = 65535;
  local tmp38:8;
  tmp38 = zext(tmp37);
  local tmp39:8;
  tmp39 = tmp36 & tmp38;
  tmp31 = tmp39:2;
  local tmp40:2;
  tmp40 = tmp22 + tmp31;
  local tmp41:4;
  tmp41 = zext(tmp40);
  local tmp42:4;
  tmp42 = M2_vraddh_Rd32 + tmp41;
  M2_vraddh_Rd32 = tmp42;
  local tmp43:2;
  local tmp44:4;
  tmp44 = 2;
  local tmp45:4;
  tmp45 = 16;
  local tmp46:4;
  tmp46 = tmp44 * tmp45;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = M2_vraddh_Rss32 s>> tmp47;
  local tmp49:4;
  tmp49 = 65535;
  local tmp50:8;
  tmp50 = zext(tmp49);
  local tmp51:8;
  tmp51 = tmp48 & tmp50;
  tmp43 = tmp51:2;
  local tmp52:2;
  local tmp53:4;
  tmp53 = 2;
  local tmp54:4;
  tmp54 = 16;
  local tmp55:4;
  tmp55 = tmp53 * tmp54;
  local tmp56:8;
  tmp56 = zext(tmp55);
  local tmp57:8;
  tmp57 = M2_vraddh_Rtt32 s>> tmp56;
  local tmp58:4;
  tmp58 = 65535;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = tmp57 & tmp59;
  tmp52 = tmp60:2;
  local tmp61:2;
  tmp61 = tmp43 + tmp52;
  local tmp62:4;
  tmp62 = zext(tmp61);
  local tmp63:4;
  tmp63 = M2_vraddh_Rd32 + tmp62;
  M2_vraddh_Rd32 = tmp63;
  local tmp64:2;
  local tmp65:4;
  tmp65 = 3;
  local tmp66:4;
  tmp66 = 16;
  local tmp67:4;
  tmp67 = tmp65 * tmp66;
  local tmp68:8;
  tmp68 = zext(tmp67);
  local tmp69:8;
  tmp69 = M2_vraddh_Rss32 s>> tmp68;
  local tmp70:4;
  tmp70 = 65535;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = tmp69 & tmp71;
  tmp64 = tmp72:2;
  local tmp73:2;
  local tmp74:4;
  tmp74 = 3;
  local tmp75:4;
  tmp75 = 16;
  local tmp76:4;
  tmp76 = tmp74 * tmp75;
  local tmp77:8;
  tmp77 = zext(tmp76);
  local tmp78:8;
  tmp78 = M2_vraddh_Rtt32 s>> tmp77;
  local tmp79:4;
  tmp79 = 65535;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = tmp78 & tmp80;
  tmp73 = tmp81:2;
  local tmp82:2;
  tmp82 = tmp64 + tmp73;
  local tmp83:4;
  tmp83 = zext(tmp82);
  local tmp84:4;
  tmp84 = M2_vraddh_Rd32 + tmp83;
  M2_vraddh_Rd32 = tmp84;
}

:M2_vradduh M2_vradduh_Rd32 M2_vradduh_Rss32 M2_vradduh_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b13 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vradduh_Rd32 & M2_vradduh_Rss32 & M2_vradduh_Rtt32 {
  local i:4;
  local tmp0:4;
  tmp0 = 0;
  M2_vradduh_Rd32 = tmp0;
  local tmp1:2;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = M2_vradduh_Rss32 s>> tmp5;
  local tmp7:4;
  tmp7 = 65535;
  local tmp8:8;
  tmp8 = zext(tmp7);
  local tmp9:8;
  tmp9 = tmp6 & tmp8;
  tmp1 = tmp9:2;
  local tmp10:2;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 16;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = M2_vradduh_Rtt32 s>> tmp14;
  local tmp16:4;
  tmp16 = 65535;
  local tmp17:8;
  tmp17 = zext(tmp16);
  local tmp18:8;
  tmp18 = tmp15 & tmp17;
  tmp10 = tmp18:2;
  local tmp19:2;
  tmp19 = tmp1 + tmp10;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = M2_vradduh_Rd32 + tmp20;
  M2_vradduh_Rd32 = tmp21;
  local tmp22:2;
  local tmp23:4;
  tmp23 = 1;
  local tmp24:4;
  tmp24 = 16;
  local tmp25:4;
  tmp25 = tmp23 * tmp24;
  local tmp26:8;
  tmp26 = zext(tmp25);
  local tmp27:8;
  tmp27 = M2_vradduh_Rss32 s>> tmp26;
  local tmp28:4;
  tmp28 = 65535;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp27 & tmp29;
  tmp22 = tmp30:2;
  local tmp31:2;
  local tmp32:4;
  tmp32 = 1;
  local tmp33:4;
  tmp33 = 16;
  local tmp34:4;
  tmp34 = tmp32 * tmp33;
  local tmp35:8;
  tmp35 = zext(tmp34);
  local tmp36:8;
  tmp36 = M2_vradduh_Rtt32 s>> tmp35;
  local tmp37:4;
  tmp37 = 65535;
  local tmp38:8;
  tmp38 = zext(tmp37);
  local tmp39:8;
  tmp39 = tmp36 & tmp38;
  tmp31 = tmp39:2;
  local tmp40:2;
  tmp40 = tmp22 + tmp31;
  local tmp41:4;
  tmp41 = zext(tmp40);
  local tmp42:4;
  tmp42 = M2_vradduh_Rd32 + tmp41;
  M2_vradduh_Rd32 = tmp42;
  local tmp43:2;
  local tmp44:4;
  tmp44 = 2;
  local tmp45:4;
  tmp45 = 16;
  local tmp46:4;
  tmp46 = tmp44 * tmp45;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = M2_vradduh_Rss32 s>> tmp47;
  local tmp49:4;
  tmp49 = 65535;
  local tmp50:8;
  tmp50 = zext(tmp49);
  local tmp51:8;
  tmp51 = tmp48 & tmp50;
  tmp43 = tmp51:2;
  local tmp52:2;
  local tmp53:4;
  tmp53 = 2;
  local tmp54:4;
  tmp54 = 16;
  local tmp55:4;
  tmp55 = tmp53 * tmp54;
  local tmp56:8;
  tmp56 = zext(tmp55);
  local tmp57:8;
  tmp57 = M2_vradduh_Rtt32 s>> tmp56;
  local tmp58:4;
  tmp58 = 65535;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = tmp57 & tmp59;
  tmp52 = tmp60:2;
  local tmp61:2;
  tmp61 = tmp43 + tmp52;
  local tmp62:4;
  tmp62 = zext(tmp61);
  local tmp63:4;
  tmp63 = M2_vradduh_Rd32 + tmp62;
  M2_vradduh_Rd32 = tmp63;
  local tmp64:2;
  local tmp65:4;
  tmp65 = 3;
  local tmp66:4;
  tmp66 = 16;
  local tmp67:4;
  tmp67 = tmp65 * tmp66;
  local tmp68:8;
  tmp68 = zext(tmp67);
  local tmp69:8;
  tmp69 = M2_vradduh_Rss32 s>> tmp68;
  local tmp70:4;
  tmp70 = 65535;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = tmp69 & tmp71;
  tmp64 = tmp72:2;
  local tmp73:2;
  local tmp74:4;
  tmp74 = 3;
  local tmp75:4;
  tmp75 = 16;
  local tmp76:4;
  tmp76 = tmp74 * tmp75;
  local tmp77:8;
  tmp77 = zext(tmp76);
  local tmp78:8;
  tmp78 = M2_vradduh_Rtt32 s>> tmp77;
  local tmp79:4;
  tmp79 = 65535;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = tmp78 & tmp80;
  tmp73 = tmp81:2;
  local tmp82:2;
  tmp82 = tmp64 + tmp73;
  local tmp83:4;
  tmp83 = zext(tmp82);
  local tmp84:4;
  tmp84 = M2_vradduh_Rd32 + tmp83;
  M2_vradduh_Rd32 = tmp84;
}

:A2_vsubub A2_vsubub_Rdd32 A2_vsubub_Rtt32 A2_vsubub_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vsubub_Rdd32 & A2_vsubub_Rtt32 & A2_vsubub_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vsubub_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:1;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 8;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vsubub_Rtt32 s>> tmp13;
  local tmp15:4;
  tmp15 = 255;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:1;
  local tmp18:1;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 8;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vsubub_Rss32 s>> tmp22;
  local tmp24:4;
  tmp24 = 255;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:1;
  local tmp27:1;
  tmp27 = tmp9 - tmp18;
  local tmp28:8;
  tmp28 = 255;
  local tmp29:8;
  tmp29 = zext(tmp27);
  local tmp30:8;
  tmp30 = tmp29 & tmp28;
  tmp8 = tmp30;
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 8;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = tmp8 << tmp34;
  local tmp36:8;
  tmp36 = tmp7 | tmp35;
  A2_vsubub_Rdd32 = tmp36;
  local tmp37:8;
  tmp37 = 255;
  local tmp38:4;
  tmp38 = 1;
  local tmp39:4;
  tmp39 = 8;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = tmp37 << tmp41;
  local tmp43:8;
  tmp43 = ~ tmp42;
  local tmp44:8;
  tmp44 = A2_vsubub_Rdd32 & tmp43;
  local tmp45:8;
  local tmp46:1;
  local tmp47:4;
  tmp47 = 1;
  local tmp48:4;
  tmp48 = 8;
  local tmp49:4;
  tmp49 = tmp47 * tmp48;
  local tmp50:8;
  tmp50 = zext(tmp49);
  local tmp51:8;
  tmp51 = A2_vsubub_Rtt32 s>> tmp50;
  local tmp52:4;
  tmp52 = 255;
  local tmp53:8;
  tmp53 = zext(tmp52);
  local tmp54:8;
  tmp54 = tmp51 & tmp53;
  tmp46 = tmp54:1;
  local tmp55:1;
  local tmp56:4;
  tmp56 = 1;
  local tmp57:4;
  tmp57 = 8;
  local tmp58:4;
  tmp58 = tmp56 * tmp57;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = A2_vsubub_Rss32 s>> tmp59;
  local tmp61:4;
  tmp61 = 255;
  local tmp62:8;
  tmp62 = zext(tmp61);
  local tmp63:8;
  tmp63 = tmp60 & tmp62;
  tmp55 = tmp63:1;
  local tmp64:1;
  tmp64 = tmp46 - tmp55;
  local tmp65:8;
  tmp65 = 255;
  local tmp66:8;
  tmp66 = zext(tmp64);
  local tmp67:8;
  tmp67 = tmp66 & tmp65;
  tmp45 = tmp67;
  local tmp68:4;
  tmp68 = 1;
  local tmp69:4;
  tmp69 = 8;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = tmp45 << tmp71;
  local tmp73:8;
  tmp73 = tmp44 | tmp72;
  A2_vsubub_Rdd32 = tmp73;
  local tmp74:8;
  tmp74 = 255;
  local tmp75:4;
  tmp75 = 2;
  local tmp76:4;
  tmp76 = 8;
  local tmp77:4;
  tmp77 = tmp75 * tmp76;
  local tmp78:8;
  tmp78 = zext(tmp77);
  local tmp79:8;
  tmp79 = tmp74 << tmp78;
  local tmp80:8;
  tmp80 = ~ tmp79;
  local tmp81:8;
  tmp81 = A2_vsubub_Rdd32 & tmp80;
  local tmp82:8;
  local tmp83:1;
  local tmp84:4;
  tmp84 = 2;
  local tmp85:4;
  tmp85 = 8;
  local tmp86:4;
  tmp86 = tmp84 * tmp85;
  local tmp87:8;
  tmp87 = zext(tmp86);
  local tmp88:8;
  tmp88 = A2_vsubub_Rtt32 s>> tmp87;
  local tmp89:4;
  tmp89 = 255;
  local tmp90:8;
  tmp90 = zext(tmp89);
  local tmp91:8;
  tmp91 = tmp88 & tmp90;
  tmp83 = tmp91:1;
  local tmp92:1;
  local tmp93:4;
  tmp93 = 2;
  local tmp94:4;
  tmp94 = 8;
  local tmp95:4;
  tmp95 = tmp93 * tmp94;
  local tmp96:8;
  tmp96 = zext(tmp95);
  local tmp97:8;
  tmp97 = A2_vsubub_Rss32 s>> tmp96;
  local tmp98:4;
  tmp98 = 255;
  local tmp99:8;
  tmp99 = zext(tmp98);
  local tmp100:8;
  tmp100 = tmp97 & tmp99;
  tmp92 = tmp100:1;
  local tmp101:1;
  tmp101 = tmp83 - tmp92;
  local tmp102:8;
  tmp102 = 255;
  local tmp103:8;
  tmp103 = zext(tmp101);
  local tmp104:8;
  tmp104 = tmp103 & tmp102;
  tmp82 = tmp104;
  local tmp105:4;
  tmp105 = 2;
  local tmp106:4;
  tmp106 = 8;
  local tmp107:4;
  tmp107 = tmp105 * tmp106;
  local tmp108:8;
  tmp108 = zext(tmp107);
  local tmp109:8;
  tmp109 = tmp82 << tmp108;
  local tmp110:8;
  tmp110 = tmp81 | tmp109;
  A2_vsubub_Rdd32 = tmp110;
  local tmp111:8;
  tmp111 = 255;
  local tmp112:4;
  tmp112 = 3;
  local tmp113:4;
  tmp113 = 8;
  local tmp114:4;
  tmp114 = tmp112 * tmp113;
  local tmp115:8;
  tmp115 = zext(tmp114);
  local tmp116:8;
  tmp116 = tmp111 << tmp115;
  local tmp117:8;
  tmp117 = ~ tmp116;
  local tmp118:8;
  tmp118 = A2_vsubub_Rdd32 & tmp117;
  local tmp119:8;
  local tmp120:1;
  local tmp121:4;
  tmp121 = 3;
  local tmp122:4;
  tmp122 = 8;
  local tmp123:4;
  tmp123 = tmp121 * tmp122;
  local tmp124:8;
  tmp124 = zext(tmp123);
  local tmp125:8;
  tmp125 = A2_vsubub_Rtt32 s>> tmp124;
  local tmp126:4;
  tmp126 = 255;
  local tmp127:8;
  tmp127 = zext(tmp126);
  local tmp128:8;
  tmp128 = tmp125 & tmp127;
  tmp120 = tmp128:1;
  local tmp129:1;
  local tmp130:4;
  tmp130 = 3;
  local tmp131:4;
  tmp131 = 8;
  local tmp132:4;
  tmp132 = tmp130 * tmp131;
  local tmp133:8;
  tmp133 = zext(tmp132);
  local tmp134:8;
  tmp134 = A2_vsubub_Rss32 s>> tmp133;
  local tmp135:4;
  tmp135 = 255;
  local tmp136:8;
  tmp136 = zext(tmp135);
  local tmp137:8;
  tmp137 = tmp134 & tmp136;
  tmp129 = tmp137:1;
  local tmp138:1;
  tmp138 = tmp120 - tmp129;
  local tmp139:8;
  tmp139 = 255;
  local tmp140:8;
  tmp140 = zext(tmp138);
  local tmp141:8;
  tmp141 = tmp140 & tmp139;
  tmp119 = tmp141;
  local tmp142:4;
  tmp142 = 3;
  local tmp143:4;
  tmp143 = 8;
  local tmp144:4;
  tmp144 = tmp142 * tmp143;
  local tmp145:8;
  tmp145 = zext(tmp144);
  local tmp146:8;
  tmp146 = tmp119 << tmp145;
  local tmp147:8;
  tmp147 = tmp118 | tmp146;
  A2_vsubub_Rdd32 = tmp147;
  local tmp148:8;
  tmp148 = 255;
  local tmp149:4;
  tmp149 = 4;
  local tmp150:4;
  tmp150 = 8;
  local tmp151:4;
  tmp151 = tmp149 * tmp150;
  local tmp152:8;
  tmp152 = zext(tmp151);
  local tmp153:8;
  tmp153 = tmp148 << tmp152;
  local tmp154:8;
  tmp154 = ~ tmp153;
  local tmp155:8;
  tmp155 = A2_vsubub_Rdd32 & tmp154;
  local tmp156:8;
  local tmp157:1;
  local tmp158:4;
  tmp158 = 4;
  local tmp159:4;
  tmp159 = 8;
  local tmp160:4;
  tmp160 = tmp158 * tmp159;
  local tmp161:8;
  tmp161 = zext(tmp160);
  local tmp162:8;
  tmp162 = A2_vsubub_Rtt32 s>> tmp161;
  local tmp163:4;
  tmp163 = 255;
  local tmp164:8;
  tmp164 = zext(tmp163);
  local tmp165:8;
  tmp165 = tmp162 & tmp164;
  tmp157 = tmp165:1;
  local tmp166:1;
  local tmp167:4;
  tmp167 = 4;
  local tmp168:4;
  tmp168 = 8;
  local tmp169:4;
  tmp169 = tmp167 * tmp168;
  local tmp170:8;
  tmp170 = zext(tmp169);
  local tmp171:8;
  tmp171 = A2_vsubub_Rss32 s>> tmp170;
  local tmp172:4;
  tmp172 = 255;
  local tmp173:8;
  tmp173 = zext(tmp172);
  local tmp174:8;
  tmp174 = tmp171 & tmp173;
  tmp166 = tmp174:1;
  local tmp175:1;
  tmp175 = tmp157 - tmp166;
  local tmp176:8;
  tmp176 = 255;
  local tmp177:8;
  tmp177 = zext(tmp175);
  local tmp178:8;
  tmp178 = tmp177 & tmp176;
  tmp156 = tmp178;
  local tmp179:4;
  tmp179 = 4;
  local tmp180:4;
  tmp180 = 8;
  local tmp181:4;
  tmp181 = tmp179 * tmp180;
  local tmp182:8;
  tmp182 = zext(tmp181);
  local tmp183:8;
  tmp183 = tmp156 << tmp182;
  local tmp184:8;
  tmp184 = tmp155 | tmp183;
  A2_vsubub_Rdd32 = tmp184;
  local tmp185:8;
  tmp185 = 255;
  local tmp186:4;
  tmp186 = 5;
  local tmp187:4;
  tmp187 = 8;
  local tmp188:4;
  tmp188 = tmp186 * tmp187;
  local tmp189:8;
  tmp189 = zext(tmp188);
  local tmp190:8;
  tmp190 = tmp185 << tmp189;
  local tmp191:8;
  tmp191 = ~ tmp190;
  local tmp192:8;
  tmp192 = A2_vsubub_Rdd32 & tmp191;
  local tmp193:8;
  local tmp194:1;
  local tmp195:4;
  tmp195 = 5;
  local tmp196:4;
  tmp196 = 8;
  local tmp197:4;
  tmp197 = tmp195 * tmp196;
  local tmp198:8;
  tmp198 = zext(tmp197);
  local tmp199:8;
  tmp199 = A2_vsubub_Rtt32 s>> tmp198;
  local tmp200:4;
  tmp200 = 255;
  local tmp201:8;
  tmp201 = zext(tmp200);
  local tmp202:8;
  tmp202 = tmp199 & tmp201;
  tmp194 = tmp202:1;
  local tmp203:1;
  local tmp204:4;
  tmp204 = 5;
  local tmp205:4;
  tmp205 = 8;
  local tmp206:4;
  tmp206 = tmp204 * tmp205;
  local tmp207:8;
  tmp207 = zext(tmp206);
  local tmp208:8;
  tmp208 = A2_vsubub_Rss32 s>> tmp207;
  local tmp209:4;
  tmp209 = 255;
  local tmp210:8;
  tmp210 = zext(tmp209);
  local tmp211:8;
  tmp211 = tmp208 & tmp210;
  tmp203 = tmp211:1;
  local tmp212:1;
  tmp212 = tmp194 - tmp203;
  local tmp213:8;
  tmp213 = 255;
  local tmp214:8;
  tmp214 = zext(tmp212);
  local tmp215:8;
  tmp215 = tmp214 & tmp213;
  tmp193 = tmp215;
  local tmp216:4;
  tmp216 = 5;
  local tmp217:4;
  tmp217 = 8;
  local tmp218:4;
  tmp218 = tmp216 * tmp217;
  local tmp219:8;
  tmp219 = zext(tmp218);
  local tmp220:8;
  tmp220 = tmp193 << tmp219;
  local tmp221:8;
  tmp221 = tmp192 | tmp220;
  A2_vsubub_Rdd32 = tmp221;
  local tmp222:8;
  tmp222 = 255;
  local tmp223:4;
  tmp223 = 6;
  local tmp224:4;
  tmp224 = 8;
  local tmp225:4;
  tmp225 = tmp223 * tmp224;
  local tmp226:8;
  tmp226 = zext(tmp225);
  local tmp227:8;
  tmp227 = tmp222 << tmp226;
  local tmp228:8;
  tmp228 = ~ tmp227;
  local tmp229:8;
  tmp229 = A2_vsubub_Rdd32 & tmp228;
  local tmp230:8;
  local tmp231:1;
  local tmp232:4;
  tmp232 = 6;
  local tmp233:4;
  tmp233 = 8;
  local tmp234:4;
  tmp234 = tmp232 * tmp233;
  local tmp235:8;
  tmp235 = zext(tmp234);
  local tmp236:8;
  tmp236 = A2_vsubub_Rtt32 s>> tmp235;
  local tmp237:4;
  tmp237 = 255;
  local tmp238:8;
  tmp238 = zext(tmp237);
  local tmp239:8;
  tmp239 = tmp236 & tmp238;
  tmp231 = tmp239:1;
  local tmp240:1;
  local tmp241:4;
  tmp241 = 6;
  local tmp242:4;
  tmp242 = 8;
  local tmp243:4;
  tmp243 = tmp241 * tmp242;
  local tmp244:8;
  tmp244 = zext(tmp243);
  local tmp245:8;
  tmp245 = A2_vsubub_Rss32 s>> tmp244;
  local tmp246:4;
  tmp246 = 255;
  local tmp247:8;
  tmp247 = zext(tmp246);
  local tmp248:8;
  tmp248 = tmp245 & tmp247;
  tmp240 = tmp248:1;
  local tmp249:1;
  tmp249 = tmp231 - tmp240;
  local tmp250:8;
  tmp250 = 255;
  local tmp251:8;
  tmp251 = zext(tmp249);
  local tmp252:8;
  tmp252 = tmp251 & tmp250;
  tmp230 = tmp252;
  local tmp253:4;
  tmp253 = 6;
  local tmp254:4;
  tmp254 = 8;
  local tmp255:4;
  tmp255 = tmp253 * tmp254;
  local tmp256:8;
  tmp256 = zext(tmp255);
  local tmp257:8;
  tmp257 = tmp230 << tmp256;
  local tmp258:8;
  tmp258 = tmp229 | tmp257;
  A2_vsubub_Rdd32 = tmp258;
  local tmp259:8;
  tmp259 = 255;
  local tmp260:4;
  tmp260 = 7;
  local tmp261:4;
  tmp261 = 8;
  local tmp262:4;
  tmp262 = tmp260 * tmp261;
  local tmp263:8;
  tmp263 = zext(tmp262);
  local tmp264:8;
  tmp264 = tmp259 << tmp263;
  local tmp265:8;
  tmp265 = ~ tmp264;
  local tmp266:8;
  tmp266 = A2_vsubub_Rdd32 & tmp265;
  local tmp267:8;
  local tmp268:1;
  local tmp269:4;
  tmp269 = 7;
  local tmp270:4;
  tmp270 = 8;
  local tmp271:4;
  tmp271 = tmp269 * tmp270;
  local tmp272:8;
  tmp272 = zext(tmp271);
  local tmp273:8;
  tmp273 = A2_vsubub_Rtt32 s>> tmp272;
  local tmp274:4;
  tmp274 = 255;
  local tmp275:8;
  tmp275 = zext(tmp274);
  local tmp276:8;
  tmp276 = tmp273 & tmp275;
  tmp268 = tmp276:1;
  local tmp277:1;
  local tmp278:4;
  tmp278 = 7;
  local tmp279:4;
  tmp279 = 8;
  local tmp280:4;
  tmp280 = tmp278 * tmp279;
  local tmp281:8;
  tmp281 = zext(tmp280);
  local tmp282:8;
  tmp282 = A2_vsubub_Rss32 s>> tmp281;
  local tmp283:4;
  tmp283 = 255;
  local tmp284:8;
  tmp284 = zext(tmp283);
  local tmp285:8;
  tmp285 = tmp282 & tmp284;
  tmp277 = tmp285:1;
  local tmp286:1;
  tmp286 = tmp268 - tmp277;
  local tmp287:8;
  tmp287 = 255;
  local tmp288:8;
  tmp288 = zext(tmp286);
  local tmp289:8;
  tmp289 = tmp288 & tmp287;
  tmp267 = tmp289;
  local tmp290:4;
  tmp290 = 7;
  local tmp291:4;
  tmp291 = 8;
  local tmp292:4;
  tmp292 = tmp290 * tmp291;
  local tmp293:8;
  tmp293 = zext(tmp292);
  local tmp294:8;
  tmp294 = tmp267 << tmp293;
  local tmp295:8;
  tmp295 = tmp266 | tmp294;
  A2_vsubub_Rdd32 = tmp295;
}

:A2_vsububs A2_vsububs_Rdd32 A2_vsububs_Rtt32 A2_vsububs_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vsububs_Rdd32 & A2_vsububs_Rtt32 & A2_vsububs_Rss32 unimpl

:A2_vsubh A2_vsubh_Rdd32 A2_vsubh_Rtt32 A2_vsubh_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vsubh_Rdd32 & A2_vsubh_Rtt32 & A2_vsubh_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vsubh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vsubh_Rtt32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:2;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vsubh_Rss32 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:2;
  local tmp27:2;
  tmp27 = tmp9 - tmp18;
  local tmp28:4;
  tmp28 = 65535;
  local tmp29:4;
  tmp29 = zext(tmp27);
  local tmp30:4;
  tmp30 = tmp29 & tmp28;
  tmp8 = sext(tmp30);
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 16;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = tmp8 << tmp34;
  local tmp36:8;
  tmp36 = tmp7 | tmp35;
  A2_vsubh_Rdd32 = tmp36;
  local tmp37:8;
  tmp37 = 65535;
  local tmp38:4;
  tmp38 = 1;
  local tmp39:4;
  tmp39 = 16;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = tmp37 << tmp41;
  local tmp43:8;
  tmp43 = ~ tmp42;
  local tmp44:8;
  tmp44 = A2_vsubh_Rdd32 & tmp43;
  local tmp45:8;
  local tmp46:2;
  local tmp47:4;
  tmp47 = 1;
  local tmp48:4;
  tmp48 = 16;
  local tmp49:4;
  tmp49 = tmp47 * tmp48;
  local tmp50:8;
  tmp50 = zext(tmp49);
  local tmp51:8;
  tmp51 = A2_vsubh_Rtt32 s>> tmp50;
  local tmp52:4;
  tmp52 = 65535;
  local tmp53:8;
  tmp53 = zext(tmp52);
  local tmp54:8;
  tmp54 = tmp51 & tmp53;
  tmp46 = tmp54:2;
  local tmp55:2;
  local tmp56:4;
  tmp56 = 1;
  local tmp57:4;
  tmp57 = 16;
  local tmp58:4;
  tmp58 = tmp56 * tmp57;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = A2_vsubh_Rss32 s>> tmp59;
  local tmp61:4;
  tmp61 = 65535;
  local tmp62:8;
  tmp62 = zext(tmp61);
  local tmp63:8;
  tmp63 = tmp60 & tmp62;
  tmp55 = tmp63:2;
  local tmp64:2;
  tmp64 = tmp46 - tmp55;
  local tmp65:4;
  tmp65 = 65535;
  local tmp66:4;
  tmp66 = zext(tmp64);
  local tmp67:4;
  tmp67 = tmp66 & tmp65;
  tmp45 = sext(tmp67);
  local tmp68:4;
  tmp68 = 1;
  local tmp69:4;
  tmp69 = 16;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = tmp45 << tmp71;
  local tmp73:8;
  tmp73 = tmp44 | tmp72;
  A2_vsubh_Rdd32 = tmp73;
  local tmp74:8;
  tmp74 = 65535;
  local tmp75:4;
  tmp75 = 2;
  local tmp76:4;
  tmp76 = 16;
  local tmp77:4;
  tmp77 = tmp75 * tmp76;
  local tmp78:8;
  tmp78 = zext(tmp77);
  local tmp79:8;
  tmp79 = tmp74 << tmp78;
  local tmp80:8;
  tmp80 = ~ tmp79;
  local tmp81:8;
  tmp81 = A2_vsubh_Rdd32 & tmp80;
  local tmp82:8;
  local tmp83:2;
  local tmp84:4;
  tmp84 = 2;
  local tmp85:4;
  tmp85 = 16;
  local tmp86:4;
  tmp86 = tmp84 * tmp85;
  local tmp87:8;
  tmp87 = zext(tmp86);
  local tmp88:8;
  tmp88 = A2_vsubh_Rtt32 s>> tmp87;
  local tmp89:4;
  tmp89 = 65535;
  local tmp90:8;
  tmp90 = zext(tmp89);
  local tmp91:8;
  tmp91 = tmp88 & tmp90;
  tmp83 = tmp91:2;
  local tmp92:2;
  local tmp93:4;
  tmp93 = 2;
  local tmp94:4;
  tmp94 = 16;
  local tmp95:4;
  tmp95 = tmp93 * tmp94;
  local tmp96:8;
  tmp96 = zext(tmp95);
  local tmp97:8;
  tmp97 = A2_vsubh_Rss32 s>> tmp96;
  local tmp98:4;
  tmp98 = 65535;
  local tmp99:8;
  tmp99 = zext(tmp98);
  local tmp100:8;
  tmp100 = tmp97 & tmp99;
  tmp92 = tmp100:2;
  local tmp101:2;
  tmp101 = tmp83 - tmp92;
  local tmp102:4;
  tmp102 = 65535;
  local tmp103:4;
  tmp103 = zext(tmp101);
  local tmp104:4;
  tmp104 = tmp103 & tmp102;
  tmp82 = sext(tmp104);
  local tmp105:4;
  tmp105 = 2;
  local tmp106:4;
  tmp106 = 16;
  local tmp107:4;
  tmp107 = tmp105 * tmp106;
  local tmp108:8;
  tmp108 = zext(tmp107);
  local tmp109:8;
  tmp109 = tmp82 << tmp108;
  local tmp110:8;
  tmp110 = tmp81 | tmp109;
  A2_vsubh_Rdd32 = tmp110;
  local tmp111:8;
  tmp111 = 65535;
  local tmp112:4;
  tmp112 = 3;
  local tmp113:4;
  tmp113 = 16;
  local tmp114:4;
  tmp114 = tmp112 * tmp113;
  local tmp115:8;
  tmp115 = zext(tmp114);
  local tmp116:8;
  tmp116 = tmp111 << tmp115;
  local tmp117:8;
  tmp117 = ~ tmp116;
  local tmp118:8;
  tmp118 = A2_vsubh_Rdd32 & tmp117;
  local tmp119:8;
  local tmp120:2;
  local tmp121:4;
  tmp121 = 3;
  local tmp122:4;
  tmp122 = 16;
  local tmp123:4;
  tmp123 = tmp121 * tmp122;
  local tmp124:8;
  tmp124 = zext(tmp123);
  local tmp125:8;
  tmp125 = A2_vsubh_Rtt32 s>> tmp124;
  local tmp126:4;
  tmp126 = 65535;
  local tmp127:8;
  tmp127 = zext(tmp126);
  local tmp128:8;
  tmp128 = tmp125 & tmp127;
  tmp120 = tmp128:2;
  local tmp129:2;
  local tmp130:4;
  tmp130 = 3;
  local tmp131:4;
  tmp131 = 16;
  local tmp132:4;
  tmp132 = tmp130 * tmp131;
  local tmp133:8;
  tmp133 = zext(tmp132);
  local tmp134:8;
  tmp134 = A2_vsubh_Rss32 s>> tmp133;
  local tmp135:4;
  tmp135 = 65535;
  local tmp136:8;
  tmp136 = zext(tmp135);
  local tmp137:8;
  tmp137 = tmp134 & tmp136;
  tmp129 = tmp137:2;
  local tmp138:2;
  tmp138 = tmp120 - tmp129;
  local tmp139:4;
  tmp139 = 65535;
  local tmp140:4;
  tmp140 = zext(tmp138);
  local tmp141:4;
  tmp141 = tmp140 & tmp139;
  tmp119 = sext(tmp141);
  local tmp142:4;
  tmp142 = 3;
  local tmp143:4;
  tmp143 = 16;
  local tmp144:4;
  tmp144 = tmp142 * tmp143;
  local tmp145:8;
  tmp145 = zext(tmp144);
  local tmp146:8;
  tmp146 = tmp119 << tmp145;
  local tmp147:8;
  tmp147 = tmp118 | tmp146;
  A2_vsubh_Rdd32 = tmp147;
}

:A2_vsubhs A2_vsubhs_Rdd32 A2_vsubhs_Rtt32 A2_vsubhs_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vsubhs_Rdd32 & A2_vsubhs_Rtt32 & A2_vsubhs_Rss32 unimpl

:A2_vsubuhs A2_vsubuhs_Rdd32 A2_vsubuhs_Rtt32 A2_vsubuhs_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vsubuhs_Rdd32 & A2_vsubuhs_Rtt32 & A2_vsubuhs_Rss32 unimpl

:A2_vsubw A2_vsubw_Rdd32 A2_vsubw_Rtt32 A2_vsubw_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vsubw_Rdd32 & A2_vsubw_Rtt32 & A2_vsubw_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vsubw_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:4;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 32;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vsubw_Rtt32 s>> tmp13;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = tmp14 & tmp15;
  tmp9 = tmp16:4;
  tmp8 = zext(tmp9);
  local tmp17:8;
  local tmp18:4;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 32;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vsubw_Rss32 s>> tmp22;
  local tmp24:8;
  tmp24 = 4294967295;
  local tmp25:8;
  tmp25 = tmp23 & tmp24;
  tmp18 = tmp25:4;
  tmp17 = zext(tmp18);
  local tmp26:8;
  tmp26 = tmp8 - tmp17;
  local tmp27:8;
  tmp27 = 4294967295;
  local tmp28:8;
  tmp28 = tmp26 & tmp27;
  local tmp29:4;
  tmp29 = 0;
  local tmp30:4;
  tmp30 = 32;
  local tmp31:4;
  tmp31 = tmp29 * tmp30;
  local tmp32:8;
  tmp32 = zext(tmp31);
  local tmp33:8;
  tmp33 = tmp28 << tmp32;
  local tmp34:8;
  tmp34 = tmp7 | tmp33;
  A2_vsubw_Rdd32 = tmp34;
  local tmp35:8;
  tmp35 = 4294967295;
  local tmp36:4;
  tmp36 = 1;
  local tmp37:4;
  tmp37 = 32;
  local tmp38:4;
  tmp38 = tmp36 * tmp37;
  local tmp39:8;
  tmp39 = zext(tmp38);
  local tmp40:8;
  tmp40 = tmp35 << tmp39;
  local tmp41:8;
  tmp41 = ~ tmp40;
  local tmp42:8;
  tmp42 = A2_vsubw_Rdd32 & tmp41;
  local tmp43:8;
  local tmp44:4;
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 32;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:8;
  tmp48 = zext(tmp47);
  local tmp49:8;
  tmp49 = A2_vsubw_Rtt32 s>> tmp48;
  local tmp50:8;
  tmp50 = 4294967295;
  local tmp51:8;
  tmp51 = tmp49 & tmp50;
  tmp44 = tmp51:4;
  tmp43 = zext(tmp44);
  local tmp52:8;
  local tmp53:4;
  local tmp54:4;
  tmp54 = 1;
  local tmp55:4;
  tmp55 = 32;
  local tmp56:4;
  tmp56 = tmp54 * tmp55;
  local tmp57:8;
  tmp57 = zext(tmp56);
  local tmp58:8;
  tmp58 = A2_vsubw_Rss32 s>> tmp57;
  local tmp59:8;
  tmp59 = 4294967295;
  local tmp60:8;
  tmp60 = tmp58 & tmp59;
  tmp53 = tmp60:4;
  tmp52 = zext(tmp53);
  local tmp61:8;
  tmp61 = tmp43 - tmp52;
  local tmp62:8;
  tmp62 = 4294967295;
  local tmp63:8;
  tmp63 = tmp61 & tmp62;
  local tmp64:4;
  tmp64 = 1;
  local tmp65:4;
  tmp65 = 32;
  local tmp66:4;
  tmp66 = tmp64 * tmp65;
  local tmp67:8;
  tmp67 = zext(tmp66);
  local tmp68:8;
  tmp68 = tmp63 << tmp67;
  local tmp69:8;
  tmp69 = tmp42 | tmp68;
  A2_vsubw_Rdd32 = tmp69;
}

:A2_vsubws A2_vsubws_Rdd32 A2_vsubws_Rtt32 A2_vsubws_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vsubws_Rdd32 & A2_vsubws_Rtt32 & A2_vsubws_Rss32 unimpl

:A2_vabsh A2_vabsh_Rdd32 A2_vabsh_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_vabsh_Rdd32 & A2_vabsh_Rss32 unimpl

:A2_vabshsat A2_vabshsat_Rdd32 A2_vabshsat_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_vabshsat_Rdd32 & A2_vabshsat_Rss32 unimpl

:A2_vabsw A2_vabsw_Rdd32 A2_vabsw_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_vabsw_Rdd32 & A2_vabsw_Rss32 unimpl

:A2_vabswsat A2_vabswsat_Rdd32 A2_vabswsat_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_vabswsat_Rdd32 & A2_vabswsat_Rss32 unimpl

:M2_vabsdiffw M2_vabsdiffw_Rdd32 M2_vabsdiffw_Rtt32 M2_vabsdiffw_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vabsdiffw_Rdd32 & M2_vabsdiffw_Rtt32 & M2_vabsdiffw_Rss32 unimpl

:M2_vabsdiffh M2_vabsdiffh_Rdd32 M2_vabsdiffh_Rtt32 M2_vabsdiffh_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M2_vabsdiffh_Rdd32 & M2_vabsdiffh_Rtt32 & M2_vabsdiffh_Rss32 unimpl

:M6_vabsdiffb M6_vabsdiffb_Rdd32 M6_vabsdiffb_Rtt32 M6_vabsdiffb_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M6_vabsdiffb_Rdd32 & M6_vabsdiffb_Rtt32 & M6_vabsdiffb_Rss32 unimpl

:M6_vabsdiffub M6_vabsdiffub_Rdd32 M6_vabsdiffub_Rtt32 M6_vabsdiffub_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & M6_vabsdiffub_Rdd32 & M6_vabsdiffub_Rtt32 & M6_vabsdiffub_Rss32 unimpl

:A2_vrsadub A2_vrsadub_Rdd32 A2_vrsadub_Rss32 A2_vrsadub_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & A2_vrsadub_Rdd32 & A2_vrsadub_Rss32 & A2_vrsadub_Rtt32 unimpl

:A2_vrsadub_acc A2_vrsadub_acc_Rxx32 A2_vrsadub_acc_Rss32 A2_vrsadub_acc_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & A2_vrsadub_acc_Rxx32 & A2_vrsadub_acc_Rss32 & A2_vrsadub_acc_Rtt32 unimpl

:A2_vavgub A2_vavgub_Rdd32 A2_vavgub_Rss32 A2_vavgub_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vavgub_Rdd32 & A2_vavgub_Rss32 & A2_vavgub_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vavgub_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:1;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 8;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vavgub_Rss32 s>> tmp13;
  local tmp15:4;
  tmp15 = 255;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:1;
  local tmp18:1;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 8;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vavgub_Rtt32 s>> tmp22;
  local tmp24:4;
  tmp24 = 255;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:1;
  local tmp27:1;
  tmp27 = tmp9 + tmp18;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = zext(tmp27);
  local tmp30:4;
  tmp30 = tmp29 s>> tmp28;
  local tmp31:8;
  tmp31 = 255;
  local tmp32:8;
  tmp32 = zext(tmp30);
  local tmp33:8;
  tmp33 = tmp32 & tmp31;
  tmp8 = tmp33;
  local tmp34:4;
  tmp34 = 0;
  local tmp35:4;
  tmp35 = 8;
  local tmp36:4;
  tmp36 = tmp34 * tmp35;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp8 << tmp37;
  local tmp39:8;
  tmp39 = tmp7 | tmp38;
  A2_vavgub_Rdd32 = tmp39;
  local tmp40:8;
  tmp40 = 255;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = 8;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = tmp40 << tmp44;
  local tmp46:8;
  tmp46 = ~ tmp45;
  local tmp47:8;
  tmp47 = A2_vavgub_Rdd32 & tmp46;
  local tmp48:8;
  local tmp49:1;
  local tmp50:4;
  tmp50 = 1;
  local tmp51:4;
  tmp51 = 8;
  local tmp52:4;
  tmp52 = tmp50 * tmp51;
  local tmp53:8;
  tmp53 = zext(tmp52);
  local tmp54:8;
  tmp54 = A2_vavgub_Rss32 s>> tmp53;
  local tmp55:4;
  tmp55 = 255;
  local tmp56:8;
  tmp56 = zext(tmp55);
  local tmp57:8;
  tmp57 = tmp54 & tmp56;
  tmp49 = tmp57:1;
  local tmp58:1;
  local tmp59:4;
  tmp59 = 1;
  local tmp60:4;
  tmp60 = 8;
  local tmp61:4;
  tmp61 = tmp59 * tmp60;
  local tmp62:8;
  tmp62 = zext(tmp61);
  local tmp63:8;
  tmp63 = A2_vavgub_Rtt32 s>> tmp62;
  local tmp64:4;
  tmp64 = 255;
  local tmp65:8;
  tmp65 = zext(tmp64);
  local tmp66:8;
  tmp66 = tmp63 & tmp65;
  tmp58 = tmp66:1;
  local tmp67:1;
  tmp67 = tmp49 + tmp58;
  local tmp68:4;
  tmp68 = 1;
  local tmp69:4;
  tmp69 = zext(tmp67);
  local tmp70:4;
  tmp70 = tmp69 s>> tmp68;
  local tmp71:8;
  tmp71 = 255;
  local tmp72:8;
  tmp72 = zext(tmp70);
  local tmp73:8;
  tmp73 = tmp72 & tmp71;
  tmp48 = tmp73;
  local tmp74:4;
  tmp74 = 1;
  local tmp75:4;
  tmp75 = 8;
  local tmp76:4;
  tmp76 = tmp74 * tmp75;
  local tmp77:8;
  tmp77 = zext(tmp76);
  local tmp78:8;
  tmp78 = tmp48 << tmp77;
  local tmp79:8;
  tmp79 = tmp47 | tmp78;
  A2_vavgub_Rdd32 = tmp79;
  local tmp80:8;
  tmp80 = 255;
  local tmp81:4;
  tmp81 = 2;
  local tmp82:4;
  tmp82 = 8;
  local tmp83:4;
  tmp83 = tmp81 * tmp82;
  local tmp84:8;
  tmp84 = zext(tmp83);
  local tmp85:8;
  tmp85 = tmp80 << tmp84;
  local tmp86:8;
  tmp86 = ~ tmp85;
  local tmp87:8;
  tmp87 = A2_vavgub_Rdd32 & tmp86;
  local tmp88:8;
  local tmp89:1;
  local tmp90:4;
  tmp90 = 2;
  local tmp91:4;
  tmp91 = 8;
  local tmp92:4;
  tmp92 = tmp90 * tmp91;
  local tmp93:8;
  tmp93 = zext(tmp92);
  local tmp94:8;
  tmp94 = A2_vavgub_Rss32 s>> tmp93;
  local tmp95:4;
  tmp95 = 255;
  local tmp96:8;
  tmp96 = zext(tmp95);
  local tmp97:8;
  tmp97 = tmp94 & tmp96;
  tmp89 = tmp97:1;
  local tmp98:1;
  local tmp99:4;
  tmp99 = 2;
  local tmp100:4;
  tmp100 = 8;
  local tmp101:4;
  tmp101 = tmp99 * tmp100;
  local tmp102:8;
  tmp102 = zext(tmp101);
  local tmp103:8;
  tmp103 = A2_vavgub_Rtt32 s>> tmp102;
  local tmp104:4;
  tmp104 = 255;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp103 & tmp105;
  tmp98 = tmp106:1;
  local tmp107:1;
  tmp107 = tmp89 + tmp98;
  local tmp108:4;
  tmp108 = 1;
  local tmp109:4;
  tmp109 = zext(tmp107);
  local tmp110:4;
  tmp110 = tmp109 s>> tmp108;
  local tmp111:8;
  tmp111 = 255;
  local tmp112:8;
  tmp112 = zext(tmp110);
  local tmp113:8;
  tmp113 = tmp112 & tmp111;
  tmp88 = tmp113;
  local tmp114:4;
  tmp114 = 2;
  local tmp115:4;
  tmp115 = 8;
  local tmp116:4;
  tmp116 = tmp114 * tmp115;
  local tmp117:8;
  tmp117 = zext(tmp116);
  local tmp118:8;
  tmp118 = tmp88 << tmp117;
  local tmp119:8;
  tmp119 = tmp87 | tmp118;
  A2_vavgub_Rdd32 = tmp119;
  local tmp120:8;
  tmp120 = 255;
  local tmp121:4;
  tmp121 = 3;
  local tmp122:4;
  tmp122 = 8;
  local tmp123:4;
  tmp123 = tmp121 * tmp122;
  local tmp124:8;
  tmp124 = zext(tmp123);
  local tmp125:8;
  tmp125 = tmp120 << tmp124;
  local tmp126:8;
  tmp126 = ~ tmp125;
  local tmp127:8;
  tmp127 = A2_vavgub_Rdd32 & tmp126;
  local tmp128:8;
  local tmp129:1;
  local tmp130:4;
  tmp130 = 3;
  local tmp131:4;
  tmp131 = 8;
  local tmp132:4;
  tmp132 = tmp130 * tmp131;
  local tmp133:8;
  tmp133 = zext(tmp132);
  local tmp134:8;
  tmp134 = A2_vavgub_Rss32 s>> tmp133;
  local tmp135:4;
  tmp135 = 255;
  local tmp136:8;
  tmp136 = zext(tmp135);
  local tmp137:8;
  tmp137 = tmp134 & tmp136;
  tmp129 = tmp137:1;
  local tmp138:1;
  local tmp139:4;
  tmp139 = 3;
  local tmp140:4;
  tmp140 = 8;
  local tmp141:4;
  tmp141 = tmp139 * tmp140;
  local tmp142:8;
  tmp142 = zext(tmp141);
  local tmp143:8;
  tmp143 = A2_vavgub_Rtt32 s>> tmp142;
  local tmp144:4;
  tmp144 = 255;
  local tmp145:8;
  tmp145 = zext(tmp144);
  local tmp146:8;
  tmp146 = tmp143 & tmp145;
  tmp138 = tmp146:1;
  local tmp147:1;
  tmp147 = tmp129 + tmp138;
  local tmp148:4;
  tmp148 = 1;
  local tmp149:4;
  tmp149 = zext(tmp147);
  local tmp150:4;
  tmp150 = tmp149 s>> tmp148;
  local tmp151:8;
  tmp151 = 255;
  local tmp152:8;
  tmp152 = zext(tmp150);
  local tmp153:8;
  tmp153 = tmp152 & tmp151;
  tmp128 = tmp153;
  local tmp154:4;
  tmp154 = 3;
  local tmp155:4;
  tmp155 = 8;
  local tmp156:4;
  tmp156 = tmp154 * tmp155;
  local tmp157:8;
  tmp157 = zext(tmp156);
  local tmp158:8;
  tmp158 = tmp128 << tmp157;
  local tmp159:8;
  tmp159 = tmp127 | tmp158;
  A2_vavgub_Rdd32 = tmp159;
  local tmp160:8;
  tmp160 = 255;
  local tmp161:4;
  tmp161 = 4;
  local tmp162:4;
  tmp162 = 8;
  local tmp163:4;
  tmp163 = tmp161 * tmp162;
  local tmp164:8;
  tmp164 = zext(tmp163);
  local tmp165:8;
  tmp165 = tmp160 << tmp164;
  local tmp166:8;
  tmp166 = ~ tmp165;
  local tmp167:8;
  tmp167 = A2_vavgub_Rdd32 & tmp166;
  local tmp168:8;
  local tmp169:1;
  local tmp170:4;
  tmp170 = 4;
  local tmp171:4;
  tmp171 = 8;
  local tmp172:4;
  tmp172 = tmp170 * tmp171;
  local tmp173:8;
  tmp173 = zext(tmp172);
  local tmp174:8;
  tmp174 = A2_vavgub_Rss32 s>> tmp173;
  local tmp175:4;
  tmp175 = 255;
  local tmp176:8;
  tmp176 = zext(tmp175);
  local tmp177:8;
  tmp177 = tmp174 & tmp176;
  tmp169 = tmp177:1;
  local tmp178:1;
  local tmp179:4;
  tmp179 = 4;
  local tmp180:4;
  tmp180 = 8;
  local tmp181:4;
  tmp181 = tmp179 * tmp180;
  local tmp182:8;
  tmp182 = zext(tmp181);
  local tmp183:8;
  tmp183 = A2_vavgub_Rtt32 s>> tmp182;
  local tmp184:4;
  tmp184 = 255;
  local tmp185:8;
  tmp185 = zext(tmp184);
  local tmp186:8;
  tmp186 = tmp183 & tmp185;
  tmp178 = tmp186:1;
  local tmp187:1;
  tmp187 = tmp169 + tmp178;
  local tmp188:4;
  tmp188 = 1;
  local tmp189:4;
  tmp189 = zext(tmp187);
  local tmp190:4;
  tmp190 = tmp189 s>> tmp188;
  local tmp191:8;
  tmp191 = 255;
  local tmp192:8;
  tmp192 = zext(tmp190);
  local tmp193:8;
  tmp193 = tmp192 & tmp191;
  tmp168 = tmp193;
  local tmp194:4;
  tmp194 = 4;
  local tmp195:4;
  tmp195 = 8;
  local tmp196:4;
  tmp196 = tmp194 * tmp195;
  local tmp197:8;
  tmp197 = zext(tmp196);
  local tmp198:8;
  tmp198 = tmp168 << tmp197;
  local tmp199:8;
  tmp199 = tmp167 | tmp198;
  A2_vavgub_Rdd32 = tmp199;
  local tmp200:8;
  tmp200 = 255;
  local tmp201:4;
  tmp201 = 5;
  local tmp202:4;
  tmp202 = 8;
  local tmp203:4;
  tmp203 = tmp201 * tmp202;
  local tmp204:8;
  tmp204 = zext(tmp203);
  local tmp205:8;
  tmp205 = tmp200 << tmp204;
  local tmp206:8;
  tmp206 = ~ tmp205;
  local tmp207:8;
  tmp207 = A2_vavgub_Rdd32 & tmp206;
  local tmp208:8;
  local tmp209:1;
  local tmp210:4;
  tmp210 = 5;
  local tmp211:4;
  tmp211 = 8;
  local tmp212:4;
  tmp212 = tmp210 * tmp211;
  local tmp213:8;
  tmp213 = zext(tmp212);
  local tmp214:8;
  tmp214 = A2_vavgub_Rss32 s>> tmp213;
  local tmp215:4;
  tmp215 = 255;
  local tmp216:8;
  tmp216 = zext(tmp215);
  local tmp217:8;
  tmp217 = tmp214 & tmp216;
  tmp209 = tmp217:1;
  local tmp218:1;
  local tmp219:4;
  tmp219 = 5;
  local tmp220:4;
  tmp220 = 8;
  local tmp221:4;
  tmp221 = tmp219 * tmp220;
  local tmp222:8;
  tmp222 = zext(tmp221);
  local tmp223:8;
  tmp223 = A2_vavgub_Rtt32 s>> tmp222;
  local tmp224:4;
  tmp224 = 255;
  local tmp225:8;
  tmp225 = zext(tmp224);
  local tmp226:8;
  tmp226 = tmp223 & tmp225;
  tmp218 = tmp226:1;
  local tmp227:1;
  tmp227 = tmp209 + tmp218;
  local tmp228:4;
  tmp228 = 1;
  local tmp229:4;
  tmp229 = zext(tmp227);
  local tmp230:4;
  tmp230 = tmp229 s>> tmp228;
  local tmp231:8;
  tmp231 = 255;
  local tmp232:8;
  tmp232 = zext(tmp230);
  local tmp233:8;
  tmp233 = tmp232 & tmp231;
  tmp208 = tmp233;
  local tmp234:4;
  tmp234 = 5;
  local tmp235:4;
  tmp235 = 8;
  local tmp236:4;
  tmp236 = tmp234 * tmp235;
  local tmp237:8;
  tmp237 = zext(tmp236);
  local tmp238:8;
  tmp238 = tmp208 << tmp237;
  local tmp239:8;
  tmp239 = tmp207 | tmp238;
  A2_vavgub_Rdd32 = tmp239;
  local tmp240:8;
  tmp240 = 255;
  local tmp241:4;
  tmp241 = 6;
  local tmp242:4;
  tmp242 = 8;
  local tmp243:4;
  tmp243 = tmp241 * tmp242;
  local tmp244:8;
  tmp244 = zext(tmp243);
  local tmp245:8;
  tmp245 = tmp240 << tmp244;
  local tmp246:8;
  tmp246 = ~ tmp245;
  local tmp247:8;
  tmp247 = A2_vavgub_Rdd32 & tmp246;
  local tmp248:8;
  local tmp249:1;
  local tmp250:4;
  tmp250 = 6;
  local tmp251:4;
  tmp251 = 8;
  local tmp252:4;
  tmp252 = tmp250 * tmp251;
  local tmp253:8;
  tmp253 = zext(tmp252);
  local tmp254:8;
  tmp254 = A2_vavgub_Rss32 s>> tmp253;
  local tmp255:4;
  tmp255 = 255;
  local tmp256:8;
  tmp256 = zext(tmp255);
  local tmp257:8;
  tmp257 = tmp254 & tmp256;
  tmp249 = tmp257:1;
  local tmp258:1;
  local tmp259:4;
  tmp259 = 6;
  local tmp260:4;
  tmp260 = 8;
  local tmp261:4;
  tmp261 = tmp259 * tmp260;
  local tmp262:8;
  tmp262 = zext(tmp261);
  local tmp263:8;
  tmp263 = A2_vavgub_Rtt32 s>> tmp262;
  local tmp264:4;
  tmp264 = 255;
  local tmp265:8;
  tmp265 = zext(tmp264);
  local tmp266:8;
  tmp266 = tmp263 & tmp265;
  tmp258 = tmp266:1;
  local tmp267:1;
  tmp267 = tmp249 + tmp258;
  local tmp268:4;
  tmp268 = 1;
  local tmp269:4;
  tmp269 = zext(tmp267);
  local tmp270:4;
  tmp270 = tmp269 s>> tmp268;
  local tmp271:8;
  tmp271 = 255;
  local tmp272:8;
  tmp272 = zext(tmp270);
  local tmp273:8;
  tmp273 = tmp272 & tmp271;
  tmp248 = tmp273;
  local tmp274:4;
  tmp274 = 6;
  local tmp275:4;
  tmp275 = 8;
  local tmp276:4;
  tmp276 = tmp274 * tmp275;
  local tmp277:8;
  tmp277 = zext(tmp276);
  local tmp278:8;
  tmp278 = tmp248 << tmp277;
  local tmp279:8;
  tmp279 = tmp247 | tmp278;
  A2_vavgub_Rdd32 = tmp279;
  local tmp280:8;
  tmp280 = 255;
  local tmp281:4;
  tmp281 = 7;
  local tmp282:4;
  tmp282 = 8;
  local tmp283:4;
  tmp283 = tmp281 * tmp282;
  local tmp284:8;
  tmp284 = zext(tmp283);
  local tmp285:8;
  tmp285 = tmp280 << tmp284;
  local tmp286:8;
  tmp286 = ~ tmp285;
  local tmp287:8;
  tmp287 = A2_vavgub_Rdd32 & tmp286;
  local tmp288:8;
  local tmp289:1;
  local tmp290:4;
  tmp290 = 7;
  local tmp291:4;
  tmp291 = 8;
  local tmp292:4;
  tmp292 = tmp290 * tmp291;
  local tmp293:8;
  tmp293 = zext(tmp292);
  local tmp294:8;
  tmp294 = A2_vavgub_Rss32 s>> tmp293;
  local tmp295:4;
  tmp295 = 255;
  local tmp296:8;
  tmp296 = zext(tmp295);
  local tmp297:8;
  tmp297 = tmp294 & tmp296;
  tmp289 = tmp297:1;
  local tmp298:1;
  local tmp299:4;
  tmp299 = 7;
  local tmp300:4;
  tmp300 = 8;
  local tmp301:4;
  tmp301 = tmp299 * tmp300;
  local tmp302:8;
  tmp302 = zext(tmp301);
  local tmp303:8;
  tmp303 = A2_vavgub_Rtt32 s>> tmp302;
  local tmp304:4;
  tmp304 = 255;
  local tmp305:8;
  tmp305 = zext(tmp304);
  local tmp306:8;
  tmp306 = tmp303 & tmp305;
  tmp298 = tmp306:1;
  local tmp307:1;
  tmp307 = tmp289 + tmp298;
  local tmp308:4;
  tmp308 = 1;
  local tmp309:4;
  tmp309 = zext(tmp307);
  local tmp310:4;
  tmp310 = tmp309 s>> tmp308;
  local tmp311:8;
  tmp311 = 255;
  local tmp312:8;
  tmp312 = zext(tmp310);
  local tmp313:8;
  tmp313 = tmp312 & tmp311;
  tmp288 = tmp313;
  local tmp314:4;
  tmp314 = 7;
  local tmp315:4;
  tmp315 = 8;
  local tmp316:4;
  tmp316 = tmp314 * tmp315;
  local tmp317:8;
  tmp317 = zext(tmp316);
  local tmp318:8;
  tmp318 = tmp288 << tmp317;
  local tmp319:8;
  tmp319 = tmp287 | tmp318;
  A2_vavgub_Rdd32 = tmp319;
}

:A2_vavguh A2_vavguh_Rdd32 A2_vavguh_Rss32 A2_vavguh_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vavguh_Rdd32 & A2_vavguh_Rss32 & A2_vavguh_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vavguh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vavguh_Rss32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:2;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vavguh_Rtt32 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:2;
  local tmp27:2;
  tmp27 = tmp9 + tmp18;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = zext(tmp27);
  local tmp30:4;
  tmp30 = tmp29 s>> tmp28;
  local tmp31:4;
  tmp31 = 65535;
  local tmp32:4;
  tmp32 = tmp30 & tmp31;
  tmp8 = sext(tmp32);
  local tmp33:4;
  tmp33 = 0;
  local tmp34:4;
  tmp34 = 16;
  local tmp35:4;
  tmp35 = tmp33 * tmp34;
  local tmp36:8;
  tmp36 = zext(tmp35);
  local tmp37:8;
  tmp37 = tmp8 << tmp36;
  local tmp38:8;
  tmp38 = tmp7 | tmp37;
  A2_vavguh_Rdd32 = tmp38;
  local tmp39:8;
  tmp39 = 65535;
  local tmp40:4;
  tmp40 = 1;
  local tmp41:4;
  tmp41 = 16;
  local tmp42:4;
  tmp42 = tmp40 * tmp41;
  local tmp43:8;
  tmp43 = zext(tmp42);
  local tmp44:8;
  tmp44 = tmp39 << tmp43;
  local tmp45:8;
  tmp45 = ~ tmp44;
  local tmp46:8;
  tmp46 = A2_vavguh_Rdd32 & tmp45;
  local tmp47:8;
  local tmp48:2;
  local tmp49:4;
  tmp49 = 1;
  local tmp50:4;
  tmp50 = 16;
  local tmp51:4;
  tmp51 = tmp49 * tmp50;
  local tmp52:8;
  tmp52 = zext(tmp51);
  local tmp53:8;
  tmp53 = A2_vavguh_Rss32 s>> tmp52;
  local tmp54:4;
  tmp54 = 65535;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp53 & tmp55;
  tmp48 = tmp56:2;
  local tmp57:2;
  local tmp58:4;
  tmp58 = 1;
  local tmp59:4;
  tmp59 = 16;
  local tmp60:4;
  tmp60 = tmp58 * tmp59;
  local tmp61:8;
  tmp61 = zext(tmp60);
  local tmp62:8;
  tmp62 = A2_vavguh_Rtt32 s>> tmp61;
  local tmp63:4;
  tmp63 = 65535;
  local tmp64:8;
  tmp64 = zext(tmp63);
  local tmp65:8;
  tmp65 = tmp62 & tmp64;
  tmp57 = tmp65:2;
  local tmp66:2;
  tmp66 = tmp48 + tmp57;
  local tmp67:4;
  tmp67 = 1;
  local tmp68:4;
  tmp68 = zext(tmp66);
  local tmp69:4;
  tmp69 = tmp68 s>> tmp67;
  local tmp70:4;
  tmp70 = 65535;
  local tmp71:4;
  tmp71 = tmp69 & tmp70;
  tmp47 = sext(tmp71);
  local tmp72:4;
  tmp72 = 1;
  local tmp73:4;
  tmp73 = 16;
  local tmp74:4;
  tmp74 = tmp72 * tmp73;
  local tmp75:8;
  tmp75 = zext(tmp74);
  local tmp76:8;
  tmp76 = tmp47 << tmp75;
  local tmp77:8;
  tmp77 = tmp46 | tmp76;
  A2_vavguh_Rdd32 = tmp77;
  local tmp78:8;
  tmp78 = 65535;
  local tmp79:4;
  tmp79 = 2;
  local tmp80:4;
  tmp80 = 16;
  local tmp81:4;
  tmp81 = tmp79 * tmp80;
  local tmp82:8;
  tmp82 = zext(tmp81);
  local tmp83:8;
  tmp83 = tmp78 << tmp82;
  local tmp84:8;
  tmp84 = ~ tmp83;
  local tmp85:8;
  tmp85 = A2_vavguh_Rdd32 & tmp84;
  local tmp86:8;
  local tmp87:2;
  local tmp88:4;
  tmp88 = 2;
  local tmp89:4;
  tmp89 = 16;
  local tmp90:4;
  tmp90 = tmp88 * tmp89;
  local tmp91:8;
  tmp91 = zext(tmp90);
  local tmp92:8;
  tmp92 = A2_vavguh_Rss32 s>> tmp91;
  local tmp93:4;
  tmp93 = 65535;
  local tmp94:8;
  tmp94 = zext(tmp93);
  local tmp95:8;
  tmp95 = tmp92 & tmp94;
  tmp87 = tmp95:2;
  local tmp96:2;
  local tmp97:4;
  tmp97 = 2;
  local tmp98:4;
  tmp98 = 16;
  local tmp99:4;
  tmp99 = tmp97 * tmp98;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = A2_vavguh_Rtt32 s>> tmp100;
  local tmp102:4;
  tmp102 = 65535;
  local tmp103:8;
  tmp103 = zext(tmp102);
  local tmp104:8;
  tmp104 = tmp101 & tmp103;
  tmp96 = tmp104:2;
  local tmp105:2;
  tmp105 = tmp87 + tmp96;
  local tmp106:4;
  tmp106 = 1;
  local tmp107:4;
  tmp107 = zext(tmp105);
  local tmp108:4;
  tmp108 = tmp107 s>> tmp106;
  local tmp109:4;
  tmp109 = 65535;
  local tmp110:4;
  tmp110 = tmp108 & tmp109;
  tmp86 = sext(tmp110);
  local tmp111:4;
  tmp111 = 2;
  local tmp112:4;
  tmp112 = 16;
  local tmp113:4;
  tmp113 = tmp111 * tmp112;
  local tmp114:8;
  tmp114 = zext(tmp113);
  local tmp115:8;
  tmp115 = tmp86 << tmp114;
  local tmp116:8;
  tmp116 = tmp85 | tmp115;
  A2_vavguh_Rdd32 = tmp116;
  local tmp117:8;
  tmp117 = 65535;
  local tmp118:4;
  tmp118 = 3;
  local tmp119:4;
  tmp119 = 16;
  local tmp120:4;
  tmp120 = tmp118 * tmp119;
  local tmp121:8;
  tmp121 = zext(tmp120);
  local tmp122:8;
  tmp122 = tmp117 << tmp121;
  local tmp123:8;
  tmp123 = ~ tmp122;
  local tmp124:8;
  tmp124 = A2_vavguh_Rdd32 & tmp123;
  local tmp125:8;
  local tmp126:2;
  local tmp127:4;
  tmp127 = 3;
  local tmp128:4;
  tmp128 = 16;
  local tmp129:4;
  tmp129 = tmp127 * tmp128;
  local tmp130:8;
  tmp130 = zext(tmp129);
  local tmp131:8;
  tmp131 = A2_vavguh_Rss32 s>> tmp130;
  local tmp132:4;
  tmp132 = 65535;
  local tmp133:8;
  tmp133 = zext(tmp132);
  local tmp134:8;
  tmp134 = tmp131 & tmp133;
  tmp126 = tmp134:2;
  local tmp135:2;
  local tmp136:4;
  tmp136 = 3;
  local tmp137:4;
  tmp137 = 16;
  local tmp138:4;
  tmp138 = tmp136 * tmp137;
  local tmp139:8;
  tmp139 = zext(tmp138);
  local tmp140:8;
  tmp140 = A2_vavguh_Rtt32 s>> tmp139;
  local tmp141:4;
  tmp141 = 65535;
  local tmp142:8;
  tmp142 = zext(tmp141);
  local tmp143:8;
  tmp143 = tmp140 & tmp142;
  tmp135 = tmp143:2;
  local tmp144:2;
  tmp144 = tmp126 + tmp135;
  local tmp145:4;
  tmp145 = 1;
  local tmp146:4;
  tmp146 = zext(tmp144);
  local tmp147:4;
  tmp147 = tmp146 s>> tmp145;
  local tmp148:4;
  tmp148 = 65535;
  local tmp149:4;
  tmp149 = tmp147 & tmp148;
  tmp125 = sext(tmp149);
  local tmp150:4;
  tmp150 = 3;
  local tmp151:4;
  tmp151 = 16;
  local tmp152:4;
  tmp152 = tmp150 * tmp151;
  local tmp153:8;
  tmp153 = zext(tmp152);
  local tmp154:8;
  tmp154 = tmp125 << tmp153;
  local tmp155:8;
  tmp155 = tmp124 | tmp154;
  A2_vavguh_Rdd32 = tmp155;
}

:A2_vavgh A2_vavgh_Rdd32 A2_vavgh_Rss32 A2_vavgh_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vavgh_Rdd32 & A2_vavgh_Rss32 & A2_vavgh_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vavgh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vavgh_Rss32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:2;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vavgh_Rtt32 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:2;
  local tmp27:2;
  tmp27 = tmp9 + tmp18;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = zext(tmp27);
  local tmp30:4;
  tmp30 = tmp29 s>> tmp28;
  local tmp31:4;
  tmp31 = 65535;
  local tmp32:4;
  tmp32 = tmp30 & tmp31;
  tmp8 = sext(tmp32);
  local tmp33:4;
  tmp33 = 0;
  local tmp34:4;
  tmp34 = 16;
  local tmp35:4;
  tmp35 = tmp33 * tmp34;
  local tmp36:8;
  tmp36 = zext(tmp35);
  local tmp37:8;
  tmp37 = tmp8 << tmp36;
  local tmp38:8;
  tmp38 = tmp7 | tmp37;
  A2_vavgh_Rdd32 = tmp38;
  local tmp39:8;
  tmp39 = 65535;
  local tmp40:4;
  tmp40 = 1;
  local tmp41:4;
  tmp41 = 16;
  local tmp42:4;
  tmp42 = tmp40 * tmp41;
  local tmp43:8;
  tmp43 = zext(tmp42);
  local tmp44:8;
  tmp44 = tmp39 << tmp43;
  local tmp45:8;
  tmp45 = ~ tmp44;
  local tmp46:8;
  tmp46 = A2_vavgh_Rdd32 & tmp45;
  local tmp47:8;
  local tmp48:2;
  local tmp49:4;
  tmp49 = 1;
  local tmp50:4;
  tmp50 = 16;
  local tmp51:4;
  tmp51 = tmp49 * tmp50;
  local tmp52:8;
  tmp52 = zext(tmp51);
  local tmp53:8;
  tmp53 = A2_vavgh_Rss32 s>> tmp52;
  local tmp54:4;
  tmp54 = 65535;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp53 & tmp55;
  tmp48 = tmp56:2;
  local tmp57:2;
  local tmp58:4;
  tmp58 = 1;
  local tmp59:4;
  tmp59 = 16;
  local tmp60:4;
  tmp60 = tmp58 * tmp59;
  local tmp61:8;
  tmp61 = zext(tmp60);
  local tmp62:8;
  tmp62 = A2_vavgh_Rtt32 s>> tmp61;
  local tmp63:4;
  tmp63 = 65535;
  local tmp64:8;
  tmp64 = zext(tmp63);
  local tmp65:8;
  tmp65 = tmp62 & tmp64;
  tmp57 = tmp65:2;
  local tmp66:2;
  tmp66 = tmp48 + tmp57;
  local tmp67:4;
  tmp67 = 1;
  local tmp68:4;
  tmp68 = zext(tmp66);
  local tmp69:4;
  tmp69 = tmp68 s>> tmp67;
  local tmp70:4;
  tmp70 = 65535;
  local tmp71:4;
  tmp71 = tmp69 & tmp70;
  tmp47 = sext(tmp71);
  local tmp72:4;
  tmp72 = 1;
  local tmp73:4;
  tmp73 = 16;
  local tmp74:4;
  tmp74 = tmp72 * tmp73;
  local tmp75:8;
  tmp75 = zext(tmp74);
  local tmp76:8;
  tmp76 = tmp47 << tmp75;
  local tmp77:8;
  tmp77 = tmp46 | tmp76;
  A2_vavgh_Rdd32 = tmp77;
  local tmp78:8;
  tmp78 = 65535;
  local tmp79:4;
  tmp79 = 2;
  local tmp80:4;
  tmp80 = 16;
  local tmp81:4;
  tmp81 = tmp79 * tmp80;
  local tmp82:8;
  tmp82 = zext(tmp81);
  local tmp83:8;
  tmp83 = tmp78 << tmp82;
  local tmp84:8;
  tmp84 = ~ tmp83;
  local tmp85:8;
  tmp85 = A2_vavgh_Rdd32 & tmp84;
  local tmp86:8;
  local tmp87:2;
  local tmp88:4;
  tmp88 = 2;
  local tmp89:4;
  tmp89 = 16;
  local tmp90:4;
  tmp90 = tmp88 * tmp89;
  local tmp91:8;
  tmp91 = zext(tmp90);
  local tmp92:8;
  tmp92 = A2_vavgh_Rss32 s>> tmp91;
  local tmp93:4;
  tmp93 = 65535;
  local tmp94:8;
  tmp94 = zext(tmp93);
  local tmp95:8;
  tmp95 = tmp92 & tmp94;
  tmp87 = tmp95:2;
  local tmp96:2;
  local tmp97:4;
  tmp97 = 2;
  local tmp98:4;
  tmp98 = 16;
  local tmp99:4;
  tmp99 = tmp97 * tmp98;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = A2_vavgh_Rtt32 s>> tmp100;
  local tmp102:4;
  tmp102 = 65535;
  local tmp103:8;
  tmp103 = zext(tmp102);
  local tmp104:8;
  tmp104 = tmp101 & tmp103;
  tmp96 = tmp104:2;
  local tmp105:2;
  tmp105 = tmp87 + tmp96;
  local tmp106:4;
  tmp106 = 1;
  local tmp107:4;
  tmp107 = zext(tmp105);
  local tmp108:4;
  tmp108 = tmp107 s>> tmp106;
  local tmp109:4;
  tmp109 = 65535;
  local tmp110:4;
  tmp110 = tmp108 & tmp109;
  tmp86 = sext(tmp110);
  local tmp111:4;
  tmp111 = 2;
  local tmp112:4;
  tmp112 = 16;
  local tmp113:4;
  tmp113 = tmp111 * tmp112;
  local tmp114:8;
  tmp114 = zext(tmp113);
  local tmp115:8;
  tmp115 = tmp86 << tmp114;
  local tmp116:8;
  tmp116 = tmp85 | tmp115;
  A2_vavgh_Rdd32 = tmp116;
  local tmp117:8;
  tmp117 = 65535;
  local tmp118:4;
  tmp118 = 3;
  local tmp119:4;
  tmp119 = 16;
  local tmp120:4;
  tmp120 = tmp118 * tmp119;
  local tmp121:8;
  tmp121 = zext(tmp120);
  local tmp122:8;
  tmp122 = tmp117 << tmp121;
  local tmp123:8;
  tmp123 = ~ tmp122;
  local tmp124:8;
  tmp124 = A2_vavgh_Rdd32 & tmp123;
  local tmp125:8;
  local tmp126:2;
  local tmp127:4;
  tmp127 = 3;
  local tmp128:4;
  tmp128 = 16;
  local tmp129:4;
  tmp129 = tmp127 * tmp128;
  local tmp130:8;
  tmp130 = zext(tmp129);
  local tmp131:8;
  tmp131 = A2_vavgh_Rss32 s>> tmp130;
  local tmp132:4;
  tmp132 = 65535;
  local tmp133:8;
  tmp133 = zext(tmp132);
  local tmp134:8;
  tmp134 = tmp131 & tmp133;
  tmp126 = tmp134:2;
  local tmp135:2;
  local tmp136:4;
  tmp136 = 3;
  local tmp137:4;
  tmp137 = 16;
  local tmp138:4;
  tmp138 = tmp136 * tmp137;
  local tmp139:8;
  tmp139 = zext(tmp138);
  local tmp140:8;
  tmp140 = A2_vavgh_Rtt32 s>> tmp139;
  local tmp141:4;
  tmp141 = 65535;
  local tmp142:8;
  tmp142 = zext(tmp141);
  local tmp143:8;
  tmp143 = tmp140 & tmp142;
  tmp135 = tmp143:2;
  local tmp144:2;
  tmp144 = tmp126 + tmp135;
  local tmp145:4;
  tmp145 = 1;
  local tmp146:4;
  tmp146 = zext(tmp144);
  local tmp147:4;
  tmp147 = tmp146 s>> tmp145;
  local tmp148:4;
  tmp148 = 65535;
  local tmp149:4;
  tmp149 = tmp147 & tmp148;
  tmp125 = sext(tmp149);
  local tmp150:4;
  tmp150 = 3;
  local tmp151:4;
  tmp151 = 16;
  local tmp152:4;
  tmp152 = tmp150 * tmp151;
  local tmp153:8;
  tmp153 = zext(tmp152);
  local tmp154:8;
  tmp154 = tmp125 << tmp153;
  local tmp155:8;
  tmp155 = tmp124 | tmp154;
  A2_vavgh_Rdd32 = tmp155;
}

:A2_vnavgh A2_vnavgh_Rdd32 A2_vnavgh_Rtt32 A2_vnavgh_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vnavgh_Rdd32 & A2_vnavgh_Rtt32 & A2_vnavgh_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vnavgh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vnavgh_Rtt32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:2;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vnavgh_Rss32 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:2;
  local tmp27:2;
  tmp27 = tmp9 - tmp18;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = zext(tmp27);
  local tmp30:4;
  tmp30 = tmp29 s>> tmp28;
  local tmp31:4;
  tmp31 = 65535;
  local tmp32:4;
  tmp32 = tmp30 & tmp31;
  tmp8 = sext(tmp32);
  local tmp33:4;
  tmp33 = 0;
  local tmp34:4;
  tmp34 = 16;
  local tmp35:4;
  tmp35 = tmp33 * tmp34;
  local tmp36:8;
  tmp36 = zext(tmp35);
  local tmp37:8;
  tmp37 = tmp8 << tmp36;
  local tmp38:8;
  tmp38 = tmp7 | tmp37;
  A2_vnavgh_Rdd32 = tmp38;
  local tmp39:8;
  tmp39 = 65535;
  local tmp40:4;
  tmp40 = 1;
  local tmp41:4;
  tmp41 = 16;
  local tmp42:4;
  tmp42 = tmp40 * tmp41;
  local tmp43:8;
  tmp43 = zext(tmp42);
  local tmp44:8;
  tmp44 = tmp39 << tmp43;
  local tmp45:8;
  tmp45 = ~ tmp44;
  local tmp46:8;
  tmp46 = A2_vnavgh_Rdd32 & tmp45;
  local tmp47:8;
  local tmp48:2;
  local tmp49:4;
  tmp49 = 1;
  local tmp50:4;
  tmp50 = 16;
  local tmp51:4;
  tmp51 = tmp49 * tmp50;
  local tmp52:8;
  tmp52 = zext(tmp51);
  local tmp53:8;
  tmp53 = A2_vnavgh_Rtt32 s>> tmp52;
  local tmp54:4;
  tmp54 = 65535;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp53 & tmp55;
  tmp48 = tmp56:2;
  local tmp57:2;
  local tmp58:4;
  tmp58 = 1;
  local tmp59:4;
  tmp59 = 16;
  local tmp60:4;
  tmp60 = tmp58 * tmp59;
  local tmp61:8;
  tmp61 = zext(tmp60);
  local tmp62:8;
  tmp62 = A2_vnavgh_Rss32 s>> tmp61;
  local tmp63:4;
  tmp63 = 65535;
  local tmp64:8;
  tmp64 = zext(tmp63);
  local tmp65:8;
  tmp65 = tmp62 & tmp64;
  tmp57 = tmp65:2;
  local tmp66:2;
  tmp66 = tmp48 - tmp57;
  local tmp67:4;
  tmp67 = 1;
  local tmp68:4;
  tmp68 = zext(tmp66);
  local tmp69:4;
  tmp69 = tmp68 s>> tmp67;
  local tmp70:4;
  tmp70 = 65535;
  local tmp71:4;
  tmp71 = tmp69 & tmp70;
  tmp47 = sext(tmp71);
  local tmp72:4;
  tmp72 = 1;
  local tmp73:4;
  tmp73 = 16;
  local tmp74:4;
  tmp74 = tmp72 * tmp73;
  local tmp75:8;
  tmp75 = zext(tmp74);
  local tmp76:8;
  tmp76 = tmp47 << tmp75;
  local tmp77:8;
  tmp77 = tmp46 | tmp76;
  A2_vnavgh_Rdd32 = tmp77;
  local tmp78:8;
  tmp78 = 65535;
  local tmp79:4;
  tmp79 = 2;
  local tmp80:4;
  tmp80 = 16;
  local tmp81:4;
  tmp81 = tmp79 * tmp80;
  local tmp82:8;
  tmp82 = zext(tmp81);
  local tmp83:8;
  tmp83 = tmp78 << tmp82;
  local tmp84:8;
  tmp84 = ~ tmp83;
  local tmp85:8;
  tmp85 = A2_vnavgh_Rdd32 & tmp84;
  local tmp86:8;
  local tmp87:2;
  local tmp88:4;
  tmp88 = 2;
  local tmp89:4;
  tmp89 = 16;
  local tmp90:4;
  tmp90 = tmp88 * tmp89;
  local tmp91:8;
  tmp91 = zext(tmp90);
  local tmp92:8;
  tmp92 = A2_vnavgh_Rtt32 s>> tmp91;
  local tmp93:4;
  tmp93 = 65535;
  local tmp94:8;
  tmp94 = zext(tmp93);
  local tmp95:8;
  tmp95 = tmp92 & tmp94;
  tmp87 = tmp95:2;
  local tmp96:2;
  local tmp97:4;
  tmp97 = 2;
  local tmp98:4;
  tmp98 = 16;
  local tmp99:4;
  tmp99 = tmp97 * tmp98;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = A2_vnavgh_Rss32 s>> tmp100;
  local tmp102:4;
  tmp102 = 65535;
  local tmp103:8;
  tmp103 = zext(tmp102);
  local tmp104:8;
  tmp104 = tmp101 & tmp103;
  tmp96 = tmp104:2;
  local tmp105:2;
  tmp105 = tmp87 - tmp96;
  local tmp106:4;
  tmp106 = 1;
  local tmp107:4;
  tmp107 = zext(tmp105);
  local tmp108:4;
  tmp108 = tmp107 s>> tmp106;
  local tmp109:4;
  tmp109 = 65535;
  local tmp110:4;
  tmp110 = tmp108 & tmp109;
  tmp86 = sext(tmp110);
  local tmp111:4;
  tmp111 = 2;
  local tmp112:4;
  tmp112 = 16;
  local tmp113:4;
  tmp113 = tmp111 * tmp112;
  local tmp114:8;
  tmp114 = zext(tmp113);
  local tmp115:8;
  tmp115 = tmp86 << tmp114;
  local tmp116:8;
  tmp116 = tmp85 | tmp115;
  A2_vnavgh_Rdd32 = tmp116;
  local tmp117:8;
  tmp117 = 65535;
  local tmp118:4;
  tmp118 = 3;
  local tmp119:4;
  tmp119 = 16;
  local tmp120:4;
  tmp120 = tmp118 * tmp119;
  local tmp121:8;
  tmp121 = zext(tmp120);
  local tmp122:8;
  tmp122 = tmp117 << tmp121;
  local tmp123:8;
  tmp123 = ~ tmp122;
  local tmp124:8;
  tmp124 = A2_vnavgh_Rdd32 & tmp123;
  local tmp125:8;
  local tmp126:2;
  local tmp127:4;
  tmp127 = 3;
  local tmp128:4;
  tmp128 = 16;
  local tmp129:4;
  tmp129 = tmp127 * tmp128;
  local tmp130:8;
  tmp130 = zext(tmp129);
  local tmp131:8;
  tmp131 = A2_vnavgh_Rtt32 s>> tmp130;
  local tmp132:4;
  tmp132 = 65535;
  local tmp133:8;
  tmp133 = zext(tmp132);
  local tmp134:8;
  tmp134 = tmp131 & tmp133;
  tmp126 = tmp134:2;
  local tmp135:2;
  local tmp136:4;
  tmp136 = 3;
  local tmp137:4;
  tmp137 = 16;
  local tmp138:4;
  tmp138 = tmp136 * tmp137;
  local tmp139:8;
  tmp139 = zext(tmp138);
  local tmp140:8;
  tmp140 = A2_vnavgh_Rss32 s>> tmp139;
  local tmp141:4;
  tmp141 = 65535;
  local tmp142:8;
  tmp142 = zext(tmp141);
  local tmp143:8;
  tmp143 = tmp140 & tmp142;
  tmp135 = tmp143:2;
  local tmp144:2;
  tmp144 = tmp126 - tmp135;
  local tmp145:4;
  tmp145 = 1;
  local tmp146:4;
  tmp146 = zext(tmp144);
  local tmp147:4;
  tmp147 = tmp146 s>> tmp145;
  local tmp148:4;
  tmp148 = 65535;
  local tmp149:4;
  tmp149 = tmp147 & tmp148;
  tmp125 = sext(tmp149);
  local tmp150:4;
  tmp150 = 3;
  local tmp151:4;
  tmp151 = 16;
  local tmp152:4;
  tmp152 = tmp150 * tmp151;
  local tmp153:8;
  tmp153 = zext(tmp152);
  local tmp154:8;
  tmp154 = tmp125 << tmp153;
  local tmp155:8;
  tmp155 = tmp124 | tmp154;
  A2_vnavgh_Rdd32 = tmp155;
}

:A2_vavgw A2_vavgw_Rdd32 A2_vavgw_Rss32 A2_vavgw_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vavgw_Rdd32 & A2_vavgw_Rss32 & A2_vavgw_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vavgw_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:4;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 32;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vavgw_Rss32 s>> tmp13;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = tmp14 & tmp15;
  tmp9 = tmp16:4;
  tmp8 = zext(tmp9);
  local tmp17:4;
  tmp17 = 1;
  local tmp18:4;
  tmp18 = 32;
  local tmp19:4;
  tmp19 = tmp17 << tmp18;
  local tmp20:4;
  tmp20 = 1;
  local tmp21:4;
  tmp21 = tmp19 - tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp8 & tmp22;
  local tmp24:4;
  tmp24 = 1;
  local tmp25:4;
  tmp25 = 32;
  local tmp26:4;
  tmp26 = 1;
  local tmp27:4;
  tmp27 = tmp25 - tmp26;
  local tmp28:4;
  tmp28 = tmp24 << tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp23 ^ tmp29;
  local tmp31:4;
  tmp31 = 1;
  local tmp32:4;
  tmp32 = 32;
  local tmp33:4;
  tmp33 = 1;
  local tmp34:4;
  tmp34 = tmp32 - tmp33;
  local tmp35:4;
  tmp35 = tmp31 << tmp34;
  local tmp36:8;
  tmp36 = zext(tmp35);
  local tmp37:8;
  tmp37 = tmp30 - tmp36;
  local tmp38:8;
  local tmp39:4;
  local tmp40:4;
  tmp40 = 0;
  local tmp41:4;
  tmp41 = 32;
  local tmp42:4;
  tmp42 = tmp40 * tmp41;
  local tmp43:8;
  tmp43 = zext(tmp42);
  local tmp44:8;
  tmp44 = A2_vavgw_Rtt32 s>> tmp43;
  local tmp45:8;
  tmp45 = 4294967295;
  local tmp46:8;
  tmp46 = tmp44 & tmp45;
  tmp39 = tmp46:4;
  tmp38 = zext(tmp39);
  local tmp47:4;
  tmp47 = 1;
  local tmp48:4;
  tmp48 = 32;
  local tmp49:4;
  tmp49 = tmp47 << tmp48;
  local tmp50:4;
  tmp50 = 1;
  local tmp51:4;
  tmp51 = tmp49 - tmp50;
  local tmp52:8;
  tmp52 = zext(tmp51);
  local tmp53:8;
  tmp53 = tmp38 & tmp52;
  local tmp54:4;
  tmp54 = 1;
  local tmp55:4;
  tmp55 = 32;
  local tmp56:4;
  tmp56 = 1;
  local tmp57:4;
  tmp57 = tmp55 - tmp56;
  local tmp58:4;
  tmp58 = tmp54 << tmp57;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = tmp53 ^ tmp59;
  local tmp61:4;
  tmp61 = 1;
  local tmp62:4;
  tmp62 = 32;
  local tmp63:4;
  tmp63 = 1;
  local tmp64:4;
  tmp64 = tmp62 - tmp63;
  local tmp65:4;
  tmp65 = tmp61 << tmp64;
  local tmp66:8;
  tmp66 = zext(tmp65);
  local tmp67:8;
  tmp67 = tmp60 - tmp66;
  local tmp68:8;
  tmp68 = tmp37 + tmp67;
  local tmp69:4;
  tmp69 = 1;
  local tmp70:8;
  tmp70 = zext(tmp69);
  local tmp71:8;
  tmp71 = tmp68 s>> tmp70;
  local tmp72:8;
  tmp72 = 4294967295;
  local tmp73:8;
  tmp73 = tmp71 & tmp72;
  local tmp74:4;
  tmp74 = 0;
  local tmp75:4;
  tmp75 = 32;
  local tmp76:4;
  tmp76 = tmp74 * tmp75;
  local tmp77:8;
  tmp77 = zext(tmp76);
  local tmp78:8;
  tmp78 = tmp73 << tmp77;
  local tmp79:8;
  tmp79 = tmp7 | tmp78;
  A2_vavgw_Rdd32 = tmp79;
  local tmp80:8;
  tmp80 = 4294967295;
  local tmp81:4;
  tmp81 = 1;
  local tmp82:4;
  tmp82 = 32;
  local tmp83:4;
  tmp83 = tmp81 * tmp82;
  local tmp84:8;
  tmp84 = zext(tmp83);
  local tmp85:8;
  tmp85 = tmp80 << tmp84;
  local tmp86:8;
  tmp86 = ~ tmp85;
  local tmp87:8;
  tmp87 = A2_vavgw_Rdd32 & tmp86;
  local tmp88:8;
  local tmp89:4;
  local tmp90:4;
  tmp90 = 1;
  local tmp91:4;
  tmp91 = 32;
  local tmp92:4;
  tmp92 = tmp90 * tmp91;
  local tmp93:8;
  tmp93 = zext(tmp92);
  local tmp94:8;
  tmp94 = A2_vavgw_Rss32 s>> tmp93;
  local tmp95:8;
  tmp95 = 4294967295;
  local tmp96:8;
  tmp96 = tmp94 & tmp95;
  tmp89 = tmp96:4;
  tmp88 = zext(tmp89);
  local tmp97:4;
  tmp97 = 1;
  local tmp98:4;
  tmp98 = 32;
  local tmp99:4;
  tmp99 = tmp97 << tmp98;
  local tmp100:4;
  tmp100 = 1;
  local tmp101:4;
  tmp101 = tmp99 - tmp100;
  local tmp102:8;
  tmp102 = zext(tmp101);
  local tmp103:8;
  tmp103 = tmp88 & tmp102;
  local tmp104:4;
  tmp104 = 1;
  local tmp105:4;
  tmp105 = 32;
  local tmp106:4;
  tmp106 = 1;
  local tmp107:4;
  tmp107 = tmp105 - tmp106;
  local tmp108:4;
  tmp108 = tmp104 << tmp107;
  local tmp109:8;
  tmp109 = zext(tmp108);
  local tmp110:8;
  tmp110 = tmp103 ^ tmp109;
  local tmp111:4;
  tmp111 = 1;
  local tmp112:4;
  tmp112 = 32;
  local tmp113:4;
  tmp113 = 1;
  local tmp114:4;
  tmp114 = tmp112 - tmp113;
  local tmp115:4;
  tmp115 = tmp111 << tmp114;
  local tmp116:8;
  tmp116 = zext(tmp115);
  local tmp117:8;
  tmp117 = tmp110 - tmp116;
  local tmp118:8;
  local tmp119:4;
  local tmp120:4;
  tmp120 = 1;
  local tmp121:4;
  tmp121 = 32;
  local tmp122:4;
  tmp122 = tmp120 * tmp121;
  local tmp123:8;
  tmp123 = zext(tmp122);
  local tmp124:8;
  tmp124 = A2_vavgw_Rtt32 s>> tmp123;
  local tmp125:8;
  tmp125 = 4294967295;
  local tmp126:8;
  tmp126 = tmp124 & tmp125;
  tmp119 = tmp126:4;
  tmp118 = zext(tmp119);
  local tmp127:4;
  tmp127 = 1;
  local tmp128:4;
  tmp128 = 32;
  local tmp129:4;
  tmp129 = tmp127 << tmp128;
  local tmp130:4;
  tmp130 = 1;
  local tmp131:4;
  tmp131 = tmp129 - tmp130;
  local tmp132:8;
  tmp132 = zext(tmp131);
  local tmp133:8;
  tmp133 = tmp118 & tmp132;
  local tmp134:4;
  tmp134 = 1;
  local tmp135:4;
  tmp135 = 32;
  local tmp136:4;
  tmp136 = 1;
  local tmp137:4;
  tmp137 = tmp135 - tmp136;
  local tmp138:4;
  tmp138 = tmp134 << tmp137;
  local tmp139:8;
  tmp139 = zext(tmp138);
  local tmp140:8;
  tmp140 = tmp133 ^ tmp139;
  local tmp141:4;
  tmp141 = 1;
  local tmp142:4;
  tmp142 = 32;
  local tmp143:4;
  tmp143 = 1;
  local tmp144:4;
  tmp144 = tmp142 - tmp143;
  local tmp145:4;
  tmp145 = tmp141 << tmp144;
  local tmp146:8;
  tmp146 = zext(tmp145);
  local tmp147:8;
  tmp147 = tmp140 - tmp146;
  local tmp148:8;
  tmp148 = tmp117 + tmp147;
  local tmp149:4;
  tmp149 = 1;
  local tmp150:8;
  tmp150 = zext(tmp149);
  local tmp151:8;
  tmp151 = tmp148 s>> tmp150;
  local tmp152:8;
  tmp152 = 4294967295;
  local tmp153:8;
  tmp153 = tmp151 & tmp152;
  local tmp154:4;
  tmp154 = 1;
  local tmp155:4;
  tmp155 = 32;
  local tmp156:4;
  tmp156 = tmp154 * tmp155;
  local tmp157:8;
  tmp157 = zext(tmp156);
  local tmp158:8;
  tmp158 = tmp153 << tmp157;
  local tmp159:8;
  tmp159 = tmp87 | tmp158;
  A2_vavgw_Rdd32 = tmp159;
}

:A2_vnavgw A2_vnavgw_Rdd32 A2_vnavgw_Rtt32 A2_vnavgw_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vnavgw_Rdd32 & A2_vnavgw_Rtt32 & A2_vnavgw_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vnavgw_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:4;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 32;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vnavgw_Rtt32 s>> tmp13;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = tmp14 & tmp15;
  tmp9 = tmp16:4;
  tmp8 = zext(tmp9);
  local tmp17:4;
  tmp17 = 1;
  local tmp18:4;
  tmp18 = 32;
  local tmp19:4;
  tmp19 = tmp17 << tmp18;
  local tmp20:4;
  tmp20 = 1;
  local tmp21:4;
  tmp21 = tmp19 - tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp8 & tmp22;
  local tmp24:4;
  tmp24 = 1;
  local tmp25:4;
  tmp25 = 32;
  local tmp26:4;
  tmp26 = 1;
  local tmp27:4;
  tmp27 = tmp25 - tmp26;
  local tmp28:4;
  tmp28 = tmp24 << tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp23 ^ tmp29;
  local tmp31:4;
  tmp31 = 1;
  local tmp32:4;
  tmp32 = 32;
  local tmp33:4;
  tmp33 = 1;
  local tmp34:4;
  tmp34 = tmp32 - tmp33;
  local tmp35:4;
  tmp35 = tmp31 << tmp34;
  local tmp36:8;
  tmp36 = zext(tmp35);
  local tmp37:8;
  tmp37 = tmp30 - tmp36;
  local tmp38:8;
  local tmp39:4;
  local tmp40:4;
  tmp40 = 0;
  local tmp41:4;
  tmp41 = 32;
  local tmp42:4;
  tmp42 = tmp40 * tmp41;
  local tmp43:8;
  tmp43 = zext(tmp42);
  local tmp44:8;
  tmp44 = A2_vnavgw_Rss32 s>> tmp43;
  local tmp45:8;
  tmp45 = 4294967295;
  local tmp46:8;
  tmp46 = tmp44 & tmp45;
  tmp39 = tmp46:4;
  tmp38 = zext(tmp39);
  local tmp47:4;
  tmp47 = 1;
  local tmp48:4;
  tmp48 = 32;
  local tmp49:4;
  tmp49 = tmp47 << tmp48;
  local tmp50:4;
  tmp50 = 1;
  local tmp51:4;
  tmp51 = tmp49 - tmp50;
  local tmp52:8;
  tmp52 = zext(tmp51);
  local tmp53:8;
  tmp53 = tmp38 & tmp52;
  local tmp54:4;
  tmp54 = 1;
  local tmp55:4;
  tmp55 = 32;
  local tmp56:4;
  tmp56 = 1;
  local tmp57:4;
  tmp57 = tmp55 - tmp56;
  local tmp58:4;
  tmp58 = tmp54 << tmp57;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = tmp53 ^ tmp59;
  local tmp61:4;
  tmp61 = 1;
  local tmp62:4;
  tmp62 = 32;
  local tmp63:4;
  tmp63 = 1;
  local tmp64:4;
  tmp64 = tmp62 - tmp63;
  local tmp65:4;
  tmp65 = tmp61 << tmp64;
  local tmp66:8;
  tmp66 = zext(tmp65);
  local tmp67:8;
  tmp67 = tmp60 - tmp66;
  local tmp68:8;
  tmp68 = tmp37 - tmp67;
  local tmp69:4;
  tmp69 = 1;
  local tmp70:8;
  tmp70 = zext(tmp69);
  local tmp71:8;
  tmp71 = tmp68 s>> tmp70;
  local tmp72:8;
  tmp72 = 4294967295;
  local tmp73:8;
  tmp73 = tmp71 & tmp72;
  local tmp74:4;
  tmp74 = 0;
  local tmp75:4;
  tmp75 = 32;
  local tmp76:4;
  tmp76 = tmp74 * tmp75;
  local tmp77:8;
  tmp77 = zext(tmp76);
  local tmp78:8;
  tmp78 = tmp73 << tmp77;
  local tmp79:8;
  tmp79 = tmp7 | tmp78;
  A2_vnavgw_Rdd32 = tmp79;
  local tmp80:8;
  tmp80 = 4294967295;
  local tmp81:4;
  tmp81 = 1;
  local tmp82:4;
  tmp82 = 32;
  local tmp83:4;
  tmp83 = tmp81 * tmp82;
  local tmp84:8;
  tmp84 = zext(tmp83);
  local tmp85:8;
  tmp85 = tmp80 << tmp84;
  local tmp86:8;
  tmp86 = ~ tmp85;
  local tmp87:8;
  tmp87 = A2_vnavgw_Rdd32 & tmp86;
  local tmp88:8;
  local tmp89:4;
  local tmp90:4;
  tmp90 = 1;
  local tmp91:4;
  tmp91 = 32;
  local tmp92:4;
  tmp92 = tmp90 * tmp91;
  local tmp93:8;
  tmp93 = zext(tmp92);
  local tmp94:8;
  tmp94 = A2_vnavgw_Rtt32 s>> tmp93;
  local tmp95:8;
  tmp95 = 4294967295;
  local tmp96:8;
  tmp96 = tmp94 & tmp95;
  tmp89 = tmp96:4;
  tmp88 = zext(tmp89);
  local tmp97:4;
  tmp97 = 1;
  local tmp98:4;
  tmp98 = 32;
  local tmp99:4;
  tmp99 = tmp97 << tmp98;
  local tmp100:4;
  tmp100 = 1;
  local tmp101:4;
  tmp101 = tmp99 - tmp100;
  local tmp102:8;
  tmp102 = zext(tmp101);
  local tmp103:8;
  tmp103 = tmp88 & tmp102;
  local tmp104:4;
  tmp104 = 1;
  local tmp105:4;
  tmp105 = 32;
  local tmp106:4;
  tmp106 = 1;
  local tmp107:4;
  tmp107 = tmp105 - tmp106;
  local tmp108:4;
  tmp108 = tmp104 << tmp107;
  local tmp109:8;
  tmp109 = zext(tmp108);
  local tmp110:8;
  tmp110 = tmp103 ^ tmp109;
  local tmp111:4;
  tmp111 = 1;
  local tmp112:4;
  tmp112 = 32;
  local tmp113:4;
  tmp113 = 1;
  local tmp114:4;
  tmp114 = tmp112 - tmp113;
  local tmp115:4;
  tmp115 = tmp111 << tmp114;
  local tmp116:8;
  tmp116 = zext(tmp115);
  local tmp117:8;
  tmp117 = tmp110 - tmp116;
  local tmp118:8;
  local tmp119:4;
  local tmp120:4;
  tmp120 = 1;
  local tmp121:4;
  tmp121 = 32;
  local tmp122:4;
  tmp122 = tmp120 * tmp121;
  local tmp123:8;
  tmp123 = zext(tmp122);
  local tmp124:8;
  tmp124 = A2_vnavgw_Rss32 s>> tmp123;
  local tmp125:8;
  tmp125 = 4294967295;
  local tmp126:8;
  tmp126 = tmp124 & tmp125;
  tmp119 = tmp126:4;
  tmp118 = zext(tmp119);
  local tmp127:4;
  tmp127 = 1;
  local tmp128:4;
  tmp128 = 32;
  local tmp129:4;
  tmp129 = tmp127 << tmp128;
  local tmp130:4;
  tmp130 = 1;
  local tmp131:4;
  tmp131 = tmp129 - tmp130;
  local tmp132:8;
  tmp132 = zext(tmp131);
  local tmp133:8;
  tmp133 = tmp118 & tmp132;
  local tmp134:4;
  tmp134 = 1;
  local tmp135:4;
  tmp135 = 32;
  local tmp136:4;
  tmp136 = 1;
  local tmp137:4;
  tmp137 = tmp135 - tmp136;
  local tmp138:4;
  tmp138 = tmp134 << tmp137;
  local tmp139:8;
  tmp139 = zext(tmp138);
  local tmp140:8;
  tmp140 = tmp133 ^ tmp139;
  local tmp141:4;
  tmp141 = 1;
  local tmp142:4;
  tmp142 = 32;
  local tmp143:4;
  tmp143 = 1;
  local tmp144:4;
  tmp144 = tmp142 - tmp143;
  local tmp145:4;
  tmp145 = tmp141 << tmp144;
  local tmp146:8;
  tmp146 = zext(tmp145);
  local tmp147:8;
  tmp147 = tmp140 - tmp146;
  local tmp148:8;
  tmp148 = tmp117 - tmp147;
  local tmp149:4;
  tmp149 = 1;
  local tmp150:8;
  tmp150 = zext(tmp149);
  local tmp151:8;
  tmp151 = tmp148 s>> tmp150;
  local tmp152:8;
  tmp152 = 4294967295;
  local tmp153:8;
  tmp153 = tmp151 & tmp152;
  local tmp154:4;
  tmp154 = 1;
  local tmp155:4;
  tmp155 = 32;
  local tmp156:4;
  tmp156 = tmp154 * tmp155;
  local tmp157:8;
  tmp157 = zext(tmp156);
  local tmp158:8;
  tmp158 = tmp153 << tmp157;
  local tmp159:8;
  tmp159 = tmp87 | tmp158;
  A2_vnavgw_Rdd32 = tmp159;
}

:A2_vavgwr A2_vavgwr_Rdd32 A2_vavgwr_Rss32 A2_vavgwr_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vavgwr_Rdd32 & A2_vavgwr_Rss32 & A2_vavgwr_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vavgwr_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:4;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 32;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vavgwr_Rss32 s>> tmp13;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = tmp14 & tmp15;
  tmp9 = tmp16:4;
  tmp8 = zext(tmp9);
  local tmp17:4;
  tmp17 = 1;
  local tmp18:4;
  tmp18 = 32;
  local tmp19:4;
  tmp19 = tmp17 << tmp18;
  local tmp20:4;
  tmp20 = 1;
  local tmp21:4;
  tmp21 = tmp19 - tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp8 & tmp22;
  local tmp24:4;
  tmp24 = 1;
  local tmp25:4;
  tmp25 = 32;
  local tmp26:4;
  tmp26 = 1;
  local tmp27:4;
  tmp27 = tmp25 - tmp26;
  local tmp28:4;
  tmp28 = tmp24 << tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp23 ^ tmp29;
  local tmp31:4;
  tmp31 = 1;
  local tmp32:4;
  tmp32 = 32;
  local tmp33:4;
  tmp33 = 1;
  local tmp34:4;
  tmp34 = tmp32 - tmp33;
  local tmp35:4;
  tmp35 = tmp31 << tmp34;
  local tmp36:8;
  tmp36 = zext(tmp35);
  local tmp37:8;
  tmp37 = tmp30 - tmp36;
  local tmp38:8;
  local tmp39:4;
  local tmp40:4;
  tmp40 = 0;
  local tmp41:4;
  tmp41 = 32;
  local tmp42:4;
  tmp42 = tmp40 * tmp41;
  local tmp43:8;
  tmp43 = zext(tmp42);
  local tmp44:8;
  tmp44 = A2_vavgwr_Rtt32 s>> tmp43;
  local tmp45:8;
  tmp45 = 4294967295;
  local tmp46:8;
  tmp46 = tmp44 & tmp45;
  tmp39 = tmp46:4;
  tmp38 = zext(tmp39);
  local tmp47:4;
  tmp47 = 1;
  local tmp48:4;
  tmp48 = 32;
  local tmp49:4;
  tmp49 = tmp47 << tmp48;
  local tmp50:4;
  tmp50 = 1;
  local tmp51:4;
  tmp51 = tmp49 - tmp50;
  local tmp52:8;
  tmp52 = zext(tmp51);
  local tmp53:8;
  tmp53 = tmp38 & tmp52;
  local tmp54:4;
  tmp54 = 1;
  local tmp55:4;
  tmp55 = 32;
  local tmp56:4;
  tmp56 = 1;
  local tmp57:4;
  tmp57 = tmp55 - tmp56;
  local tmp58:4;
  tmp58 = tmp54 << tmp57;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = tmp53 ^ tmp59;
  local tmp61:4;
  tmp61 = 1;
  local tmp62:4;
  tmp62 = 32;
  local tmp63:4;
  tmp63 = 1;
  local tmp64:4;
  tmp64 = tmp62 - tmp63;
  local tmp65:4;
  tmp65 = tmp61 << tmp64;
  local tmp66:8;
  tmp66 = zext(tmp65);
  local tmp67:8;
  tmp67 = tmp60 - tmp66;
  local tmp68:8;
  tmp68 = tmp37 + tmp67;
  local tmp69:4;
  tmp69 = 1;
  local tmp70:8;
  tmp70 = zext(tmp69);
  local tmp71:8;
  tmp71 = tmp68 + tmp70;
  local tmp72:4;
  tmp72 = 1;
  local tmp73:8;
  tmp73 = zext(tmp72);
  local tmp74:8;
  tmp74 = tmp71 s>> tmp73;
  local tmp75:8;
  tmp75 = 4294967295;
  local tmp76:8;
  tmp76 = tmp74 & tmp75;
  local tmp77:4;
  tmp77 = 0;
  local tmp78:4;
  tmp78 = 32;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = tmp76 << tmp80;
  local tmp82:8;
  tmp82 = tmp7 | tmp81;
  A2_vavgwr_Rdd32 = tmp82;
  local tmp83:8;
  tmp83 = 4294967295;
  local tmp84:4;
  tmp84 = 1;
  local tmp85:4;
  tmp85 = 32;
  local tmp86:4;
  tmp86 = tmp84 * tmp85;
  local tmp87:8;
  tmp87 = zext(tmp86);
  local tmp88:8;
  tmp88 = tmp83 << tmp87;
  local tmp89:8;
  tmp89 = ~ tmp88;
  local tmp90:8;
  tmp90 = A2_vavgwr_Rdd32 & tmp89;
  local tmp91:8;
  local tmp92:4;
  local tmp93:4;
  tmp93 = 1;
  local tmp94:4;
  tmp94 = 32;
  local tmp95:4;
  tmp95 = tmp93 * tmp94;
  local tmp96:8;
  tmp96 = zext(tmp95);
  local tmp97:8;
  tmp97 = A2_vavgwr_Rss32 s>> tmp96;
  local tmp98:8;
  tmp98 = 4294967295;
  local tmp99:8;
  tmp99 = tmp97 & tmp98;
  tmp92 = tmp99:4;
  tmp91 = zext(tmp92);
  local tmp100:4;
  tmp100 = 1;
  local tmp101:4;
  tmp101 = 32;
  local tmp102:4;
  tmp102 = tmp100 << tmp101;
  local tmp103:4;
  tmp103 = 1;
  local tmp104:4;
  tmp104 = tmp102 - tmp103;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp91 & tmp105;
  local tmp107:4;
  tmp107 = 1;
  local tmp108:4;
  tmp108 = 32;
  local tmp109:4;
  tmp109 = 1;
  local tmp110:4;
  tmp110 = tmp108 - tmp109;
  local tmp111:4;
  tmp111 = tmp107 << tmp110;
  local tmp112:8;
  tmp112 = zext(tmp111);
  local tmp113:8;
  tmp113 = tmp106 ^ tmp112;
  local tmp114:4;
  tmp114 = 1;
  local tmp115:4;
  tmp115 = 32;
  local tmp116:4;
  tmp116 = 1;
  local tmp117:4;
  tmp117 = tmp115 - tmp116;
  local tmp118:4;
  tmp118 = tmp114 << tmp117;
  local tmp119:8;
  tmp119 = zext(tmp118);
  local tmp120:8;
  tmp120 = tmp113 - tmp119;
  local tmp121:8;
  local tmp122:4;
  local tmp123:4;
  tmp123 = 1;
  local tmp124:4;
  tmp124 = 32;
  local tmp125:4;
  tmp125 = tmp123 * tmp124;
  local tmp126:8;
  tmp126 = zext(tmp125);
  local tmp127:8;
  tmp127 = A2_vavgwr_Rtt32 s>> tmp126;
  local tmp128:8;
  tmp128 = 4294967295;
  local tmp129:8;
  tmp129 = tmp127 & tmp128;
  tmp122 = tmp129:4;
  tmp121 = zext(tmp122);
  local tmp130:4;
  tmp130 = 1;
  local tmp131:4;
  tmp131 = 32;
  local tmp132:4;
  tmp132 = tmp130 << tmp131;
  local tmp133:4;
  tmp133 = 1;
  local tmp134:4;
  tmp134 = tmp132 - tmp133;
  local tmp135:8;
  tmp135 = zext(tmp134);
  local tmp136:8;
  tmp136 = tmp121 & tmp135;
  local tmp137:4;
  tmp137 = 1;
  local tmp138:4;
  tmp138 = 32;
  local tmp139:4;
  tmp139 = 1;
  local tmp140:4;
  tmp140 = tmp138 - tmp139;
  local tmp141:4;
  tmp141 = tmp137 << tmp140;
  local tmp142:8;
  tmp142 = zext(tmp141);
  local tmp143:8;
  tmp143 = tmp136 ^ tmp142;
  local tmp144:4;
  tmp144 = 1;
  local tmp145:4;
  tmp145 = 32;
  local tmp146:4;
  tmp146 = 1;
  local tmp147:4;
  tmp147 = tmp145 - tmp146;
  local tmp148:4;
  tmp148 = tmp144 << tmp147;
  local tmp149:8;
  tmp149 = zext(tmp148);
  local tmp150:8;
  tmp150 = tmp143 - tmp149;
  local tmp151:8;
  tmp151 = tmp120 + tmp150;
  local tmp152:4;
  tmp152 = 1;
  local tmp153:8;
  tmp153 = zext(tmp152);
  local tmp154:8;
  tmp154 = tmp151 + tmp153;
  local tmp155:4;
  tmp155 = 1;
  local tmp156:8;
  tmp156 = zext(tmp155);
  local tmp157:8;
  tmp157 = tmp154 s>> tmp156;
  local tmp158:8;
  tmp158 = 4294967295;
  local tmp159:8;
  tmp159 = tmp157 & tmp158;
  local tmp160:4;
  tmp160 = 1;
  local tmp161:4;
  tmp161 = 32;
  local tmp162:4;
  tmp162 = tmp160 * tmp161;
  local tmp163:8;
  tmp163 = zext(tmp162);
  local tmp164:8;
  tmp164 = tmp159 << tmp163;
  local tmp165:8;
  tmp165 = tmp90 | tmp164;
  A2_vavgwr_Rdd32 = tmp165;
}

:A2_vnavgwr A2_vnavgwr_Rdd32 A2_vnavgwr_Rtt32 A2_vnavgwr_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vnavgwr_Rdd32 & A2_vnavgwr_Rtt32 & A2_vnavgwr_Rss32 unimpl

:A2_vavgwcr A2_vavgwcr_Rdd32 A2_vavgwcr_Rss32 A2_vavgwcr_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vavgwcr_Rdd32 & A2_vavgwcr_Rss32 & A2_vavgwcr_Rtt32 unimpl

:A2_vnavgwcr A2_vnavgwcr_Rdd32 A2_vnavgwcr_Rtt32 A2_vnavgwcr_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vnavgwcr_Rdd32 & A2_vnavgwcr_Rtt32 & A2_vnavgwcr_Rss32 unimpl

:A2_vavghcr A2_vavghcr_Rdd32 A2_vavghcr_Rss32 A2_vavghcr_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vavghcr_Rdd32 & A2_vavghcr_Rss32 & A2_vavghcr_Rtt32 unimpl

:A2_vnavghcr A2_vnavghcr_Rdd32 A2_vnavghcr_Rtt32 A2_vnavghcr_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vnavghcr_Rdd32 & A2_vnavghcr_Rtt32 & A2_vnavghcr_Rss32 unimpl

:A2_vavguw A2_vavguw_Rdd32 A2_vavguw_Rss32 A2_vavguw_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vavguw_Rdd32 & A2_vavguw_Rss32 & A2_vavguw_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vavguw_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:4;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 32;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vavguw_Rss32 s>> tmp13;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = tmp14 & tmp15;
  tmp9 = tmp16:4;
  tmp8 = sext(tmp9);
  local tmp17:4;
  tmp17 = 1;
  local tmp18:4;
  tmp18 = 32;
  local tmp19:4;
  tmp19 = tmp17 << tmp18;
  local tmp20:4;
  tmp20 = 1;
  local tmp21:4;
  tmp21 = tmp19 - tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp8 & tmp22;
  local tmp24:8;
  local tmp25:4;
  local tmp26:4;
  tmp26 = 0;
  local tmp27:4;
  tmp27 = 32;
  local tmp28:4;
  tmp28 = tmp26 * tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = A2_vavguw_Rtt32 s>> tmp29;
  local tmp31:8;
  tmp31 = 4294967295;
  local tmp32:8;
  tmp32 = tmp30 & tmp31;
  tmp25 = tmp32:4;
  tmp24 = sext(tmp25);
  local tmp33:4;
  tmp33 = 1;
  local tmp34:4;
  tmp34 = 32;
  local tmp35:4;
  tmp35 = tmp33 << tmp34;
  local tmp36:4;
  tmp36 = 1;
  local tmp37:4;
  tmp37 = tmp35 - tmp36;
  local tmp38:8;
  tmp38 = zext(tmp37);
  local tmp39:8;
  tmp39 = tmp24 & tmp38;
  local tmp40:8;
  tmp40 = tmp23 + tmp39;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:8;
  tmp42 = zext(tmp41);
  local tmp43:8;
  tmp43 = tmp40 s>> tmp42;
  local tmp44:8;
  tmp44 = 4294967295;
  local tmp45:8;
  tmp45 = tmp43 & tmp44;
  local tmp46:4;
  tmp46 = 0;
  local tmp47:4;
  tmp47 = 32;
  local tmp48:4;
  tmp48 = tmp46 * tmp47;
  local tmp49:8;
  tmp49 = zext(tmp48);
  local tmp50:8;
  tmp50 = tmp45 << tmp49;
  local tmp51:8;
  tmp51 = tmp7 | tmp50;
  A2_vavguw_Rdd32 = tmp51;
  local tmp52:8;
  tmp52 = 4294967295;
  local tmp53:4;
  tmp53 = 1;
  local tmp54:4;
  tmp54 = 32;
  local tmp55:4;
  tmp55 = tmp53 * tmp54;
  local tmp56:8;
  tmp56 = zext(tmp55);
  local tmp57:8;
  tmp57 = tmp52 << tmp56;
  local tmp58:8;
  tmp58 = ~ tmp57;
  local tmp59:8;
  tmp59 = A2_vavguw_Rdd32 & tmp58;
  local tmp60:8;
  local tmp61:4;
  local tmp62:4;
  tmp62 = 1;
  local tmp63:4;
  tmp63 = 32;
  local tmp64:4;
  tmp64 = tmp62 * tmp63;
  local tmp65:8;
  tmp65 = zext(tmp64);
  local tmp66:8;
  tmp66 = A2_vavguw_Rss32 s>> tmp65;
  local tmp67:8;
  tmp67 = 4294967295;
  local tmp68:8;
  tmp68 = tmp66 & tmp67;
  tmp61 = tmp68:4;
  tmp60 = sext(tmp61);
  local tmp69:4;
  tmp69 = 1;
  local tmp70:4;
  tmp70 = 32;
  local tmp71:4;
  tmp71 = tmp69 << tmp70;
  local tmp72:4;
  tmp72 = 1;
  local tmp73:4;
  tmp73 = tmp71 - tmp72;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = tmp60 & tmp74;
  local tmp76:8;
  local tmp77:4;
  local tmp78:4;
  tmp78 = 1;
  local tmp79:4;
  tmp79 = 32;
  local tmp80:4;
  tmp80 = tmp78 * tmp79;
  local tmp81:8;
  tmp81 = zext(tmp80);
  local tmp82:8;
  tmp82 = A2_vavguw_Rtt32 s>> tmp81;
  local tmp83:8;
  tmp83 = 4294967295;
  local tmp84:8;
  tmp84 = tmp82 & tmp83;
  tmp77 = tmp84:4;
  tmp76 = sext(tmp77);
  local tmp85:4;
  tmp85 = 1;
  local tmp86:4;
  tmp86 = 32;
  local tmp87:4;
  tmp87 = tmp85 << tmp86;
  local tmp88:4;
  tmp88 = 1;
  local tmp89:4;
  tmp89 = tmp87 - tmp88;
  local tmp90:8;
  tmp90 = zext(tmp89);
  local tmp91:8;
  tmp91 = tmp76 & tmp90;
  local tmp92:8;
  tmp92 = tmp75 + tmp91;
  local tmp93:4;
  tmp93 = 1;
  local tmp94:8;
  tmp94 = zext(tmp93);
  local tmp95:8;
  tmp95 = tmp92 s>> tmp94;
  local tmp96:8;
  tmp96 = 4294967295;
  local tmp97:8;
  tmp97 = tmp95 & tmp96;
  local tmp98:4;
  tmp98 = 1;
  local tmp99:4;
  tmp99 = 32;
  local tmp100:4;
  tmp100 = tmp98 * tmp99;
  local tmp101:8;
  tmp101 = zext(tmp100);
  local tmp102:8;
  tmp102 = tmp97 << tmp101;
  local tmp103:8;
  tmp103 = tmp59 | tmp102;
  A2_vavguw_Rdd32 = tmp103;
}

:A2_vavguwr A2_vavguwr_Rdd32 A2_vavguwr_Rss32 A2_vavguwr_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vavguwr_Rdd32 & A2_vavguwr_Rss32 & A2_vavguwr_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vavguwr_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:4;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 32;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vavguwr_Rss32 s>> tmp13;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = tmp14 & tmp15;
  tmp9 = tmp16:4;
  tmp8 = sext(tmp9);
  local tmp17:4;
  tmp17 = 1;
  local tmp18:4;
  tmp18 = 32;
  local tmp19:4;
  tmp19 = tmp17 << tmp18;
  local tmp20:4;
  tmp20 = 1;
  local tmp21:4;
  tmp21 = tmp19 - tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp8 & tmp22;
  local tmp24:8;
  local tmp25:4;
  local tmp26:4;
  tmp26 = 0;
  local tmp27:4;
  tmp27 = 32;
  local tmp28:4;
  tmp28 = tmp26 * tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = A2_vavguwr_Rtt32 s>> tmp29;
  local tmp31:8;
  tmp31 = 4294967295;
  local tmp32:8;
  tmp32 = tmp30 & tmp31;
  tmp25 = tmp32:4;
  tmp24 = sext(tmp25);
  local tmp33:4;
  tmp33 = 1;
  local tmp34:4;
  tmp34 = 32;
  local tmp35:4;
  tmp35 = tmp33 << tmp34;
  local tmp36:4;
  tmp36 = 1;
  local tmp37:4;
  tmp37 = tmp35 - tmp36;
  local tmp38:8;
  tmp38 = zext(tmp37);
  local tmp39:8;
  tmp39 = tmp24 & tmp38;
  local tmp40:8;
  tmp40 = tmp23 + tmp39;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:8;
  tmp42 = zext(tmp41);
  local tmp43:8;
  tmp43 = tmp40 + tmp42;
  local tmp44:4;
  tmp44 = 1;
  local tmp45:8;
  tmp45 = zext(tmp44);
  local tmp46:8;
  tmp46 = tmp43 s>> tmp45;
  local tmp47:8;
  tmp47 = 4294967295;
  local tmp48:8;
  tmp48 = tmp46 & tmp47;
  local tmp49:4;
  tmp49 = 0;
  local tmp50:4;
  tmp50 = 32;
  local tmp51:4;
  tmp51 = tmp49 * tmp50;
  local tmp52:8;
  tmp52 = zext(tmp51);
  local tmp53:8;
  tmp53 = tmp48 << tmp52;
  local tmp54:8;
  tmp54 = tmp7 | tmp53;
  A2_vavguwr_Rdd32 = tmp54;
  local tmp55:8;
  tmp55 = 4294967295;
  local tmp56:4;
  tmp56 = 1;
  local tmp57:4;
  tmp57 = 32;
  local tmp58:4;
  tmp58 = tmp56 * tmp57;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = tmp55 << tmp59;
  local tmp61:8;
  tmp61 = ~ tmp60;
  local tmp62:8;
  tmp62 = A2_vavguwr_Rdd32 & tmp61;
  local tmp63:8;
  local tmp64:4;
  local tmp65:4;
  tmp65 = 1;
  local tmp66:4;
  tmp66 = 32;
  local tmp67:4;
  tmp67 = tmp65 * tmp66;
  local tmp68:8;
  tmp68 = zext(tmp67);
  local tmp69:8;
  tmp69 = A2_vavguwr_Rss32 s>> tmp68;
  local tmp70:8;
  tmp70 = 4294967295;
  local tmp71:8;
  tmp71 = tmp69 & tmp70;
  tmp64 = tmp71:4;
  tmp63 = sext(tmp64);
  local tmp72:4;
  tmp72 = 1;
  local tmp73:4;
  tmp73 = 32;
  local tmp74:4;
  tmp74 = tmp72 << tmp73;
  local tmp75:4;
  tmp75 = 1;
  local tmp76:4;
  tmp76 = tmp74 - tmp75;
  local tmp77:8;
  tmp77 = zext(tmp76);
  local tmp78:8;
  tmp78 = tmp63 & tmp77;
  local tmp79:8;
  local tmp80:4;
  local tmp81:4;
  tmp81 = 1;
  local tmp82:4;
  tmp82 = 32;
  local tmp83:4;
  tmp83 = tmp81 * tmp82;
  local tmp84:8;
  tmp84 = zext(tmp83);
  local tmp85:8;
  tmp85 = A2_vavguwr_Rtt32 s>> tmp84;
  local tmp86:8;
  tmp86 = 4294967295;
  local tmp87:8;
  tmp87 = tmp85 & tmp86;
  tmp80 = tmp87:4;
  tmp79 = sext(tmp80);
  local tmp88:4;
  tmp88 = 1;
  local tmp89:4;
  tmp89 = 32;
  local tmp90:4;
  tmp90 = tmp88 << tmp89;
  local tmp91:4;
  tmp91 = 1;
  local tmp92:4;
  tmp92 = tmp90 - tmp91;
  local tmp93:8;
  tmp93 = zext(tmp92);
  local tmp94:8;
  tmp94 = tmp79 & tmp93;
  local tmp95:8;
  tmp95 = tmp78 + tmp94;
  local tmp96:4;
  tmp96 = 1;
  local tmp97:8;
  tmp97 = zext(tmp96);
  local tmp98:8;
  tmp98 = tmp95 + tmp97;
  local tmp99:4;
  tmp99 = 1;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = tmp98 s>> tmp100;
  local tmp102:8;
  tmp102 = 4294967295;
  local tmp103:8;
  tmp103 = tmp101 & tmp102;
  local tmp104:4;
  tmp104 = 1;
  local tmp105:4;
  tmp105 = 32;
  local tmp106:4;
  tmp106 = tmp104 * tmp105;
  local tmp107:8;
  tmp107 = zext(tmp106);
  local tmp108:8;
  tmp108 = tmp103 << tmp107;
  local tmp109:8;
  tmp109 = tmp62 | tmp108;
  A2_vavguwr_Rdd32 = tmp109;
}

:A2_vavgubr A2_vavgubr_Rdd32 A2_vavgubr_Rss32 A2_vavgubr_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vavgubr_Rdd32 & A2_vavgubr_Rss32 & A2_vavgubr_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vavgubr_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:1;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 8;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vavgubr_Rss32 s>> tmp13;
  local tmp15:4;
  tmp15 = 255;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:1;
  local tmp18:1;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 8;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vavgubr_Rtt32 s>> tmp22;
  local tmp24:4;
  tmp24 = 255;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:1;
  local tmp27:1;
  tmp27 = tmp9 + tmp18;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = zext(tmp27);
  local tmp30:4;
  tmp30 = tmp29 + tmp28;
  local tmp31:4;
  tmp31 = 1;
  local tmp32:4;
  tmp32 = tmp30 s>> tmp31;
  local tmp33:8;
  tmp33 = 255;
  local tmp34:8;
  tmp34 = zext(tmp32);
  local tmp35:8;
  tmp35 = tmp34 & tmp33;
  tmp8 = tmp35;
  local tmp36:4;
  tmp36 = 0;
  local tmp37:4;
  tmp37 = 8;
  local tmp38:4;
  tmp38 = tmp36 * tmp37;
  local tmp39:8;
  tmp39 = zext(tmp38);
  local tmp40:8;
  tmp40 = tmp8 << tmp39;
  local tmp41:8;
  tmp41 = tmp7 | tmp40;
  A2_vavgubr_Rdd32 = tmp41;
  local tmp42:8;
  tmp42 = 255;
  local tmp43:4;
  tmp43 = 1;
  local tmp44:4;
  tmp44 = 8;
  local tmp45:4;
  tmp45 = tmp43 * tmp44;
  local tmp46:8;
  tmp46 = zext(tmp45);
  local tmp47:8;
  tmp47 = tmp42 << tmp46;
  local tmp48:8;
  tmp48 = ~ tmp47;
  local tmp49:8;
  tmp49 = A2_vavgubr_Rdd32 & tmp48;
  local tmp50:8;
  local tmp51:1;
  local tmp52:4;
  tmp52 = 1;
  local tmp53:4;
  tmp53 = 8;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = A2_vavgubr_Rss32 s>> tmp55;
  local tmp57:4;
  tmp57 = 255;
  local tmp58:8;
  tmp58 = zext(tmp57);
  local tmp59:8;
  tmp59 = tmp56 & tmp58;
  tmp51 = tmp59:1;
  local tmp60:1;
  local tmp61:4;
  tmp61 = 1;
  local tmp62:4;
  tmp62 = 8;
  local tmp63:4;
  tmp63 = tmp61 * tmp62;
  local tmp64:8;
  tmp64 = zext(tmp63);
  local tmp65:8;
  tmp65 = A2_vavgubr_Rtt32 s>> tmp64;
  local tmp66:4;
  tmp66 = 255;
  local tmp67:8;
  tmp67 = zext(tmp66);
  local tmp68:8;
  tmp68 = tmp65 & tmp67;
  tmp60 = tmp68:1;
  local tmp69:1;
  tmp69 = tmp51 + tmp60;
  local tmp70:4;
  tmp70 = 1;
  local tmp71:4;
  tmp71 = zext(tmp69);
  local tmp72:4;
  tmp72 = tmp71 + tmp70;
  local tmp73:4;
  tmp73 = 1;
  local tmp74:4;
  tmp74 = tmp72 s>> tmp73;
  local tmp75:8;
  tmp75 = 255;
  local tmp76:8;
  tmp76 = zext(tmp74);
  local tmp77:8;
  tmp77 = tmp76 & tmp75;
  tmp50 = tmp77;
  local tmp78:4;
  tmp78 = 1;
  local tmp79:4;
  tmp79 = 8;
  local tmp80:4;
  tmp80 = tmp78 * tmp79;
  local tmp81:8;
  tmp81 = zext(tmp80);
  local tmp82:8;
  tmp82 = tmp50 << tmp81;
  local tmp83:8;
  tmp83 = tmp49 | tmp82;
  A2_vavgubr_Rdd32 = tmp83;
  local tmp84:8;
  tmp84 = 255;
  local tmp85:4;
  tmp85 = 2;
  local tmp86:4;
  tmp86 = 8;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:8;
  tmp88 = zext(tmp87);
  local tmp89:8;
  tmp89 = tmp84 << tmp88;
  local tmp90:8;
  tmp90 = ~ tmp89;
  local tmp91:8;
  tmp91 = A2_vavgubr_Rdd32 & tmp90;
  local tmp92:8;
  local tmp93:1;
  local tmp94:4;
  tmp94 = 2;
  local tmp95:4;
  tmp95 = 8;
  local tmp96:4;
  tmp96 = tmp94 * tmp95;
  local tmp97:8;
  tmp97 = zext(tmp96);
  local tmp98:8;
  tmp98 = A2_vavgubr_Rss32 s>> tmp97;
  local tmp99:4;
  tmp99 = 255;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = tmp98 & tmp100;
  tmp93 = tmp101:1;
  local tmp102:1;
  local tmp103:4;
  tmp103 = 2;
  local tmp104:4;
  tmp104 = 8;
  local tmp105:4;
  tmp105 = tmp103 * tmp104;
  local tmp106:8;
  tmp106 = zext(tmp105);
  local tmp107:8;
  tmp107 = A2_vavgubr_Rtt32 s>> tmp106;
  local tmp108:4;
  tmp108 = 255;
  local tmp109:8;
  tmp109 = zext(tmp108);
  local tmp110:8;
  tmp110 = tmp107 & tmp109;
  tmp102 = tmp110:1;
  local tmp111:1;
  tmp111 = tmp93 + tmp102;
  local tmp112:4;
  tmp112 = 1;
  local tmp113:4;
  tmp113 = zext(tmp111);
  local tmp114:4;
  tmp114 = tmp113 + tmp112;
  local tmp115:4;
  tmp115 = 1;
  local tmp116:4;
  tmp116 = tmp114 s>> tmp115;
  local tmp117:8;
  tmp117 = 255;
  local tmp118:8;
  tmp118 = zext(tmp116);
  local tmp119:8;
  tmp119 = tmp118 & tmp117;
  tmp92 = tmp119;
  local tmp120:4;
  tmp120 = 2;
  local tmp121:4;
  tmp121 = 8;
  local tmp122:4;
  tmp122 = tmp120 * tmp121;
  local tmp123:8;
  tmp123 = zext(tmp122);
  local tmp124:8;
  tmp124 = tmp92 << tmp123;
  local tmp125:8;
  tmp125 = tmp91 | tmp124;
  A2_vavgubr_Rdd32 = tmp125;
  local tmp126:8;
  tmp126 = 255;
  local tmp127:4;
  tmp127 = 3;
  local tmp128:4;
  tmp128 = 8;
  local tmp129:4;
  tmp129 = tmp127 * tmp128;
  local tmp130:8;
  tmp130 = zext(tmp129);
  local tmp131:8;
  tmp131 = tmp126 << tmp130;
  local tmp132:8;
  tmp132 = ~ tmp131;
  local tmp133:8;
  tmp133 = A2_vavgubr_Rdd32 & tmp132;
  local tmp134:8;
  local tmp135:1;
  local tmp136:4;
  tmp136 = 3;
  local tmp137:4;
  tmp137 = 8;
  local tmp138:4;
  tmp138 = tmp136 * tmp137;
  local tmp139:8;
  tmp139 = zext(tmp138);
  local tmp140:8;
  tmp140 = A2_vavgubr_Rss32 s>> tmp139;
  local tmp141:4;
  tmp141 = 255;
  local tmp142:8;
  tmp142 = zext(tmp141);
  local tmp143:8;
  tmp143 = tmp140 & tmp142;
  tmp135 = tmp143:1;
  local tmp144:1;
  local tmp145:4;
  tmp145 = 3;
  local tmp146:4;
  tmp146 = 8;
  local tmp147:4;
  tmp147 = tmp145 * tmp146;
  local tmp148:8;
  tmp148 = zext(tmp147);
  local tmp149:8;
  tmp149 = A2_vavgubr_Rtt32 s>> tmp148;
  local tmp150:4;
  tmp150 = 255;
  local tmp151:8;
  tmp151 = zext(tmp150);
  local tmp152:8;
  tmp152 = tmp149 & tmp151;
  tmp144 = tmp152:1;
  local tmp153:1;
  tmp153 = tmp135 + tmp144;
  local tmp154:4;
  tmp154 = 1;
  local tmp155:4;
  tmp155 = zext(tmp153);
  local tmp156:4;
  tmp156 = tmp155 + tmp154;
  local tmp157:4;
  tmp157 = 1;
  local tmp158:4;
  tmp158 = tmp156 s>> tmp157;
  local tmp159:8;
  tmp159 = 255;
  local tmp160:8;
  tmp160 = zext(tmp158);
  local tmp161:8;
  tmp161 = tmp160 & tmp159;
  tmp134 = tmp161;
  local tmp162:4;
  tmp162 = 3;
  local tmp163:4;
  tmp163 = 8;
  local tmp164:4;
  tmp164 = tmp162 * tmp163;
  local tmp165:8;
  tmp165 = zext(tmp164);
  local tmp166:8;
  tmp166 = tmp134 << tmp165;
  local tmp167:8;
  tmp167 = tmp133 | tmp166;
  A2_vavgubr_Rdd32 = tmp167;
  local tmp168:8;
  tmp168 = 255;
  local tmp169:4;
  tmp169 = 4;
  local tmp170:4;
  tmp170 = 8;
  local tmp171:4;
  tmp171 = tmp169 * tmp170;
  local tmp172:8;
  tmp172 = zext(tmp171);
  local tmp173:8;
  tmp173 = tmp168 << tmp172;
  local tmp174:8;
  tmp174 = ~ tmp173;
  local tmp175:8;
  tmp175 = A2_vavgubr_Rdd32 & tmp174;
  local tmp176:8;
  local tmp177:1;
  local tmp178:4;
  tmp178 = 4;
  local tmp179:4;
  tmp179 = 8;
  local tmp180:4;
  tmp180 = tmp178 * tmp179;
  local tmp181:8;
  tmp181 = zext(tmp180);
  local tmp182:8;
  tmp182 = A2_vavgubr_Rss32 s>> tmp181;
  local tmp183:4;
  tmp183 = 255;
  local tmp184:8;
  tmp184 = zext(tmp183);
  local tmp185:8;
  tmp185 = tmp182 & tmp184;
  tmp177 = tmp185:1;
  local tmp186:1;
  local tmp187:4;
  tmp187 = 4;
  local tmp188:4;
  tmp188 = 8;
  local tmp189:4;
  tmp189 = tmp187 * tmp188;
  local tmp190:8;
  tmp190 = zext(tmp189);
  local tmp191:8;
  tmp191 = A2_vavgubr_Rtt32 s>> tmp190;
  local tmp192:4;
  tmp192 = 255;
  local tmp193:8;
  tmp193 = zext(tmp192);
  local tmp194:8;
  tmp194 = tmp191 & tmp193;
  tmp186 = tmp194:1;
  local tmp195:1;
  tmp195 = tmp177 + tmp186;
  local tmp196:4;
  tmp196 = 1;
  local tmp197:4;
  tmp197 = zext(tmp195);
  local tmp198:4;
  tmp198 = tmp197 + tmp196;
  local tmp199:4;
  tmp199 = 1;
  local tmp200:4;
  tmp200 = tmp198 s>> tmp199;
  local tmp201:8;
  tmp201 = 255;
  local tmp202:8;
  tmp202 = zext(tmp200);
  local tmp203:8;
  tmp203 = tmp202 & tmp201;
  tmp176 = tmp203;
  local tmp204:4;
  tmp204 = 4;
  local tmp205:4;
  tmp205 = 8;
  local tmp206:4;
  tmp206 = tmp204 * tmp205;
  local tmp207:8;
  tmp207 = zext(tmp206);
  local tmp208:8;
  tmp208 = tmp176 << tmp207;
  local tmp209:8;
  tmp209 = tmp175 | tmp208;
  A2_vavgubr_Rdd32 = tmp209;
  local tmp210:8;
  tmp210 = 255;
  local tmp211:4;
  tmp211 = 5;
  local tmp212:4;
  tmp212 = 8;
  local tmp213:4;
  tmp213 = tmp211 * tmp212;
  local tmp214:8;
  tmp214 = zext(tmp213);
  local tmp215:8;
  tmp215 = tmp210 << tmp214;
  local tmp216:8;
  tmp216 = ~ tmp215;
  local tmp217:8;
  tmp217 = A2_vavgubr_Rdd32 & tmp216;
  local tmp218:8;
  local tmp219:1;
  local tmp220:4;
  tmp220 = 5;
  local tmp221:4;
  tmp221 = 8;
  local tmp222:4;
  tmp222 = tmp220 * tmp221;
  local tmp223:8;
  tmp223 = zext(tmp222);
  local tmp224:8;
  tmp224 = A2_vavgubr_Rss32 s>> tmp223;
  local tmp225:4;
  tmp225 = 255;
  local tmp226:8;
  tmp226 = zext(tmp225);
  local tmp227:8;
  tmp227 = tmp224 & tmp226;
  tmp219 = tmp227:1;
  local tmp228:1;
  local tmp229:4;
  tmp229 = 5;
  local tmp230:4;
  tmp230 = 8;
  local tmp231:4;
  tmp231 = tmp229 * tmp230;
  local tmp232:8;
  tmp232 = zext(tmp231);
  local tmp233:8;
  tmp233 = A2_vavgubr_Rtt32 s>> tmp232;
  local tmp234:4;
  tmp234 = 255;
  local tmp235:8;
  tmp235 = zext(tmp234);
  local tmp236:8;
  tmp236 = tmp233 & tmp235;
  tmp228 = tmp236:1;
  local tmp237:1;
  tmp237 = tmp219 + tmp228;
  local tmp238:4;
  tmp238 = 1;
  local tmp239:4;
  tmp239 = zext(tmp237);
  local tmp240:4;
  tmp240 = tmp239 + tmp238;
  local tmp241:4;
  tmp241 = 1;
  local tmp242:4;
  tmp242 = tmp240 s>> tmp241;
  local tmp243:8;
  tmp243 = 255;
  local tmp244:8;
  tmp244 = zext(tmp242);
  local tmp245:8;
  tmp245 = tmp244 & tmp243;
  tmp218 = tmp245;
  local tmp246:4;
  tmp246 = 5;
  local tmp247:4;
  tmp247 = 8;
  local tmp248:4;
  tmp248 = tmp246 * tmp247;
  local tmp249:8;
  tmp249 = zext(tmp248);
  local tmp250:8;
  tmp250 = tmp218 << tmp249;
  local tmp251:8;
  tmp251 = tmp217 | tmp250;
  A2_vavgubr_Rdd32 = tmp251;
  local tmp252:8;
  tmp252 = 255;
  local tmp253:4;
  tmp253 = 6;
  local tmp254:4;
  tmp254 = 8;
  local tmp255:4;
  tmp255 = tmp253 * tmp254;
  local tmp256:8;
  tmp256 = zext(tmp255);
  local tmp257:8;
  tmp257 = tmp252 << tmp256;
  local tmp258:8;
  tmp258 = ~ tmp257;
  local tmp259:8;
  tmp259 = A2_vavgubr_Rdd32 & tmp258;
  local tmp260:8;
  local tmp261:1;
  local tmp262:4;
  tmp262 = 6;
  local tmp263:4;
  tmp263 = 8;
  local tmp264:4;
  tmp264 = tmp262 * tmp263;
  local tmp265:8;
  tmp265 = zext(tmp264);
  local tmp266:8;
  tmp266 = A2_vavgubr_Rss32 s>> tmp265;
  local tmp267:4;
  tmp267 = 255;
  local tmp268:8;
  tmp268 = zext(tmp267);
  local tmp269:8;
  tmp269 = tmp266 & tmp268;
  tmp261 = tmp269:1;
  local tmp270:1;
  local tmp271:4;
  tmp271 = 6;
  local tmp272:4;
  tmp272 = 8;
  local tmp273:4;
  tmp273 = tmp271 * tmp272;
  local tmp274:8;
  tmp274 = zext(tmp273);
  local tmp275:8;
  tmp275 = A2_vavgubr_Rtt32 s>> tmp274;
  local tmp276:4;
  tmp276 = 255;
  local tmp277:8;
  tmp277 = zext(tmp276);
  local tmp278:8;
  tmp278 = tmp275 & tmp277;
  tmp270 = tmp278:1;
  local tmp279:1;
  tmp279 = tmp261 + tmp270;
  local tmp280:4;
  tmp280 = 1;
  local tmp281:4;
  tmp281 = zext(tmp279);
  local tmp282:4;
  tmp282 = tmp281 + tmp280;
  local tmp283:4;
  tmp283 = 1;
  local tmp284:4;
  tmp284 = tmp282 s>> tmp283;
  local tmp285:8;
  tmp285 = 255;
  local tmp286:8;
  tmp286 = zext(tmp284);
  local tmp287:8;
  tmp287 = tmp286 & tmp285;
  tmp260 = tmp287;
  local tmp288:4;
  tmp288 = 6;
  local tmp289:4;
  tmp289 = 8;
  local tmp290:4;
  tmp290 = tmp288 * tmp289;
  local tmp291:8;
  tmp291 = zext(tmp290);
  local tmp292:8;
  tmp292 = tmp260 << tmp291;
  local tmp293:8;
  tmp293 = tmp259 | tmp292;
  A2_vavgubr_Rdd32 = tmp293;
  local tmp294:8;
  tmp294 = 255;
  local tmp295:4;
  tmp295 = 7;
  local tmp296:4;
  tmp296 = 8;
  local tmp297:4;
  tmp297 = tmp295 * tmp296;
  local tmp298:8;
  tmp298 = zext(tmp297);
  local tmp299:8;
  tmp299 = tmp294 << tmp298;
  local tmp300:8;
  tmp300 = ~ tmp299;
  local tmp301:8;
  tmp301 = A2_vavgubr_Rdd32 & tmp300;
  local tmp302:8;
  local tmp303:1;
  local tmp304:4;
  tmp304 = 7;
  local tmp305:4;
  tmp305 = 8;
  local tmp306:4;
  tmp306 = tmp304 * tmp305;
  local tmp307:8;
  tmp307 = zext(tmp306);
  local tmp308:8;
  tmp308 = A2_vavgubr_Rss32 s>> tmp307;
  local tmp309:4;
  tmp309 = 255;
  local tmp310:8;
  tmp310 = zext(tmp309);
  local tmp311:8;
  tmp311 = tmp308 & tmp310;
  tmp303 = tmp311:1;
  local tmp312:1;
  local tmp313:4;
  tmp313 = 7;
  local tmp314:4;
  tmp314 = 8;
  local tmp315:4;
  tmp315 = tmp313 * tmp314;
  local tmp316:8;
  tmp316 = zext(tmp315);
  local tmp317:8;
  tmp317 = A2_vavgubr_Rtt32 s>> tmp316;
  local tmp318:4;
  tmp318 = 255;
  local tmp319:8;
  tmp319 = zext(tmp318);
  local tmp320:8;
  tmp320 = tmp317 & tmp319;
  tmp312 = tmp320:1;
  local tmp321:1;
  tmp321 = tmp303 + tmp312;
  local tmp322:4;
  tmp322 = 1;
  local tmp323:4;
  tmp323 = zext(tmp321);
  local tmp324:4;
  tmp324 = tmp323 + tmp322;
  local tmp325:4;
  tmp325 = 1;
  local tmp326:4;
  tmp326 = tmp324 s>> tmp325;
  local tmp327:8;
  tmp327 = 255;
  local tmp328:8;
  tmp328 = zext(tmp326);
  local tmp329:8;
  tmp329 = tmp328 & tmp327;
  tmp302 = tmp329;
  local tmp330:4;
  tmp330 = 7;
  local tmp331:4;
  tmp331 = 8;
  local tmp332:4;
  tmp332 = tmp330 * tmp331;
  local tmp333:8;
  tmp333 = zext(tmp332);
  local tmp334:8;
  tmp334 = tmp302 << tmp333;
  local tmp335:8;
  tmp335 = tmp301 | tmp334;
  A2_vavgubr_Rdd32 = tmp335;
}

:A2_vavguhr A2_vavguhr_Rdd32 A2_vavguhr_Rss32 A2_vavguhr_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vavguhr_Rdd32 & A2_vavguhr_Rss32 & A2_vavguhr_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vavguhr_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vavguhr_Rss32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:2;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vavguhr_Rtt32 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:2;
  local tmp27:2;
  tmp27 = tmp9 + tmp18;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = zext(tmp27);
  local tmp30:4;
  tmp30 = tmp29 + tmp28;
  local tmp31:4;
  tmp31 = 1;
  local tmp32:4;
  tmp32 = tmp30 s>> tmp31;
  local tmp33:4;
  tmp33 = 65535;
  local tmp34:4;
  tmp34 = tmp32 & tmp33;
  tmp8 = sext(tmp34);
  local tmp35:4;
  tmp35 = 0;
  local tmp36:4;
  tmp36 = 16;
  local tmp37:4;
  tmp37 = tmp35 * tmp36;
  local tmp38:8;
  tmp38 = zext(tmp37);
  local tmp39:8;
  tmp39 = tmp8 << tmp38;
  local tmp40:8;
  tmp40 = tmp7 | tmp39;
  A2_vavguhr_Rdd32 = tmp40;
  local tmp41:8;
  tmp41 = 65535;
  local tmp42:4;
  tmp42 = 1;
  local tmp43:4;
  tmp43 = 16;
  local tmp44:4;
  tmp44 = tmp42 * tmp43;
  local tmp45:8;
  tmp45 = zext(tmp44);
  local tmp46:8;
  tmp46 = tmp41 << tmp45;
  local tmp47:8;
  tmp47 = ~ tmp46;
  local tmp48:8;
  tmp48 = A2_vavguhr_Rdd32 & tmp47;
  local tmp49:8;
  local tmp50:2;
  local tmp51:4;
  tmp51 = 1;
  local tmp52:4;
  tmp52 = 16;
  local tmp53:4;
  tmp53 = tmp51 * tmp52;
  local tmp54:8;
  tmp54 = zext(tmp53);
  local tmp55:8;
  tmp55 = A2_vavguhr_Rss32 s>> tmp54;
  local tmp56:4;
  tmp56 = 65535;
  local tmp57:8;
  tmp57 = zext(tmp56);
  local tmp58:8;
  tmp58 = tmp55 & tmp57;
  tmp50 = tmp58:2;
  local tmp59:2;
  local tmp60:4;
  tmp60 = 1;
  local tmp61:4;
  tmp61 = 16;
  local tmp62:4;
  tmp62 = tmp60 * tmp61;
  local tmp63:8;
  tmp63 = zext(tmp62);
  local tmp64:8;
  tmp64 = A2_vavguhr_Rtt32 s>> tmp63;
  local tmp65:4;
  tmp65 = 65535;
  local tmp66:8;
  tmp66 = zext(tmp65);
  local tmp67:8;
  tmp67 = tmp64 & tmp66;
  tmp59 = tmp67:2;
  local tmp68:2;
  tmp68 = tmp50 + tmp59;
  local tmp69:4;
  tmp69 = 1;
  local tmp70:4;
  tmp70 = zext(tmp68);
  local tmp71:4;
  tmp71 = tmp70 + tmp69;
  local tmp72:4;
  tmp72 = 1;
  local tmp73:4;
  tmp73 = tmp71 s>> tmp72;
  local tmp74:4;
  tmp74 = 65535;
  local tmp75:4;
  tmp75 = tmp73 & tmp74;
  tmp49 = sext(tmp75);
  local tmp76:4;
  tmp76 = 1;
  local tmp77:4;
  tmp77 = 16;
  local tmp78:4;
  tmp78 = tmp76 * tmp77;
  local tmp79:8;
  tmp79 = zext(tmp78);
  local tmp80:8;
  tmp80 = tmp49 << tmp79;
  local tmp81:8;
  tmp81 = tmp48 | tmp80;
  A2_vavguhr_Rdd32 = tmp81;
  local tmp82:8;
  tmp82 = 65535;
  local tmp83:4;
  tmp83 = 2;
  local tmp84:4;
  tmp84 = 16;
  local tmp85:4;
  tmp85 = tmp83 * tmp84;
  local tmp86:8;
  tmp86 = zext(tmp85);
  local tmp87:8;
  tmp87 = tmp82 << tmp86;
  local tmp88:8;
  tmp88 = ~ tmp87;
  local tmp89:8;
  tmp89 = A2_vavguhr_Rdd32 & tmp88;
  local tmp90:8;
  local tmp91:2;
  local tmp92:4;
  tmp92 = 2;
  local tmp93:4;
  tmp93 = 16;
  local tmp94:4;
  tmp94 = tmp92 * tmp93;
  local tmp95:8;
  tmp95 = zext(tmp94);
  local tmp96:8;
  tmp96 = A2_vavguhr_Rss32 s>> tmp95;
  local tmp97:4;
  tmp97 = 65535;
  local tmp98:8;
  tmp98 = zext(tmp97);
  local tmp99:8;
  tmp99 = tmp96 & tmp98;
  tmp91 = tmp99:2;
  local tmp100:2;
  local tmp101:4;
  tmp101 = 2;
  local tmp102:4;
  tmp102 = 16;
  local tmp103:4;
  tmp103 = tmp101 * tmp102;
  local tmp104:8;
  tmp104 = zext(tmp103);
  local tmp105:8;
  tmp105 = A2_vavguhr_Rtt32 s>> tmp104;
  local tmp106:4;
  tmp106 = 65535;
  local tmp107:8;
  tmp107 = zext(tmp106);
  local tmp108:8;
  tmp108 = tmp105 & tmp107;
  tmp100 = tmp108:2;
  local tmp109:2;
  tmp109 = tmp91 + tmp100;
  local tmp110:4;
  tmp110 = 1;
  local tmp111:4;
  tmp111 = zext(tmp109);
  local tmp112:4;
  tmp112 = tmp111 + tmp110;
  local tmp113:4;
  tmp113 = 1;
  local tmp114:4;
  tmp114 = tmp112 s>> tmp113;
  local tmp115:4;
  tmp115 = 65535;
  local tmp116:4;
  tmp116 = tmp114 & tmp115;
  tmp90 = sext(tmp116);
  local tmp117:4;
  tmp117 = 2;
  local tmp118:4;
  tmp118 = 16;
  local tmp119:4;
  tmp119 = tmp117 * tmp118;
  local tmp120:8;
  tmp120 = zext(tmp119);
  local tmp121:8;
  tmp121 = tmp90 << tmp120;
  local tmp122:8;
  tmp122 = tmp89 | tmp121;
  A2_vavguhr_Rdd32 = tmp122;
  local tmp123:8;
  tmp123 = 65535;
  local tmp124:4;
  tmp124 = 3;
  local tmp125:4;
  tmp125 = 16;
  local tmp126:4;
  tmp126 = tmp124 * tmp125;
  local tmp127:8;
  tmp127 = zext(tmp126);
  local tmp128:8;
  tmp128 = tmp123 << tmp127;
  local tmp129:8;
  tmp129 = ~ tmp128;
  local tmp130:8;
  tmp130 = A2_vavguhr_Rdd32 & tmp129;
  local tmp131:8;
  local tmp132:2;
  local tmp133:4;
  tmp133 = 3;
  local tmp134:4;
  tmp134 = 16;
  local tmp135:4;
  tmp135 = tmp133 * tmp134;
  local tmp136:8;
  tmp136 = zext(tmp135);
  local tmp137:8;
  tmp137 = A2_vavguhr_Rss32 s>> tmp136;
  local tmp138:4;
  tmp138 = 65535;
  local tmp139:8;
  tmp139 = zext(tmp138);
  local tmp140:8;
  tmp140 = tmp137 & tmp139;
  tmp132 = tmp140:2;
  local tmp141:2;
  local tmp142:4;
  tmp142 = 3;
  local tmp143:4;
  tmp143 = 16;
  local tmp144:4;
  tmp144 = tmp142 * tmp143;
  local tmp145:8;
  tmp145 = zext(tmp144);
  local tmp146:8;
  tmp146 = A2_vavguhr_Rtt32 s>> tmp145;
  local tmp147:4;
  tmp147 = 65535;
  local tmp148:8;
  tmp148 = zext(tmp147);
  local tmp149:8;
  tmp149 = tmp146 & tmp148;
  tmp141 = tmp149:2;
  local tmp150:2;
  tmp150 = tmp132 + tmp141;
  local tmp151:4;
  tmp151 = 1;
  local tmp152:4;
  tmp152 = zext(tmp150);
  local tmp153:4;
  tmp153 = tmp152 + tmp151;
  local tmp154:4;
  tmp154 = 1;
  local tmp155:4;
  tmp155 = tmp153 s>> tmp154;
  local tmp156:4;
  tmp156 = 65535;
  local tmp157:4;
  tmp157 = tmp155 & tmp156;
  tmp131 = sext(tmp157);
  local tmp158:4;
  tmp158 = 3;
  local tmp159:4;
  tmp159 = 16;
  local tmp160:4;
  tmp160 = tmp158 * tmp159;
  local tmp161:8;
  tmp161 = zext(tmp160);
  local tmp162:8;
  tmp162 = tmp131 << tmp161;
  local tmp163:8;
  tmp163 = tmp130 | tmp162;
  A2_vavguhr_Rdd32 = tmp163;
}

:A2_vavghr A2_vavghr_Rdd32 A2_vavghr_Rss32 A2_vavghr_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vavghr_Rdd32 & A2_vavghr_Rss32 & A2_vavghr_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vavghr_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vavghr_Rss32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:2;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vavghr_Rtt32 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:2;
  local tmp27:2;
  tmp27 = tmp9 + tmp18;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = zext(tmp27);
  local tmp30:4;
  tmp30 = tmp29 + tmp28;
  local tmp31:4;
  tmp31 = 1;
  local tmp32:4;
  tmp32 = tmp30 s>> tmp31;
  local tmp33:4;
  tmp33 = 65535;
  local tmp34:4;
  tmp34 = tmp32 & tmp33;
  tmp8 = sext(tmp34);
  local tmp35:4;
  tmp35 = 0;
  local tmp36:4;
  tmp36 = 16;
  local tmp37:4;
  tmp37 = tmp35 * tmp36;
  local tmp38:8;
  tmp38 = zext(tmp37);
  local tmp39:8;
  tmp39 = tmp8 << tmp38;
  local tmp40:8;
  tmp40 = tmp7 | tmp39;
  A2_vavghr_Rdd32 = tmp40;
  local tmp41:8;
  tmp41 = 65535;
  local tmp42:4;
  tmp42 = 1;
  local tmp43:4;
  tmp43 = 16;
  local tmp44:4;
  tmp44 = tmp42 * tmp43;
  local tmp45:8;
  tmp45 = zext(tmp44);
  local tmp46:8;
  tmp46 = tmp41 << tmp45;
  local tmp47:8;
  tmp47 = ~ tmp46;
  local tmp48:8;
  tmp48 = A2_vavghr_Rdd32 & tmp47;
  local tmp49:8;
  local tmp50:2;
  local tmp51:4;
  tmp51 = 1;
  local tmp52:4;
  tmp52 = 16;
  local tmp53:4;
  tmp53 = tmp51 * tmp52;
  local tmp54:8;
  tmp54 = zext(tmp53);
  local tmp55:8;
  tmp55 = A2_vavghr_Rss32 s>> tmp54;
  local tmp56:4;
  tmp56 = 65535;
  local tmp57:8;
  tmp57 = zext(tmp56);
  local tmp58:8;
  tmp58 = tmp55 & tmp57;
  tmp50 = tmp58:2;
  local tmp59:2;
  local tmp60:4;
  tmp60 = 1;
  local tmp61:4;
  tmp61 = 16;
  local tmp62:4;
  tmp62 = tmp60 * tmp61;
  local tmp63:8;
  tmp63 = zext(tmp62);
  local tmp64:8;
  tmp64 = A2_vavghr_Rtt32 s>> tmp63;
  local tmp65:4;
  tmp65 = 65535;
  local tmp66:8;
  tmp66 = zext(tmp65);
  local tmp67:8;
  tmp67 = tmp64 & tmp66;
  tmp59 = tmp67:2;
  local tmp68:2;
  tmp68 = tmp50 + tmp59;
  local tmp69:4;
  tmp69 = 1;
  local tmp70:4;
  tmp70 = zext(tmp68);
  local tmp71:4;
  tmp71 = tmp70 + tmp69;
  local tmp72:4;
  tmp72 = 1;
  local tmp73:4;
  tmp73 = tmp71 s>> tmp72;
  local tmp74:4;
  tmp74 = 65535;
  local tmp75:4;
  tmp75 = tmp73 & tmp74;
  tmp49 = sext(tmp75);
  local tmp76:4;
  tmp76 = 1;
  local tmp77:4;
  tmp77 = 16;
  local tmp78:4;
  tmp78 = tmp76 * tmp77;
  local tmp79:8;
  tmp79 = zext(tmp78);
  local tmp80:8;
  tmp80 = tmp49 << tmp79;
  local tmp81:8;
  tmp81 = tmp48 | tmp80;
  A2_vavghr_Rdd32 = tmp81;
  local tmp82:8;
  tmp82 = 65535;
  local tmp83:4;
  tmp83 = 2;
  local tmp84:4;
  tmp84 = 16;
  local tmp85:4;
  tmp85 = tmp83 * tmp84;
  local tmp86:8;
  tmp86 = zext(tmp85);
  local tmp87:8;
  tmp87 = tmp82 << tmp86;
  local tmp88:8;
  tmp88 = ~ tmp87;
  local tmp89:8;
  tmp89 = A2_vavghr_Rdd32 & tmp88;
  local tmp90:8;
  local tmp91:2;
  local tmp92:4;
  tmp92 = 2;
  local tmp93:4;
  tmp93 = 16;
  local tmp94:4;
  tmp94 = tmp92 * tmp93;
  local tmp95:8;
  tmp95 = zext(tmp94);
  local tmp96:8;
  tmp96 = A2_vavghr_Rss32 s>> tmp95;
  local tmp97:4;
  tmp97 = 65535;
  local tmp98:8;
  tmp98 = zext(tmp97);
  local tmp99:8;
  tmp99 = tmp96 & tmp98;
  tmp91 = tmp99:2;
  local tmp100:2;
  local tmp101:4;
  tmp101 = 2;
  local tmp102:4;
  tmp102 = 16;
  local tmp103:4;
  tmp103 = tmp101 * tmp102;
  local tmp104:8;
  tmp104 = zext(tmp103);
  local tmp105:8;
  tmp105 = A2_vavghr_Rtt32 s>> tmp104;
  local tmp106:4;
  tmp106 = 65535;
  local tmp107:8;
  tmp107 = zext(tmp106);
  local tmp108:8;
  tmp108 = tmp105 & tmp107;
  tmp100 = tmp108:2;
  local tmp109:2;
  tmp109 = tmp91 + tmp100;
  local tmp110:4;
  tmp110 = 1;
  local tmp111:4;
  tmp111 = zext(tmp109);
  local tmp112:4;
  tmp112 = tmp111 + tmp110;
  local tmp113:4;
  tmp113 = 1;
  local tmp114:4;
  tmp114 = tmp112 s>> tmp113;
  local tmp115:4;
  tmp115 = 65535;
  local tmp116:4;
  tmp116 = tmp114 & tmp115;
  tmp90 = sext(tmp116);
  local tmp117:4;
  tmp117 = 2;
  local tmp118:4;
  tmp118 = 16;
  local tmp119:4;
  tmp119 = tmp117 * tmp118;
  local tmp120:8;
  tmp120 = zext(tmp119);
  local tmp121:8;
  tmp121 = tmp90 << tmp120;
  local tmp122:8;
  tmp122 = tmp89 | tmp121;
  A2_vavghr_Rdd32 = tmp122;
  local tmp123:8;
  tmp123 = 65535;
  local tmp124:4;
  tmp124 = 3;
  local tmp125:4;
  tmp125 = 16;
  local tmp126:4;
  tmp126 = tmp124 * tmp125;
  local tmp127:8;
  tmp127 = zext(tmp126);
  local tmp128:8;
  tmp128 = tmp123 << tmp127;
  local tmp129:8;
  tmp129 = ~ tmp128;
  local tmp130:8;
  tmp130 = A2_vavghr_Rdd32 & tmp129;
  local tmp131:8;
  local tmp132:2;
  local tmp133:4;
  tmp133 = 3;
  local tmp134:4;
  tmp134 = 16;
  local tmp135:4;
  tmp135 = tmp133 * tmp134;
  local tmp136:8;
  tmp136 = zext(tmp135);
  local tmp137:8;
  tmp137 = A2_vavghr_Rss32 s>> tmp136;
  local tmp138:4;
  tmp138 = 65535;
  local tmp139:8;
  tmp139 = zext(tmp138);
  local tmp140:8;
  tmp140 = tmp137 & tmp139;
  tmp132 = tmp140:2;
  local tmp141:2;
  local tmp142:4;
  tmp142 = 3;
  local tmp143:4;
  tmp143 = 16;
  local tmp144:4;
  tmp144 = tmp142 * tmp143;
  local tmp145:8;
  tmp145 = zext(tmp144);
  local tmp146:8;
  tmp146 = A2_vavghr_Rtt32 s>> tmp145;
  local tmp147:4;
  tmp147 = 65535;
  local tmp148:8;
  tmp148 = zext(tmp147);
  local tmp149:8;
  tmp149 = tmp146 & tmp148;
  tmp141 = tmp149:2;
  local tmp150:2;
  tmp150 = tmp132 + tmp141;
  local tmp151:4;
  tmp151 = 1;
  local tmp152:4;
  tmp152 = zext(tmp150);
  local tmp153:4;
  tmp153 = tmp152 + tmp151;
  local tmp154:4;
  tmp154 = 1;
  local tmp155:4;
  tmp155 = tmp153 s>> tmp154;
  local tmp156:4;
  tmp156 = 65535;
  local tmp157:4;
  tmp157 = tmp155 & tmp156;
  tmp131 = sext(tmp157);
  local tmp158:4;
  tmp158 = 3;
  local tmp159:4;
  tmp159 = 16;
  local tmp160:4;
  tmp160 = tmp158 * tmp159;
  local tmp161:8;
  tmp161 = zext(tmp160);
  local tmp162:8;
  tmp162 = tmp131 << tmp161;
  local tmp163:8;
  tmp163 = tmp130 | tmp162;
  A2_vavghr_Rdd32 = tmp163;
}

:A2_vnavghr A2_vnavghr_Rdd32 A2_vnavghr_Rtt32 A2_vnavghr_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vnavghr_Rdd32 & A2_vnavghr_Rtt32 & A2_vnavghr_Rss32 unimpl

:A4_round_ri A4_round_ri_Rd32 A4_round_ri_Rs32 A4_round_ri_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A4_round_ri_Rd32 & A4_round_ri_Rs32 & A4_round_ri_u5 unimpl

:A4_round_rr A4_round_rr_Rd32 A4_round_rr_Rs32 A4_round_rr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_round_rr_Rd32 & A4_round_rr_Rs32 & A4_round_rr_Rt32 unimpl

:A4_round_ri_sat A4_round_ri_sat_Rd32 A4_round_ri_sat_Rs32 A4_round_ri_sat_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A4_round_ri_sat_Rd32 & A4_round_ri_sat_Rs32 & A4_round_ri_sat_u5 unimpl

:A4_round_rr_sat A4_round_rr_sat_Rd32 A4_round_rr_sat_Rs32 A4_round_rr_sat_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_round_rr_sat_Rd32 & A4_round_rr_sat_Rs32 & A4_round_rr_sat_Rt32 unimpl

:A4_cround_ri A4_cround_ri_Rd32 A4_cround_ri_Rs32 A4_cround_ri_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A4_cround_ri_Rd32 & A4_cround_ri_Rs32 & A4_cround_ri_u5 unimpl

:A4_cround_rr A4_cround_rr_Rd32 A4_cround_rr_Rs32 A4_cround_rr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_cround_rr_Rd32 & A4_cround_rr_Rs32 & A4_cround_rr_Rt32 unimpl

:A7_croundd_ri A7_croundd_ri_Rdd32 A7_croundd_ri_Rss32 A7_croundd_ri_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A7_croundd_ri_Rdd32 & A7_croundd_ri_Rss32 & A7_croundd_ri_u6 unimpl

:A7_croundd_rr A7_croundd_rr_Rdd32 A7_croundd_rr_Rss32 A7_croundd_rr_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A7_croundd_rr_Rdd32 & A7_croundd_rr_Rss32 & A7_croundd_rr_Rt32 unimpl

:A7_clip A7_clip_Rd32 A7_clip_Rs32 A7_clip_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A7_clip_Rd32 & A7_clip_Rs32 & A7_clip_u5 unimpl

:A7_vclip A7_vclip_Rdd32 A7_vclip_Rss32 A7_vclip_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A7_vclip_Rdd32 & A7_vclip_Rss32 & A7_vclip_u5 unimpl

:A4_vrminh A4_vrminh_Rxx32 A4_vrminh_Rss32 A4_vrminh_Ru32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vrminh_Rxx32 & A4_vrminh_Rss32 & A4_vrminh_Ru32 {
  local i:4;
  local min:8;
  local addr:4;
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = A4_vrminh_Rxx32 s>> tmp4;
  local tmp6:4;
  tmp6 = 65535;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = tmp5 & tmp7;
  tmp0 = tmp8:2;
  min = zext(tmp0);
  local tmp9:8;
  local tmp10:4;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = 32;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = A4_vrminh_Rxx32 s>> tmp14;
  local tmp16:8;
  tmp16 = 4294967295;
  local tmp17:8;
  tmp17 = tmp15 & tmp16;
  tmp10 = tmp17:4;
  tmp9 = zext(tmp10);
  addr = tmp9:4;
  local tmp18:2;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A4_vrminh_Rss32 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:2;
  local tmp27:8;
  tmp27 = zext(tmp18);
  local tmp28:1;
  tmp28 = min s> tmp27;
  local tmp29:1;
  tmp29 = tmp28;
  if (tmp29) goto <t_branch_31>;
  goto <done_31>;
<t_branch_31>
  local tmp31:2;
  local tmp32:4;
  tmp32 = 0;
  local tmp33:4;
  tmp33 = 16;
  local tmp34:4;
  tmp34 = tmp32 * tmp33;
  local tmp35:8;
  tmp35 = zext(tmp34);
  local tmp36:8;
  tmp36 = A4_vrminh_Rss32 s>> tmp35;
  local tmp37:4;
  tmp37 = 65535;
  local tmp38:8;
  tmp38 = zext(tmp37);
  local tmp39:8;
  tmp39 = tmp36 & tmp38;
  tmp31 = tmp39:2;
  min = zext(tmp31);
  local tmp40:4;
  tmp40 = 0;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = tmp40 << tmp41;
  local tmp43:4;
  tmp43 = A4_vrminh_Ru32 | tmp42;
  addr = tmp43;
  goto <done_31>;
<done_31>
  local tmp44:2;
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 16;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:8;
  tmp48 = zext(tmp47);
  local tmp49:8;
  tmp49 = A4_vrminh_Rss32 s>> tmp48;
  local tmp50:4;
  tmp50 = 65535;
  local tmp51:8;
  tmp51 = zext(tmp50);
  local tmp52:8;
  tmp52 = tmp49 & tmp51;
  tmp44 = tmp52:2;
  local tmp53:8;
  tmp53 = zext(tmp44);
  local tmp54:1;
  tmp54 = min s> tmp53;
  local tmp55:1;
  tmp55 = tmp54;
  if (tmp55) goto <t_branch_57>;
  goto <done_57>;
<t_branch_57>
  local tmp57:2;
  local tmp58:4;
  tmp58 = 1;
  local tmp59:4;
  tmp59 = 16;
  local tmp60:4;
  tmp60 = tmp58 * tmp59;
  local tmp61:8;
  tmp61 = zext(tmp60);
  local tmp62:8;
  tmp62 = A4_vrminh_Rss32 s>> tmp61;
  local tmp63:4;
  tmp63 = 65535;
  local tmp64:8;
  tmp64 = zext(tmp63);
  local tmp65:8;
  tmp65 = tmp62 & tmp64;
  tmp57 = tmp65:2;
  min = zext(tmp57);
  local tmp66:4;
  tmp66 = 1;
  local tmp67:4;
  tmp67 = 1;
  local tmp68:4;
  tmp68 = tmp66 << tmp67;
  local tmp69:4;
  tmp69 = A4_vrminh_Ru32 | tmp68;
  addr = tmp69;
  goto <done_57>;
<done_57>
  local tmp70:2;
  local tmp71:4;
  tmp71 = 2;
  local tmp72:4;
  tmp72 = 16;
  local tmp73:4;
  tmp73 = tmp71 * tmp72;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = A4_vrminh_Rss32 s>> tmp74;
  local tmp76:4;
  tmp76 = 65535;
  local tmp77:8;
  tmp77 = zext(tmp76);
  local tmp78:8;
  tmp78 = tmp75 & tmp77;
  tmp70 = tmp78:2;
  local tmp79:8;
  tmp79 = zext(tmp70);
  local tmp80:1;
  tmp80 = min s> tmp79;
  local tmp81:1;
  tmp81 = tmp80;
  if (tmp81) goto <t_branch_83>;
  goto <done_83>;
<t_branch_83>
  local tmp83:2;
  local tmp84:4;
  tmp84 = 2;
  local tmp85:4;
  tmp85 = 16;
  local tmp86:4;
  tmp86 = tmp84 * tmp85;
  local tmp87:8;
  tmp87 = zext(tmp86);
  local tmp88:8;
  tmp88 = A4_vrminh_Rss32 s>> tmp87;
  local tmp89:4;
  tmp89 = 65535;
  local tmp90:8;
  tmp90 = zext(tmp89);
  local tmp91:8;
  tmp91 = tmp88 & tmp90;
  tmp83 = tmp91:2;
  min = zext(tmp83);
  local tmp92:4;
  tmp92 = 2;
  local tmp93:4;
  tmp93 = 1;
  local tmp94:4;
  tmp94 = tmp92 << tmp93;
  local tmp95:4;
  tmp95 = A4_vrminh_Ru32 | tmp94;
  addr = tmp95;
  goto <done_83>;
<done_83>
  local tmp96:2;
  local tmp97:4;
  tmp97 = 3;
  local tmp98:4;
  tmp98 = 16;
  local tmp99:4;
  tmp99 = tmp97 * tmp98;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = A4_vrminh_Rss32 s>> tmp100;
  local tmp102:4;
  tmp102 = 65535;
  local tmp103:8;
  tmp103 = zext(tmp102);
  local tmp104:8;
  tmp104 = tmp101 & tmp103;
  tmp96 = tmp104:2;
  local tmp105:8;
  tmp105 = zext(tmp96);
  local tmp106:1;
  tmp106 = min s> tmp105;
  local tmp107:1;
  tmp107 = tmp106;
  if (tmp107) goto <t_branch_109>;
  goto <done_109>;
<t_branch_109>
  local tmp109:2;
  local tmp110:4;
  tmp110 = 3;
  local tmp111:4;
  tmp111 = 16;
  local tmp112:4;
  tmp112 = tmp110 * tmp111;
  local tmp113:8;
  tmp113 = zext(tmp112);
  local tmp114:8;
  tmp114 = A4_vrminh_Rss32 s>> tmp113;
  local tmp115:4;
  tmp115 = 65535;
  local tmp116:8;
  tmp116 = zext(tmp115);
  local tmp117:8;
  tmp117 = tmp114 & tmp116;
  tmp109 = tmp117:2;
  min = zext(tmp109);
  local tmp118:4;
  tmp118 = 3;
  local tmp119:4;
  tmp119 = 1;
  local tmp120:4;
  tmp120 = tmp118 << tmp119;
  local tmp121:4;
  tmp121 = A4_vrminh_Ru32 | tmp120;
  addr = tmp121;
  goto <done_109>;
<done_109>
  local tmp122:8;
  tmp122 = 4294967295;
  local tmp123:4;
  tmp123 = 0;
  local tmp124:4;
  tmp124 = 32;
  local tmp125:4;
  tmp125 = tmp123 * tmp124;
  local tmp126:8;
  tmp126 = zext(tmp125);
  local tmp127:8;
  tmp127 = tmp122 << tmp126;
  local tmp128:8;
  tmp128 = ~ tmp127;
  local tmp129:8;
  tmp129 = A4_vrminh_Rxx32 & tmp128;
  local tmp130:8;
  tmp130 = 4294967295;
  local tmp131:8;
  tmp131 = min & tmp130;
  local tmp132:4;
  tmp132 = 0;
  local tmp133:4;
  tmp133 = 32;
  local tmp134:4;
  tmp134 = tmp132 * tmp133;
  local tmp135:8;
  tmp135 = zext(tmp134);
  local tmp136:8;
  tmp136 = tmp131 << tmp135;
  local tmp137:8;
  tmp137 = tmp129 | tmp136;
  A4_vrminh_Rxx32 = tmp137;
  local tmp138:8;
  tmp138 = 4294967295;
  local tmp139:4;
  tmp139 = 1;
  local tmp140:4;
  tmp140 = 32;
  local tmp141:4;
  tmp141 = tmp139 * tmp140;
  local tmp142:8;
  tmp142 = zext(tmp141);
  local tmp143:8;
  tmp143 = tmp138 << tmp142;
  local tmp144:8;
  tmp144 = ~ tmp143;
  local tmp145:8;
  tmp145 = A4_vrminh_Rxx32 & tmp144;
  local tmp146:8;
  tmp146 = 4294967295;
  local tmp147:8;
  tmp147 = zext(addr);
  local tmp148:8;
  tmp148 = tmp147 & tmp146;
  local tmp149:4;
  tmp149 = 1;
  local tmp150:4;
  tmp150 = 32;
  local tmp151:4;
  tmp151 = tmp149 * tmp150;
  local tmp152:8;
  tmp152 = zext(tmp151);
  local tmp153:8;
  tmp153 = tmp148 << tmp152;
  local tmp154:8;
  tmp154 = tmp145 | tmp153;
  A4_vrminh_Rxx32 = tmp154;
}

:A4_vrmaxh A4_vrmaxh_Rxx32 A4_vrmaxh_Rss32 A4_vrmaxh_Ru32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vrmaxh_Rxx32 & A4_vrmaxh_Rss32 & A4_vrmaxh_Ru32 {
  local i:4;
  local max:8;
  local addr:4;
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = A4_vrmaxh_Rxx32 s>> tmp4;
  local tmp6:4;
  tmp6 = 65535;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = tmp5 & tmp7;
  tmp0 = tmp8:2;
  max = zext(tmp0);
  local tmp9:8;
  local tmp10:4;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = 32;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = A4_vrmaxh_Rxx32 s>> tmp14;
  local tmp16:8;
  tmp16 = 4294967295;
  local tmp17:8;
  tmp17 = tmp15 & tmp16;
  tmp10 = tmp17:4;
  tmp9 = zext(tmp10);
  addr = tmp9:4;
  local tmp18:2;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A4_vrmaxh_Rss32 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:2;
  local tmp27:8;
  tmp27 = zext(tmp18);
  local tmp28:1;
  tmp28 = max s< tmp27;
  local tmp29:1;
  tmp29 = tmp28;
  if (tmp29) goto <t_branch_31>;
  goto <done_31>;
<t_branch_31>
  local tmp31:2;
  local tmp32:4;
  tmp32 = 0;
  local tmp33:4;
  tmp33 = 16;
  local tmp34:4;
  tmp34 = tmp32 * tmp33;
  local tmp35:8;
  tmp35 = zext(tmp34);
  local tmp36:8;
  tmp36 = A4_vrmaxh_Rss32 s>> tmp35;
  local tmp37:4;
  tmp37 = 65535;
  local tmp38:8;
  tmp38 = zext(tmp37);
  local tmp39:8;
  tmp39 = tmp36 & tmp38;
  tmp31 = tmp39:2;
  max = zext(tmp31);
  local tmp40:4;
  tmp40 = 0;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = tmp40 << tmp41;
  local tmp43:4;
  tmp43 = A4_vrmaxh_Ru32 | tmp42;
  addr = tmp43;
  goto <done_31>;
<done_31>
  local tmp44:2;
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 16;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:8;
  tmp48 = zext(tmp47);
  local tmp49:8;
  tmp49 = A4_vrmaxh_Rss32 s>> tmp48;
  local tmp50:4;
  tmp50 = 65535;
  local tmp51:8;
  tmp51 = zext(tmp50);
  local tmp52:8;
  tmp52 = tmp49 & tmp51;
  tmp44 = tmp52:2;
  local tmp53:8;
  tmp53 = zext(tmp44);
  local tmp54:1;
  tmp54 = max s< tmp53;
  local tmp55:1;
  tmp55 = tmp54;
  if (tmp55) goto <t_branch_57>;
  goto <done_57>;
<t_branch_57>
  local tmp57:2;
  local tmp58:4;
  tmp58 = 1;
  local tmp59:4;
  tmp59 = 16;
  local tmp60:4;
  tmp60 = tmp58 * tmp59;
  local tmp61:8;
  tmp61 = zext(tmp60);
  local tmp62:8;
  tmp62 = A4_vrmaxh_Rss32 s>> tmp61;
  local tmp63:4;
  tmp63 = 65535;
  local tmp64:8;
  tmp64 = zext(tmp63);
  local tmp65:8;
  tmp65 = tmp62 & tmp64;
  tmp57 = tmp65:2;
  max = zext(tmp57);
  local tmp66:4;
  tmp66 = 1;
  local tmp67:4;
  tmp67 = 1;
  local tmp68:4;
  tmp68 = tmp66 << tmp67;
  local tmp69:4;
  tmp69 = A4_vrmaxh_Ru32 | tmp68;
  addr = tmp69;
  goto <done_57>;
<done_57>
  local tmp70:2;
  local tmp71:4;
  tmp71 = 2;
  local tmp72:4;
  tmp72 = 16;
  local tmp73:4;
  tmp73 = tmp71 * tmp72;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = A4_vrmaxh_Rss32 s>> tmp74;
  local tmp76:4;
  tmp76 = 65535;
  local tmp77:8;
  tmp77 = zext(tmp76);
  local tmp78:8;
  tmp78 = tmp75 & tmp77;
  tmp70 = tmp78:2;
  local tmp79:8;
  tmp79 = zext(tmp70);
  local tmp80:1;
  tmp80 = max s< tmp79;
  local tmp81:1;
  tmp81 = tmp80;
  if (tmp81) goto <t_branch_83>;
  goto <done_83>;
<t_branch_83>
  local tmp83:2;
  local tmp84:4;
  tmp84 = 2;
  local tmp85:4;
  tmp85 = 16;
  local tmp86:4;
  tmp86 = tmp84 * tmp85;
  local tmp87:8;
  tmp87 = zext(tmp86);
  local tmp88:8;
  tmp88 = A4_vrmaxh_Rss32 s>> tmp87;
  local tmp89:4;
  tmp89 = 65535;
  local tmp90:8;
  tmp90 = zext(tmp89);
  local tmp91:8;
  tmp91 = tmp88 & tmp90;
  tmp83 = tmp91:2;
  max = zext(tmp83);
  local tmp92:4;
  tmp92 = 2;
  local tmp93:4;
  tmp93 = 1;
  local tmp94:4;
  tmp94 = tmp92 << tmp93;
  local tmp95:4;
  tmp95 = A4_vrmaxh_Ru32 | tmp94;
  addr = tmp95;
  goto <done_83>;
<done_83>
  local tmp96:2;
  local tmp97:4;
  tmp97 = 3;
  local tmp98:4;
  tmp98 = 16;
  local tmp99:4;
  tmp99 = tmp97 * tmp98;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = A4_vrmaxh_Rss32 s>> tmp100;
  local tmp102:4;
  tmp102 = 65535;
  local tmp103:8;
  tmp103 = zext(tmp102);
  local tmp104:8;
  tmp104 = tmp101 & tmp103;
  tmp96 = tmp104:2;
  local tmp105:8;
  tmp105 = zext(tmp96);
  local tmp106:1;
  tmp106 = max s< tmp105;
  local tmp107:1;
  tmp107 = tmp106;
  if (tmp107) goto <t_branch_109>;
  goto <done_109>;
<t_branch_109>
  local tmp109:2;
  local tmp110:4;
  tmp110 = 3;
  local tmp111:4;
  tmp111 = 16;
  local tmp112:4;
  tmp112 = tmp110 * tmp111;
  local tmp113:8;
  tmp113 = zext(tmp112);
  local tmp114:8;
  tmp114 = A4_vrmaxh_Rss32 s>> tmp113;
  local tmp115:4;
  tmp115 = 65535;
  local tmp116:8;
  tmp116 = zext(tmp115);
  local tmp117:8;
  tmp117 = tmp114 & tmp116;
  tmp109 = tmp117:2;
  max = zext(tmp109);
  local tmp118:4;
  tmp118 = 3;
  local tmp119:4;
  tmp119 = 1;
  local tmp120:4;
  tmp120 = tmp118 << tmp119;
  local tmp121:4;
  tmp121 = A4_vrmaxh_Ru32 | tmp120;
  addr = tmp121;
  goto <done_109>;
<done_109>
  local tmp122:8;
  tmp122 = 4294967295;
  local tmp123:4;
  tmp123 = 0;
  local tmp124:4;
  tmp124 = 32;
  local tmp125:4;
  tmp125 = tmp123 * tmp124;
  local tmp126:8;
  tmp126 = zext(tmp125);
  local tmp127:8;
  tmp127 = tmp122 << tmp126;
  local tmp128:8;
  tmp128 = ~ tmp127;
  local tmp129:8;
  tmp129 = A4_vrmaxh_Rxx32 & tmp128;
  local tmp130:8;
  tmp130 = 4294967295;
  local tmp131:8;
  tmp131 = max & tmp130;
  local tmp132:4;
  tmp132 = 0;
  local tmp133:4;
  tmp133 = 32;
  local tmp134:4;
  tmp134 = tmp132 * tmp133;
  local tmp135:8;
  tmp135 = zext(tmp134);
  local tmp136:8;
  tmp136 = tmp131 << tmp135;
  local tmp137:8;
  tmp137 = tmp129 | tmp136;
  A4_vrmaxh_Rxx32 = tmp137;
  local tmp138:8;
  tmp138 = 4294967295;
  local tmp139:4;
  tmp139 = 1;
  local tmp140:4;
  tmp140 = 32;
  local tmp141:4;
  tmp141 = tmp139 * tmp140;
  local tmp142:8;
  tmp142 = zext(tmp141);
  local tmp143:8;
  tmp143 = tmp138 << tmp142;
  local tmp144:8;
  tmp144 = ~ tmp143;
  local tmp145:8;
  tmp145 = A4_vrmaxh_Rxx32 & tmp144;
  local tmp146:8;
  tmp146 = 4294967295;
  local tmp147:8;
  tmp147 = zext(addr);
  local tmp148:8;
  tmp148 = tmp147 & tmp146;
  local tmp149:4;
  tmp149 = 1;
  local tmp150:4;
  tmp150 = 32;
  local tmp151:4;
  tmp151 = tmp149 * tmp150;
  local tmp152:8;
  tmp152 = zext(tmp151);
  local tmp153:8;
  tmp153 = tmp148 << tmp152;
  local tmp154:8;
  tmp154 = tmp145 | tmp153;
  A4_vrmaxh_Rxx32 = tmp154;
}

:A4_vrminuh A4_vrminuh_Rxx32 A4_vrminuh_Rss32 A4_vrminuh_Ru32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vrminuh_Rxx32 & A4_vrminuh_Rss32 & A4_vrminuh_Ru32 {
  local i:4;
  local min:8;
  local addr:4;
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = A4_vrminuh_Rxx32 s>> tmp4;
  local tmp6:4;
  tmp6 = 65535;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = tmp5 & tmp7;
  tmp0 = tmp8:2;
  min = zext(tmp0);
  local tmp9:8;
  local tmp10:4;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = 32;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = A4_vrminuh_Rxx32 s>> tmp14;
  local tmp16:8;
  tmp16 = 4294967295;
  local tmp17:8;
  tmp17 = tmp15 & tmp16;
  tmp10 = tmp17:4;
  tmp9 = zext(tmp10);
  addr = tmp9:4;
  local tmp18:2;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A4_vrminuh_Rss32 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:2;
  local tmp27:8;
  tmp27 = sext(tmp18);
  local tmp28:1;
  tmp28 = min > tmp27;
  local tmp29:1;
  tmp29 = tmp28;
  if (tmp29) goto <t_branch_31>;
  goto <done_31>;
<t_branch_31>
  local tmp31:2;
  local tmp32:4;
  tmp32 = 0;
  local tmp33:4;
  tmp33 = 16;
  local tmp34:4;
  tmp34 = tmp32 * tmp33;
  local tmp35:8;
  tmp35 = zext(tmp34);
  local tmp36:8;
  tmp36 = A4_vrminuh_Rss32 s>> tmp35;
  local tmp37:4;
  tmp37 = 65535;
  local tmp38:8;
  tmp38 = zext(tmp37);
  local tmp39:8;
  tmp39 = tmp36 & tmp38;
  tmp31 = tmp39:2;
  min = zext(tmp31);
  local tmp40:4;
  tmp40 = 0;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = tmp40 << tmp41;
  local tmp43:4;
  tmp43 = A4_vrminuh_Ru32 | tmp42;
  addr = tmp43;
  goto <done_31>;
<done_31>
  local tmp44:2;
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 16;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:8;
  tmp48 = zext(tmp47);
  local tmp49:8;
  tmp49 = A4_vrminuh_Rss32 s>> tmp48;
  local tmp50:4;
  tmp50 = 65535;
  local tmp51:8;
  tmp51 = zext(tmp50);
  local tmp52:8;
  tmp52 = tmp49 & tmp51;
  tmp44 = tmp52:2;
  local tmp53:8;
  tmp53 = sext(tmp44);
  local tmp54:1;
  tmp54 = min > tmp53;
  local tmp55:1;
  tmp55 = tmp54;
  if (tmp55) goto <t_branch_57>;
  goto <done_57>;
<t_branch_57>
  local tmp57:2;
  local tmp58:4;
  tmp58 = 1;
  local tmp59:4;
  tmp59 = 16;
  local tmp60:4;
  tmp60 = tmp58 * tmp59;
  local tmp61:8;
  tmp61 = zext(tmp60);
  local tmp62:8;
  tmp62 = A4_vrminuh_Rss32 s>> tmp61;
  local tmp63:4;
  tmp63 = 65535;
  local tmp64:8;
  tmp64 = zext(tmp63);
  local tmp65:8;
  tmp65 = tmp62 & tmp64;
  tmp57 = tmp65:2;
  min = zext(tmp57);
  local tmp66:4;
  tmp66 = 1;
  local tmp67:4;
  tmp67 = 1;
  local tmp68:4;
  tmp68 = tmp66 << tmp67;
  local tmp69:4;
  tmp69 = A4_vrminuh_Ru32 | tmp68;
  addr = tmp69;
  goto <done_57>;
<done_57>
  local tmp70:2;
  local tmp71:4;
  tmp71 = 2;
  local tmp72:4;
  tmp72 = 16;
  local tmp73:4;
  tmp73 = tmp71 * tmp72;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = A4_vrminuh_Rss32 s>> tmp74;
  local tmp76:4;
  tmp76 = 65535;
  local tmp77:8;
  tmp77 = zext(tmp76);
  local tmp78:8;
  tmp78 = tmp75 & tmp77;
  tmp70 = tmp78:2;
  local tmp79:8;
  tmp79 = sext(tmp70);
  local tmp80:1;
  tmp80 = min > tmp79;
  local tmp81:1;
  tmp81 = tmp80;
  if (tmp81) goto <t_branch_83>;
  goto <done_83>;
<t_branch_83>
  local tmp83:2;
  local tmp84:4;
  tmp84 = 2;
  local tmp85:4;
  tmp85 = 16;
  local tmp86:4;
  tmp86 = tmp84 * tmp85;
  local tmp87:8;
  tmp87 = zext(tmp86);
  local tmp88:8;
  tmp88 = A4_vrminuh_Rss32 s>> tmp87;
  local tmp89:4;
  tmp89 = 65535;
  local tmp90:8;
  tmp90 = zext(tmp89);
  local tmp91:8;
  tmp91 = tmp88 & tmp90;
  tmp83 = tmp91:2;
  min = zext(tmp83);
  local tmp92:4;
  tmp92 = 2;
  local tmp93:4;
  tmp93 = 1;
  local tmp94:4;
  tmp94 = tmp92 << tmp93;
  local tmp95:4;
  tmp95 = A4_vrminuh_Ru32 | tmp94;
  addr = tmp95;
  goto <done_83>;
<done_83>
  local tmp96:2;
  local tmp97:4;
  tmp97 = 3;
  local tmp98:4;
  tmp98 = 16;
  local tmp99:4;
  tmp99 = tmp97 * tmp98;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = A4_vrminuh_Rss32 s>> tmp100;
  local tmp102:4;
  tmp102 = 65535;
  local tmp103:8;
  tmp103 = zext(tmp102);
  local tmp104:8;
  tmp104 = tmp101 & tmp103;
  tmp96 = tmp104:2;
  local tmp105:8;
  tmp105 = sext(tmp96);
  local tmp106:1;
  tmp106 = min > tmp105;
  local tmp107:1;
  tmp107 = tmp106;
  if (tmp107) goto <t_branch_109>;
  goto <done_109>;
<t_branch_109>
  local tmp109:2;
  local tmp110:4;
  tmp110 = 3;
  local tmp111:4;
  tmp111 = 16;
  local tmp112:4;
  tmp112 = tmp110 * tmp111;
  local tmp113:8;
  tmp113 = zext(tmp112);
  local tmp114:8;
  tmp114 = A4_vrminuh_Rss32 s>> tmp113;
  local tmp115:4;
  tmp115 = 65535;
  local tmp116:8;
  tmp116 = zext(tmp115);
  local tmp117:8;
  tmp117 = tmp114 & tmp116;
  tmp109 = tmp117:2;
  min = zext(tmp109);
  local tmp118:4;
  tmp118 = 3;
  local tmp119:4;
  tmp119 = 1;
  local tmp120:4;
  tmp120 = tmp118 << tmp119;
  local tmp121:4;
  tmp121 = A4_vrminuh_Ru32 | tmp120;
  addr = tmp121;
  goto <done_109>;
<done_109>
  local tmp122:8;
  tmp122 = 4294967295;
  local tmp123:4;
  tmp123 = 0;
  local tmp124:4;
  tmp124 = 32;
  local tmp125:4;
  tmp125 = tmp123 * tmp124;
  local tmp126:8;
  tmp126 = zext(tmp125);
  local tmp127:8;
  tmp127 = tmp122 << tmp126;
  local tmp128:8;
  tmp128 = ~ tmp127;
  local tmp129:8;
  tmp129 = A4_vrminuh_Rxx32 & tmp128;
  local tmp130:8;
  tmp130 = 4294967295;
  local tmp131:8;
  tmp131 = min & tmp130;
  local tmp132:4;
  tmp132 = 0;
  local tmp133:4;
  tmp133 = 32;
  local tmp134:4;
  tmp134 = tmp132 * tmp133;
  local tmp135:8;
  tmp135 = zext(tmp134);
  local tmp136:8;
  tmp136 = tmp131 << tmp135;
  local tmp137:8;
  tmp137 = tmp129 | tmp136;
  A4_vrminuh_Rxx32 = tmp137;
  local tmp138:8;
  tmp138 = 4294967295;
  local tmp139:4;
  tmp139 = 1;
  local tmp140:4;
  tmp140 = 32;
  local tmp141:4;
  tmp141 = tmp139 * tmp140;
  local tmp142:8;
  tmp142 = zext(tmp141);
  local tmp143:8;
  tmp143 = tmp138 << tmp142;
  local tmp144:8;
  tmp144 = ~ tmp143;
  local tmp145:8;
  tmp145 = A4_vrminuh_Rxx32 & tmp144;
  local tmp146:8;
  tmp146 = 4294967295;
  local tmp147:8;
  tmp147 = zext(addr);
  local tmp148:8;
  tmp148 = tmp147 & tmp146;
  local tmp149:4;
  tmp149 = 1;
  local tmp150:4;
  tmp150 = 32;
  local tmp151:4;
  tmp151 = tmp149 * tmp150;
  local tmp152:8;
  tmp152 = zext(tmp151);
  local tmp153:8;
  tmp153 = tmp148 << tmp152;
  local tmp154:8;
  tmp154 = tmp145 | tmp153;
  A4_vrminuh_Rxx32 = tmp154;
}

:A4_vrmaxuh A4_vrmaxuh_Rxx32 A4_vrmaxuh_Rss32 A4_vrmaxuh_Ru32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vrmaxuh_Rxx32 & A4_vrmaxuh_Rss32 & A4_vrmaxuh_Ru32 {
  local i:4;
  local max:8;
  local addr:4;
  local tmp0:2;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = A4_vrmaxuh_Rxx32 s>> tmp4;
  local tmp6:4;
  tmp6 = 65535;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = tmp5 & tmp7;
  tmp0 = tmp8:2;
  max = zext(tmp0);
  local tmp9:8;
  local tmp10:4;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = 32;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = A4_vrmaxuh_Rxx32 s>> tmp14;
  local tmp16:8;
  tmp16 = 4294967295;
  local tmp17:8;
  tmp17 = tmp15 & tmp16;
  tmp10 = tmp17:4;
  tmp9 = zext(tmp10);
  addr = tmp9:4;
  local tmp18:2;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A4_vrmaxuh_Rss32 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:2;
  local tmp27:8;
  tmp27 = sext(tmp18);
  local tmp28:1;
  tmp28 = max < tmp27;
  local tmp29:1;
  tmp29 = tmp28;
  if (tmp29) goto <t_branch_31>;
  goto <done_31>;
<t_branch_31>
  local tmp31:2;
  local tmp32:4;
  tmp32 = 0;
  local tmp33:4;
  tmp33 = 16;
  local tmp34:4;
  tmp34 = tmp32 * tmp33;
  local tmp35:8;
  tmp35 = zext(tmp34);
  local tmp36:8;
  tmp36 = A4_vrmaxuh_Rss32 s>> tmp35;
  local tmp37:4;
  tmp37 = 65535;
  local tmp38:8;
  tmp38 = zext(tmp37);
  local tmp39:8;
  tmp39 = tmp36 & tmp38;
  tmp31 = tmp39:2;
  max = zext(tmp31);
  local tmp40:4;
  tmp40 = 0;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = tmp40 << tmp41;
  local tmp43:4;
  tmp43 = A4_vrmaxuh_Ru32 | tmp42;
  addr = tmp43;
  goto <done_31>;
<done_31>
  local tmp44:2;
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 16;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:8;
  tmp48 = zext(tmp47);
  local tmp49:8;
  tmp49 = A4_vrmaxuh_Rss32 s>> tmp48;
  local tmp50:4;
  tmp50 = 65535;
  local tmp51:8;
  tmp51 = zext(tmp50);
  local tmp52:8;
  tmp52 = tmp49 & tmp51;
  tmp44 = tmp52:2;
  local tmp53:8;
  tmp53 = sext(tmp44);
  local tmp54:1;
  tmp54 = max < tmp53;
  local tmp55:1;
  tmp55 = tmp54;
  if (tmp55) goto <t_branch_57>;
  goto <done_57>;
<t_branch_57>
  local tmp57:2;
  local tmp58:4;
  tmp58 = 1;
  local tmp59:4;
  tmp59 = 16;
  local tmp60:4;
  tmp60 = tmp58 * tmp59;
  local tmp61:8;
  tmp61 = zext(tmp60);
  local tmp62:8;
  tmp62 = A4_vrmaxuh_Rss32 s>> tmp61;
  local tmp63:4;
  tmp63 = 65535;
  local tmp64:8;
  tmp64 = zext(tmp63);
  local tmp65:8;
  tmp65 = tmp62 & tmp64;
  tmp57 = tmp65:2;
  max = zext(tmp57);
  local tmp66:4;
  tmp66 = 1;
  local tmp67:4;
  tmp67 = 1;
  local tmp68:4;
  tmp68 = tmp66 << tmp67;
  local tmp69:4;
  tmp69 = A4_vrmaxuh_Ru32 | tmp68;
  addr = tmp69;
  goto <done_57>;
<done_57>
  local tmp70:2;
  local tmp71:4;
  tmp71 = 2;
  local tmp72:4;
  tmp72 = 16;
  local tmp73:4;
  tmp73 = tmp71 * tmp72;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = A4_vrmaxuh_Rss32 s>> tmp74;
  local tmp76:4;
  tmp76 = 65535;
  local tmp77:8;
  tmp77 = zext(tmp76);
  local tmp78:8;
  tmp78 = tmp75 & tmp77;
  tmp70 = tmp78:2;
  local tmp79:8;
  tmp79 = sext(tmp70);
  local tmp80:1;
  tmp80 = max < tmp79;
  local tmp81:1;
  tmp81 = tmp80;
  if (tmp81) goto <t_branch_83>;
  goto <done_83>;
<t_branch_83>
  local tmp83:2;
  local tmp84:4;
  tmp84 = 2;
  local tmp85:4;
  tmp85 = 16;
  local tmp86:4;
  tmp86 = tmp84 * tmp85;
  local tmp87:8;
  tmp87 = zext(tmp86);
  local tmp88:8;
  tmp88 = A4_vrmaxuh_Rss32 s>> tmp87;
  local tmp89:4;
  tmp89 = 65535;
  local tmp90:8;
  tmp90 = zext(tmp89);
  local tmp91:8;
  tmp91 = tmp88 & tmp90;
  tmp83 = tmp91:2;
  max = zext(tmp83);
  local tmp92:4;
  tmp92 = 2;
  local tmp93:4;
  tmp93 = 1;
  local tmp94:4;
  tmp94 = tmp92 << tmp93;
  local tmp95:4;
  tmp95 = A4_vrmaxuh_Ru32 | tmp94;
  addr = tmp95;
  goto <done_83>;
<done_83>
  local tmp96:2;
  local tmp97:4;
  tmp97 = 3;
  local tmp98:4;
  tmp98 = 16;
  local tmp99:4;
  tmp99 = tmp97 * tmp98;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = A4_vrmaxuh_Rss32 s>> tmp100;
  local tmp102:4;
  tmp102 = 65535;
  local tmp103:8;
  tmp103 = zext(tmp102);
  local tmp104:8;
  tmp104 = tmp101 & tmp103;
  tmp96 = tmp104:2;
  local tmp105:8;
  tmp105 = sext(tmp96);
  local tmp106:1;
  tmp106 = max < tmp105;
  local tmp107:1;
  tmp107 = tmp106;
  if (tmp107) goto <t_branch_109>;
  goto <done_109>;
<t_branch_109>
  local tmp109:2;
  local tmp110:4;
  tmp110 = 3;
  local tmp111:4;
  tmp111 = 16;
  local tmp112:4;
  tmp112 = tmp110 * tmp111;
  local tmp113:8;
  tmp113 = zext(tmp112);
  local tmp114:8;
  tmp114 = A4_vrmaxuh_Rss32 s>> tmp113;
  local tmp115:4;
  tmp115 = 65535;
  local tmp116:8;
  tmp116 = zext(tmp115);
  local tmp117:8;
  tmp117 = tmp114 & tmp116;
  tmp109 = tmp117:2;
  max = zext(tmp109);
  local tmp118:4;
  tmp118 = 3;
  local tmp119:4;
  tmp119 = 1;
  local tmp120:4;
  tmp120 = tmp118 << tmp119;
  local tmp121:4;
  tmp121 = A4_vrmaxuh_Ru32 | tmp120;
  addr = tmp121;
  goto <done_109>;
<done_109>
  local tmp122:8;
  tmp122 = 4294967295;
  local tmp123:4;
  tmp123 = 0;
  local tmp124:4;
  tmp124 = 32;
  local tmp125:4;
  tmp125 = tmp123 * tmp124;
  local tmp126:8;
  tmp126 = zext(tmp125);
  local tmp127:8;
  tmp127 = tmp122 << tmp126;
  local tmp128:8;
  tmp128 = ~ tmp127;
  local tmp129:8;
  tmp129 = A4_vrmaxuh_Rxx32 & tmp128;
  local tmp130:8;
  tmp130 = 4294967295;
  local tmp131:8;
  tmp131 = max & tmp130;
  local tmp132:4;
  tmp132 = 0;
  local tmp133:4;
  tmp133 = 32;
  local tmp134:4;
  tmp134 = tmp132 * tmp133;
  local tmp135:8;
  tmp135 = zext(tmp134);
  local tmp136:8;
  tmp136 = tmp131 << tmp135;
  local tmp137:8;
  tmp137 = tmp129 | tmp136;
  A4_vrmaxuh_Rxx32 = tmp137;
  local tmp138:8;
  tmp138 = 4294967295;
  local tmp139:4;
  tmp139 = 1;
  local tmp140:4;
  tmp140 = 32;
  local tmp141:4;
  tmp141 = tmp139 * tmp140;
  local tmp142:8;
  tmp142 = zext(tmp141);
  local tmp143:8;
  tmp143 = tmp138 << tmp142;
  local tmp144:8;
  tmp144 = ~ tmp143;
  local tmp145:8;
  tmp145 = A4_vrmaxuh_Rxx32 & tmp144;
  local tmp146:8;
  tmp146 = 4294967295;
  local tmp147:8;
  tmp147 = zext(addr);
  local tmp148:8;
  tmp148 = tmp147 & tmp146;
  local tmp149:4;
  tmp149 = 1;
  local tmp150:4;
  tmp150 = 32;
  local tmp151:4;
  tmp151 = tmp149 * tmp150;
  local tmp152:8;
  tmp152 = zext(tmp151);
  local tmp153:8;
  tmp153 = tmp148 << tmp152;
  local tmp154:8;
  tmp154 = tmp145 | tmp153;
  A4_vrmaxuh_Rxx32 = tmp154;
}

:A4_vrminw A4_vrminw_Rxx32 A4_vrminw_Rss32 A4_vrminw_Ru32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vrminw_Rxx32 & A4_vrminw_Rss32 & A4_vrminw_Ru32 {
  local i:4;
  local min:8;
  local addr:4;
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 32;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = A4_vrminw_Rxx32 s>> tmp5;
  local tmp7:8;
  tmp7 = 4294967295;
  local tmp8:8;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:4;
  tmp0 = zext(tmp1);
  min = tmp0;
  local tmp9:8;
  local tmp10:4;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = 32;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = A4_vrminw_Rxx32 s>> tmp14;
  local tmp16:8;
  tmp16 = 4294967295;
  local tmp17:8;
  tmp17 = tmp15 & tmp16;
  tmp10 = tmp17:4;
  tmp9 = zext(tmp10);
  addr = tmp9:4;
  local tmp18:8;
  local tmp19:4;
  local tmp20:4;
  tmp20 = 0;
  local tmp21:4;
  tmp21 = 32;
  local tmp22:4;
  tmp22 = tmp20 * tmp21;
  local tmp23:8;
  tmp23 = zext(tmp22);
  local tmp24:8;
  tmp24 = A4_vrminw_Rss32 s>> tmp23;
  local tmp25:8;
  tmp25 = 4294967295;
  local tmp26:8;
  tmp26 = tmp24 & tmp25;
  tmp19 = tmp26:4;
  tmp18 = zext(tmp19);
  local tmp27:1;
  tmp27 = min s> tmp18;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <done_30>;
<t_branch_30>
  local tmp30:8;
  local tmp31:4;
  local tmp32:4;
  tmp32 = 0;
  local tmp33:4;
  tmp33 = 32;
  local tmp34:4;
  tmp34 = tmp32 * tmp33;
  local tmp35:8;
  tmp35 = zext(tmp34);
  local tmp36:8;
  tmp36 = A4_vrminw_Rss32 s>> tmp35;
  local tmp37:8;
  tmp37 = 4294967295;
  local tmp38:8;
  tmp38 = tmp36 & tmp37;
  tmp31 = tmp38:4;
  tmp30 = zext(tmp31);
  min = tmp30;
  local tmp39:4;
  tmp39 = 0;
  local tmp40:4;
  tmp40 = 2;
  local tmp41:4;
  tmp41 = tmp39 << tmp40;
  local tmp42:4;
  tmp42 = A4_vrminw_Ru32 | tmp41;
  addr = tmp42;
  goto <done_30>;
<done_30>
  local tmp43:8;
  local tmp44:4;
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 32;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:8;
  tmp48 = zext(tmp47);
  local tmp49:8;
  tmp49 = A4_vrminw_Rss32 s>> tmp48;
  local tmp50:8;
  tmp50 = 4294967295;
  local tmp51:8;
  tmp51 = tmp49 & tmp50;
  tmp44 = tmp51:4;
  tmp43 = zext(tmp44);
  local tmp52:1;
  tmp52 = min s> tmp43;
  local tmp53:1;
  tmp53 = tmp52;
  if (tmp53) goto <t_branch_55>;
  goto <done_55>;
<t_branch_55>
  local tmp55:8;
  local tmp56:4;
  local tmp57:4;
  tmp57 = 1;
  local tmp58:4;
  tmp58 = 32;
  local tmp59:4;
  tmp59 = tmp57 * tmp58;
  local tmp60:8;
  tmp60 = zext(tmp59);
  local tmp61:8;
  tmp61 = A4_vrminw_Rss32 s>> tmp60;
  local tmp62:8;
  tmp62 = 4294967295;
  local tmp63:8;
  tmp63 = tmp61 & tmp62;
  tmp56 = tmp63:4;
  tmp55 = zext(tmp56);
  min = tmp55;
  local tmp64:4;
  tmp64 = 1;
  local tmp65:4;
  tmp65 = 2;
  local tmp66:4;
  tmp66 = tmp64 << tmp65;
  local tmp67:4;
  tmp67 = A4_vrminw_Ru32 | tmp66;
  addr = tmp67;
  goto <done_55>;
<done_55>
  local tmp68:8;
  tmp68 = 4294967295;
  local tmp69:4;
  tmp69 = 0;
  local tmp70:4;
  tmp70 = 32;
  local tmp71:4;
  tmp71 = tmp69 * tmp70;
  local tmp72:8;
  tmp72 = zext(tmp71);
  local tmp73:8;
  tmp73 = tmp68 << tmp72;
  local tmp74:8;
  tmp74 = ~ tmp73;
  local tmp75:8;
  tmp75 = A4_vrminw_Rxx32 & tmp74;
  local tmp76:8;
  tmp76 = 4294967295;
  local tmp77:8;
  tmp77 = min & tmp76;
  local tmp78:4;
  tmp78 = 0;
  local tmp79:4;
  tmp79 = 32;
  local tmp80:4;
  tmp80 = tmp78 * tmp79;
  local tmp81:8;
  tmp81 = zext(tmp80);
  local tmp82:8;
  tmp82 = tmp77 << tmp81;
  local tmp83:8;
  tmp83 = tmp75 | tmp82;
  A4_vrminw_Rxx32 = tmp83;
  local tmp84:8;
  tmp84 = 4294967295;
  local tmp85:4;
  tmp85 = 1;
  local tmp86:4;
  tmp86 = 32;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:8;
  tmp88 = zext(tmp87);
  local tmp89:8;
  tmp89 = tmp84 << tmp88;
  local tmp90:8;
  tmp90 = ~ tmp89;
  local tmp91:8;
  tmp91 = A4_vrminw_Rxx32 & tmp90;
  local tmp92:8;
  tmp92 = 4294967295;
  local tmp93:8;
  tmp93 = zext(addr);
  local tmp94:8;
  tmp94 = tmp93 & tmp92;
  local tmp95:4;
  tmp95 = 1;
  local tmp96:4;
  tmp96 = 32;
  local tmp97:4;
  tmp97 = tmp95 * tmp96;
  local tmp98:8;
  tmp98 = zext(tmp97);
  local tmp99:8;
  tmp99 = tmp94 << tmp98;
  local tmp100:8;
  tmp100 = tmp91 | tmp99;
  A4_vrminw_Rxx32 = tmp100;
}

:A4_vrmaxw A4_vrmaxw_Rxx32 A4_vrmaxw_Rss32 A4_vrmaxw_Ru32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vrmaxw_Rxx32 & A4_vrmaxw_Rss32 & A4_vrmaxw_Ru32 {
  local i:4;
  local max:8;
  local addr:4;
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 32;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = A4_vrmaxw_Rxx32 s>> tmp5;
  local tmp7:8;
  tmp7 = 4294967295;
  local tmp8:8;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:4;
  tmp0 = zext(tmp1);
  max = tmp0;
  local tmp9:8;
  local tmp10:4;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = 32;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = A4_vrmaxw_Rxx32 s>> tmp14;
  local tmp16:8;
  tmp16 = 4294967295;
  local tmp17:8;
  tmp17 = tmp15 & tmp16;
  tmp10 = tmp17:4;
  tmp9 = zext(tmp10);
  addr = tmp9:4;
  local tmp18:8;
  local tmp19:4;
  local tmp20:4;
  tmp20 = 0;
  local tmp21:4;
  tmp21 = 32;
  local tmp22:4;
  tmp22 = tmp20 * tmp21;
  local tmp23:8;
  tmp23 = zext(tmp22);
  local tmp24:8;
  tmp24 = A4_vrmaxw_Rss32 s>> tmp23;
  local tmp25:8;
  tmp25 = 4294967295;
  local tmp26:8;
  tmp26 = tmp24 & tmp25;
  tmp19 = tmp26:4;
  tmp18 = zext(tmp19);
  local tmp27:1;
  tmp27 = max s< tmp18;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <done_30>;
<t_branch_30>
  local tmp30:8;
  local tmp31:4;
  local tmp32:4;
  tmp32 = 0;
  local tmp33:4;
  tmp33 = 32;
  local tmp34:4;
  tmp34 = tmp32 * tmp33;
  local tmp35:8;
  tmp35 = zext(tmp34);
  local tmp36:8;
  tmp36 = A4_vrmaxw_Rss32 s>> tmp35;
  local tmp37:8;
  tmp37 = 4294967295;
  local tmp38:8;
  tmp38 = tmp36 & tmp37;
  tmp31 = tmp38:4;
  tmp30 = zext(tmp31);
  max = tmp30;
  local tmp39:4;
  tmp39 = 0;
  local tmp40:4;
  tmp40 = 2;
  local tmp41:4;
  tmp41 = tmp39 << tmp40;
  local tmp42:4;
  tmp42 = A4_vrmaxw_Ru32 | tmp41;
  addr = tmp42;
  goto <done_30>;
<done_30>
  local tmp43:8;
  local tmp44:4;
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 32;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:8;
  tmp48 = zext(tmp47);
  local tmp49:8;
  tmp49 = A4_vrmaxw_Rss32 s>> tmp48;
  local tmp50:8;
  tmp50 = 4294967295;
  local tmp51:8;
  tmp51 = tmp49 & tmp50;
  tmp44 = tmp51:4;
  tmp43 = zext(tmp44);
  local tmp52:1;
  tmp52 = max s< tmp43;
  local tmp53:1;
  tmp53 = tmp52;
  if (tmp53) goto <t_branch_55>;
  goto <done_55>;
<t_branch_55>
  local tmp55:8;
  local tmp56:4;
  local tmp57:4;
  tmp57 = 1;
  local tmp58:4;
  tmp58 = 32;
  local tmp59:4;
  tmp59 = tmp57 * tmp58;
  local tmp60:8;
  tmp60 = zext(tmp59);
  local tmp61:8;
  tmp61 = A4_vrmaxw_Rss32 s>> tmp60;
  local tmp62:8;
  tmp62 = 4294967295;
  local tmp63:8;
  tmp63 = tmp61 & tmp62;
  tmp56 = tmp63:4;
  tmp55 = zext(tmp56);
  max = tmp55;
  local tmp64:4;
  tmp64 = 1;
  local tmp65:4;
  tmp65 = 2;
  local tmp66:4;
  tmp66 = tmp64 << tmp65;
  local tmp67:4;
  tmp67 = A4_vrmaxw_Ru32 | tmp66;
  addr = tmp67;
  goto <done_55>;
<done_55>
  local tmp68:8;
  tmp68 = 4294967295;
  local tmp69:4;
  tmp69 = 0;
  local tmp70:4;
  tmp70 = 32;
  local tmp71:4;
  tmp71 = tmp69 * tmp70;
  local tmp72:8;
  tmp72 = zext(tmp71);
  local tmp73:8;
  tmp73 = tmp68 << tmp72;
  local tmp74:8;
  tmp74 = ~ tmp73;
  local tmp75:8;
  tmp75 = A4_vrmaxw_Rxx32 & tmp74;
  local tmp76:8;
  tmp76 = 4294967295;
  local tmp77:8;
  tmp77 = max & tmp76;
  local tmp78:4;
  tmp78 = 0;
  local tmp79:4;
  tmp79 = 32;
  local tmp80:4;
  tmp80 = tmp78 * tmp79;
  local tmp81:8;
  tmp81 = zext(tmp80);
  local tmp82:8;
  tmp82 = tmp77 << tmp81;
  local tmp83:8;
  tmp83 = tmp75 | tmp82;
  A4_vrmaxw_Rxx32 = tmp83;
  local tmp84:8;
  tmp84 = 4294967295;
  local tmp85:4;
  tmp85 = 1;
  local tmp86:4;
  tmp86 = 32;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:8;
  tmp88 = zext(tmp87);
  local tmp89:8;
  tmp89 = tmp84 << tmp88;
  local tmp90:8;
  tmp90 = ~ tmp89;
  local tmp91:8;
  tmp91 = A4_vrmaxw_Rxx32 & tmp90;
  local tmp92:8;
  tmp92 = 4294967295;
  local tmp93:8;
  tmp93 = zext(addr);
  local tmp94:8;
  tmp94 = tmp93 & tmp92;
  local tmp95:4;
  tmp95 = 1;
  local tmp96:4;
  tmp96 = 32;
  local tmp97:4;
  tmp97 = tmp95 * tmp96;
  local tmp98:8;
  tmp98 = zext(tmp97);
  local tmp99:8;
  tmp99 = tmp94 << tmp98;
  local tmp100:8;
  tmp100 = tmp91 | tmp99;
  A4_vrmaxw_Rxx32 = tmp100;
}

:A4_vrminuw A4_vrminuw_Rxx32 A4_vrminuw_Rss32 A4_vrminuw_Ru32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vrminuw_Rxx32 & A4_vrminuw_Rss32 & A4_vrminuw_Ru32 {
  local i:4;
  local min:8;
  local addr:4;
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 32;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = A4_vrminuw_Rxx32 s>> tmp5;
  local tmp7:8;
  tmp7 = 4294967295;
  local tmp8:8;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:4;
  tmp0 = sext(tmp1);
  min = tmp0;
  local tmp9:8;
  local tmp10:4;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = 32;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = A4_vrminuw_Rxx32 s>> tmp14;
  local tmp16:8;
  tmp16 = 4294967295;
  local tmp17:8;
  tmp17 = tmp15 & tmp16;
  tmp10 = tmp17:4;
  tmp9 = zext(tmp10);
  addr = tmp9:4;
  local tmp18:8;
  local tmp19:4;
  local tmp20:4;
  tmp20 = 0;
  local tmp21:4;
  tmp21 = 32;
  local tmp22:4;
  tmp22 = tmp20 * tmp21;
  local tmp23:8;
  tmp23 = zext(tmp22);
  local tmp24:8;
  tmp24 = A4_vrminuw_Rss32 s>> tmp23;
  local tmp25:8;
  tmp25 = 4294967295;
  local tmp26:8;
  tmp26 = tmp24 & tmp25;
  tmp19 = tmp26:4;
  tmp18 = sext(tmp19);
  local tmp27:1;
  tmp27 = min > tmp18;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <done_30>;
<t_branch_30>
  local tmp30:8;
  local tmp31:4;
  local tmp32:4;
  tmp32 = 0;
  local tmp33:4;
  tmp33 = 32;
  local tmp34:4;
  tmp34 = tmp32 * tmp33;
  local tmp35:8;
  tmp35 = zext(tmp34);
  local tmp36:8;
  tmp36 = A4_vrminuw_Rss32 s>> tmp35;
  local tmp37:8;
  tmp37 = 4294967295;
  local tmp38:8;
  tmp38 = tmp36 & tmp37;
  tmp31 = tmp38:4;
  tmp30 = sext(tmp31);
  min = tmp30;
  local tmp39:4;
  tmp39 = 0;
  local tmp40:4;
  tmp40 = 2;
  local tmp41:4;
  tmp41 = tmp39 << tmp40;
  local tmp42:4;
  tmp42 = A4_vrminuw_Ru32 | tmp41;
  addr = tmp42;
  goto <done_30>;
<done_30>
  local tmp43:8;
  local tmp44:4;
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 32;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:8;
  tmp48 = zext(tmp47);
  local tmp49:8;
  tmp49 = A4_vrminuw_Rss32 s>> tmp48;
  local tmp50:8;
  tmp50 = 4294967295;
  local tmp51:8;
  tmp51 = tmp49 & tmp50;
  tmp44 = tmp51:4;
  tmp43 = sext(tmp44);
  local tmp52:1;
  tmp52 = min > tmp43;
  local tmp53:1;
  tmp53 = tmp52;
  if (tmp53) goto <t_branch_55>;
  goto <done_55>;
<t_branch_55>
  local tmp55:8;
  local tmp56:4;
  local tmp57:4;
  tmp57 = 1;
  local tmp58:4;
  tmp58 = 32;
  local tmp59:4;
  tmp59 = tmp57 * tmp58;
  local tmp60:8;
  tmp60 = zext(tmp59);
  local tmp61:8;
  tmp61 = A4_vrminuw_Rss32 s>> tmp60;
  local tmp62:8;
  tmp62 = 4294967295;
  local tmp63:8;
  tmp63 = tmp61 & tmp62;
  tmp56 = tmp63:4;
  tmp55 = sext(tmp56);
  min = tmp55;
  local tmp64:4;
  tmp64 = 1;
  local tmp65:4;
  tmp65 = 2;
  local tmp66:4;
  tmp66 = tmp64 << tmp65;
  local tmp67:4;
  tmp67 = A4_vrminuw_Ru32 | tmp66;
  addr = tmp67;
  goto <done_55>;
<done_55>
  local tmp68:8;
  tmp68 = 4294967295;
  local tmp69:4;
  tmp69 = 0;
  local tmp70:4;
  tmp70 = 32;
  local tmp71:4;
  tmp71 = tmp69 * tmp70;
  local tmp72:8;
  tmp72 = zext(tmp71);
  local tmp73:8;
  tmp73 = tmp68 << tmp72;
  local tmp74:8;
  tmp74 = ~ tmp73;
  local tmp75:8;
  tmp75 = A4_vrminuw_Rxx32 & tmp74;
  local tmp76:8;
  tmp76 = 4294967295;
  local tmp77:8;
  tmp77 = min & tmp76;
  local tmp78:4;
  tmp78 = 0;
  local tmp79:4;
  tmp79 = 32;
  local tmp80:4;
  tmp80 = tmp78 * tmp79;
  local tmp81:8;
  tmp81 = zext(tmp80);
  local tmp82:8;
  tmp82 = tmp77 << tmp81;
  local tmp83:8;
  tmp83 = tmp75 | tmp82;
  A4_vrminuw_Rxx32 = tmp83;
  local tmp84:8;
  tmp84 = 4294967295;
  local tmp85:4;
  tmp85 = 1;
  local tmp86:4;
  tmp86 = 32;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:8;
  tmp88 = zext(tmp87);
  local tmp89:8;
  tmp89 = tmp84 << tmp88;
  local tmp90:8;
  tmp90 = ~ tmp89;
  local tmp91:8;
  tmp91 = A4_vrminuw_Rxx32 & tmp90;
  local tmp92:8;
  tmp92 = 4294967295;
  local tmp93:8;
  tmp93 = zext(addr);
  local tmp94:8;
  tmp94 = tmp93 & tmp92;
  local tmp95:4;
  tmp95 = 1;
  local tmp96:4;
  tmp96 = 32;
  local tmp97:4;
  tmp97 = tmp95 * tmp96;
  local tmp98:8;
  tmp98 = zext(tmp97);
  local tmp99:8;
  tmp99 = tmp94 << tmp98;
  local tmp100:8;
  tmp100 = tmp91 | tmp99;
  A4_vrminuw_Rxx32 = tmp100;
}

:A4_vrmaxuw A4_vrmaxuw_Rxx32 A4_vrmaxuw_Rss32 A4_vrmaxuw_Ru32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & A4_vrmaxuw_Rxx32 & A4_vrmaxuw_Rss32 & A4_vrmaxuw_Ru32 {
  local i:4;
  local max:8;
  local addr:4;
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 32;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = A4_vrmaxuw_Rxx32 s>> tmp5;
  local tmp7:8;
  tmp7 = 4294967295;
  local tmp8:8;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:4;
  tmp0 = sext(tmp1);
  max = tmp0;
  local tmp9:8;
  local tmp10:4;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = 32;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = A4_vrmaxuw_Rxx32 s>> tmp14;
  local tmp16:8;
  tmp16 = 4294967295;
  local tmp17:8;
  tmp17 = tmp15 & tmp16;
  tmp10 = tmp17:4;
  tmp9 = zext(tmp10);
  addr = tmp9:4;
  local tmp18:8;
  local tmp19:4;
  local tmp20:4;
  tmp20 = 0;
  local tmp21:4;
  tmp21 = 32;
  local tmp22:4;
  tmp22 = tmp20 * tmp21;
  local tmp23:8;
  tmp23 = zext(tmp22);
  local tmp24:8;
  tmp24 = A4_vrmaxuw_Rss32 s>> tmp23;
  local tmp25:8;
  tmp25 = 4294967295;
  local tmp26:8;
  tmp26 = tmp24 & tmp25;
  tmp19 = tmp26:4;
  tmp18 = sext(tmp19);
  local tmp27:1;
  tmp27 = max < tmp18;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <done_30>;
<t_branch_30>
  local tmp30:8;
  local tmp31:4;
  local tmp32:4;
  tmp32 = 0;
  local tmp33:4;
  tmp33 = 32;
  local tmp34:4;
  tmp34 = tmp32 * tmp33;
  local tmp35:8;
  tmp35 = zext(tmp34);
  local tmp36:8;
  tmp36 = A4_vrmaxuw_Rss32 s>> tmp35;
  local tmp37:8;
  tmp37 = 4294967295;
  local tmp38:8;
  tmp38 = tmp36 & tmp37;
  tmp31 = tmp38:4;
  tmp30 = sext(tmp31);
  max = tmp30;
  local tmp39:4;
  tmp39 = 0;
  local tmp40:4;
  tmp40 = 2;
  local tmp41:4;
  tmp41 = tmp39 << tmp40;
  local tmp42:4;
  tmp42 = A4_vrmaxuw_Ru32 | tmp41;
  addr = tmp42;
  goto <done_30>;
<done_30>
  local tmp43:8;
  local tmp44:4;
  local tmp45:4;
  tmp45 = 1;
  local tmp46:4;
  tmp46 = 32;
  local tmp47:4;
  tmp47 = tmp45 * tmp46;
  local tmp48:8;
  tmp48 = zext(tmp47);
  local tmp49:8;
  tmp49 = A4_vrmaxuw_Rss32 s>> tmp48;
  local tmp50:8;
  tmp50 = 4294967295;
  local tmp51:8;
  tmp51 = tmp49 & tmp50;
  tmp44 = tmp51:4;
  tmp43 = sext(tmp44);
  local tmp52:1;
  tmp52 = max < tmp43;
  local tmp53:1;
  tmp53 = tmp52;
  if (tmp53) goto <t_branch_55>;
  goto <done_55>;
<t_branch_55>
  local tmp55:8;
  local tmp56:4;
  local tmp57:4;
  tmp57 = 1;
  local tmp58:4;
  tmp58 = 32;
  local tmp59:4;
  tmp59 = tmp57 * tmp58;
  local tmp60:8;
  tmp60 = zext(tmp59);
  local tmp61:8;
  tmp61 = A4_vrmaxuw_Rss32 s>> tmp60;
  local tmp62:8;
  tmp62 = 4294967295;
  local tmp63:8;
  tmp63 = tmp61 & tmp62;
  tmp56 = tmp63:4;
  tmp55 = sext(tmp56);
  max = tmp55;
  local tmp64:4;
  tmp64 = 1;
  local tmp65:4;
  tmp65 = 2;
  local tmp66:4;
  tmp66 = tmp64 << tmp65;
  local tmp67:4;
  tmp67 = A4_vrmaxuw_Ru32 | tmp66;
  addr = tmp67;
  goto <done_55>;
<done_55>
  local tmp68:8;
  tmp68 = 4294967295;
  local tmp69:4;
  tmp69 = 0;
  local tmp70:4;
  tmp70 = 32;
  local tmp71:4;
  tmp71 = tmp69 * tmp70;
  local tmp72:8;
  tmp72 = zext(tmp71);
  local tmp73:8;
  tmp73 = tmp68 << tmp72;
  local tmp74:8;
  tmp74 = ~ tmp73;
  local tmp75:8;
  tmp75 = A4_vrmaxuw_Rxx32 & tmp74;
  local tmp76:8;
  tmp76 = 4294967295;
  local tmp77:8;
  tmp77 = max & tmp76;
  local tmp78:4;
  tmp78 = 0;
  local tmp79:4;
  tmp79 = 32;
  local tmp80:4;
  tmp80 = tmp78 * tmp79;
  local tmp81:8;
  tmp81 = zext(tmp80);
  local tmp82:8;
  tmp82 = tmp77 << tmp81;
  local tmp83:8;
  tmp83 = tmp75 | tmp82;
  A4_vrmaxuw_Rxx32 = tmp83;
  local tmp84:8;
  tmp84 = 4294967295;
  local tmp85:4;
  tmp85 = 1;
  local tmp86:4;
  tmp86 = 32;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:8;
  tmp88 = zext(tmp87);
  local tmp89:8;
  tmp89 = tmp84 << tmp88;
  local tmp90:8;
  tmp90 = ~ tmp89;
  local tmp91:8;
  tmp91 = A4_vrmaxuw_Rxx32 & tmp90;
  local tmp92:8;
  tmp92 = 4294967295;
  local tmp93:8;
  tmp93 = zext(addr);
  local tmp94:8;
  tmp94 = tmp93 & tmp92;
  local tmp95:4;
  tmp95 = 1;
  local tmp96:4;
  tmp96 = 32;
  local tmp97:4;
  tmp97 = tmp95 * tmp96;
  local tmp98:8;
  tmp98 = zext(tmp97);
  local tmp99:8;
  tmp99 = tmp94 << tmp98;
  local tmp100:8;
  tmp100 = tmp91 | tmp99;
  A4_vrmaxuw_Rxx32 = tmp100;
}

:A2_vminb A2_vminb_Rdd32 A2_vminb_Rtt32 A2_vminb_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vminb_Rdd32 & A2_vminb_Rtt32 & A2_vminb_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vminb_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:1;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 8;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vminb_Rtt32 s>> tmp13;
  local tmp15:4;
  tmp15 = 255;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:1;
  local tmp18:1;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 8;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vminb_Rss32 s>> tmp22;
  local tmp24:4;
  tmp24 = 255;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:1;
  local tmp27:1;
  tmp27 = tmp9 s< tmp18;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <f_branch_30>;
<t_branch_30>
  local tmp30:1;
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 8;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = A2_vminb_Rtt32 s>> tmp34;
  local tmp36:4;
  tmp36 = 255;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp35 & tmp37;
  tmp30 = tmp38:1;
  local tmp39:1;
  tmp39 = tmp30;
  goto <done_30>;
<f_branch_30>
  local tmp40:1;
  local tmp41:4;
  tmp41 = 0;
  local tmp42:4;
  tmp42 = 8;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = A2_vminb_Rss32 s>> tmp44;
  local tmp46:4;
  tmp46 = 255;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp45 & tmp47;
  tmp40 = tmp48:1;
  tmp39 = tmp40;
<done_30>
  local tmp49:8;
  tmp49 = 255;
  local tmp50:8;
  tmp50 = zext(tmp39);
  local tmp51:8;
  tmp51 = tmp50 & tmp49;
  tmp8 = tmp51;
  local tmp52:4;
  tmp52 = 0;
  local tmp53:4;
  tmp53 = 8;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp8 << tmp55;
  local tmp57:8;
  tmp57 = tmp7 | tmp56;
  A2_vminb_Rdd32 = tmp57;
  local tmp58:8;
  tmp58 = 255;
  local tmp59:4;
  tmp59 = 1;
  local tmp60:4;
  tmp60 = 8;
  local tmp61:4;
  tmp61 = tmp59 * tmp60;
  local tmp62:8;
  tmp62 = zext(tmp61);
  local tmp63:8;
  tmp63 = tmp58 << tmp62;
  local tmp64:8;
  tmp64 = ~ tmp63;
  local tmp65:8;
  tmp65 = A2_vminb_Rdd32 & tmp64;
  local tmp66:8;
  local tmp67:1;
  local tmp68:4;
  tmp68 = 1;
  local tmp69:4;
  tmp69 = 8;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = A2_vminb_Rtt32 s>> tmp71;
  local tmp73:4;
  tmp73 = 255;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = tmp72 & tmp74;
  tmp67 = tmp75:1;
  local tmp76:1;
  local tmp77:4;
  tmp77 = 1;
  local tmp78:4;
  tmp78 = 8;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = A2_vminb_Rss32 s>> tmp80;
  local tmp82:4;
  tmp82 = 255;
  local tmp83:8;
  tmp83 = zext(tmp82);
  local tmp84:8;
  tmp84 = tmp81 & tmp83;
  tmp76 = tmp84:1;
  local tmp85:1;
  tmp85 = tmp67 s< tmp76;
  local tmp86:1;
  tmp86 = tmp85;
  if (tmp86) goto <t_branch_88>;
  goto <f_branch_88>;
<t_branch_88>
  local tmp88:1;
  local tmp89:4;
  tmp89 = 1;
  local tmp90:4;
  tmp90 = 8;
  local tmp91:4;
  tmp91 = tmp89 * tmp90;
  local tmp92:8;
  tmp92 = zext(tmp91);
  local tmp93:8;
  tmp93 = A2_vminb_Rtt32 s>> tmp92;
  local tmp94:4;
  tmp94 = 255;
  local tmp95:8;
  tmp95 = zext(tmp94);
  local tmp96:8;
  tmp96 = tmp93 & tmp95;
  tmp88 = tmp96:1;
  local tmp97:1;
  tmp97 = tmp88;
  goto <done_88>;
<f_branch_88>
  local tmp98:1;
  local tmp99:4;
  tmp99 = 1;
  local tmp100:4;
  tmp100 = 8;
  local tmp101:4;
  tmp101 = tmp99 * tmp100;
  local tmp102:8;
  tmp102 = zext(tmp101);
  local tmp103:8;
  tmp103 = A2_vminb_Rss32 s>> tmp102;
  local tmp104:4;
  tmp104 = 255;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp103 & tmp105;
  tmp98 = tmp106:1;
  tmp97 = tmp98;
<done_88>
  local tmp107:8;
  tmp107 = 255;
  local tmp108:8;
  tmp108 = zext(tmp97);
  local tmp109:8;
  tmp109 = tmp108 & tmp107;
  tmp66 = tmp109;
  local tmp110:4;
  tmp110 = 1;
  local tmp111:4;
  tmp111 = 8;
  local tmp112:4;
  tmp112 = tmp110 * tmp111;
  local tmp113:8;
  tmp113 = zext(tmp112);
  local tmp114:8;
  tmp114 = tmp66 << tmp113;
  local tmp115:8;
  tmp115 = tmp65 | tmp114;
  A2_vminb_Rdd32 = tmp115;
  local tmp116:8;
  tmp116 = 255;
  local tmp117:4;
  tmp117 = 2;
  local tmp118:4;
  tmp118 = 8;
  local tmp119:4;
  tmp119 = tmp117 * tmp118;
  local tmp120:8;
  tmp120 = zext(tmp119);
  local tmp121:8;
  tmp121 = tmp116 << tmp120;
  local tmp122:8;
  tmp122 = ~ tmp121;
  local tmp123:8;
  tmp123 = A2_vminb_Rdd32 & tmp122;
  local tmp124:8;
  local tmp125:1;
  local tmp126:4;
  tmp126 = 2;
  local tmp127:4;
  tmp127 = 8;
  local tmp128:4;
  tmp128 = tmp126 * tmp127;
  local tmp129:8;
  tmp129 = zext(tmp128);
  local tmp130:8;
  tmp130 = A2_vminb_Rtt32 s>> tmp129;
  local tmp131:4;
  tmp131 = 255;
  local tmp132:8;
  tmp132 = zext(tmp131);
  local tmp133:8;
  tmp133 = tmp130 & tmp132;
  tmp125 = tmp133:1;
  local tmp134:1;
  local tmp135:4;
  tmp135 = 2;
  local tmp136:4;
  tmp136 = 8;
  local tmp137:4;
  tmp137 = tmp135 * tmp136;
  local tmp138:8;
  tmp138 = zext(tmp137);
  local tmp139:8;
  tmp139 = A2_vminb_Rss32 s>> tmp138;
  local tmp140:4;
  tmp140 = 255;
  local tmp141:8;
  tmp141 = zext(tmp140);
  local tmp142:8;
  tmp142 = tmp139 & tmp141;
  tmp134 = tmp142:1;
  local tmp143:1;
  tmp143 = tmp125 s< tmp134;
  local tmp144:1;
  tmp144 = tmp143;
  if (tmp144) goto <t_branch_146>;
  goto <f_branch_146>;
<t_branch_146>
  local tmp146:1;
  local tmp147:4;
  tmp147 = 2;
  local tmp148:4;
  tmp148 = 8;
  local tmp149:4;
  tmp149 = tmp147 * tmp148;
  local tmp150:8;
  tmp150 = zext(tmp149);
  local tmp151:8;
  tmp151 = A2_vminb_Rtt32 s>> tmp150;
  local tmp152:4;
  tmp152 = 255;
  local tmp153:8;
  tmp153 = zext(tmp152);
  local tmp154:8;
  tmp154 = tmp151 & tmp153;
  tmp146 = tmp154:1;
  local tmp155:1;
  tmp155 = tmp146;
  goto <done_146>;
<f_branch_146>
  local tmp156:1;
  local tmp157:4;
  tmp157 = 2;
  local tmp158:4;
  tmp158 = 8;
  local tmp159:4;
  tmp159 = tmp157 * tmp158;
  local tmp160:8;
  tmp160 = zext(tmp159);
  local tmp161:8;
  tmp161 = A2_vminb_Rss32 s>> tmp160;
  local tmp162:4;
  tmp162 = 255;
  local tmp163:8;
  tmp163 = zext(tmp162);
  local tmp164:8;
  tmp164 = tmp161 & tmp163;
  tmp156 = tmp164:1;
  tmp155 = tmp156;
<done_146>
  local tmp165:8;
  tmp165 = 255;
  local tmp166:8;
  tmp166 = zext(tmp155);
  local tmp167:8;
  tmp167 = tmp166 & tmp165;
  tmp124 = tmp167;
  local tmp168:4;
  tmp168 = 2;
  local tmp169:4;
  tmp169 = 8;
  local tmp170:4;
  tmp170 = tmp168 * tmp169;
  local tmp171:8;
  tmp171 = zext(tmp170);
  local tmp172:8;
  tmp172 = tmp124 << tmp171;
  local tmp173:8;
  tmp173 = tmp123 | tmp172;
  A2_vminb_Rdd32 = tmp173;
  local tmp174:8;
  tmp174 = 255;
  local tmp175:4;
  tmp175 = 3;
  local tmp176:4;
  tmp176 = 8;
  local tmp177:4;
  tmp177 = tmp175 * tmp176;
  local tmp178:8;
  tmp178 = zext(tmp177);
  local tmp179:8;
  tmp179 = tmp174 << tmp178;
  local tmp180:8;
  tmp180 = ~ tmp179;
  local tmp181:8;
  tmp181 = A2_vminb_Rdd32 & tmp180;
  local tmp182:8;
  local tmp183:1;
  local tmp184:4;
  tmp184 = 3;
  local tmp185:4;
  tmp185 = 8;
  local tmp186:4;
  tmp186 = tmp184 * tmp185;
  local tmp187:8;
  tmp187 = zext(tmp186);
  local tmp188:8;
  tmp188 = A2_vminb_Rtt32 s>> tmp187;
  local tmp189:4;
  tmp189 = 255;
  local tmp190:8;
  tmp190 = zext(tmp189);
  local tmp191:8;
  tmp191 = tmp188 & tmp190;
  tmp183 = tmp191:1;
  local tmp192:1;
  local tmp193:4;
  tmp193 = 3;
  local tmp194:4;
  tmp194 = 8;
  local tmp195:4;
  tmp195 = tmp193 * tmp194;
  local tmp196:8;
  tmp196 = zext(tmp195);
  local tmp197:8;
  tmp197 = A2_vminb_Rss32 s>> tmp196;
  local tmp198:4;
  tmp198 = 255;
  local tmp199:8;
  tmp199 = zext(tmp198);
  local tmp200:8;
  tmp200 = tmp197 & tmp199;
  tmp192 = tmp200:1;
  local tmp201:1;
  tmp201 = tmp183 s< tmp192;
  local tmp202:1;
  tmp202 = tmp201;
  if (tmp202) goto <t_branch_204>;
  goto <f_branch_204>;
<t_branch_204>
  local tmp204:1;
  local tmp205:4;
  tmp205 = 3;
  local tmp206:4;
  tmp206 = 8;
  local tmp207:4;
  tmp207 = tmp205 * tmp206;
  local tmp208:8;
  tmp208 = zext(tmp207);
  local tmp209:8;
  tmp209 = A2_vminb_Rtt32 s>> tmp208;
  local tmp210:4;
  tmp210 = 255;
  local tmp211:8;
  tmp211 = zext(tmp210);
  local tmp212:8;
  tmp212 = tmp209 & tmp211;
  tmp204 = tmp212:1;
  local tmp213:1;
  tmp213 = tmp204;
  goto <done_204>;
<f_branch_204>
  local tmp214:1;
  local tmp215:4;
  tmp215 = 3;
  local tmp216:4;
  tmp216 = 8;
  local tmp217:4;
  tmp217 = tmp215 * tmp216;
  local tmp218:8;
  tmp218 = zext(tmp217);
  local tmp219:8;
  tmp219 = A2_vminb_Rss32 s>> tmp218;
  local tmp220:4;
  tmp220 = 255;
  local tmp221:8;
  tmp221 = zext(tmp220);
  local tmp222:8;
  tmp222 = tmp219 & tmp221;
  tmp214 = tmp222:1;
  tmp213 = tmp214;
<done_204>
  local tmp223:8;
  tmp223 = 255;
  local tmp224:8;
  tmp224 = zext(tmp213);
  local tmp225:8;
  tmp225 = tmp224 & tmp223;
  tmp182 = tmp225;
  local tmp226:4;
  tmp226 = 3;
  local tmp227:4;
  tmp227 = 8;
  local tmp228:4;
  tmp228 = tmp226 * tmp227;
  local tmp229:8;
  tmp229 = zext(tmp228);
  local tmp230:8;
  tmp230 = tmp182 << tmp229;
  local tmp231:8;
  tmp231 = tmp181 | tmp230;
  A2_vminb_Rdd32 = tmp231;
  local tmp232:8;
  tmp232 = 255;
  local tmp233:4;
  tmp233 = 4;
  local tmp234:4;
  tmp234 = 8;
  local tmp235:4;
  tmp235 = tmp233 * tmp234;
  local tmp236:8;
  tmp236 = zext(tmp235);
  local tmp237:8;
  tmp237 = tmp232 << tmp236;
  local tmp238:8;
  tmp238 = ~ tmp237;
  local tmp239:8;
  tmp239 = A2_vminb_Rdd32 & tmp238;
  local tmp240:8;
  local tmp241:1;
  local tmp242:4;
  tmp242 = 4;
  local tmp243:4;
  tmp243 = 8;
  local tmp244:4;
  tmp244 = tmp242 * tmp243;
  local tmp245:8;
  tmp245 = zext(tmp244);
  local tmp246:8;
  tmp246 = A2_vminb_Rtt32 s>> tmp245;
  local tmp247:4;
  tmp247 = 255;
  local tmp248:8;
  tmp248 = zext(tmp247);
  local tmp249:8;
  tmp249 = tmp246 & tmp248;
  tmp241 = tmp249:1;
  local tmp250:1;
  local tmp251:4;
  tmp251 = 4;
  local tmp252:4;
  tmp252 = 8;
  local tmp253:4;
  tmp253 = tmp251 * tmp252;
  local tmp254:8;
  tmp254 = zext(tmp253);
  local tmp255:8;
  tmp255 = A2_vminb_Rss32 s>> tmp254;
  local tmp256:4;
  tmp256 = 255;
  local tmp257:8;
  tmp257 = zext(tmp256);
  local tmp258:8;
  tmp258 = tmp255 & tmp257;
  tmp250 = tmp258:1;
  local tmp259:1;
  tmp259 = tmp241 s< tmp250;
  local tmp260:1;
  tmp260 = tmp259;
  if (tmp260) goto <t_branch_262>;
  goto <f_branch_262>;
<t_branch_262>
  local tmp262:1;
  local tmp263:4;
  tmp263 = 4;
  local tmp264:4;
  tmp264 = 8;
  local tmp265:4;
  tmp265 = tmp263 * tmp264;
  local tmp266:8;
  tmp266 = zext(tmp265);
  local tmp267:8;
  tmp267 = A2_vminb_Rtt32 s>> tmp266;
  local tmp268:4;
  tmp268 = 255;
  local tmp269:8;
  tmp269 = zext(tmp268);
  local tmp270:8;
  tmp270 = tmp267 & tmp269;
  tmp262 = tmp270:1;
  local tmp271:1;
  tmp271 = tmp262;
  goto <done_262>;
<f_branch_262>
  local tmp272:1;
  local tmp273:4;
  tmp273 = 4;
  local tmp274:4;
  tmp274 = 8;
  local tmp275:4;
  tmp275 = tmp273 * tmp274;
  local tmp276:8;
  tmp276 = zext(tmp275);
  local tmp277:8;
  tmp277 = A2_vminb_Rss32 s>> tmp276;
  local tmp278:4;
  tmp278 = 255;
  local tmp279:8;
  tmp279 = zext(tmp278);
  local tmp280:8;
  tmp280 = tmp277 & tmp279;
  tmp272 = tmp280:1;
  tmp271 = tmp272;
<done_262>
  local tmp281:8;
  tmp281 = 255;
  local tmp282:8;
  tmp282 = zext(tmp271);
  local tmp283:8;
  tmp283 = tmp282 & tmp281;
  tmp240 = tmp283;
  local tmp284:4;
  tmp284 = 4;
  local tmp285:4;
  tmp285 = 8;
  local tmp286:4;
  tmp286 = tmp284 * tmp285;
  local tmp287:8;
  tmp287 = zext(tmp286);
  local tmp288:8;
  tmp288 = tmp240 << tmp287;
  local tmp289:8;
  tmp289 = tmp239 | tmp288;
  A2_vminb_Rdd32 = tmp289;
  local tmp290:8;
  tmp290 = 255;
  local tmp291:4;
  tmp291 = 5;
  local tmp292:4;
  tmp292 = 8;
  local tmp293:4;
  tmp293 = tmp291 * tmp292;
  local tmp294:8;
  tmp294 = zext(tmp293);
  local tmp295:8;
  tmp295 = tmp290 << tmp294;
  local tmp296:8;
  tmp296 = ~ tmp295;
  local tmp297:8;
  tmp297 = A2_vminb_Rdd32 & tmp296;
  local tmp298:8;
  local tmp299:1;
  local tmp300:4;
  tmp300 = 5;
  local tmp301:4;
  tmp301 = 8;
  local tmp302:4;
  tmp302 = tmp300 * tmp301;
  local tmp303:8;
  tmp303 = zext(tmp302);
  local tmp304:8;
  tmp304 = A2_vminb_Rtt32 s>> tmp303;
  local tmp305:4;
  tmp305 = 255;
  local tmp306:8;
  tmp306 = zext(tmp305);
  local tmp307:8;
  tmp307 = tmp304 & tmp306;
  tmp299 = tmp307:1;
  local tmp308:1;
  local tmp309:4;
  tmp309 = 5;
  local tmp310:4;
  tmp310 = 8;
  local tmp311:4;
  tmp311 = tmp309 * tmp310;
  local tmp312:8;
  tmp312 = zext(tmp311);
  local tmp313:8;
  tmp313 = A2_vminb_Rss32 s>> tmp312;
  local tmp314:4;
  tmp314 = 255;
  local tmp315:8;
  tmp315 = zext(tmp314);
  local tmp316:8;
  tmp316 = tmp313 & tmp315;
  tmp308 = tmp316:1;
  local tmp317:1;
  tmp317 = tmp299 s< tmp308;
  local tmp318:1;
  tmp318 = tmp317;
  if (tmp318) goto <t_branch_320>;
  goto <f_branch_320>;
<t_branch_320>
  local tmp320:1;
  local tmp321:4;
  tmp321 = 5;
  local tmp322:4;
  tmp322 = 8;
  local tmp323:4;
  tmp323 = tmp321 * tmp322;
  local tmp324:8;
  tmp324 = zext(tmp323);
  local tmp325:8;
  tmp325 = A2_vminb_Rtt32 s>> tmp324;
  local tmp326:4;
  tmp326 = 255;
  local tmp327:8;
  tmp327 = zext(tmp326);
  local tmp328:8;
  tmp328 = tmp325 & tmp327;
  tmp320 = tmp328:1;
  local tmp329:1;
  tmp329 = tmp320;
  goto <done_320>;
<f_branch_320>
  local tmp330:1;
  local tmp331:4;
  tmp331 = 5;
  local tmp332:4;
  tmp332 = 8;
  local tmp333:4;
  tmp333 = tmp331 * tmp332;
  local tmp334:8;
  tmp334 = zext(tmp333);
  local tmp335:8;
  tmp335 = A2_vminb_Rss32 s>> tmp334;
  local tmp336:4;
  tmp336 = 255;
  local tmp337:8;
  tmp337 = zext(tmp336);
  local tmp338:8;
  tmp338 = tmp335 & tmp337;
  tmp330 = tmp338:1;
  tmp329 = tmp330;
<done_320>
  local tmp339:8;
  tmp339 = 255;
  local tmp340:8;
  tmp340 = zext(tmp329);
  local tmp341:8;
  tmp341 = tmp340 & tmp339;
  tmp298 = tmp341;
  local tmp342:4;
  tmp342 = 5;
  local tmp343:4;
  tmp343 = 8;
  local tmp344:4;
  tmp344 = tmp342 * tmp343;
  local tmp345:8;
  tmp345 = zext(tmp344);
  local tmp346:8;
  tmp346 = tmp298 << tmp345;
  local tmp347:8;
  tmp347 = tmp297 | tmp346;
  A2_vminb_Rdd32 = tmp347;
  local tmp348:8;
  tmp348 = 255;
  local tmp349:4;
  tmp349 = 6;
  local tmp350:4;
  tmp350 = 8;
  local tmp351:4;
  tmp351 = tmp349 * tmp350;
  local tmp352:8;
  tmp352 = zext(tmp351);
  local tmp353:8;
  tmp353 = tmp348 << tmp352;
  local tmp354:8;
  tmp354 = ~ tmp353;
  local tmp355:8;
  tmp355 = A2_vminb_Rdd32 & tmp354;
  local tmp356:8;
  local tmp357:1;
  local tmp358:4;
  tmp358 = 6;
  local tmp359:4;
  tmp359 = 8;
  local tmp360:4;
  tmp360 = tmp358 * tmp359;
  local tmp361:8;
  tmp361 = zext(tmp360);
  local tmp362:8;
  tmp362 = A2_vminb_Rtt32 s>> tmp361;
  local tmp363:4;
  tmp363 = 255;
  local tmp364:8;
  tmp364 = zext(tmp363);
  local tmp365:8;
  tmp365 = tmp362 & tmp364;
  tmp357 = tmp365:1;
  local tmp366:1;
  local tmp367:4;
  tmp367 = 6;
  local tmp368:4;
  tmp368 = 8;
  local tmp369:4;
  tmp369 = tmp367 * tmp368;
  local tmp370:8;
  tmp370 = zext(tmp369);
  local tmp371:8;
  tmp371 = A2_vminb_Rss32 s>> tmp370;
  local tmp372:4;
  tmp372 = 255;
  local tmp373:8;
  tmp373 = zext(tmp372);
  local tmp374:8;
  tmp374 = tmp371 & tmp373;
  tmp366 = tmp374:1;
  local tmp375:1;
  tmp375 = tmp357 s< tmp366;
  local tmp376:1;
  tmp376 = tmp375;
  if (tmp376) goto <t_branch_378>;
  goto <f_branch_378>;
<t_branch_378>
  local tmp378:1;
  local tmp379:4;
  tmp379 = 6;
  local tmp380:4;
  tmp380 = 8;
  local tmp381:4;
  tmp381 = tmp379 * tmp380;
  local tmp382:8;
  tmp382 = zext(tmp381);
  local tmp383:8;
  tmp383 = A2_vminb_Rtt32 s>> tmp382;
  local tmp384:4;
  tmp384 = 255;
  local tmp385:8;
  tmp385 = zext(tmp384);
  local tmp386:8;
  tmp386 = tmp383 & tmp385;
  tmp378 = tmp386:1;
  local tmp387:1;
  tmp387 = tmp378;
  goto <done_378>;
<f_branch_378>
  local tmp388:1;
  local tmp389:4;
  tmp389 = 6;
  local tmp390:4;
  tmp390 = 8;
  local tmp391:4;
  tmp391 = tmp389 * tmp390;
  local tmp392:8;
  tmp392 = zext(tmp391);
  local tmp393:8;
  tmp393 = A2_vminb_Rss32 s>> tmp392;
  local tmp394:4;
  tmp394 = 255;
  local tmp395:8;
  tmp395 = zext(tmp394);
  local tmp396:8;
  tmp396 = tmp393 & tmp395;
  tmp388 = tmp396:1;
  tmp387 = tmp388;
<done_378>
  local tmp397:8;
  tmp397 = 255;
  local tmp398:8;
  tmp398 = zext(tmp387);
  local tmp399:8;
  tmp399 = tmp398 & tmp397;
  tmp356 = tmp399;
  local tmp400:4;
  tmp400 = 6;
  local tmp401:4;
  tmp401 = 8;
  local tmp402:4;
  tmp402 = tmp400 * tmp401;
  local tmp403:8;
  tmp403 = zext(tmp402);
  local tmp404:8;
  tmp404 = tmp356 << tmp403;
  local tmp405:8;
  tmp405 = tmp355 | tmp404;
  A2_vminb_Rdd32 = tmp405;
  local tmp406:8;
  tmp406 = 255;
  local tmp407:4;
  tmp407 = 7;
  local tmp408:4;
  tmp408 = 8;
  local tmp409:4;
  tmp409 = tmp407 * tmp408;
  local tmp410:8;
  tmp410 = zext(tmp409);
  local tmp411:8;
  tmp411 = tmp406 << tmp410;
  local tmp412:8;
  tmp412 = ~ tmp411;
  local tmp413:8;
  tmp413 = A2_vminb_Rdd32 & tmp412;
  local tmp414:8;
  local tmp415:1;
  local tmp416:4;
  tmp416 = 7;
  local tmp417:4;
  tmp417 = 8;
  local tmp418:4;
  tmp418 = tmp416 * tmp417;
  local tmp419:8;
  tmp419 = zext(tmp418);
  local tmp420:8;
  tmp420 = A2_vminb_Rtt32 s>> tmp419;
  local tmp421:4;
  tmp421 = 255;
  local tmp422:8;
  tmp422 = zext(tmp421);
  local tmp423:8;
  tmp423 = tmp420 & tmp422;
  tmp415 = tmp423:1;
  local tmp424:1;
  local tmp425:4;
  tmp425 = 7;
  local tmp426:4;
  tmp426 = 8;
  local tmp427:4;
  tmp427 = tmp425 * tmp426;
  local tmp428:8;
  tmp428 = zext(tmp427);
  local tmp429:8;
  tmp429 = A2_vminb_Rss32 s>> tmp428;
  local tmp430:4;
  tmp430 = 255;
  local tmp431:8;
  tmp431 = zext(tmp430);
  local tmp432:8;
  tmp432 = tmp429 & tmp431;
  tmp424 = tmp432:1;
  local tmp433:1;
  tmp433 = tmp415 s< tmp424;
  local tmp434:1;
  tmp434 = tmp433;
  if (tmp434) goto <t_branch_436>;
  goto <f_branch_436>;
<t_branch_436>
  local tmp436:1;
  local tmp437:4;
  tmp437 = 7;
  local tmp438:4;
  tmp438 = 8;
  local tmp439:4;
  tmp439 = tmp437 * tmp438;
  local tmp440:8;
  tmp440 = zext(tmp439);
  local tmp441:8;
  tmp441 = A2_vminb_Rtt32 s>> tmp440;
  local tmp442:4;
  tmp442 = 255;
  local tmp443:8;
  tmp443 = zext(tmp442);
  local tmp444:8;
  tmp444 = tmp441 & tmp443;
  tmp436 = tmp444:1;
  local tmp445:1;
  tmp445 = tmp436;
  goto <done_436>;
<f_branch_436>
  local tmp446:1;
  local tmp447:4;
  tmp447 = 7;
  local tmp448:4;
  tmp448 = 8;
  local tmp449:4;
  tmp449 = tmp447 * tmp448;
  local tmp450:8;
  tmp450 = zext(tmp449);
  local tmp451:8;
  tmp451 = A2_vminb_Rss32 s>> tmp450;
  local tmp452:4;
  tmp452 = 255;
  local tmp453:8;
  tmp453 = zext(tmp452);
  local tmp454:8;
  tmp454 = tmp451 & tmp453;
  tmp446 = tmp454:1;
  tmp445 = tmp446;
<done_436>
  local tmp455:8;
  tmp455 = 255;
  local tmp456:8;
  tmp456 = zext(tmp445);
  local tmp457:8;
  tmp457 = tmp456 & tmp455;
  tmp414 = tmp457;
  local tmp458:4;
  tmp458 = 7;
  local tmp459:4;
  tmp459 = 8;
  local tmp460:4;
  tmp460 = tmp458 * tmp459;
  local tmp461:8;
  tmp461 = zext(tmp460);
  local tmp462:8;
  tmp462 = tmp414 << tmp461;
  local tmp463:8;
  tmp463 = tmp413 | tmp462;
  A2_vminb_Rdd32 = tmp463;
}

:A2_vmaxb A2_vmaxb_Rdd32 A2_vmaxb_Rtt32 A2_vmaxb_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vmaxb_Rdd32 & A2_vmaxb_Rtt32 & A2_vmaxb_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vmaxb_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:1;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 8;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vmaxb_Rtt32 s>> tmp13;
  local tmp15:4;
  tmp15 = 255;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:1;
  local tmp18:1;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 8;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vmaxb_Rss32 s>> tmp22;
  local tmp24:4;
  tmp24 = 255;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:1;
  local tmp27:1;
  tmp27 = tmp9 s> tmp18;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <f_branch_30>;
<t_branch_30>
  local tmp30:1;
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 8;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = A2_vmaxb_Rtt32 s>> tmp34;
  local tmp36:4;
  tmp36 = 255;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp35 & tmp37;
  tmp30 = tmp38:1;
  local tmp39:1;
  tmp39 = tmp30;
  goto <done_30>;
<f_branch_30>
  local tmp40:1;
  local tmp41:4;
  tmp41 = 0;
  local tmp42:4;
  tmp42 = 8;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = A2_vmaxb_Rss32 s>> tmp44;
  local tmp46:4;
  tmp46 = 255;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp45 & tmp47;
  tmp40 = tmp48:1;
  tmp39 = tmp40;
<done_30>
  local tmp49:8;
  tmp49 = 255;
  local tmp50:8;
  tmp50 = zext(tmp39);
  local tmp51:8;
  tmp51 = tmp50 & tmp49;
  tmp8 = tmp51;
  local tmp52:4;
  tmp52 = 0;
  local tmp53:4;
  tmp53 = 8;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp8 << tmp55;
  local tmp57:8;
  tmp57 = tmp7 | tmp56;
  A2_vmaxb_Rdd32 = tmp57;
  local tmp58:8;
  tmp58 = 255;
  local tmp59:4;
  tmp59 = 1;
  local tmp60:4;
  tmp60 = 8;
  local tmp61:4;
  tmp61 = tmp59 * tmp60;
  local tmp62:8;
  tmp62 = zext(tmp61);
  local tmp63:8;
  tmp63 = tmp58 << tmp62;
  local tmp64:8;
  tmp64 = ~ tmp63;
  local tmp65:8;
  tmp65 = A2_vmaxb_Rdd32 & tmp64;
  local tmp66:8;
  local tmp67:1;
  local tmp68:4;
  tmp68 = 1;
  local tmp69:4;
  tmp69 = 8;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = A2_vmaxb_Rtt32 s>> tmp71;
  local tmp73:4;
  tmp73 = 255;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = tmp72 & tmp74;
  tmp67 = tmp75:1;
  local tmp76:1;
  local tmp77:4;
  tmp77 = 1;
  local tmp78:4;
  tmp78 = 8;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = A2_vmaxb_Rss32 s>> tmp80;
  local tmp82:4;
  tmp82 = 255;
  local tmp83:8;
  tmp83 = zext(tmp82);
  local tmp84:8;
  tmp84 = tmp81 & tmp83;
  tmp76 = tmp84:1;
  local tmp85:1;
  tmp85 = tmp67 s> tmp76;
  local tmp86:1;
  tmp86 = tmp85;
  if (tmp86) goto <t_branch_88>;
  goto <f_branch_88>;
<t_branch_88>
  local tmp88:1;
  local tmp89:4;
  tmp89 = 1;
  local tmp90:4;
  tmp90 = 8;
  local tmp91:4;
  tmp91 = tmp89 * tmp90;
  local tmp92:8;
  tmp92 = zext(tmp91);
  local tmp93:8;
  tmp93 = A2_vmaxb_Rtt32 s>> tmp92;
  local tmp94:4;
  tmp94 = 255;
  local tmp95:8;
  tmp95 = zext(tmp94);
  local tmp96:8;
  tmp96 = tmp93 & tmp95;
  tmp88 = tmp96:1;
  local tmp97:1;
  tmp97 = tmp88;
  goto <done_88>;
<f_branch_88>
  local tmp98:1;
  local tmp99:4;
  tmp99 = 1;
  local tmp100:4;
  tmp100 = 8;
  local tmp101:4;
  tmp101 = tmp99 * tmp100;
  local tmp102:8;
  tmp102 = zext(tmp101);
  local tmp103:8;
  tmp103 = A2_vmaxb_Rss32 s>> tmp102;
  local tmp104:4;
  tmp104 = 255;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp103 & tmp105;
  tmp98 = tmp106:1;
  tmp97 = tmp98;
<done_88>
  local tmp107:8;
  tmp107 = 255;
  local tmp108:8;
  tmp108 = zext(tmp97);
  local tmp109:8;
  tmp109 = tmp108 & tmp107;
  tmp66 = tmp109;
  local tmp110:4;
  tmp110 = 1;
  local tmp111:4;
  tmp111 = 8;
  local tmp112:4;
  tmp112 = tmp110 * tmp111;
  local tmp113:8;
  tmp113 = zext(tmp112);
  local tmp114:8;
  tmp114 = tmp66 << tmp113;
  local tmp115:8;
  tmp115 = tmp65 | tmp114;
  A2_vmaxb_Rdd32 = tmp115;
  local tmp116:8;
  tmp116 = 255;
  local tmp117:4;
  tmp117 = 2;
  local tmp118:4;
  tmp118 = 8;
  local tmp119:4;
  tmp119 = tmp117 * tmp118;
  local tmp120:8;
  tmp120 = zext(tmp119);
  local tmp121:8;
  tmp121 = tmp116 << tmp120;
  local tmp122:8;
  tmp122 = ~ tmp121;
  local tmp123:8;
  tmp123 = A2_vmaxb_Rdd32 & tmp122;
  local tmp124:8;
  local tmp125:1;
  local tmp126:4;
  tmp126 = 2;
  local tmp127:4;
  tmp127 = 8;
  local tmp128:4;
  tmp128 = tmp126 * tmp127;
  local tmp129:8;
  tmp129 = zext(tmp128);
  local tmp130:8;
  tmp130 = A2_vmaxb_Rtt32 s>> tmp129;
  local tmp131:4;
  tmp131 = 255;
  local tmp132:8;
  tmp132 = zext(tmp131);
  local tmp133:8;
  tmp133 = tmp130 & tmp132;
  tmp125 = tmp133:1;
  local tmp134:1;
  local tmp135:4;
  tmp135 = 2;
  local tmp136:4;
  tmp136 = 8;
  local tmp137:4;
  tmp137 = tmp135 * tmp136;
  local tmp138:8;
  tmp138 = zext(tmp137);
  local tmp139:8;
  tmp139 = A2_vmaxb_Rss32 s>> tmp138;
  local tmp140:4;
  tmp140 = 255;
  local tmp141:8;
  tmp141 = zext(tmp140);
  local tmp142:8;
  tmp142 = tmp139 & tmp141;
  tmp134 = tmp142:1;
  local tmp143:1;
  tmp143 = tmp125 s> tmp134;
  local tmp144:1;
  tmp144 = tmp143;
  if (tmp144) goto <t_branch_146>;
  goto <f_branch_146>;
<t_branch_146>
  local tmp146:1;
  local tmp147:4;
  tmp147 = 2;
  local tmp148:4;
  tmp148 = 8;
  local tmp149:4;
  tmp149 = tmp147 * tmp148;
  local tmp150:8;
  tmp150 = zext(tmp149);
  local tmp151:8;
  tmp151 = A2_vmaxb_Rtt32 s>> tmp150;
  local tmp152:4;
  tmp152 = 255;
  local tmp153:8;
  tmp153 = zext(tmp152);
  local tmp154:8;
  tmp154 = tmp151 & tmp153;
  tmp146 = tmp154:1;
  local tmp155:1;
  tmp155 = tmp146;
  goto <done_146>;
<f_branch_146>
  local tmp156:1;
  local tmp157:4;
  tmp157 = 2;
  local tmp158:4;
  tmp158 = 8;
  local tmp159:4;
  tmp159 = tmp157 * tmp158;
  local tmp160:8;
  tmp160 = zext(tmp159);
  local tmp161:8;
  tmp161 = A2_vmaxb_Rss32 s>> tmp160;
  local tmp162:4;
  tmp162 = 255;
  local tmp163:8;
  tmp163 = zext(tmp162);
  local tmp164:8;
  tmp164 = tmp161 & tmp163;
  tmp156 = tmp164:1;
  tmp155 = tmp156;
<done_146>
  local tmp165:8;
  tmp165 = 255;
  local tmp166:8;
  tmp166 = zext(tmp155);
  local tmp167:8;
  tmp167 = tmp166 & tmp165;
  tmp124 = tmp167;
  local tmp168:4;
  tmp168 = 2;
  local tmp169:4;
  tmp169 = 8;
  local tmp170:4;
  tmp170 = tmp168 * tmp169;
  local tmp171:8;
  tmp171 = zext(tmp170);
  local tmp172:8;
  tmp172 = tmp124 << tmp171;
  local tmp173:8;
  tmp173 = tmp123 | tmp172;
  A2_vmaxb_Rdd32 = tmp173;
  local tmp174:8;
  tmp174 = 255;
  local tmp175:4;
  tmp175 = 3;
  local tmp176:4;
  tmp176 = 8;
  local tmp177:4;
  tmp177 = tmp175 * tmp176;
  local tmp178:8;
  tmp178 = zext(tmp177);
  local tmp179:8;
  tmp179 = tmp174 << tmp178;
  local tmp180:8;
  tmp180 = ~ tmp179;
  local tmp181:8;
  tmp181 = A2_vmaxb_Rdd32 & tmp180;
  local tmp182:8;
  local tmp183:1;
  local tmp184:4;
  tmp184 = 3;
  local tmp185:4;
  tmp185 = 8;
  local tmp186:4;
  tmp186 = tmp184 * tmp185;
  local tmp187:8;
  tmp187 = zext(tmp186);
  local tmp188:8;
  tmp188 = A2_vmaxb_Rtt32 s>> tmp187;
  local tmp189:4;
  tmp189 = 255;
  local tmp190:8;
  tmp190 = zext(tmp189);
  local tmp191:8;
  tmp191 = tmp188 & tmp190;
  tmp183 = tmp191:1;
  local tmp192:1;
  local tmp193:4;
  tmp193 = 3;
  local tmp194:4;
  tmp194 = 8;
  local tmp195:4;
  tmp195 = tmp193 * tmp194;
  local tmp196:8;
  tmp196 = zext(tmp195);
  local tmp197:8;
  tmp197 = A2_vmaxb_Rss32 s>> tmp196;
  local tmp198:4;
  tmp198 = 255;
  local tmp199:8;
  tmp199 = zext(tmp198);
  local tmp200:8;
  tmp200 = tmp197 & tmp199;
  tmp192 = tmp200:1;
  local tmp201:1;
  tmp201 = tmp183 s> tmp192;
  local tmp202:1;
  tmp202 = tmp201;
  if (tmp202) goto <t_branch_204>;
  goto <f_branch_204>;
<t_branch_204>
  local tmp204:1;
  local tmp205:4;
  tmp205 = 3;
  local tmp206:4;
  tmp206 = 8;
  local tmp207:4;
  tmp207 = tmp205 * tmp206;
  local tmp208:8;
  tmp208 = zext(tmp207);
  local tmp209:8;
  tmp209 = A2_vmaxb_Rtt32 s>> tmp208;
  local tmp210:4;
  tmp210 = 255;
  local tmp211:8;
  tmp211 = zext(tmp210);
  local tmp212:8;
  tmp212 = tmp209 & tmp211;
  tmp204 = tmp212:1;
  local tmp213:1;
  tmp213 = tmp204;
  goto <done_204>;
<f_branch_204>
  local tmp214:1;
  local tmp215:4;
  tmp215 = 3;
  local tmp216:4;
  tmp216 = 8;
  local tmp217:4;
  tmp217 = tmp215 * tmp216;
  local tmp218:8;
  tmp218 = zext(tmp217);
  local tmp219:8;
  tmp219 = A2_vmaxb_Rss32 s>> tmp218;
  local tmp220:4;
  tmp220 = 255;
  local tmp221:8;
  tmp221 = zext(tmp220);
  local tmp222:8;
  tmp222 = tmp219 & tmp221;
  tmp214 = tmp222:1;
  tmp213 = tmp214;
<done_204>
  local tmp223:8;
  tmp223 = 255;
  local tmp224:8;
  tmp224 = zext(tmp213);
  local tmp225:8;
  tmp225 = tmp224 & tmp223;
  tmp182 = tmp225;
  local tmp226:4;
  tmp226 = 3;
  local tmp227:4;
  tmp227 = 8;
  local tmp228:4;
  tmp228 = tmp226 * tmp227;
  local tmp229:8;
  tmp229 = zext(tmp228);
  local tmp230:8;
  tmp230 = tmp182 << tmp229;
  local tmp231:8;
  tmp231 = tmp181 | tmp230;
  A2_vmaxb_Rdd32 = tmp231;
  local tmp232:8;
  tmp232 = 255;
  local tmp233:4;
  tmp233 = 4;
  local tmp234:4;
  tmp234 = 8;
  local tmp235:4;
  tmp235 = tmp233 * tmp234;
  local tmp236:8;
  tmp236 = zext(tmp235);
  local tmp237:8;
  tmp237 = tmp232 << tmp236;
  local tmp238:8;
  tmp238 = ~ tmp237;
  local tmp239:8;
  tmp239 = A2_vmaxb_Rdd32 & tmp238;
  local tmp240:8;
  local tmp241:1;
  local tmp242:4;
  tmp242 = 4;
  local tmp243:4;
  tmp243 = 8;
  local tmp244:4;
  tmp244 = tmp242 * tmp243;
  local tmp245:8;
  tmp245 = zext(tmp244);
  local tmp246:8;
  tmp246 = A2_vmaxb_Rtt32 s>> tmp245;
  local tmp247:4;
  tmp247 = 255;
  local tmp248:8;
  tmp248 = zext(tmp247);
  local tmp249:8;
  tmp249 = tmp246 & tmp248;
  tmp241 = tmp249:1;
  local tmp250:1;
  local tmp251:4;
  tmp251 = 4;
  local tmp252:4;
  tmp252 = 8;
  local tmp253:4;
  tmp253 = tmp251 * tmp252;
  local tmp254:8;
  tmp254 = zext(tmp253);
  local tmp255:8;
  tmp255 = A2_vmaxb_Rss32 s>> tmp254;
  local tmp256:4;
  tmp256 = 255;
  local tmp257:8;
  tmp257 = zext(tmp256);
  local tmp258:8;
  tmp258 = tmp255 & tmp257;
  tmp250 = tmp258:1;
  local tmp259:1;
  tmp259 = tmp241 s> tmp250;
  local tmp260:1;
  tmp260 = tmp259;
  if (tmp260) goto <t_branch_262>;
  goto <f_branch_262>;
<t_branch_262>
  local tmp262:1;
  local tmp263:4;
  tmp263 = 4;
  local tmp264:4;
  tmp264 = 8;
  local tmp265:4;
  tmp265 = tmp263 * tmp264;
  local tmp266:8;
  tmp266 = zext(tmp265);
  local tmp267:8;
  tmp267 = A2_vmaxb_Rtt32 s>> tmp266;
  local tmp268:4;
  tmp268 = 255;
  local tmp269:8;
  tmp269 = zext(tmp268);
  local tmp270:8;
  tmp270 = tmp267 & tmp269;
  tmp262 = tmp270:1;
  local tmp271:1;
  tmp271 = tmp262;
  goto <done_262>;
<f_branch_262>
  local tmp272:1;
  local tmp273:4;
  tmp273 = 4;
  local tmp274:4;
  tmp274 = 8;
  local tmp275:4;
  tmp275 = tmp273 * tmp274;
  local tmp276:8;
  tmp276 = zext(tmp275);
  local tmp277:8;
  tmp277 = A2_vmaxb_Rss32 s>> tmp276;
  local tmp278:4;
  tmp278 = 255;
  local tmp279:8;
  tmp279 = zext(tmp278);
  local tmp280:8;
  tmp280 = tmp277 & tmp279;
  tmp272 = tmp280:1;
  tmp271 = tmp272;
<done_262>
  local tmp281:8;
  tmp281 = 255;
  local tmp282:8;
  tmp282 = zext(tmp271);
  local tmp283:8;
  tmp283 = tmp282 & tmp281;
  tmp240 = tmp283;
  local tmp284:4;
  tmp284 = 4;
  local tmp285:4;
  tmp285 = 8;
  local tmp286:4;
  tmp286 = tmp284 * tmp285;
  local tmp287:8;
  tmp287 = zext(tmp286);
  local tmp288:8;
  tmp288 = tmp240 << tmp287;
  local tmp289:8;
  tmp289 = tmp239 | tmp288;
  A2_vmaxb_Rdd32 = tmp289;
  local tmp290:8;
  tmp290 = 255;
  local tmp291:4;
  tmp291 = 5;
  local tmp292:4;
  tmp292 = 8;
  local tmp293:4;
  tmp293 = tmp291 * tmp292;
  local tmp294:8;
  tmp294 = zext(tmp293);
  local tmp295:8;
  tmp295 = tmp290 << tmp294;
  local tmp296:8;
  tmp296 = ~ tmp295;
  local tmp297:8;
  tmp297 = A2_vmaxb_Rdd32 & tmp296;
  local tmp298:8;
  local tmp299:1;
  local tmp300:4;
  tmp300 = 5;
  local tmp301:4;
  tmp301 = 8;
  local tmp302:4;
  tmp302 = tmp300 * tmp301;
  local tmp303:8;
  tmp303 = zext(tmp302);
  local tmp304:8;
  tmp304 = A2_vmaxb_Rtt32 s>> tmp303;
  local tmp305:4;
  tmp305 = 255;
  local tmp306:8;
  tmp306 = zext(tmp305);
  local tmp307:8;
  tmp307 = tmp304 & tmp306;
  tmp299 = tmp307:1;
  local tmp308:1;
  local tmp309:4;
  tmp309 = 5;
  local tmp310:4;
  tmp310 = 8;
  local tmp311:4;
  tmp311 = tmp309 * tmp310;
  local tmp312:8;
  tmp312 = zext(tmp311);
  local tmp313:8;
  tmp313 = A2_vmaxb_Rss32 s>> tmp312;
  local tmp314:4;
  tmp314 = 255;
  local tmp315:8;
  tmp315 = zext(tmp314);
  local tmp316:8;
  tmp316 = tmp313 & tmp315;
  tmp308 = tmp316:1;
  local tmp317:1;
  tmp317 = tmp299 s> tmp308;
  local tmp318:1;
  tmp318 = tmp317;
  if (tmp318) goto <t_branch_320>;
  goto <f_branch_320>;
<t_branch_320>
  local tmp320:1;
  local tmp321:4;
  tmp321 = 5;
  local tmp322:4;
  tmp322 = 8;
  local tmp323:4;
  tmp323 = tmp321 * tmp322;
  local tmp324:8;
  tmp324 = zext(tmp323);
  local tmp325:8;
  tmp325 = A2_vmaxb_Rtt32 s>> tmp324;
  local tmp326:4;
  tmp326 = 255;
  local tmp327:8;
  tmp327 = zext(tmp326);
  local tmp328:8;
  tmp328 = tmp325 & tmp327;
  tmp320 = tmp328:1;
  local tmp329:1;
  tmp329 = tmp320;
  goto <done_320>;
<f_branch_320>
  local tmp330:1;
  local tmp331:4;
  tmp331 = 5;
  local tmp332:4;
  tmp332 = 8;
  local tmp333:4;
  tmp333 = tmp331 * tmp332;
  local tmp334:8;
  tmp334 = zext(tmp333);
  local tmp335:8;
  tmp335 = A2_vmaxb_Rss32 s>> tmp334;
  local tmp336:4;
  tmp336 = 255;
  local tmp337:8;
  tmp337 = zext(tmp336);
  local tmp338:8;
  tmp338 = tmp335 & tmp337;
  tmp330 = tmp338:1;
  tmp329 = tmp330;
<done_320>
  local tmp339:8;
  tmp339 = 255;
  local tmp340:8;
  tmp340 = zext(tmp329);
  local tmp341:8;
  tmp341 = tmp340 & tmp339;
  tmp298 = tmp341;
  local tmp342:4;
  tmp342 = 5;
  local tmp343:4;
  tmp343 = 8;
  local tmp344:4;
  tmp344 = tmp342 * tmp343;
  local tmp345:8;
  tmp345 = zext(tmp344);
  local tmp346:8;
  tmp346 = tmp298 << tmp345;
  local tmp347:8;
  tmp347 = tmp297 | tmp346;
  A2_vmaxb_Rdd32 = tmp347;
  local tmp348:8;
  tmp348 = 255;
  local tmp349:4;
  tmp349 = 6;
  local tmp350:4;
  tmp350 = 8;
  local tmp351:4;
  tmp351 = tmp349 * tmp350;
  local tmp352:8;
  tmp352 = zext(tmp351);
  local tmp353:8;
  tmp353 = tmp348 << tmp352;
  local tmp354:8;
  tmp354 = ~ tmp353;
  local tmp355:8;
  tmp355 = A2_vmaxb_Rdd32 & tmp354;
  local tmp356:8;
  local tmp357:1;
  local tmp358:4;
  tmp358 = 6;
  local tmp359:4;
  tmp359 = 8;
  local tmp360:4;
  tmp360 = tmp358 * tmp359;
  local tmp361:8;
  tmp361 = zext(tmp360);
  local tmp362:8;
  tmp362 = A2_vmaxb_Rtt32 s>> tmp361;
  local tmp363:4;
  tmp363 = 255;
  local tmp364:8;
  tmp364 = zext(tmp363);
  local tmp365:8;
  tmp365 = tmp362 & tmp364;
  tmp357 = tmp365:1;
  local tmp366:1;
  local tmp367:4;
  tmp367 = 6;
  local tmp368:4;
  tmp368 = 8;
  local tmp369:4;
  tmp369 = tmp367 * tmp368;
  local tmp370:8;
  tmp370 = zext(tmp369);
  local tmp371:8;
  tmp371 = A2_vmaxb_Rss32 s>> tmp370;
  local tmp372:4;
  tmp372 = 255;
  local tmp373:8;
  tmp373 = zext(tmp372);
  local tmp374:8;
  tmp374 = tmp371 & tmp373;
  tmp366 = tmp374:1;
  local tmp375:1;
  tmp375 = tmp357 s> tmp366;
  local tmp376:1;
  tmp376 = tmp375;
  if (tmp376) goto <t_branch_378>;
  goto <f_branch_378>;
<t_branch_378>
  local tmp378:1;
  local tmp379:4;
  tmp379 = 6;
  local tmp380:4;
  tmp380 = 8;
  local tmp381:4;
  tmp381 = tmp379 * tmp380;
  local tmp382:8;
  tmp382 = zext(tmp381);
  local tmp383:8;
  tmp383 = A2_vmaxb_Rtt32 s>> tmp382;
  local tmp384:4;
  tmp384 = 255;
  local tmp385:8;
  tmp385 = zext(tmp384);
  local tmp386:8;
  tmp386 = tmp383 & tmp385;
  tmp378 = tmp386:1;
  local tmp387:1;
  tmp387 = tmp378;
  goto <done_378>;
<f_branch_378>
  local tmp388:1;
  local tmp389:4;
  tmp389 = 6;
  local tmp390:4;
  tmp390 = 8;
  local tmp391:4;
  tmp391 = tmp389 * tmp390;
  local tmp392:8;
  tmp392 = zext(tmp391);
  local tmp393:8;
  tmp393 = A2_vmaxb_Rss32 s>> tmp392;
  local tmp394:4;
  tmp394 = 255;
  local tmp395:8;
  tmp395 = zext(tmp394);
  local tmp396:8;
  tmp396 = tmp393 & tmp395;
  tmp388 = tmp396:1;
  tmp387 = tmp388;
<done_378>
  local tmp397:8;
  tmp397 = 255;
  local tmp398:8;
  tmp398 = zext(tmp387);
  local tmp399:8;
  tmp399 = tmp398 & tmp397;
  tmp356 = tmp399;
  local tmp400:4;
  tmp400 = 6;
  local tmp401:4;
  tmp401 = 8;
  local tmp402:4;
  tmp402 = tmp400 * tmp401;
  local tmp403:8;
  tmp403 = zext(tmp402);
  local tmp404:8;
  tmp404 = tmp356 << tmp403;
  local tmp405:8;
  tmp405 = tmp355 | tmp404;
  A2_vmaxb_Rdd32 = tmp405;
  local tmp406:8;
  tmp406 = 255;
  local tmp407:4;
  tmp407 = 7;
  local tmp408:4;
  tmp408 = 8;
  local tmp409:4;
  tmp409 = tmp407 * tmp408;
  local tmp410:8;
  tmp410 = zext(tmp409);
  local tmp411:8;
  tmp411 = tmp406 << tmp410;
  local tmp412:8;
  tmp412 = ~ tmp411;
  local tmp413:8;
  tmp413 = A2_vmaxb_Rdd32 & tmp412;
  local tmp414:8;
  local tmp415:1;
  local tmp416:4;
  tmp416 = 7;
  local tmp417:4;
  tmp417 = 8;
  local tmp418:4;
  tmp418 = tmp416 * tmp417;
  local tmp419:8;
  tmp419 = zext(tmp418);
  local tmp420:8;
  tmp420 = A2_vmaxb_Rtt32 s>> tmp419;
  local tmp421:4;
  tmp421 = 255;
  local tmp422:8;
  tmp422 = zext(tmp421);
  local tmp423:8;
  tmp423 = tmp420 & tmp422;
  tmp415 = tmp423:1;
  local tmp424:1;
  local tmp425:4;
  tmp425 = 7;
  local tmp426:4;
  tmp426 = 8;
  local tmp427:4;
  tmp427 = tmp425 * tmp426;
  local tmp428:8;
  tmp428 = zext(tmp427);
  local tmp429:8;
  tmp429 = A2_vmaxb_Rss32 s>> tmp428;
  local tmp430:4;
  tmp430 = 255;
  local tmp431:8;
  tmp431 = zext(tmp430);
  local tmp432:8;
  tmp432 = tmp429 & tmp431;
  tmp424 = tmp432:1;
  local tmp433:1;
  tmp433 = tmp415 s> tmp424;
  local tmp434:1;
  tmp434 = tmp433;
  if (tmp434) goto <t_branch_436>;
  goto <f_branch_436>;
<t_branch_436>
  local tmp436:1;
  local tmp437:4;
  tmp437 = 7;
  local tmp438:4;
  tmp438 = 8;
  local tmp439:4;
  tmp439 = tmp437 * tmp438;
  local tmp440:8;
  tmp440 = zext(tmp439);
  local tmp441:8;
  tmp441 = A2_vmaxb_Rtt32 s>> tmp440;
  local tmp442:4;
  tmp442 = 255;
  local tmp443:8;
  tmp443 = zext(tmp442);
  local tmp444:8;
  tmp444 = tmp441 & tmp443;
  tmp436 = tmp444:1;
  local tmp445:1;
  tmp445 = tmp436;
  goto <done_436>;
<f_branch_436>
  local tmp446:1;
  local tmp447:4;
  tmp447 = 7;
  local tmp448:4;
  tmp448 = 8;
  local tmp449:4;
  tmp449 = tmp447 * tmp448;
  local tmp450:8;
  tmp450 = zext(tmp449);
  local tmp451:8;
  tmp451 = A2_vmaxb_Rss32 s>> tmp450;
  local tmp452:4;
  tmp452 = 255;
  local tmp453:8;
  tmp453 = zext(tmp452);
  local tmp454:8;
  tmp454 = tmp451 & tmp453;
  tmp446 = tmp454:1;
  tmp445 = tmp446;
<done_436>
  local tmp455:8;
  tmp455 = 255;
  local tmp456:8;
  tmp456 = zext(tmp445);
  local tmp457:8;
  tmp457 = tmp456 & tmp455;
  tmp414 = tmp457;
  local tmp458:4;
  tmp458 = 7;
  local tmp459:4;
  tmp459 = 8;
  local tmp460:4;
  tmp460 = tmp458 * tmp459;
  local tmp461:8;
  tmp461 = zext(tmp460);
  local tmp462:8;
  tmp462 = tmp414 << tmp461;
  local tmp463:8;
  tmp463 = tmp413 | tmp462;
  A2_vmaxb_Rdd32 = tmp463;
}

:A2_vminub A2_vminub_Rdd32 A2_vminub_Rtt32 A2_vminub_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vminub_Rdd32 & A2_vminub_Rtt32 & A2_vminub_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vminub_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:1;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 8;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vminub_Rtt32 s>> tmp13;
  local tmp15:4;
  tmp15 = 255;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:1;
  local tmp18:1;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 8;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vminub_Rss32 s>> tmp22;
  local tmp24:4;
  tmp24 = 255;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:1;
  local tmp27:1;
  tmp27 = tmp9 < tmp18;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <f_branch_30>;
<t_branch_30>
  local tmp30:1;
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 8;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = A2_vminub_Rtt32 s>> tmp34;
  local tmp36:4;
  tmp36 = 255;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp35 & tmp37;
  tmp30 = tmp38:1;
  local tmp39:1;
  tmp39 = tmp30;
  goto <done_30>;
<f_branch_30>
  local tmp40:1;
  local tmp41:4;
  tmp41 = 0;
  local tmp42:4;
  tmp42 = 8;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = A2_vminub_Rss32 s>> tmp44;
  local tmp46:4;
  tmp46 = 255;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp45 & tmp47;
  tmp40 = tmp48:1;
  tmp39 = tmp40;
<done_30>
  local tmp49:8;
  tmp49 = 255;
  local tmp50:8;
  tmp50 = zext(tmp39);
  local tmp51:8;
  tmp51 = tmp50 & tmp49;
  tmp8 = tmp51;
  local tmp52:4;
  tmp52 = 0;
  local tmp53:4;
  tmp53 = 8;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp8 << tmp55;
  local tmp57:8;
  tmp57 = tmp7 | tmp56;
  A2_vminub_Rdd32 = tmp57;
  local tmp58:8;
  tmp58 = 255;
  local tmp59:4;
  tmp59 = 1;
  local tmp60:4;
  tmp60 = 8;
  local tmp61:4;
  tmp61 = tmp59 * tmp60;
  local tmp62:8;
  tmp62 = zext(tmp61);
  local tmp63:8;
  tmp63 = tmp58 << tmp62;
  local tmp64:8;
  tmp64 = ~ tmp63;
  local tmp65:8;
  tmp65 = A2_vminub_Rdd32 & tmp64;
  local tmp66:8;
  local tmp67:1;
  local tmp68:4;
  tmp68 = 1;
  local tmp69:4;
  tmp69 = 8;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = A2_vminub_Rtt32 s>> tmp71;
  local tmp73:4;
  tmp73 = 255;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = tmp72 & tmp74;
  tmp67 = tmp75:1;
  local tmp76:1;
  local tmp77:4;
  tmp77 = 1;
  local tmp78:4;
  tmp78 = 8;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = A2_vminub_Rss32 s>> tmp80;
  local tmp82:4;
  tmp82 = 255;
  local tmp83:8;
  tmp83 = zext(tmp82);
  local tmp84:8;
  tmp84 = tmp81 & tmp83;
  tmp76 = tmp84:1;
  local tmp85:1;
  tmp85 = tmp67 < tmp76;
  local tmp86:1;
  tmp86 = tmp85;
  if (tmp86) goto <t_branch_88>;
  goto <f_branch_88>;
<t_branch_88>
  local tmp88:1;
  local tmp89:4;
  tmp89 = 1;
  local tmp90:4;
  tmp90 = 8;
  local tmp91:4;
  tmp91 = tmp89 * tmp90;
  local tmp92:8;
  tmp92 = zext(tmp91);
  local tmp93:8;
  tmp93 = A2_vminub_Rtt32 s>> tmp92;
  local tmp94:4;
  tmp94 = 255;
  local tmp95:8;
  tmp95 = zext(tmp94);
  local tmp96:8;
  tmp96 = tmp93 & tmp95;
  tmp88 = tmp96:1;
  local tmp97:1;
  tmp97 = tmp88;
  goto <done_88>;
<f_branch_88>
  local tmp98:1;
  local tmp99:4;
  tmp99 = 1;
  local tmp100:4;
  tmp100 = 8;
  local tmp101:4;
  tmp101 = tmp99 * tmp100;
  local tmp102:8;
  tmp102 = zext(tmp101);
  local tmp103:8;
  tmp103 = A2_vminub_Rss32 s>> tmp102;
  local tmp104:4;
  tmp104 = 255;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp103 & tmp105;
  tmp98 = tmp106:1;
  tmp97 = tmp98;
<done_88>
  local tmp107:8;
  tmp107 = 255;
  local tmp108:8;
  tmp108 = zext(tmp97);
  local tmp109:8;
  tmp109 = tmp108 & tmp107;
  tmp66 = tmp109;
  local tmp110:4;
  tmp110 = 1;
  local tmp111:4;
  tmp111 = 8;
  local tmp112:4;
  tmp112 = tmp110 * tmp111;
  local tmp113:8;
  tmp113 = zext(tmp112);
  local tmp114:8;
  tmp114 = tmp66 << tmp113;
  local tmp115:8;
  tmp115 = tmp65 | tmp114;
  A2_vminub_Rdd32 = tmp115;
  local tmp116:8;
  tmp116 = 255;
  local tmp117:4;
  tmp117 = 2;
  local tmp118:4;
  tmp118 = 8;
  local tmp119:4;
  tmp119 = tmp117 * tmp118;
  local tmp120:8;
  tmp120 = zext(tmp119);
  local tmp121:8;
  tmp121 = tmp116 << tmp120;
  local tmp122:8;
  tmp122 = ~ tmp121;
  local tmp123:8;
  tmp123 = A2_vminub_Rdd32 & tmp122;
  local tmp124:8;
  local tmp125:1;
  local tmp126:4;
  tmp126 = 2;
  local tmp127:4;
  tmp127 = 8;
  local tmp128:4;
  tmp128 = tmp126 * tmp127;
  local tmp129:8;
  tmp129 = zext(tmp128);
  local tmp130:8;
  tmp130 = A2_vminub_Rtt32 s>> tmp129;
  local tmp131:4;
  tmp131 = 255;
  local tmp132:8;
  tmp132 = zext(tmp131);
  local tmp133:8;
  tmp133 = tmp130 & tmp132;
  tmp125 = tmp133:1;
  local tmp134:1;
  local tmp135:4;
  tmp135 = 2;
  local tmp136:4;
  tmp136 = 8;
  local tmp137:4;
  tmp137 = tmp135 * tmp136;
  local tmp138:8;
  tmp138 = zext(tmp137);
  local tmp139:8;
  tmp139 = A2_vminub_Rss32 s>> tmp138;
  local tmp140:4;
  tmp140 = 255;
  local tmp141:8;
  tmp141 = zext(tmp140);
  local tmp142:8;
  tmp142 = tmp139 & tmp141;
  tmp134 = tmp142:1;
  local tmp143:1;
  tmp143 = tmp125 < tmp134;
  local tmp144:1;
  tmp144 = tmp143;
  if (tmp144) goto <t_branch_146>;
  goto <f_branch_146>;
<t_branch_146>
  local tmp146:1;
  local tmp147:4;
  tmp147 = 2;
  local tmp148:4;
  tmp148 = 8;
  local tmp149:4;
  tmp149 = tmp147 * tmp148;
  local tmp150:8;
  tmp150 = zext(tmp149);
  local tmp151:8;
  tmp151 = A2_vminub_Rtt32 s>> tmp150;
  local tmp152:4;
  tmp152 = 255;
  local tmp153:8;
  tmp153 = zext(tmp152);
  local tmp154:8;
  tmp154 = tmp151 & tmp153;
  tmp146 = tmp154:1;
  local tmp155:1;
  tmp155 = tmp146;
  goto <done_146>;
<f_branch_146>
  local tmp156:1;
  local tmp157:4;
  tmp157 = 2;
  local tmp158:4;
  tmp158 = 8;
  local tmp159:4;
  tmp159 = tmp157 * tmp158;
  local tmp160:8;
  tmp160 = zext(tmp159);
  local tmp161:8;
  tmp161 = A2_vminub_Rss32 s>> tmp160;
  local tmp162:4;
  tmp162 = 255;
  local tmp163:8;
  tmp163 = zext(tmp162);
  local tmp164:8;
  tmp164 = tmp161 & tmp163;
  tmp156 = tmp164:1;
  tmp155 = tmp156;
<done_146>
  local tmp165:8;
  tmp165 = 255;
  local tmp166:8;
  tmp166 = zext(tmp155);
  local tmp167:8;
  tmp167 = tmp166 & tmp165;
  tmp124 = tmp167;
  local tmp168:4;
  tmp168 = 2;
  local tmp169:4;
  tmp169 = 8;
  local tmp170:4;
  tmp170 = tmp168 * tmp169;
  local tmp171:8;
  tmp171 = zext(tmp170);
  local tmp172:8;
  tmp172 = tmp124 << tmp171;
  local tmp173:8;
  tmp173 = tmp123 | tmp172;
  A2_vminub_Rdd32 = tmp173;
  local tmp174:8;
  tmp174 = 255;
  local tmp175:4;
  tmp175 = 3;
  local tmp176:4;
  tmp176 = 8;
  local tmp177:4;
  tmp177 = tmp175 * tmp176;
  local tmp178:8;
  tmp178 = zext(tmp177);
  local tmp179:8;
  tmp179 = tmp174 << tmp178;
  local tmp180:8;
  tmp180 = ~ tmp179;
  local tmp181:8;
  tmp181 = A2_vminub_Rdd32 & tmp180;
  local tmp182:8;
  local tmp183:1;
  local tmp184:4;
  tmp184 = 3;
  local tmp185:4;
  tmp185 = 8;
  local tmp186:4;
  tmp186 = tmp184 * tmp185;
  local tmp187:8;
  tmp187 = zext(tmp186);
  local tmp188:8;
  tmp188 = A2_vminub_Rtt32 s>> tmp187;
  local tmp189:4;
  tmp189 = 255;
  local tmp190:8;
  tmp190 = zext(tmp189);
  local tmp191:8;
  tmp191 = tmp188 & tmp190;
  tmp183 = tmp191:1;
  local tmp192:1;
  local tmp193:4;
  tmp193 = 3;
  local tmp194:4;
  tmp194 = 8;
  local tmp195:4;
  tmp195 = tmp193 * tmp194;
  local tmp196:8;
  tmp196 = zext(tmp195);
  local tmp197:8;
  tmp197 = A2_vminub_Rss32 s>> tmp196;
  local tmp198:4;
  tmp198 = 255;
  local tmp199:8;
  tmp199 = zext(tmp198);
  local tmp200:8;
  tmp200 = tmp197 & tmp199;
  tmp192 = tmp200:1;
  local tmp201:1;
  tmp201 = tmp183 < tmp192;
  local tmp202:1;
  tmp202 = tmp201;
  if (tmp202) goto <t_branch_204>;
  goto <f_branch_204>;
<t_branch_204>
  local tmp204:1;
  local tmp205:4;
  tmp205 = 3;
  local tmp206:4;
  tmp206 = 8;
  local tmp207:4;
  tmp207 = tmp205 * tmp206;
  local tmp208:8;
  tmp208 = zext(tmp207);
  local tmp209:8;
  tmp209 = A2_vminub_Rtt32 s>> tmp208;
  local tmp210:4;
  tmp210 = 255;
  local tmp211:8;
  tmp211 = zext(tmp210);
  local tmp212:8;
  tmp212 = tmp209 & tmp211;
  tmp204 = tmp212:1;
  local tmp213:1;
  tmp213 = tmp204;
  goto <done_204>;
<f_branch_204>
  local tmp214:1;
  local tmp215:4;
  tmp215 = 3;
  local tmp216:4;
  tmp216 = 8;
  local tmp217:4;
  tmp217 = tmp215 * tmp216;
  local tmp218:8;
  tmp218 = zext(tmp217);
  local tmp219:8;
  tmp219 = A2_vminub_Rss32 s>> tmp218;
  local tmp220:4;
  tmp220 = 255;
  local tmp221:8;
  tmp221 = zext(tmp220);
  local tmp222:8;
  tmp222 = tmp219 & tmp221;
  tmp214 = tmp222:1;
  tmp213 = tmp214;
<done_204>
  local tmp223:8;
  tmp223 = 255;
  local tmp224:8;
  tmp224 = zext(tmp213);
  local tmp225:8;
  tmp225 = tmp224 & tmp223;
  tmp182 = tmp225;
  local tmp226:4;
  tmp226 = 3;
  local tmp227:4;
  tmp227 = 8;
  local tmp228:4;
  tmp228 = tmp226 * tmp227;
  local tmp229:8;
  tmp229 = zext(tmp228);
  local tmp230:8;
  tmp230 = tmp182 << tmp229;
  local tmp231:8;
  tmp231 = tmp181 | tmp230;
  A2_vminub_Rdd32 = tmp231;
  local tmp232:8;
  tmp232 = 255;
  local tmp233:4;
  tmp233 = 4;
  local tmp234:4;
  tmp234 = 8;
  local tmp235:4;
  tmp235 = tmp233 * tmp234;
  local tmp236:8;
  tmp236 = zext(tmp235);
  local tmp237:8;
  tmp237 = tmp232 << tmp236;
  local tmp238:8;
  tmp238 = ~ tmp237;
  local tmp239:8;
  tmp239 = A2_vminub_Rdd32 & tmp238;
  local tmp240:8;
  local tmp241:1;
  local tmp242:4;
  tmp242 = 4;
  local tmp243:4;
  tmp243 = 8;
  local tmp244:4;
  tmp244 = tmp242 * tmp243;
  local tmp245:8;
  tmp245 = zext(tmp244);
  local tmp246:8;
  tmp246 = A2_vminub_Rtt32 s>> tmp245;
  local tmp247:4;
  tmp247 = 255;
  local tmp248:8;
  tmp248 = zext(tmp247);
  local tmp249:8;
  tmp249 = tmp246 & tmp248;
  tmp241 = tmp249:1;
  local tmp250:1;
  local tmp251:4;
  tmp251 = 4;
  local tmp252:4;
  tmp252 = 8;
  local tmp253:4;
  tmp253 = tmp251 * tmp252;
  local tmp254:8;
  tmp254 = zext(tmp253);
  local tmp255:8;
  tmp255 = A2_vminub_Rss32 s>> tmp254;
  local tmp256:4;
  tmp256 = 255;
  local tmp257:8;
  tmp257 = zext(tmp256);
  local tmp258:8;
  tmp258 = tmp255 & tmp257;
  tmp250 = tmp258:1;
  local tmp259:1;
  tmp259 = tmp241 < tmp250;
  local tmp260:1;
  tmp260 = tmp259;
  if (tmp260) goto <t_branch_262>;
  goto <f_branch_262>;
<t_branch_262>
  local tmp262:1;
  local tmp263:4;
  tmp263 = 4;
  local tmp264:4;
  tmp264 = 8;
  local tmp265:4;
  tmp265 = tmp263 * tmp264;
  local tmp266:8;
  tmp266 = zext(tmp265);
  local tmp267:8;
  tmp267 = A2_vminub_Rtt32 s>> tmp266;
  local tmp268:4;
  tmp268 = 255;
  local tmp269:8;
  tmp269 = zext(tmp268);
  local tmp270:8;
  tmp270 = tmp267 & tmp269;
  tmp262 = tmp270:1;
  local tmp271:1;
  tmp271 = tmp262;
  goto <done_262>;
<f_branch_262>
  local tmp272:1;
  local tmp273:4;
  tmp273 = 4;
  local tmp274:4;
  tmp274 = 8;
  local tmp275:4;
  tmp275 = tmp273 * tmp274;
  local tmp276:8;
  tmp276 = zext(tmp275);
  local tmp277:8;
  tmp277 = A2_vminub_Rss32 s>> tmp276;
  local tmp278:4;
  tmp278 = 255;
  local tmp279:8;
  tmp279 = zext(tmp278);
  local tmp280:8;
  tmp280 = tmp277 & tmp279;
  tmp272 = tmp280:1;
  tmp271 = tmp272;
<done_262>
  local tmp281:8;
  tmp281 = 255;
  local tmp282:8;
  tmp282 = zext(tmp271);
  local tmp283:8;
  tmp283 = tmp282 & tmp281;
  tmp240 = tmp283;
  local tmp284:4;
  tmp284 = 4;
  local tmp285:4;
  tmp285 = 8;
  local tmp286:4;
  tmp286 = tmp284 * tmp285;
  local tmp287:8;
  tmp287 = zext(tmp286);
  local tmp288:8;
  tmp288 = tmp240 << tmp287;
  local tmp289:8;
  tmp289 = tmp239 | tmp288;
  A2_vminub_Rdd32 = tmp289;
  local tmp290:8;
  tmp290 = 255;
  local tmp291:4;
  tmp291 = 5;
  local tmp292:4;
  tmp292 = 8;
  local tmp293:4;
  tmp293 = tmp291 * tmp292;
  local tmp294:8;
  tmp294 = zext(tmp293);
  local tmp295:8;
  tmp295 = tmp290 << tmp294;
  local tmp296:8;
  tmp296 = ~ tmp295;
  local tmp297:8;
  tmp297 = A2_vminub_Rdd32 & tmp296;
  local tmp298:8;
  local tmp299:1;
  local tmp300:4;
  tmp300 = 5;
  local tmp301:4;
  tmp301 = 8;
  local tmp302:4;
  tmp302 = tmp300 * tmp301;
  local tmp303:8;
  tmp303 = zext(tmp302);
  local tmp304:8;
  tmp304 = A2_vminub_Rtt32 s>> tmp303;
  local tmp305:4;
  tmp305 = 255;
  local tmp306:8;
  tmp306 = zext(tmp305);
  local tmp307:8;
  tmp307 = tmp304 & tmp306;
  tmp299 = tmp307:1;
  local tmp308:1;
  local tmp309:4;
  tmp309 = 5;
  local tmp310:4;
  tmp310 = 8;
  local tmp311:4;
  tmp311 = tmp309 * tmp310;
  local tmp312:8;
  tmp312 = zext(tmp311);
  local tmp313:8;
  tmp313 = A2_vminub_Rss32 s>> tmp312;
  local tmp314:4;
  tmp314 = 255;
  local tmp315:8;
  tmp315 = zext(tmp314);
  local tmp316:8;
  tmp316 = tmp313 & tmp315;
  tmp308 = tmp316:1;
  local tmp317:1;
  tmp317 = tmp299 < tmp308;
  local tmp318:1;
  tmp318 = tmp317;
  if (tmp318) goto <t_branch_320>;
  goto <f_branch_320>;
<t_branch_320>
  local tmp320:1;
  local tmp321:4;
  tmp321 = 5;
  local tmp322:4;
  tmp322 = 8;
  local tmp323:4;
  tmp323 = tmp321 * tmp322;
  local tmp324:8;
  tmp324 = zext(tmp323);
  local tmp325:8;
  tmp325 = A2_vminub_Rtt32 s>> tmp324;
  local tmp326:4;
  tmp326 = 255;
  local tmp327:8;
  tmp327 = zext(tmp326);
  local tmp328:8;
  tmp328 = tmp325 & tmp327;
  tmp320 = tmp328:1;
  local tmp329:1;
  tmp329 = tmp320;
  goto <done_320>;
<f_branch_320>
  local tmp330:1;
  local tmp331:4;
  tmp331 = 5;
  local tmp332:4;
  tmp332 = 8;
  local tmp333:4;
  tmp333 = tmp331 * tmp332;
  local tmp334:8;
  tmp334 = zext(tmp333);
  local tmp335:8;
  tmp335 = A2_vminub_Rss32 s>> tmp334;
  local tmp336:4;
  tmp336 = 255;
  local tmp337:8;
  tmp337 = zext(tmp336);
  local tmp338:8;
  tmp338 = tmp335 & tmp337;
  tmp330 = tmp338:1;
  tmp329 = tmp330;
<done_320>
  local tmp339:8;
  tmp339 = 255;
  local tmp340:8;
  tmp340 = zext(tmp329);
  local tmp341:8;
  tmp341 = tmp340 & tmp339;
  tmp298 = tmp341;
  local tmp342:4;
  tmp342 = 5;
  local tmp343:4;
  tmp343 = 8;
  local tmp344:4;
  tmp344 = tmp342 * tmp343;
  local tmp345:8;
  tmp345 = zext(tmp344);
  local tmp346:8;
  tmp346 = tmp298 << tmp345;
  local tmp347:8;
  tmp347 = tmp297 | tmp346;
  A2_vminub_Rdd32 = tmp347;
  local tmp348:8;
  tmp348 = 255;
  local tmp349:4;
  tmp349 = 6;
  local tmp350:4;
  tmp350 = 8;
  local tmp351:4;
  tmp351 = tmp349 * tmp350;
  local tmp352:8;
  tmp352 = zext(tmp351);
  local tmp353:8;
  tmp353 = tmp348 << tmp352;
  local tmp354:8;
  tmp354 = ~ tmp353;
  local tmp355:8;
  tmp355 = A2_vminub_Rdd32 & tmp354;
  local tmp356:8;
  local tmp357:1;
  local tmp358:4;
  tmp358 = 6;
  local tmp359:4;
  tmp359 = 8;
  local tmp360:4;
  tmp360 = tmp358 * tmp359;
  local tmp361:8;
  tmp361 = zext(tmp360);
  local tmp362:8;
  tmp362 = A2_vminub_Rtt32 s>> tmp361;
  local tmp363:4;
  tmp363 = 255;
  local tmp364:8;
  tmp364 = zext(tmp363);
  local tmp365:8;
  tmp365 = tmp362 & tmp364;
  tmp357 = tmp365:1;
  local tmp366:1;
  local tmp367:4;
  tmp367 = 6;
  local tmp368:4;
  tmp368 = 8;
  local tmp369:4;
  tmp369 = tmp367 * tmp368;
  local tmp370:8;
  tmp370 = zext(tmp369);
  local tmp371:8;
  tmp371 = A2_vminub_Rss32 s>> tmp370;
  local tmp372:4;
  tmp372 = 255;
  local tmp373:8;
  tmp373 = zext(tmp372);
  local tmp374:8;
  tmp374 = tmp371 & tmp373;
  tmp366 = tmp374:1;
  local tmp375:1;
  tmp375 = tmp357 < tmp366;
  local tmp376:1;
  tmp376 = tmp375;
  if (tmp376) goto <t_branch_378>;
  goto <f_branch_378>;
<t_branch_378>
  local tmp378:1;
  local tmp379:4;
  tmp379 = 6;
  local tmp380:4;
  tmp380 = 8;
  local tmp381:4;
  tmp381 = tmp379 * tmp380;
  local tmp382:8;
  tmp382 = zext(tmp381);
  local tmp383:8;
  tmp383 = A2_vminub_Rtt32 s>> tmp382;
  local tmp384:4;
  tmp384 = 255;
  local tmp385:8;
  tmp385 = zext(tmp384);
  local tmp386:8;
  tmp386 = tmp383 & tmp385;
  tmp378 = tmp386:1;
  local tmp387:1;
  tmp387 = tmp378;
  goto <done_378>;
<f_branch_378>
  local tmp388:1;
  local tmp389:4;
  tmp389 = 6;
  local tmp390:4;
  tmp390 = 8;
  local tmp391:4;
  tmp391 = tmp389 * tmp390;
  local tmp392:8;
  tmp392 = zext(tmp391);
  local tmp393:8;
  tmp393 = A2_vminub_Rss32 s>> tmp392;
  local tmp394:4;
  tmp394 = 255;
  local tmp395:8;
  tmp395 = zext(tmp394);
  local tmp396:8;
  tmp396 = tmp393 & tmp395;
  tmp388 = tmp396:1;
  tmp387 = tmp388;
<done_378>
  local tmp397:8;
  tmp397 = 255;
  local tmp398:8;
  tmp398 = zext(tmp387);
  local tmp399:8;
  tmp399 = tmp398 & tmp397;
  tmp356 = tmp399;
  local tmp400:4;
  tmp400 = 6;
  local tmp401:4;
  tmp401 = 8;
  local tmp402:4;
  tmp402 = tmp400 * tmp401;
  local tmp403:8;
  tmp403 = zext(tmp402);
  local tmp404:8;
  tmp404 = tmp356 << tmp403;
  local tmp405:8;
  tmp405 = tmp355 | tmp404;
  A2_vminub_Rdd32 = tmp405;
  local tmp406:8;
  tmp406 = 255;
  local tmp407:4;
  tmp407 = 7;
  local tmp408:4;
  tmp408 = 8;
  local tmp409:4;
  tmp409 = tmp407 * tmp408;
  local tmp410:8;
  tmp410 = zext(tmp409);
  local tmp411:8;
  tmp411 = tmp406 << tmp410;
  local tmp412:8;
  tmp412 = ~ tmp411;
  local tmp413:8;
  tmp413 = A2_vminub_Rdd32 & tmp412;
  local tmp414:8;
  local tmp415:1;
  local tmp416:4;
  tmp416 = 7;
  local tmp417:4;
  tmp417 = 8;
  local tmp418:4;
  tmp418 = tmp416 * tmp417;
  local tmp419:8;
  tmp419 = zext(tmp418);
  local tmp420:8;
  tmp420 = A2_vminub_Rtt32 s>> tmp419;
  local tmp421:4;
  tmp421 = 255;
  local tmp422:8;
  tmp422 = zext(tmp421);
  local tmp423:8;
  tmp423 = tmp420 & tmp422;
  tmp415 = tmp423:1;
  local tmp424:1;
  local tmp425:4;
  tmp425 = 7;
  local tmp426:4;
  tmp426 = 8;
  local tmp427:4;
  tmp427 = tmp425 * tmp426;
  local tmp428:8;
  tmp428 = zext(tmp427);
  local tmp429:8;
  tmp429 = A2_vminub_Rss32 s>> tmp428;
  local tmp430:4;
  tmp430 = 255;
  local tmp431:8;
  tmp431 = zext(tmp430);
  local tmp432:8;
  tmp432 = tmp429 & tmp431;
  tmp424 = tmp432:1;
  local tmp433:1;
  tmp433 = tmp415 < tmp424;
  local tmp434:1;
  tmp434 = tmp433;
  if (tmp434) goto <t_branch_436>;
  goto <f_branch_436>;
<t_branch_436>
  local tmp436:1;
  local tmp437:4;
  tmp437 = 7;
  local tmp438:4;
  tmp438 = 8;
  local tmp439:4;
  tmp439 = tmp437 * tmp438;
  local tmp440:8;
  tmp440 = zext(tmp439);
  local tmp441:8;
  tmp441 = A2_vminub_Rtt32 s>> tmp440;
  local tmp442:4;
  tmp442 = 255;
  local tmp443:8;
  tmp443 = zext(tmp442);
  local tmp444:8;
  tmp444 = tmp441 & tmp443;
  tmp436 = tmp444:1;
  local tmp445:1;
  tmp445 = tmp436;
  goto <done_436>;
<f_branch_436>
  local tmp446:1;
  local tmp447:4;
  tmp447 = 7;
  local tmp448:4;
  tmp448 = 8;
  local tmp449:4;
  tmp449 = tmp447 * tmp448;
  local tmp450:8;
  tmp450 = zext(tmp449);
  local tmp451:8;
  tmp451 = A2_vminub_Rss32 s>> tmp450;
  local tmp452:4;
  tmp452 = 255;
  local tmp453:8;
  tmp453 = zext(tmp452);
  local tmp454:8;
  tmp454 = tmp451 & tmp453;
  tmp446 = tmp454:1;
  tmp445 = tmp446;
<done_436>
  local tmp455:8;
  tmp455 = 255;
  local tmp456:8;
  tmp456 = zext(tmp445);
  local tmp457:8;
  tmp457 = tmp456 & tmp455;
  tmp414 = tmp457;
  local tmp458:4;
  tmp458 = 7;
  local tmp459:4;
  tmp459 = 8;
  local tmp460:4;
  tmp460 = tmp458 * tmp459;
  local tmp461:8;
  tmp461 = zext(tmp460);
  local tmp462:8;
  tmp462 = tmp414 << tmp461;
  local tmp463:8;
  tmp463 = tmp413 | tmp462;
  A2_vminub_Rdd32 = tmp463;
}

:A2_vmaxub A2_vmaxub_Rdd32 A2_vmaxub_Rtt32 A2_vmaxub_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vmaxub_Rdd32 & A2_vmaxub_Rtt32 & A2_vmaxub_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vmaxub_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:1;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 8;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vmaxub_Rtt32 s>> tmp13;
  local tmp15:4;
  tmp15 = 255;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:1;
  local tmp18:1;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 8;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vmaxub_Rss32 s>> tmp22;
  local tmp24:4;
  tmp24 = 255;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:1;
  local tmp27:1;
  tmp27 = tmp9 > tmp18;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <f_branch_30>;
<t_branch_30>
  local tmp30:1;
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 8;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = A2_vmaxub_Rtt32 s>> tmp34;
  local tmp36:4;
  tmp36 = 255;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp35 & tmp37;
  tmp30 = tmp38:1;
  local tmp39:1;
  tmp39 = tmp30;
  goto <done_30>;
<f_branch_30>
  local tmp40:1;
  local tmp41:4;
  tmp41 = 0;
  local tmp42:4;
  tmp42 = 8;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = A2_vmaxub_Rss32 s>> tmp44;
  local tmp46:4;
  tmp46 = 255;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp45 & tmp47;
  tmp40 = tmp48:1;
  tmp39 = tmp40;
<done_30>
  local tmp49:8;
  tmp49 = 255;
  local tmp50:8;
  tmp50 = zext(tmp39);
  local tmp51:8;
  tmp51 = tmp50 & tmp49;
  tmp8 = tmp51;
  local tmp52:4;
  tmp52 = 0;
  local tmp53:4;
  tmp53 = 8;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp8 << tmp55;
  local tmp57:8;
  tmp57 = tmp7 | tmp56;
  A2_vmaxub_Rdd32 = tmp57;
  local tmp58:8;
  tmp58 = 255;
  local tmp59:4;
  tmp59 = 1;
  local tmp60:4;
  tmp60 = 8;
  local tmp61:4;
  tmp61 = tmp59 * tmp60;
  local tmp62:8;
  tmp62 = zext(tmp61);
  local tmp63:8;
  tmp63 = tmp58 << tmp62;
  local tmp64:8;
  tmp64 = ~ tmp63;
  local tmp65:8;
  tmp65 = A2_vmaxub_Rdd32 & tmp64;
  local tmp66:8;
  local tmp67:1;
  local tmp68:4;
  tmp68 = 1;
  local tmp69:4;
  tmp69 = 8;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = A2_vmaxub_Rtt32 s>> tmp71;
  local tmp73:4;
  tmp73 = 255;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = tmp72 & tmp74;
  tmp67 = tmp75:1;
  local tmp76:1;
  local tmp77:4;
  tmp77 = 1;
  local tmp78:4;
  tmp78 = 8;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = A2_vmaxub_Rss32 s>> tmp80;
  local tmp82:4;
  tmp82 = 255;
  local tmp83:8;
  tmp83 = zext(tmp82);
  local tmp84:8;
  tmp84 = tmp81 & tmp83;
  tmp76 = tmp84:1;
  local tmp85:1;
  tmp85 = tmp67 > tmp76;
  local tmp86:1;
  tmp86 = tmp85;
  if (tmp86) goto <t_branch_88>;
  goto <f_branch_88>;
<t_branch_88>
  local tmp88:1;
  local tmp89:4;
  tmp89 = 1;
  local tmp90:4;
  tmp90 = 8;
  local tmp91:4;
  tmp91 = tmp89 * tmp90;
  local tmp92:8;
  tmp92 = zext(tmp91);
  local tmp93:8;
  tmp93 = A2_vmaxub_Rtt32 s>> tmp92;
  local tmp94:4;
  tmp94 = 255;
  local tmp95:8;
  tmp95 = zext(tmp94);
  local tmp96:8;
  tmp96 = tmp93 & tmp95;
  tmp88 = tmp96:1;
  local tmp97:1;
  tmp97 = tmp88;
  goto <done_88>;
<f_branch_88>
  local tmp98:1;
  local tmp99:4;
  tmp99 = 1;
  local tmp100:4;
  tmp100 = 8;
  local tmp101:4;
  tmp101 = tmp99 * tmp100;
  local tmp102:8;
  tmp102 = zext(tmp101);
  local tmp103:8;
  tmp103 = A2_vmaxub_Rss32 s>> tmp102;
  local tmp104:4;
  tmp104 = 255;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp103 & tmp105;
  tmp98 = tmp106:1;
  tmp97 = tmp98;
<done_88>
  local tmp107:8;
  tmp107 = 255;
  local tmp108:8;
  tmp108 = zext(tmp97);
  local tmp109:8;
  tmp109 = tmp108 & tmp107;
  tmp66 = tmp109;
  local tmp110:4;
  tmp110 = 1;
  local tmp111:4;
  tmp111 = 8;
  local tmp112:4;
  tmp112 = tmp110 * tmp111;
  local tmp113:8;
  tmp113 = zext(tmp112);
  local tmp114:8;
  tmp114 = tmp66 << tmp113;
  local tmp115:8;
  tmp115 = tmp65 | tmp114;
  A2_vmaxub_Rdd32 = tmp115;
  local tmp116:8;
  tmp116 = 255;
  local tmp117:4;
  tmp117 = 2;
  local tmp118:4;
  tmp118 = 8;
  local tmp119:4;
  tmp119 = tmp117 * tmp118;
  local tmp120:8;
  tmp120 = zext(tmp119);
  local tmp121:8;
  tmp121 = tmp116 << tmp120;
  local tmp122:8;
  tmp122 = ~ tmp121;
  local tmp123:8;
  tmp123 = A2_vmaxub_Rdd32 & tmp122;
  local tmp124:8;
  local tmp125:1;
  local tmp126:4;
  tmp126 = 2;
  local tmp127:4;
  tmp127 = 8;
  local tmp128:4;
  tmp128 = tmp126 * tmp127;
  local tmp129:8;
  tmp129 = zext(tmp128);
  local tmp130:8;
  tmp130 = A2_vmaxub_Rtt32 s>> tmp129;
  local tmp131:4;
  tmp131 = 255;
  local tmp132:8;
  tmp132 = zext(tmp131);
  local tmp133:8;
  tmp133 = tmp130 & tmp132;
  tmp125 = tmp133:1;
  local tmp134:1;
  local tmp135:4;
  tmp135 = 2;
  local tmp136:4;
  tmp136 = 8;
  local tmp137:4;
  tmp137 = tmp135 * tmp136;
  local tmp138:8;
  tmp138 = zext(tmp137);
  local tmp139:8;
  tmp139 = A2_vmaxub_Rss32 s>> tmp138;
  local tmp140:4;
  tmp140 = 255;
  local tmp141:8;
  tmp141 = zext(tmp140);
  local tmp142:8;
  tmp142 = tmp139 & tmp141;
  tmp134 = tmp142:1;
  local tmp143:1;
  tmp143 = tmp125 > tmp134;
  local tmp144:1;
  tmp144 = tmp143;
  if (tmp144) goto <t_branch_146>;
  goto <f_branch_146>;
<t_branch_146>
  local tmp146:1;
  local tmp147:4;
  tmp147 = 2;
  local tmp148:4;
  tmp148 = 8;
  local tmp149:4;
  tmp149 = tmp147 * tmp148;
  local tmp150:8;
  tmp150 = zext(tmp149);
  local tmp151:8;
  tmp151 = A2_vmaxub_Rtt32 s>> tmp150;
  local tmp152:4;
  tmp152 = 255;
  local tmp153:8;
  tmp153 = zext(tmp152);
  local tmp154:8;
  tmp154 = tmp151 & tmp153;
  tmp146 = tmp154:1;
  local tmp155:1;
  tmp155 = tmp146;
  goto <done_146>;
<f_branch_146>
  local tmp156:1;
  local tmp157:4;
  tmp157 = 2;
  local tmp158:4;
  tmp158 = 8;
  local tmp159:4;
  tmp159 = tmp157 * tmp158;
  local tmp160:8;
  tmp160 = zext(tmp159);
  local tmp161:8;
  tmp161 = A2_vmaxub_Rss32 s>> tmp160;
  local tmp162:4;
  tmp162 = 255;
  local tmp163:8;
  tmp163 = zext(tmp162);
  local tmp164:8;
  tmp164 = tmp161 & tmp163;
  tmp156 = tmp164:1;
  tmp155 = tmp156;
<done_146>
  local tmp165:8;
  tmp165 = 255;
  local tmp166:8;
  tmp166 = zext(tmp155);
  local tmp167:8;
  tmp167 = tmp166 & tmp165;
  tmp124 = tmp167;
  local tmp168:4;
  tmp168 = 2;
  local tmp169:4;
  tmp169 = 8;
  local tmp170:4;
  tmp170 = tmp168 * tmp169;
  local tmp171:8;
  tmp171 = zext(tmp170);
  local tmp172:8;
  tmp172 = tmp124 << tmp171;
  local tmp173:8;
  tmp173 = tmp123 | tmp172;
  A2_vmaxub_Rdd32 = tmp173;
  local tmp174:8;
  tmp174 = 255;
  local tmp175:4;
  tmp175 = 3;
  local tmp176:4;
  tmp176 = 8;
  local tmp177:4;
  tmp177 = tmp175 * tmp176;
  local tmp178:8;
  tmp178 = zext(tmp177);
  local tmp179:8;
  tmp179 = tmp174 << tmp178;
  local tmp180:8;
  tmp180 = ~ tmp179;
  local tmp181:8;
  tmp181 = A2_vmaxub_Rdd32 & tmp180;
  local tmp182:8;
  local tmp183:1;
  local tmp184:4;
  tmp184 = 3;
  local tmp185:4;
  tmp185 = 8;
  local tmp186:4;
  tmp186 = tmp184 * tmp185;
  local tmp187:8;
  tmp187 = zext(tmp186);
  local tmp188:8;
  tmp188 = A2_vmaxub_Rtt32 s>> tmp187;
  local tmp189:4;
  tmp189 = 255;
  local tmp190:8;
  tmp190 = zext(tmp189);
  local tmp191:8;
  tmp191 = tmp188 & tmp190;
  tmp183 = tmp191:1;
  local tmp192:1;
  local tmp193:4;
  tmp193 = 3;
  local tmp194:4;
  tmp194 = 8;
  local tmp195:4;
  tmp195 = tmp193 * tmp194;
  local tmp196:8;
  tmp196 = zext(tmp195);
  local tmp197:8;
  tmp197 = A2_vmaxub_Rss32 s>> tmp196;
  local tmp198:4;
  tmp198 = 255;
  local tmp199:8;
  tmp199 = zext(tmp198);
  local tmp200:8;
  tmp200 = tmp197 & tmp199;
  tmp192 = tmp200:1;
  local tmp201:1;
  tmp201 = tmp183 > tmp192;
  local tmp202:1;
  tmp202 = tmp201;
  if (tmp202) goto <t_branch_204>;
  goto <f_branch_204>;
<t_branch_204>
  local tmp204:1;
  local tmp205:4;
  tmp205 = 3;
  local tmp206:4;
  tmp206 = 8;
  local tmp207:4;
  tmp207 = tmp205 * tmp206;
  local tmp208:8;
  tmp208 = zext(tmp207);
  local tmp209:8;
  tmp209 = A2_vmaxub_Rtt32 s>> tmp208;
  local tmp210:4;
  tmp210 = 255;
  local tmp211:8;
  tmp211 = zext(tmp210);
  local tmp212:8;
  tmp212 = tmp209 & tmp211;
  tmp204 = tmp212:1;
  local tmp213:1;
  tmp213 = tmp204;
  goto <done_204>;
<f_branch_204>
  local tmp214:1;
  local tmp215:4;
  tmp215 = 3;
  local tmp216:4;
  tmp216 = 8;
  local tmp217:4;
  tmp217 = tmp215 * tmp216;
  local tmp218:8;
  tmp218 = zext(tmp217);
  local tmp219:8;
  tmp219 = A2_vmaxub_Rss32 s>> tmp218;
  local tmp220:4;
  tmp220 = 255;
  local tmp221:8;
  tmp221 = zext(tmp220);
  local tmp222:8;
  tmp222 = tmp219 & tmp221;
  tmp214 = tmp222:1;
  tmp213 = tmp214;
<done_204>
  local tmp223:8;
  tmp223 = 255;
  local tmp224:8;
  tmp224 = zext(tmp213);
  local tmp225:8;
  tmp225 = tmp224 & tmp223;
  tmp182 = tmp225;
  local tmp226:4;
  tmp226 = 3;
  local tmp227:4;
  tmp227 = 8;
  local tmp228:4;
  tmp228 = tmp226 * tmp227;
  local tmp229:8;
  tmp229 = zext(tmp228);
  local tmp230:8;
  tmp230 = tmp182 << tmp229;
  local tmp231:8;
  tmp231 = tmp181 | tmp230;
  A2_vmaxub_Rdd32 = tmp231;
  local tmp232:8;
  tmp232 = 255;
  local tmp233:4;
  tmp233 = 4;
  local tmp234:4;
  tmp234 = 8;
  local tmp235:4;
  tmp235 = tmp233 * tmp234;
  local tmp236:8;
  tmp236 = zext(tmp235);
  local tmp237:8;
  tmp237 = tmp232 << tmp236;
  local tmp238:8;
  tmp238 = ~ tmp237;
  local tmp239:8;
  tmp239 = A2_vmaxub_Rdd32 & tmp238;
  local tmp240:8;
  local tmp241:1;
  local tmp242:4;
  tmp242 = 4;
  local tmp243:4;
  tmp243 = 8;
  local tmp244:4;
  tmp244 = tmp242 * tmp243;
  local tmp245:8;
  tmp245 = zext(tmp244);
  local tmp246:8;
  tmp246 = A2_vmaxub_Rtt32 s>> tmp245;
  local tmp247:4;
  tmp247 = 255;
  local tmp248:8;
  tmp248 = zext(tmp247);
  local tmp249:8;
  tmp249 = tmp246 & tmp248;
  tmp241 = tmp249:1;
  local tmp250:1;
  local tmp251:4;
  tmp251 = 4;
  local tmp252:4;
  tmp252 = 8;
  local tmp253:4;
  tmp253 = tmp251 * tmp252;
  local tmp254:8;
  tmp254 = zext(tmp253);
  local tmp255:8;
  tmp255 = A2_vmaxub_Rss32 s>> tmp254;
  local tmp256:4;
  tmp256 = 255;
  local tmp257:8;
  tmp257 = zext(tmp256);
  local tmp258:8;
  tmp258 = tmp255 & tmp257;
  tmp250 = tmp258:1;
  local tmp259:1;
  tmp259 = tmp241 > tmp250;
  local tmp260:1;
  tmp260 = tmp259;
  if (tmp260) goto <t_branch_262>;
  goto <f_branch_262>;
<t_branch_262>
  local tmp262:1;
  local tmp263:4;
  tmp263 = 4;
  local tmp264:4;
  tmp264 = 8;
  local tmp265:4;
  tmp265 = tmp263 * tmp264;
  local tmp266:8;
  tmp266 = zext(tmp265);
  local tmp267:8;
  tmp267 = A2_vmaxub_Rtt32 s>> tmp266;
  local tmp268:4;
  tmp268 = 255;
  local tmp269:8;
  tmp269 = zext(tmp268);
  local tmp270:8;
  tmp270 = tmp267 & tmp269;
  tmp262 = tmp270:1;
  local tmp271:1;
  tmp271 = tmp262;
  goto <done_262>;
<f_branch_262>
  local tmp272:1;
  local tmp273:4;
  tmp273 = 4;
  local tmp274:4;
  tmp274 = 8;
  local tmp275:4;
  tmp275 = tmp273 * tmp274;
  local tmp276:8;
  tmp276 = zext(tmp275);
  local tmp277:8;
  tmp277 = A2_vmaxub_Rss32 s>> tmp276;
  local tmp278:4;
  tmp278 = 255;
  local tmp279:8;
  tmp279 = zext(tmp278);
  local tmp280:8;
  tmp280 = tmp277 & tmp279;
  tmp272 = tmp280:1;
  tmp271 = tmp272;
<done_262>
  local tmp281:8;
  tmp281 = 255;
  local tmp282:8;
  tmp282 = zext(tmp271);
  local tmp283:8;
  tmp283 = tmp282 & tmp281;
  tmp240 = tmp283;
  local tmp284:4;
  tmp284 = 4;
  local tmp285:4;
  tmp285 = 8;
  local tmp286:4;
  tmp286 = tmp284 * tmp285;
  local tmp287:8;
  tmp287 = zext(tmp286);
  local tmp288:8;
  tmp288 = tmp240 << tmp287;
  local tmp289:8;
  tmp289 = tmp239 | tmp288;
  A2_vmaxub_Rdd32 = tmp289;
  local tmp290:8;
  tmp290 = 255;
  local tmp291:4;
  tmp291 = 5;
  local tmp292:4;
  tmp292 = 8;
  local tmp293:4;
  tmp293 = tmp291 * tmp292;
  local tmp294:8;
  tmp294 = zext(tmp293);
  local tmp295:8;
  tmp295 = tmp290 << tmp294;
  local tmp296:8;
  tmp296 = ~ tmp295;
  local tmp297:8;
  tmp297 = A2_vmaxub_Rdd32 & tmp296;
  local tmp298:8;
  local tmp299:1;
  local tmp300:4;
  tmp300 = 5;
  local tmp301:4;
  tmp301 = 8;
  local tmp302:4;
  tmp302 = tmp300 * tmp301;
  local tmp303:8;
  tmp303 = zext(tmp302);
  local tmp304:8;
  tmp304 = A2_vmaxub_Rtt32 s>> tmp303;
  local tmp305:4;
  tmp305 = 255;
  local tmp306:8;
  tmp306 = zext(tmp305);
  local tmp307:8;
  tmp307 = tmp304 & tmp306;
  tmp299 = tmp307:1;
  local tmp308:1;
  local tmp309:4;
  tmp309 = 5;
  local tmp310:4;
  tmp310 = 8;
  local tmp311:4;
  tmp311 = tmp309 * tmp310;
  local tmp312:8;
  tmp312 = zext(tmp311);
  local tmp313:8;
  tmp313 = A2_vmaxub_Rss32 s>> tmp312;
  local tmp314:4;
  tmp314 = 255;
  local tmp315:8;
  tmp315 = zext(tmp314);
  local tmp316:8;
  tmp316 = tmp313 & tmp315;
  tmp308 = tmp316:1;
  local tmp317:1;
  tmp317 = tmp299 > tmp308;
  local tmp318:1;
  tmp318 = tmp317;
  if (tmp318) goto <t_branch_320>;
  goto <f_branch_320>;
<t_branch_320>
  local tmp320:1;
  local tmp321:4;
  tmp321 = 5;
  local tmp322:4;
  tmp322 = 8;
  local tmp323:4;
  tmp323 = tmp321 * tmp322;
  local tmp324:8;
  tmp324 = zext(tmp323);
  local tmp325:8;
  tmp325 = A2_vmaxub_Rtt32 s>> tmp324;
  local tmp326:4;
  tmp326 = 255;
  local tmp327:8;
  tmp327 = zext(tmp326);
  local tmp328:8;
  tmp328 = tmp325 & tmp327;
  tmp320 = tmp328:1;
  local tmp329:1;
  tmp329 = tmp320;
  goto <done_320>;
<f_branch_320>
  local tmp330:1;
  local tmp331:4;
  tmp331 = 5;
  local tmp332:4;
  tmp332 = 8;
  local tmp333:4;
  tmp333 = tmp331 * tmp332;
  local tmp334:8;
  tmp334 = zext(tmp333);
  local tmp335:8;
  tmp335 = A2_vmaxub_Rss32 s>> tmp334;
  local tmp336:4;
  tmp336 = 255;
  local tmp337:8;
  tmp337 = zext(tmp336);
  local tmp338:8;
  tmp338 = tmp335 & tmp337;
  tmp330 = tmp338:1;
  tmp329 = tmp330;
<done_320>
  local tmp339:8;
  tmp339 = 255;
  local tmp340:8;
  tmp340 = zext(tmp329);
  local tmp341:8;
  tmp341 = tmp340 & tmp339;
  tmp298 = tmp341;
  local tmp342:4;
  tmp342 = 5;
  local tmp343:4;
  tmp343 = 8;
  local tmp344:4;
  tmp344 = tmp342 * tmp343;
  local tmp345:8;
  tmp345 = zext(tmp344);
  local tmp346:8;
  tmp346 = tmp298 << tmp345;
  local tmp347:8;
  tmp347 = tmp297 | tmp346;
  A2_vmaxub_Rdd32 = tmp347;
  local tmp348:8;
  tmp348 = 255;
  local tmp349:4;
  tmp349 = 6;
  local tmp350:4;
  tmp350 = 8;
  local tmp351:4;
  tmp351 = tmp349 * tmp350;
  local tmp352:8;
  tmp352 = zext(tmp351);
  local tmp353:8;
  tmp353 = tmp348 << tmp352;
  local tmp354:8;
  tmp354 = ~ tmp353;
  local tmp355:8;
  tmp355 = A2_vmaxub_Rdd32 & tmp354;
  local tmp356:8;
  local tmp357:1;
  local tmp358:4;
  tmp358 = 6;
  local tmp359:4;
  tmp359 = 8;
  local tmp360:4;
  tmp360 = tmp358 * tmp359;
  local tmp361:8;
  tmp361 = zext(tmp360);
  local tmp362:8;
  tmp362 = A2_vmaxub_Rtt32 s>> tmp361;
  local tmp363:4;
  tmp363 = 255;
  local tmp364:8;
  tmp364 = zext(tmp363);
  local tmp365:8;
  tmp365 = tmp362 & tmp364;
  tmp357 = tmp365:1;
  local tmp366:1;
  local tmp367:4;
  tmp367 = 6;
  local tmp368:4;
  tmp368 = 8;
  local tmp369:4;
  tmp369 = tmp367 * tmp368;
  local tmp370:8;
  tmp370 = zext(tmp369);
  local tmp371:8;
  tmp371 = A2_vmaxub_Rss32 s>> tmp370;
  local tmp372:4;
  tmp372 = 255;
  local tmp373:8;
  tmp373 = zext(tmp372);
  local tmp374:8;
  tmp374 = tmp371 & tmp373;
  tmp366 = tmp374:1;
  local tmp375:1;
  tmp375 = tmp357 > tmp366;
  local tmp376:1;
  tmp376 = tmp375;
  if (tmp376) goto <t_branch_378>;
  goto <f_branch_378>;
<t_branch_378>
  local tmp378:1;
  local tmp379:4;
  tmp379 = 6;
  local tmp380:4;
  tmp380 = 8;
  local tmp381:4;
  tmp381 = tmp379 * tmp380;
  local tmp382:8;
  tmp382 = zext(tmp381);
  local tmp383:8;
  tmp383 = A2_vmaxub_Rtt32 s>> tmp382;
  local tmp384:4;
  tmp384 = 255;
  local tmp385:8;
  tmp385 = zext(tmp384);
  local tmp386:8;
  tmp386 = tmp383 & tmp385;
  tmp378 = tmp386:1;
  local tmp387:1;
  tmp387 = tmp378;
  goto <done_378>;
<f_branch_378>
  local tmp388:1;
  local tmp389:4;
  tmp389 = 6;
  local tmp390:4;
  tmp390 = 8;
  local tmp391:4;
  tmp391 = tmp389 * tmp390;
  local tmp392:8;
  tmp392 = zext(tmp391);
  local tmp393:8;
  tmp393 = A2_vmaxub_Rss32 s>> tmp392;
  local tmp394:4;
  tmp394 = 255;
  local tmp395:8;
  tmp395 = zext(tmp394);
  local tmp396:8;
  tmp396 = tmp393 & tmp395;
  tmp388 = tmp396:1;
  tmp387 = tmp388;
<done_378>
  local tmp397:8;
  tmp397 = 255;
  local tmp398:8;
  tmp398 = zext(tmp387);
  local tmp399:8;
  tmp399 = tmp398 & tmp397;
  tmp356 = tmp399;
  local tmp400:4;
  tmp400 = 6;
  local tmp401:4;
  tmp401 = 8;
  local tmp402:4;
  tmp402 = tmp400 * tmp401;
  local tmp403:8;
  tmp403 = zext(tmp402);
  local tmp404:8;
  tmp404 = tmp356 << tmp403;
  local tmp405:8;
  tmp405 = tmp355 | tmp404;
  A2_vmaxub_Rdd32 = tmp405;
  local tmp406:8;
  tmp406 = 255;
  local tmp407:4;
  tmp407 = 7;
  local tmp408:4;
  tmp408 = 8;
  local tmp409:4;
  tmp409 = tmp407 * tmp408;
  local tmp410:8;
  tmp410 = zext(tmp409);
  local tmp411:8;
  tmp411 = tmp406 << tmp410;
  local tmp412:8;
  tmp412 = ~ tmp411;
  local tmp413:8;
  tmp413 = A2_vmaxub_Rdd32 & tmp412;
  local tmp414:8;
  local tmp415:1;
  local tmp416:4;
  tmp416 = 7;
  local tmp417:4;
  tmp417 = 8;
  local tmp418:4;
  tmp418 = tmp416 * tmp417;
  local tmp419:8;
  tmp419 = zext(tmp418);
  local tmp420:8;
  tmp420 = A2_vmaxub_Rtt32 s>> tmp419;
  local tmp421:4;
  tmp421 = 255;
  local tmp422:8;
  tmp422 = zext(tmp421);
  local tmp423:8;
  tmp423 = tmp420 & tmp422;
  tmp415 = tmp423:1;
  local tmp424:1;
  local tmp425:4;
  tmp425 = 7;
  local tmp426:4;
  tmp426 = 8;
  local tmp427:4;
  tmp427 = tmp425 * tmp426;
  local tmp428:8;
  tmp428 = zext(tmp427);
  local tmp429:8;
  tmp429 = A2_vmaxub_Rss32 s>> tmp428;
  local tmp430:4;
  tmp430 = 255;
  local tmp431:8;
  tmp431 = zext(tmp430);
  local tmp432:8;
  tmp432 = tmp429 & tmp431;
  tmp424 = tmp432:1;
  local tmp433:1;
  tmp433 = tmp415 > tmp424;
  local tmp434:1;
  tmp434 = tmp433;
  if (tmp434) goto <t_branch_436>;
  goto <f_branch_436>;
<t_branch_436>
  local tmp436:1;
  local tmp437:4;
  tmp437 = 7;
  local tmp438:4;
  tmp438 = 8;
  local tmp439:4;
  tmp439 = tmp437 * tmp438;
  local tmp440:8;
  tmp440 = zext(tmp439);
  local tmp441:8;
  tmp441 = A2_vmaxub_Rtt32 s>> tmp440;
  local tmp442:4;
  tmp442 = 255;
  local tmp443:8;
  tmp443 = zext(tmp442);
  local tmp444:8;
  tmp444 = tmp441 & tmp443;
  tmp436 = tmp444:1;
  local tmp445:1;
  tmp445 = tmp436;
  goto <done_436>;
<f_branch_436>
  local tmp446:1;
  local tmp447:4;
  tmp447 = 7;
  local tmp448:4;
  tmp448 = 8;
  local tmp449:4;
  tmp449 = tmp447 * tmp448;
  local tmp450:8;
  tmp450 = zext(tmp449);
  local tmp451:8;
  tmp451 = A2_vmaxub_Rss32 s>> tmp450;
  local tmp452:4;
  tmp452 = 255;
  local tmp453:8;
  tmp453 = zext(tmp452);
  local tmp454:8;
  tmp454 = tmp451 & tmp453;
  tmp446 = tmp454:1;
  tmp445 = tmp446;
<done_436>
  local tmp455:8;
  tmp455 = 255;
  local tmp456:8;
  tmp456 = zext(tmp445);
  local tmp457:8;
  tmp457 = tmp456 & tmp455;
  tmp414 = tmp457;
  local tmp458:4;
  tmp458 = 7;
  local tmp459:4;
  tmp459 = 8;
  local tmp460:4;
  tmp460 = tmp458 * tmp459;
  local tmp461:8;
  tmp461 = zext(tmp460);
  local tmp462:8;
  tmp462 = tmp414 << tmp461;
  local tmp463:8;
  tmp463 = tmp413 | tmp462;
  A2_vmaxub_Rdd32 = tmp463;
}

:A2_vminh A2_vminh_Rdd32 A2_vminh_Rtt32 A2_vminh_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vminh_Rdd32 & A2_vminh_Rtt32 & A2_vminh_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vminh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vminh_Rtt32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:2;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vminh_Rss32 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:2;
  local tmp27:1;
  tmp27 = tmp9 s< tmp18;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <f_branch_30>;
<t_branch_30>
  local tmp30:2;
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 16;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = A2_vminh_Rtt32 s>> tmp34;
  local tmp36:4;
  tmp36 = 65535;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp35 & tmp37;
  tmp30 = tmp38:2;
  local tmp39:2;
  tmp39 = tmp30;
  goto <done_30>;
<f_branch_30>
  local tmp40:2;
  local tmp41:4;
  tmp41 = 0;
  local tmp42:4;
  tmp42 = 16;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = A2_vminh_Rss32 s>> tmp44;
  local tmp46:4;
  tmp46 = 65535;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp45 & tmp47;
  tmp40 = tmp48:2;
  tmp39 = tmp40;
<done_30>
  local tmp49:4;
  tmp49 = 65535;
  local tmp50:4;
  tmp50 = zext(tmp39);
  local tmp51:4;
  tmp51 = tmp50 & tmp49;
  tmp8 = sext(tmp51);
  local tmp52:4;
  tmp52 = 0;
  local tmp53:4;
  tmp53 = 16;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp8 << tmp55;
  local tmp57:8;
  tmp57 = tmp7 | tmp56;
  A2_vminh_Rdd32 = tmp57;
  local tmp58:8;
  tmp58 = 65535;
  local tmp59:4;
  tmp59 = 1;
  local tmp60:4;
  tmp60 = 16;
  local tmp61:4;
  tmp61 = tmp59 * tmp60;
  local tmp62:8;
  tmp62 = zext(tmp61);
  local tmp63:8;
  tmp63 = tmp58 << tmp62;
  local tmp64:8;
  tmp64 = ~ tmp63;
  local tmp65:8;
  tmp65 = A2_vminh_Rdd32 & tmp64;
  local tmp66:8;
  local tmp67:2;
  local tmp68:4;
  tmp68 = 1;
  local tmp69:4;
  tmp69 = 16;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = A2_vminh_Rtt32 s>> tmp71;
  local tmp73:4;
  tmp73 = 65535;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = tmp72 & tmp74;
  tmp67 = tmp75:2;
  local tmp76:2;
  local tmp77:4;
  tmp77 = 1;
  local tmp78:4;
  tmp78 = 16;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = A2_vminh_Rss32 s>> tmp80;
  local tmp82:4;
  tmp82 = 65535;
  local tmp83:8;
  tmp83 = zext(tmp82);
  local tmp84:8;
  tmp84 = tmp81 & tmp83;
  tmp76 = tmp84:2;
  local tmp85:1;
  tmp85 = tmp67 s< tmp76;
  local tmp86:1;
  tmp86 = tmp85;
  if (tmp86) goto <t_branch_88>;
  goto <f_branch_88>;
<t_branch_88>
  local tmp88:2;
  local tmp89:4;
  tmp89 = 1;
  local tmp90:4;
  tmp90 = 16;
  local tmp91:4;
  tmp91 = tmp89 * tmp90;
  local tmp92:8;
  tmp92 = zext(tmp91);
  local tmp93:8;
  tmp93 = A2_vminh_Rtt32 s>> tmp92;
  local tmp94:4;
  tmp94 = 65535;
  local tmp95:8;
  tmp95 = zext(tmp94);
  local tmp96:8;
  tmp96 = tmp93 & tmp95;
  tmp88 = tmp96:2;
  local tmp97:2;
  tmp97 = tmp88;
  goto <done_88>;
<f_branch_88>
  local tmp98:2;
  local tmp99:4;
  tmp99 = 1;
  local tmp100:4;
  tmp100 = 16;
  local tmp101:4;
  tmp101 = tmp99 * tmp100;
  local tmp102:8;
  tmp102 = zext(tmp101);
  local tmp103:8;
  tmp103 = A2_vminh_Rss32 s>> tmp102;
  local tmp104:4;
  tmp104 = 65535;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp103 & tmp105;
  tmp98 = tmp106:2;
  tmp97 = tmp98;
<done_88>
  local tmp107:4;
  tmp107 = 65535;
  local tmp108:4;
  tmp108 = zext(tmp97);
  local tmp109:4;
  tmp109 = tmp108 & tmp107;
  tmp66 = sext(tmp109);
  local tmp110:4;
  tmp110 = 1;
  local tmp111:4;
  tmp111 = 16;
  local tmp112:4;
  tmp112 = tmp110 * tmp111;
  local tmp113:8;
  tmp113 = zext(tmp112);
  local tmp114:8;
  tmp114 = tmp66 << tmp113;
  local tmp115:8;
  tmp115 = tmp65 | tmp114;
  A2_vminh_Rdd32 = tmp115;
  local tmp116:8;
  tmp116 = 65535;
  local tmp117:4;
  tmp117 = 2;
  local tmp118:4;
  tmp118 = 16;
  local tmp119:4;
  tmp119 = tmp117 * tmp118;
  local tmp120:8;
  tmp120 = zext(tmp119);
  local tmp121:8;
  tmp121 = tmp116 << tmp120;
  local tmp122:8;
  tmp122 = ~ tmp121;
  local tmp123:8;
  tmp123 = A2_vminh_Rdd32 & tmp122;
  local tmp124:8;
  local tmp125:2;
  local tmp126:4;
  tmp126 = 2;
  local tmp127:4;
  tmp127 = 16;
  local tmp128:4;
  tmp128 = tmp126 * tmp127;
  local tmp129:8;
  tmp129 = zext(tmp128);
  local tmp130:8;
  tmp130 = A2_vminh_Rtt32 s>> tmp129;
  local tmp131:4;
  tmp131 = 65535;
  local tmp132:8;
  tmp132 = zext(tmp131);
  local tmp133:8;
  tmp133 = tmp130 & tmp132;
  tmp125 = tmp133:2;
  local tmp134:2;
  local tmp135:4;
  tmp135 = 2;
  local tmp136:4;
  tmp136 = 16;
  local tmp137:4;
  tmp137 = tmp135 * tmp136;
  local tmp138:8;
  tmp138 = zext(tmp137);
  local tmp139:8;
  tmp139 = A2_vminh_Rss32 s>> tmp138;
  local tmp140:4;
  tmp140 = 65535;
  local tmp141:8;
  tmp141 = zext(tmp140);
  local tmp142:8;
  tmp142 = tmp139 & tmp141;
  tmp134 = tmp142:2;
  local tmp143:1;
  tmp143 = tmp125 s< tmp134;
  local tmp144:1;
  tmp144 = tmp143;
  if (tmp144) goto <t_branch_146>;
  goto <f_branch_146>;
<t_branch_146>
  local tmp146:2;
  local tmp147:4;
  tmp147 = 2;
  local tmp148:4;
  tmp148 = 16;
  local tmp149:4;
  tmp149 = tmp147 * tmp148;
  local tmp150:8;
  tmp150 = zext(tmp149);
  local tmp151:8;
  tmp151 = A2_vminh_Rtt32 s>> tmp150;
  local tmp152:4;
  tmp152 = 65535;
  local tmp153:8;
  tmp153 = zext(tmp152);
  local tmp154:8;
  tmp154 = tmp151 & tmp153;
  tmp146 = tmp154:2;
  local tmp155:2;
  tmp155 = tmp146;
  goto <done_146>;
<f_branch_146>
  local tmp156:2;
  local tmp157:4;
  tmp157 = 2;
  local tmp158:4;
  tmp158 = 16;
  local tmp159:4;
  tmp159 = tmp157 * tmp158;
  local tmp160:8;
  tmp160 = zext(tmp159);
  local tmp161:8;
  tmp161 = A2_vminh_Rss32 s>> tmp160;
  local tmp162:4;
  tmp162 = 65535;
  local tmp163:8;
  tmp163 = zext(tmp162);
  local tmp164:8;
  tmp164 = tmp161 & tmp163;
  tmp156 = tmp164:2;
  tmp155 = tmp156;
<done_146>
  local tmp165:4;
  tmp165 = 65535;
  local tmp166:4;
  tmp166 = zext(tmp155);
  local tmp167:4;
  tmp167 = tmp166 & tmp165;
  tmp124 = sext(tmp167);
  local tmp168:4;
  tmp168 = 2;
  local tmp169:4;
  tmp169 = 16;
  local tmp170:4;
  tmp170 = tmp168 * tmp169;
  local tmp171:8;
  tmp171 = zext(tmp170);
  local tmp172:8;
  tmp172 = tmp124 << tmp171;
  local tmp173:8;
  tmp173 = tmp123 | tmp172;
  A2_vminh_Rdd32 = tmp173;
  local tmp174:8;
  tmp174 = 65535;
  local tmp175:4;
  tmp175 = 3;
  local tmp176:4;
  tmp176 = 16;
  local tmp177:4;
  tmp177 = tmp175 * tmp176;
  local tmp178:8;
  tmp178 = zext(tmp177);
  local tmp179:8;
  tmp179 = tmp174 << tmp178;
  local tmp180:8;
  tmp180 = ~ tmp179;
  local tmp181:8;
  tmp181 = A2_vminh_Rdd32 & tmp180;
  local tmp182:8;
  local tmp183:2;
  local tmp184:4;
  tmp184 = 3;
  local tmp185:4;
  tmp185 = 16;
  local tmp186:4;
  tmp186 = tmp184 * tmp185;
  local tmp187:8;
  tmp187 = zext(tmp186);
  local tmp188:8;
  tmp188 = A2_vminh_Rtt32 s>> tmp187;
  local tmp189:4;
  tmp189 = 65535;
  local tmp190:8;
  tmp190 = zext(tmp189);
  local tmp191:8;
  tmp191 = tmp188 & tmp190;
  tmp183 = tmp191:2;
  local tmp192:2;
  local tmp193:4;
  tmp193 = 3;
  local tmp194:4;
  tmp194 = 16;
  local tmp195:4;
  tmp195 = tmp193 * tmp194;
  local tmp196:8;
  tmp196 = zext(tmp195);
  local tmp197:8;
  tmp197 = A2_vminh_Rss32 s>> tmp196;
  local tmp198:4;
  tmp198 = 65535;
  local tmp199:8;
  tmp199 = zext(tmp198);
  local tmp200:8;
  tmp200 = tmp197 & tmp199;
  tmp192 = tmp200:2;
  local tmp201:1;
  tmp201 = tmp183 s< tmp192;
  local tmp202:1;
  tmp202 = tmp201;
  if (tmp202) goto <t_branch_204>;
  goto <f_branch_204>;
<t_branch_204>
  local tmp204:2;
  local tmp205:4;
  tmp205 = 3;
  local tmp206:4;
  tmp206 = 16;
  local tmp207:4;
  tmp207 = tmp205 * tmp206;
  local tmp208:8;
  tmp208 = zext(tmp207);
  local tmp209:8;
  tmp209 = A2_vminh_Rtt32 s>> tmp208;
  local tmp210:4;
  tmp210 = 65535;
  local tmp211:8;
  tmp211 = zext(tmp210);
  local tmp212:8;
  tmp212 = tmp209 & tmp211;
  tmp204 = tmp212:2;
  local tmp213:2;
  tmp213 = tmp204;
  goto <done_204>;
<f_branch_204>
  local tmp214:2;
  local tmp215:4;
  tmp215 = 3;
  local tmp216:4;
  tmp216 = 16;
  local tmp217:4;
  tmp217 = tmp215 * tmp216;
  local tmp218:8;
  tmp218 = zext(tmp217);
  local tmp219:8;
  tmp219 = A2_vminh_Rss32 s>> tmp218;
  local tmp220:4;
  tmp220 = 65535;
  local tmp221:8;
  tmp221 = zext(tmp220);
  local tmp222:8;
  tmp222 = tmp219 & tmp221;
  tmp214 = tmp222:2;
  tmp213 = tmp214;
<done_204>
  local tmp223:4;
  tmp223 = 65535;
  local tmp224:4;
  tmp224 = zext(tmp213);
  local tmp225:4;
  tmp225 = tmp224 & tmp223;
  tmp182 = sext(tmp225);
  local tmp226:4;
  tmp226 = 3;
  local tmp227:4;
  tmp227 = 16;
  local tmp228:4;
  tmp228 = tmp226 * tmp227;
  local tmp229:8;
  tmp229 = zext(tmp228);
  local tmp230:8;
  tmp230 = tmp182 << tmp229;
  local tmp231:8;
  tmp231 = tmp181 | tmp230;
  A2_vminh_Rdd32 = tmp231;
}

:A2_vmaxh A2_vmaxh_Rdd32 A2_vmaxh_Rtt32 A2_vmaxh_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vmaxh_Rdd32 & A2_vmaxh_Rtt32 & A2_vmaxh_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vmaxh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vmaxh_Rtt32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:2;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vmaxh_Rss32 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:2;
  local tmp27:1;
  tmp27 = tmp9 s> tmp18;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <f_branch_30>;
<t_branch_30>
  local tmp30:2;
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 16;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = A2_vmaxh_Rtt32 s>> tmp34;
  local tmp36:4;
  tmp36 = 65535;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp35 & tmp37;
  tmp30 = tmp38:2;
  local tmp39:2;
  tmp39 = tmp30;
  goto <done_30>;
<f_branch_30>
  local tmp40:2;
  local tmp41:4;
  tmp41 = 0;
  local tmp42:4;
  tmp42 = 16;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = A2_vmaxh_Rss32 s>> tmp44;
  local tmp46:4;
  tmp46 = 65535;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp45 & tmp47;
  tmp40 = tmp48:2;
  tmp39 = tmp40;
<done_30>
  local tmp49:4;
  tmp49 = 65535;
  local tmp50:4;
  tmp50 = zext(tmp39);
  local tmp51:4;
  tmp51 = tmp50 & tmp49;
  tmp8 = sext(tmp51);
  local tmp52:4;
  tmp52 = 0;
  local tmp53:4;
  tmp53 = 16;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp8 << tmp55;
  local tmp57:8;
  tmp57 = tmp7 | tmp56;
  A2_vmaxh_Rdd32 = tmp57;
  local tmp58:8;
  tmp58 = 65535;
  local tmp59:4;
  tmp59 = 1;
  local tmp60:4;
  tmp60 = 16;
  local tmp61:4;
  tmp61 = tmp59 * tmp60;
  local tmp62:8;
  tmp62 = zext(tmp61);
  local tmp63:8;
  tmp63 = tmp58 << tmp62;
  local tmp64:8;
  tmp64 = ~ tmp63;
  local tmp65:8;
  tmp65 = A2_vmaxh_Rdd32 & tmp64;
  local tmp66:8;
  local tmp67:2;
  local tmp68:4;
  tmp68 = 1;
  local tmp69:4;
  tmp69 = 16;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = A2_vmaxh_Rtt32 s>> tmp71;
  local tmp73:4;
  tmp73 = 65535;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = tmp72 & tmp74;
  tmp67 = tmp75:2;
  local tmp76:2;
  local tmp77:4;
  tmp77 = 1;
  local tmp78:4;
  tmp78 = 16;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = A2_vmaxh_Rss32 s>> tmp80;
  local tmp82:4;
  tmp82 = 65535;
  local tmp83:8;
  tmp83 = zext(tmp82);
  local tmp84:8;
  tmp84 = tmp81 & tmp83;
  tmp76 = tmp84:2;
  local tmp85:1;
  tmp85 = tmp67 s> tmp76;
  local tmp86:1;
  tmp86 = tmp85;
  if (tmp86) goto <t_branch_88>;
  goto <f_branch_88>;
<t_branch_88>
  local tmp88:2;
  local tmp89:4;
  tmp89 = 1;
  local tmp90:4;
  tmp90 = 16;
  local tmp91:4;
  tmp91 = tmp89 * tmp90;
  local tmp92:8;
  tmp92 = zext(tmp91);
  local tmp93:8;
  tmp93 = A2_vmaxh_Rtt32 s>> tmp92;
  local tmp94:4;
  tmp94 = 65535;
  local tmp95:8;
  tmp95 = zext(tmp94);
  local tmp96:8;
  tmp96 = tmp93 & tmp95;
  tmp88 = tmp96:2;
  local tmp97:2;
  tmp97 = tmp88;
  goto <done_88>;
<f_branch_88>
  local tmp98:2;
  local tmp99:4;
  tmp99 = 1;
  local tmp100:4;
  tmp100 = 16;
  local tmp101:4;
  tmp101 = tmp99 * tmp100;
  local tmp102:8;
  tmp102 = zext(tmp101);
  local tmp103:8;
  tmp103 = A2_vmaxh_Rss32 s>> tmp102;
  local tmp104:4;
  tmp104 = 65535;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp103 & tmp105;
  tmp98 = tmp106:2;
  tmp97 = tmp98;
<done_88>
  local tmp107:4;
  tmp107 = 65535;
  local tmp108:4;
  tmp108 = zext(tmp97);
  local tmp109:4;
  tmp109 = tmp108 & tmp107;
  tmp66 = sext(tmp109);
  local tmp110:4;
  tmp110 = 1;
  local tmp111:4;
  tmp111 = 16;
  local tmp112:4;
  tmp112 = tmp110 * tmp111;
  local tmp113:8;
  tmp113 = zext(tmp112);
  local tmp114:8;
  tmp114 = tmp66 << tmp113;
  local tmp115:8;
  tmp115 = tmp65 | tmp114;
  A2_vmaxh_Rdd32 = tmp115;
  local tmp116:8;
  tmp116 = 65535;
  local tmp117:4;
  tmp117 = 2;
  local tmp118:4;
  tmp118 = 16;
  local tmp119:4;
  tmp119 = tmp117 * tmp118;
  local tmp120:8;
  tmp120 = zext(tmp119);
  local tmp121:8;
  tmp121 = tmp116 << tmp120;
  local tmp122:8;
  tmp122 = ~ tmp121;
  local tmp123:8;
  tmp123 = A2_vmaxh_Rdd32 & tmp122;
  local tmp124:8;
  local tmp125:2;
  local tmp126:4;
  tmp126 = 2;
  local tmp127:4;
  tmp127 = 16;
  local tmp128:4;
  tmp128 = tmp126 * tmp127;
  local tmp129:8;
  tmp129 = zext(tmp128);
  local tmp130:8;
  tmp130 = A2_vmaxh_Rtt32 s>> tmp129;
  local tmp131:4;
  tmp131 = 65535;
  local tmp132:8;
  tmp132 = zext(tmp131);
  local tmp133:8;
  tmp133 = tmp130 & tmp132;
  tmp125 = tmp133:2;
  local tmp134:2;
  local tmp135:4;
  tmp135 = 2;
  local tmp136:4;
  tmp136 = 16;
  local tmp137:4;
  tmp137 = tmp135 * tmp136;
  local tmp138:8;
  tmp138 = zext(tmp137);
  local tmp139:8;
  tmp139 = A2_vmaxh_Rss32 s>> tmp138;
  local tmp140:4;
  tmp140 = 65535;
  local tmp141:8;
  tmp141 = zext(tmp140);
  local tmp142:8;
  tmp142 = tmp139 & tmp141;
  tmp134 = tmp142:2;
  local tmp143:1;
  tmp143 = tmp125 s> tmp134;
  local tmp144:1;
  tmp144 = tmp143;
  if (tmp144) goto <t_branch_146>;
  goto <f_branch_146>;
<t_branch_146>
  local tmp146:2;
  local tmp147:4;
  tmp147 = 2;
  local tmp148:4;
  tmp148 = 16;
  local tmp149:4;
  tmp149 = tmp147 * tmp148;
  local tmp150:8;
  tmp150 = zext(tmp149);
  local tmp151:8;
  tmp151 = A2_vmaxh_Rtt32 s>> tmp150;
  local tmp152:4;
  tmp152 = 65535;
  local tmp153:8;
  tmp153 = zext(tmp152);
  local tmp154:8;
  tmp154 = tmp151 & tmp153;
  tmp146 = tmp154:2;
  local tmp155:2;
  tmp155 = tmp146;
  goto <done_146>;
<f_branch_146>
  local tmp156:2;
  local tmp157:4;
  tmp157 = 2;
  local tmp158:4;
  tmp158 = 16;
  local tmp159:4;
  tmp159 = tmp157 * tmp158;
  local tmp160:8;
  tmp160 = zext(tmp159);
  local tmp161:8;
  tmp161 = A2_vmaxh_Rss32 s>> tmp160;
  local tmp162:4;
  tmp162 = 65535;
  local tmp163:8;
  tmp163 = zext(tmp162);
  local tmp164:8;
  tmp164 = tmp161 & tmp163;
  tmp156 = tmp164:2;
  tmp155 = tmp156;
<done_146>
  local tmp165:4;
  tmp165 = 65535;
  local tmp166:4;
  tmp166 = zext(tmp155);
  local tmp167:4;
  tmp167 = tmp166 & tmp165;
  tmp124 = sext(tmp167);
  local tmp168:4;
  tmp168 = 2;
  local tmp169:4;
  tmp169 = 16;
  local tmp170:4;
  tmp170 = tmp168 * tmp169;
  local tmp171:8;
  tmp171 = zext(tmp170);
  local tmp172:8;
  tmp172 = tmp124 << tmp171;
  local tmp173:8;
  tmp173 = tmp123 | tmp172;
  A2_vmaxh_Rdd32 = tmp173;
  local tmp174:8;
  tmp174 = 65535;
  local tmp175:4;
  tmp175 = 3;
  local tmp176:4;
  tmp176 = 16;
  local tmp177:4;
  tmp177 = tmp175 * tmp176;
  local tmp178:8;
  tmp178 = zext(tmp177);
  local tmp179:8;
  tmp179 = tmp174 << tmp178;
  local tmp180:8;
  tmp180 = ~ tmp179;
  local tmp181:8;
  tmp181 = A2_vmaxh_Rdd32 & tmp180;
  local tmp182:8;
  local tmp183:2;
  local tmp184:4;
  tmp184 = 3;
  local tmp185:4;
  tmp185 = 16;
  local tmp186:4;
  tmp186 = tmp184 * tmp185;
  local tmp187:8;
  tmp187 = zext(tmp186);
  local tmp188:8;
  tmp188 = A2_vmaxh_Rtt32 s>> tmp187;
  local tmp189:4;
  tmp189 = 65535;
  local tmp190:8;
  tmp190 = zext(tmp189);
  local tmp191:8;
  tmp191 = tmp188 & tmp190;
  tmp183 = tmp191:2;
  local tmp192:2;
  local tmp193:4;
  tmp193 = 3;
  local tmp194:4;
  tmp194 = 16;
  local tmp195:4;
  tmp195 = tmp193 * tmp194;
  local tmp196:8;
  tmp196 = zext(tmp195);
  local tmp197:8;
  tmp197 = A2_vmaxh_Rss32 s>> tmp196;
  local tmp198:4;
  tmp198 = 65535;
  local tmp199:8;
  tmp199 = zext(tmp198);
  local tmp200:8;
  tmp200 = tmp197 & tmp199;
  tmp192 = tmp200:2;
  local tmp201:1;
  tmp201 = tmp183 s> tmp192;
  local tmp202:1;
  tmp202 = tmp201;
  if (tmp202) goto <t_branch_204>;
  goto <f_branch_204>;
<t_branch_204>
  local tmp204:2;
  local tmp205:4;
  tmp205 = 3;
  local tmp206:4;
  tmp206 = 16;
  local tmp207:4;
  tmp207 = tmp205 * tmp206;
  local tmp208:8;
  tmp208 = zext(tmp207);
  local tmp209:8;
  tmp209 = A2_vmaxh_Rtt32 s>> tmp208;
  local tmp210:4;
  tmp210 = 65535;
  local tmp211:8;
  tmp211 = zext(tmp210);
  local tmp212:8;
  tmp212 = tmp209 & tmp211;
  tmp204 = tmp212:2;
  local tmp213:2;
  tmp213 = tmp204;
  goto <done_204>;
<f_branch_204>
  local tmp214:2;
  local tmp215:4;
  tmp215 = 3;
  local tmp216:4;
  tmp216 = 16;
  local tmp217:4;
  tmp217 = tmp215 * tmp216;
  local tmp218:8;
  tmp218 = zext(tmp217);
  local tmp219:8;
  tmp219 = A2_vmaxh_Rss32 s>> tmp218;
  local tmp220:4;
  tmp220 = 65535;
  local tmp221:8;
  tmp221 = zext(tmp220);
  local tmp222:8;
  tmp222 = tmp219 & tmp221;
  tmp214 = tmp222:2;
  tmp213 = tmp214;
<done_204>
  local tmp223:4;
  tmp223 = 65535;
  local tmp224:4;
  tmp224 = zext(tmp213);
  local tmp225:4;
  tmp225 = tmp224 & tmp223;
  tmp182 = sext(tmp225);
  local tmp226:4;
  tmp226 = 3;
  local tmp227:4;
  tmp227 = 16;
  local tmp228:4;
  tmp228 = tmp226 * tmp227;
  local tmp229:8;
  tmp229 = zext(tmp228);
  local tmp230:8;
  tmp230 = tmp182 << tmp229;
  local tmp231:8;
  tmp231 = tmp181 | tmp230;
  A2_vmaxh_Rdd32 = tmp231;
}

:A2_vminuh A2_vminuh_Rdd32 A2_vminuh_Rtt32 A2_vminuh_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vminuh_Rdd32 & A2_vminuh_Rtt32 & A2_vminuh_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vminuh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vminuh_Rtt32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:2;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vminuh_Rss32 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:2;
  local tmp27:1;
  tmp27 = tmp9 < tmp18;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <f_branch_30>;
<t_branch_30>
  local tmp30:2;
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 16;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = A2_vminuh_Rtt32 s>> tmp34;
  local tmp36:4;
  tmp36 = 65535;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp35 & tmp37;
  tmp30 = tmp38:2;
  local tmp39:2;
  tmp39 = tmp30;
  goto <done_30>;
<f_branch_30>
  local tmp40:2;
  local tmp41:4;
  tmp41 = 0;
  local tmp42:4;
  tmp42 = 16;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = A2_vminuh_Rss32 s>> tmp44;
  local tmp46:4;
  tmp46 = 65535;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp45 & tmp47;
  tmp40 = tmp48:2;
  tmp39 = tmp40;
<done_30>
  local tmp49:4;
  tmp49 = 65535;
  local tmp50:4;
  tmp50 = zext(tmp39);
  local tmp51:4;
  tmp51 = tmp50 & tmp49;
  tmp8 = sext(tmp51);
  local tmp52:4;
  tmp52 = 0;
  local tmp53:4;
  tmp53 = 16;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp8 << tmp55;
  local tmp57:8;
  tmp57 = tmp7 | tmp56;
  A2_vminuh_Rdd32 = tmp57;
  local tmp58:8;
  tmp58 = 65535;
  local tmp59:4;
  tmp59 = 1;
  local tmp60:4;
  tmp60 = 16;
  local tmp61:4;
  tmp61 = tmp59 * tmp60;
  local tmp62:8;
  tmp62 = zext(tmp61);
  local tmp63:8;
  tmp63 = tmp58 << tmp62;
  local tmp64:8;
  tmp64 = ~ tmp63;
  local tmp65:8;
  tmp65 = A2_vminuh_Rdd32 & tmp64;
  local tmp66:8;
  local tmp67:2;
  local tmp68:4;
  tmp68 = 1;
  local tmp69:4;
  tmp69 = 16;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = A2_vminuh_Rtt32 s>> tmp71;
  local tmp73:4;
  tmp73 = 65535;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = tmp72 & tmp74;
  tmp67 = tmp75:2;
  local tmp76:2;
  local tmp77:4;
  tmp77 = 1;
  local tmp78:4;
  tmp78 = 16;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = A2_vminuh_Rss32 s>> tmp80;
  local tmp82:4;
  tmp82 = 65535;
  local tmp83:8;
  tmp83 = zext(tmp82);
  local tmp84:8;
  tmp84 = tmp81 & tmp83;
  tmp76 = tmp84:2;
  local tmp85:1;
  tmp85 = tmp67 < tmp76;
  local tmp86:1;
  tmp86 = tmp85;
  if (tmp86) goto <t_branch_88>;
  goto <f_branch_88>;
<t_branch_88>
  local tmp88:2;
  local tmp89:4;
  tmp89 = 1;
  local tmp90:4;
  tmp90 = 16;
  local tmp91:4;
  tmp91 = tmp89 * tmp90;
  local tmp92:8;
  tmp92 = zext(tmp91);
  local tmp93:8;
  tmp93 = A2_vminuh_Rtt32 s>> tmp92;
  local tmp94:4;
  tmp94 = 65535;
  local tmp95:8;
  tmp95 = zext(tmp94);
  local tmp96:8;
  tmp96 = tmp93 & tmp95;
  tmp88 = tmp96:2;
  local tmp97:2;
  tmp97 = tmp88;
  goto <done_88>;
<f_branch_88>
  local tmp98:2;
  local tmp99:4;
  tmp99 = 1;
  local tmp100:4;
  tmp100 = 16;
  local tmp101:4;
  tmp101 = tmp99 * tmp100;
  local tmp102:8;
  tmp102 = zext(tmp101);
  local tmp103:8;
  tmp103 = A2_vminuh_Rss32 s>> tmp102;
  local tmp104:4;
  tmp104 = 65535;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp103 & tmp105;
  tmp98 = tmp106:2;
  tmp97 = tmp98;
<done_88>
  local tmp107:4;
  tmp107 = 65535;
  local tmp108:4;
  tmp108 = zext(tmp97);
  local tmp109:4;
  tmp109 = tmp108 & tmp107;
  tmp66 = sext(tmp109);
  local tmp110:4;
  tmp110 = 1;
  local tmp111:4;
  tmp111 = 16;
  local tmp112:4;
  tmp112 = tmp110 * tmp111;
  local tmp113:8;
  tmp113 = zext(tmp112);
  local tmp114:8;
  tmp114 = tmp66 << tmp113;
  local tmp115:8;
  tmp115 = tmp65 | tmp114;
  A2_vminuh_Rdd32 = tmp115;
  local tmp116:8;
  tmp116 = 65535;
  local tmp117:4;
  tmp117 = 2;
  local tmp118:4;
  tmp118 = 16;
  local tmp119:4;
  tmp119 = tmp117 * tmp118;
  local tmp120:8;
  tmp120 = zext(tmp119);
  local tmp121:8;
  tmp121 = tmp116 << tmp120;
  local tmp122:8;
  tmp122 = ~ tmp121;
  local tmp123:8;
  tmp123 = A2_vminuh_Rdd32 & tmp122;
  local tmp124:8;
  local tmp125:2;
  local tmp126:4;
  tmp126 = 2;
  local tmp127:4;
  tmp127 = 16;
  local tmp128:4;
  tmp128 = tmp126 * tmp127;
  local tmp129:8;
  tmp129 = zext(tmp128);
  local tmp130:8;
  tmp130 = A2_vminuh_Rtt32 s>> tmp129;
  local tmp131:4;
  tmp131 = 65535;
  local tmp132:8;
  tmp132 = zext(tmp131);
  local tmp133:8;
  tmp133 = tmp130 & tmp132;
  tmp125 = tmp133:2;
  local tmp134:2;
  local tmp135:4;
  tmp135 = 2;
  local tmp136:4;
  tmp136 = 16;
  local tmp137:4;
  tmp137 = tmp135 * tmp136;
  local tmp138:8;
  tmp138 = zext(tmp137);
  local tmp139:8;
  tmp139 = A2_vminuh_Rss32 s>> tmp138;
  local tmp140:4;
  tmp140 = 65535;
  local tmp141:8;
  tmp141 = zext(tmp140);
  local tmp142:8;
  tmp142 = tmp139 & tmp141;
  tmp134 = tmp142:2;
  local tmp143:1;
  tmp143 = tmp125 < tmp134;
  local tmp144:1;
  tmp144 = tmp143;
  if (tmp144) goto <t_branch_146>;
  goto <f_branch_146>;
<t_branch_146>
  local tmp146:2;
  local tmp147:4;
  tmp147 = 2;
  local tmp148:4;
  tmp148 = 16;
  local tmp149:4;
  tmp149 = tmp147 * tmp148;
  local tmp150:8;
  tmp150 = zext(tmp149);
  local tmp151:8;
  tmp151 = A2_vminuh_Rtt32 s>> tmp150;
  local tmp152:4;
  tmp152 = 65535;
  local tmp153:8;
  tmp153 = zext(tmp152);
  local tmp154:8;
  tmp154 = tmp151 & tmp153;
  tmp146 = tmp154:2;
  local tmp155:2;
  tmp155 = tmp146;
  goto <done_146>;
<f_branch_146>
  local tmp156:2;
  local tmp157:4;
  tmp157 = 2;
  local tmp158:4;
  tmp158 = 16;
  local tmp159:4;
  tmp159 = tmp157 * tmp158;
  local tmp160:8;
  tmp160 = zext(tmp159);
  local tmp161:8;
  tmp161 = A2_vminuh_Rss32 s>> tmp160;
  local tmp162:4;
  tmp162 = 65535;
  local tmp163:8;
  tmp163 = zext(tmp162);
  local tmp164:8;
  tmp164 = tmp161 & tmp163;
  tmp156 = tmp164:2;
  tmp155 = tmp156;
<done_146>
  local tmp165:4;
  tmp165 = 65535;
  local tmp166:4;
  tmp166 = zext(tmp155);
  local tmp167:4;
  tmp167 = tmp166 & tmp165;
  tmp124 = sext(tmp167);
  local tmp168:4;
  tmp168 = 2;
  local tmp169:4;
  tmp169 = 16;
  local tmp170:4;
  tmp170 = tmp168 * tmp169;
  local tmp171:8;
  tmp171 = zext(tmp170);
  local tmp172:8;
  tmp172 = tmp124 << tmp171;
  local tmp173:8;
  tmp173 = tmp123 | tmp172;
  A2_vminuh_Rdd32 = tmp173;
  local tmp174:8;
  tmp174 = 65535;
  local tmp175:4;
  tmp175 = 3;
  local tmp176:4;
  tmp176 = 16;
  local tmp177:4;
  tmp177 = tmp175 * tmp176;
  local tmp178:8;
  tmp178 = zext(tmp177);
  local tmp179:8;
  tmp179 = tmp174 << tmp178;
  local tmp180:8;
  tmp180 = ~ tmp179;
  local tmp181:8;
  tmp181 = A2_vminuh_Rdd32 & tmp180;
  local tmp182:8;
  local tmp183:2;
  local tmp184:4;
  tmp184 = 3;
  local tmp185:4;
  tmp185 = 16;
  local tmp186:4;
  tmp186 = tmp184 * tmp185;
  local tmp187:8;
  tmp187 = zext(tmp186);
  local tmp188:8;
  tmp188 = A2_vminuh_Rtt32 s>> tmp187;
  local tmp189:4;
  tmp189 = 65535;
  local tmp190:8;
  tmp190 = zext(tmp189);
  local tmp191:8;
  tmp191 = tmp188 & tmp190;
  tmp183 = tmp191:2;
  local tmp192:2;
  local tmp193:4;
  tmp193 = 3;
  local tmp194:4;
  tmp194 = 16;
  local tmp195:4;
  tmp195 = tmp193 * tmp194;
  local tmp196:8;
  tmp196 = zext(tmp195);
  local tmp197:8;
  tmp197 = A2_vminuh_Rss32 s>> tmp196;
  local tmp198:4;
  tmp198 = 65535;
  local tmp199:8;
  tmp199 = zext(tmp198);
  local tmp200:8;
  tmp200 = tmp197 & tmp199;
  tmp192 = tmp200:2;
  local tmp201:1;
  tmp201 = tmp183 < tmp192;
  local tmp202:1;
  tmp202 = tmp201;
  if (tmp202) goto <t_branch_204>;
  goto <f_branch_204>;
<t_branch_204>
  local tmp204:2;
  local tmp205:4;
  tmp205 = 3;
  local tmp206:4;
  tmp206 = 16;
  local tmp207:4;
  tmp207 = tmp205 * tmp206;
  local tmp208:8;
  tmp208 = zext(tmp207);
  local tmp209:8;
  tmp209 = A2_vminuh_Rtt32 s>> tmp208;
  local tmp210:4;
  tmp210 = 65535;
  local tmp211:8;
  tmp211 = zext(tmp210);
  local tmp212:8;
  tmp212 = tmp209 & tmp211;
  tmp204 = tmp212:2;
  local tmp213:2;
  tmp213 = tmp204;
  goto <done_204>;
<f_branch_204>
  local tmp214:2;
  local tmp215:4;
  tmp215 = 3;
  local tmp216:4;
  tmp216 = 16;
  local tmp217:4;
  tmp217 = tmp215 * tmp216;
  local tmp218:8;
  tmp218 = zext(tmp217);
  local tmp219:8;
  tmp219 = A2_vminuh_Rss32 s>> tmp218;
  local tmp220:4;
  tmp220 = 65535;
  local tmp221:8;
  tmp221 = zext(tmp220);
  local tmp222:8;
  tmp222 = tmp219 & tmp221;
  tmp214 = tmp222:2;
  tmp213 = tmp214;
<done_204>
  local tmp223:4;
  tmp223 = 65535;
  local tmp224:4;
  tmp224 = zext(tmp213);
  local tmp225:4;
  tmp225 = tmp224 & tmp223;
  tmp182 = sext(tmp225);
  local tmp226:4;
  tmp226 = 3;
  local tmp227:4;
  tmp227 = 16;
  local tmp228:4;
  tmp228 = tmp226 * tmp227;
  local tmp229:8;
  tmp229 = zext(tmp228);
  local tmp230:8;
  tmp230 = tmp182 << tmp229;
  local tmp231:8;
  tmp231 = tmp181 | tmp230;
  A2_vminuh_Rdd32 = tmp231;
}

:A2_vmaxuh A2_vmaxuh_Rdd32 A2_vmaxuh_Rtt32 A2_vmaxuh_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vmaxuh_Rdd32 & A2_vmaxuh_Rtt32 & A2_vmaxuh_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vmaxuh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vmaxuh_Rtt32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:2;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vmaxuh_Rss32 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp23 & tmp25;
  tmp18 = tmp26:2;
  local tmp27:1;
  tmp27 = tmp9 > tmp18;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <f_branch_30>;
<t_branch_30>
  local tmp30:2;
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 16;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = A2_vmaxuh_Rtt32 s>> tmp34;
  local tmp36:4;
  tmp36 = 65535;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp35 & tmp37;
  tmp30 = tmp38:2;
  local tmp39:2;
  tmp39 = tmp30;
  goto <done_30>;
<f_branch_30>
  local tmp40:2;
  local tmp41:4;
  tmp41 = 0;
  local tmp42:4;
  tmp42 = 16;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = A2_vmaxuh_Rss32 s>> tmp44;
  local tmp46:4;
  tmp46 = 65535;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp45 & tmp47;
  tmp40 = tmp48:2;
  tmp39 = tmp40;
<done_30>
  local tmp49:4;
  tmp49 = 65535;
  local tmp50:4;
  tmp50 = zext(tmp39);
  local tmp51:4;
  tmp51 = tmp50 & tmp49;
  tmp8 = sext(tmp51);
  local tmp52:4;
  tmp52 = 0;
  local tmp53:4;
  tmp53 = 16;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp8 << tmp55;
  local tmp57:8;
  tmp57 = tmp7 | tmp56;
  A2_vmaxuh_Rdd32 = tmp57;
  local tmp58:8;
  tmp58 = 65535;
  local tmp59:4;
  tmp59 = 1;
  local tmp60:4;
  tmp60 = 16;
  local tmp61:4;
  tmp61 = tmp59 * tmp60;
  local tmp62:8;
  tmp62 = zext(tmp61);
  local tmp63:8;
  tmp63 = tmp58 << tmp62;
  local tmp64:8;
  tmp64 = ~ tmp63;
  local tmp65:8;
  tmp65 = A2_vmaxuh_Rdd32 & tmp64;
  local tmp66:8;
  local tmp67:2;
  local tmp68:4;
  tmp68 = 1;
  local tmp69:4;
  tmp69 = 16;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = A2_vmaxuh_Rtt32 s>> tmp71;
  local tmp73:4;
  tmp73 = 65535;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:8;
  tmp75 = tmp72 & tmp74;
  tmp67 = tmp75:2;
  local tmp76:2;
  local tmp77:4;
  tmp77 = 1;
  local tmp78:4;
  tmp78 = 16;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = A2_vmaxuh_Rss32 s>> tmp80;
  local tmp82:4;
  tmp82 = 65535;
  local tmp83:8;
  tmp83 = zext(tmp82);
  local tmp84:8;
  tmp84 = tmp81 & tmp83;
  tmp76 = tmp84:2;
  local tmp85:1;
  tmp85 = tmp67 > tmp76;
  local tmp86:1;
  tmp86 = tmp85;
  if (tmp86) goto <t_branch_88>;
  goto <f_branch_88>;
<t_branch_88>
  local tmp88:2;
  local tmp89:4;
  tmp89 = 1;
  local tmp90:4;
  tmp90 = 16;
  local tmp91:4;
  tmp91 = tmp89 * tmp90;
  local tmp92:8;
  tmp92 = zext(tmp91);
  local tmp93:8;
  tmp93 = A2_vmaxuh_Rtt32 s>> tmp92;
  local tmp94:4;
  tmp94 = 65535;
  local tmp95:8;
  tmp95 = zext(tmp94);
  local tmp96:8;
  tmp96 = tmp93 & tmp95;
  tmp88 = tmp96:2;
  local tmp97:2;
  tmp97 = tmp88;
  goto <done_88>;
<f_branch_88>
  local tmp98:2;
  local tmp99:4;
  tmp99 = 1;
  local tmp100:4;
  tmp100 = 16;
  local tmp101:4;
  tmp101 = tmp99 * tmp100;
  local tmp102:8;
  tmp102 = zext(tmp101);
  local tmp103:8;
  tmp103 = A2_vmaxuh_Rss32 s>> tmp102;
  local tmp104:4;
  tmp104 = 65535;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp103 & tmp105;
  tmp98 = tmp106:2;
  tmp97 = tmp98;
<done_88>
  local tmp107:4;
  tmp107 = 65535;
  local tmp108:4;
  tmp108 = zext(tmp97);
  local tmp109:4;
  tmp109 = tmp108 & tmp107;
  tmp66 = sext(tmp109);
  local tmp110:4;
  tmp110 = 1;
  local tmp111:4;
  tmp111 = 16;
  local tmp112:4;
  tmp112 = tmp110 * tmp111;
  local tmp113:8;
  tmp113 = zext(tmp112);
  local tmp114:8;
  tmp114 = tmp66 << tmp113;
  local tmp115:8;
  tmp115 = tmp65 | tmp114;
  A2_vmaxuh_Rdd32 = tmp115;
  local tmp116:8;
  tmp116 = 65535;
  local tmp117:4;
  tmp117 = 2;
  local tmp118:4;
  tmp118 = 16;
  local tmp119:4;
  tmp119 = tmp117 * tmp118;
  local tmp120:8;
  tmp120 = zext(tmp119);
  local tmp121:8;
  tmp121 = tmp116 << tmp120;
  local tmp122:8;
  tmp122 = ~ tmp121;
  local tmp123:8;
  tmp123 = A2_vmaxuh_Rdd32 & tmp122;
  local tmp124:8;
  local tmp125:2;
  local tmp126:4;
  tmp126 = 2;
  local tmp127:4;
  tmp127 = 16;
  local tmp128:4;
  tmp128 = tmp126 * tmp127;
  local tmp129:8;
  tmp129 = zext(tmp128);
  local tmp130:8;
  tmp130 = A2_vmaxuh_Rtt32 s>> tmp129;
  local tmp131:4;
  tmp131 = 65535;
  local tmp132:8;
  tmp132 = zext(tmp131);
  local tmp133:8;
  tmp133 = tmp130 & tmp132;
  tmp125 = tmp133:2;
  local tmp134:2;
  local tmp135:4;
  tmp135 = 2;
  local tmp136:4;
  tmp136 = 16;
  local tmp137:4;
  tmp137 = tmp135 * tmp136;
  local tmp138:8;
  tmp138 = zext(tmp137);
  local tmp139:8;
  tmp139 = A2_vmaxuh_Rss32 s>> tmp138;
  local tmp140:4;
  tmp140 = 65535;
  local tmp141:8;
  tmp141 = zext(tmp140);
  local tmp142:8;
  tmp142 = tmp139 & tmp141;
  tmp134 = tmp142:2;
  local tmp143:1;
  tmp143 = tmp125 > tmp134;
  local tmp144:1;
  tmp144 = tmp143;
  if (tmp144) goto <t_branch_146>;
  goto <f_branch_146>;
<t_branch_146>
  local tmp146:2;
  local tmp147:4;
  tmp147 = 2;
  local tmp148:4;
  tmp148 = 16;
  local tmp149:4;
  tmp149 = tmp147 * tmp148;
  local tmp150:8;
  tmp150 = zext(tmp149);
  local tmp151:8;
  tmp151 = A2_vmaxuh_Rtt32 s>> tmp150;
  local tmp152:4;
  tmp152 = 65535;
  local tmp153:8;
  tmp153 = zext(tmp152);
  local tmp154:8;
  tmp154 = tmp151 & tmp153;
  tmp146 = tmp154:2;
  local tmp155:2;
  tmp155 = tmp146;
  goto <done_146>;
<f_branch_146>
  local tmp156:2;
  local tmp157:4;
  tmp157 = 2;
  local tmp158:4;
  tmp158 = 16;
  local tmp159:4;
  tmp159 = tmp157 * tmp158;
  local tmp160:8;
  tmp160 = zext(tmp159);
  local tmp161:8;
  tmp161 = A2_vmaxuh_Rss32 s>> tmp160;
  local tmp162:4;
  tmp162 = 65535;
  local tmp163:8;
  tmp163 = zext(tmp162);
  local tmp164:8;
  tmp164 = tmp161 & tmp163;
  tmp156 = tmp164:2;
  tmp155 = tmp156;
<done_146>
  local tmp165:4;
  tmp165 = 65535;
  local tmp166:4;
  tmp166 = zext(tmp155);
  local tmp167:4;
  tmp167 = tmp166 & tmp165;
  tmp124 = sext(tmp167);
  local tmp168:4;
  tmp168 = 2;
  local tmp169:4;
  tmp169 = 16;
  local tmp170:4;
  tmp170 = tmp168 * tmp169;
  local tmp171:8;
  tmp171 = zext(tmp170);
  local tmp172:8;
  tmp172 = tmp124 << tmp171;
  local tmp173:8;
  tmp173 = tmp123 | tmp172;
  A2_vmaxuh_Rdd32 = tmp173;
  local tmp174:8;
  tmp174 = 65535;
  local tmp175:4;
  tmp175 = 3;
  local tmp176:4;
  tmp176 = 16;
  local tmp177:4;
  tmp177 = tmp175 * tmp176;
  local tmp178:8;
  tmp178 = zext(tmp177);
  local tmp179:8;
  tmp179 = tmp174 << tmp178;
  local tmp180:8;
  tmp180 = ~ tmp179;
  local tmp181:8;
  tmp181 = A2_vmaxuh_Rdd32 & tmp180;
  local tmp182:8;
  local tmp183:2;
  local tmp184:4;
  tmp184 = 3;
  local tmp185:4;
  tmp185 = 16;
  local tmp186:4;
  tmp186 = tmp184 * tmp185;
  local tmp187:8;
  tmp187 = zext(tmp186);
  local tmp188:8;
  tmp188 = A2_vmaxuh_Rtt32 s>> tmp187;
  local tmp189:4;
  tmp189 = 65535;
  local tmp190:8;
  tmp190 = zext(tmp189);
  local tmp191:8;
  tmp191 = tmp188 & tmp190;
  tmp183 = tmp191:2;
  local tmp192:2;
  local tmp193:4;
  tmp193 = 3;
  local tmp194:4;
  tmp194 = 16;
  local tmp195:4;
  tmp195 = tmp193 * tmp194;
  local tmp196:8;
  tmp196 = zext(tmp195);
  local tmp197:8;
  tmp197 = A2_vmaxuh_Rss32 s>> tmp196;
  local tmp198:4;
  tmp198 = 65535;
  local tmp199:8;
  tmp199 = zext(tmp198);
  local tmp200:8;
  tmp200 = tmp197 & tmp199;
  tmp192 = tmp200:2;
  local tmp201:1;
  tmp201 = tmp183 > tmp192;
  local tmp202:1;
  tmp202 = tmp201;
  if (tmp202) goto <t_branch_204>;
  goto <f_branch_204>;
<t_branch_204>
  local tmp204:2;
  local tmp205:4;
  tmp205 = 3;
  local tmp206:4;
  tmp206 = 16;
  local tmp207:4;
  tmp207 = tmp205 * tmp206;
  local tmp208:8;
  tmp208 = zext(tmp207);
  local tmp209:8;
  tmp209 = A2_vmaxuh_Rtt32 s>> tmp208;
  local tmp210:4;
  tmp210 = 65535;
  local tmp211:8;
  tmp211 = zext(tmp210);
  local tmp212:8;
  tmp212 = tmp209 & tmp211;
  tmp204 = tmp212:2;
  local tmp213:2;
  tmp213 = tmp204;
  goto <done_204>;
<f_branch_204>
  local tmp214:2;
  local tmp215:4;
  tmp215 = 3;
  local tmp216:4;
  tmp216 = 16;
  local tmp217:4;
  tmp217 = tmp215 * tmp216;
  local tmp218:8;
  tmp218 = zext(tmp217);
  local tmp219:8;
  tmp219 = A2_vmaxuh_Rss32 s>> tmp218;
  local tmp220:4;
  tmp220 = 65535;
  local tmp221:8;
  tmp221 = zext(tmp220);
  local tmp222:8;
  tmp222 = tmp219 & tmp221;
  tmp214 = tmp222:2;
  tmp213 = tmp214;
<done_204>
  local tmp223:4;
  tmp223 = 65535;
  local tmp224:4;
  tmp224 = zext(tmp213);
  local tmp225:4;
  tmp225 = tmp224 & tmp223;
  tmp182 = sext(tmp225);
  local tmp226:4;
  tmp226 = 3;
  local tmp227:4;
  tmp227 = 16;
  local tmp228:4;
  tmp228 = tmp226 * tmp227;
  local tmp229:8;
  tmp229 = zext(tmp228);
  local tmp230:8;
  tmp230 = tmp182 << tmp229;
  local tmp231:8;
  tmp231 = tmp181 | tmp230;
  A2_vmaxuh_Rdd32 = tmp231;
}

:A2_vminw A2_vminw_Rdd32 A2_vminw_Rtt32 A2_vminw_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vminw_Rdd32 & A2_vminw_Rtt32 & A2_vminw_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vminw_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:4;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 32;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vminw_Rtt32 s>> tmp13;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = tmp14 & tmp15;
  tmp9 = tmp16:4;
  tmp8 = zext(tmp9);
  local tmp17:8;
  local tmp18:4;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 32;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vminw_Rss32 s>> tmp22;
  local tmp24:8;
  tmp24 = 4294967295;
  local tmp25:8;
  tmp25 = tmp23 & tmp24;
  tmp18 = tmp25:4;
  tmp17 = zext(tmp18);
  local tmp26:1;
  tmp26 = tmp8 s< tmp17;
  local tmp27:1;
  tmp27 = tmp26;
  if (tmp27) goto <t_branch_29>;
  goto <f_branch_29>;
<t_branch_29>
  local tmp29:8;
  local tmp30:4;
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 32;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = A2_vminw_Rtt32 s>> tmp34;
  local tmp36:8;
  tmp36 = 4294967295;
  local tmp37:8;
  tmp37 = tmp35 & tmp36;
  tmp30 = tmp37:4;
  tmp29 = zext(tmp30);
  local tmp38:8;
  tmp38 = tmp29;
  goto <done_29>;
<f_branch_29>
  local tmp39:8;
  local tmp40:4;
  local tmp41:4;
  tmp41 = 0;
  local tmp42:4;
  tmp42 = 32;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = A2_vminw_Rss32 s>> tmp44;
  local tmp46:8;
  tmp46 = 4294967295;
  local tmp47:8;
  tmp47 = tmp45 & tmp46;
  tmp40 = tmp47:4;
  tmp39 = zext(tmp40);
  tmp38 = tmp39;
<done_29>
  local tmp48:8;
  tmp48 = 4294967295;
  local tmp49:8;
  tmp49 = tmp38 & tmp48;
  local tmp50:4;
  tmp50 = 0;
  local tmp51:4;
  tmp51 = 32;
  local tmp52:4;
  tmp52 = tmp50 * tmp51;
  local tmp53:8;
  tmp53 = zext(tmp52);
  local tmp54:8;
  tmp54 = tmp49 << tmp53;
  local tmp55:8;
  tmp55 = tmp7 | tmp54;
  A2_vminw_Rdd32 = tmp55;
  local tmp56:8;
  tmp56 = 4294967295;
  local tmp57:4;
  tmp57 = 1;
  local tmp58:4;
  tmp58 = 32;
  local tmp59:4;
  tmp59 = tmp57 * tmp58;
  local tmp60:8;
  tmp60 = zext(tmp59);
  local tmp61:8;
  tmp61 = tmp56 << tmp60;
  local tmp62:8;
  tmp62 = ~ tmp61;
  local tmp63:8;
  tmp63 = A2_vminw_Rdd32 & tmp62;
  local tmp64:8;
  local tmp65:4;
  local tmp66:4;
  tmp66 = 1;
  local tmp67:4;
  tmp67 = 32;
  local tmp68:4;
  tmp68 = tmp66 * tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = A2_vminw_Rtt32 s>> tmp69;
  local tmp71:8;
  tmp71 = 4294967295;
  local tmp72:8;
  tmp72 = tmp70 & tmp71;
  tmp65 = tmp72:4;
  tmp64 = zext(tmp65);
  local tmp73:8;
  local tmp74:4;
  local tmp75:4;
  tmp75 = 1;
  local tmp76:4;
  tmp76 = 32;
  local tmp77:4;
  tmp77 = tmp75 * tmp76;
  local tmp78:8;
  tmp78 = zext(tmp77);
  local tmp79:8;
  tmp79 = A2_vminw_Rss32 s>> tmp78;
  local tmp80:8;
  tmp80 = 4294967295;
  local tmp81:8;
  tmp81 = tmp79 & tmp80;
  tmp74 = tmp81:4;
  tmp73 = zext(tmp74);
  local tmp82:1;
  tmp82 = tmp64 s< tmp73;
  local tmp83:1;
  tmp83 = tmp82;
  if (tmp83) goto <t_branch_85>;
  goto <f_branch_85>;
<t_branch_85>
  local tmp85:8;
  local tmp86:4;
  local tmp87:4;
  tmp87 = 1;
  local tmp88:4;
  tmp88 = 32;
  local tmp89:4;
  tmp89 = tmp87 * tmp88;
  local tmp90:8;
  tmp90 = zext(tmp89);
  local tmp91:8;
  tmp91 = A2_vminw_Rtt32 s>> tmp90;
  local tmp92:8;
  tmp92 = 4294967295;
  local tmp93:8;
  tmp93 = tmp91 & tmp92;
  tmp86 = tmp93:4;
  tmp85 = zext(tmp86);
  local tmp94:8;
  tmp94 = tmp85;
  goto <done_85>;
<f_branch_85>
  local tmp95:8;
  local tmp96:4;
  local tmp97:4;
  tmp97 = 1;
  local tmp98:4;
  tmp98 = 32;
  local tmp99:4;
  tmp99 = tmp97 * tmp98;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = A2_vminw_Rss32 s>> tmp100;
  local tmp102:8;
  tmp102 = 4294967295;
  local tmp103:8;
  tmp103 = tmp101 & tmp102;
  tmp96 = tmp103:4;
  tmp95 = zext(tmp96);
  tmp94 = tmp95;
<done_85>
  local tmp104:8;
  tmp104 = 4294967295;
  local tmp105:8;
  tmp105 = tmp94 & tmp104;
  local tmp106:4;
  tmp106 = 1;
  local tmp107:4;
  tmp107 = 32;
  local tmp108:4;
  tmp108 = tmp106 * tmp107;
  local tmp109:8;
  tmp109 = zext(tmp108);
  local tmp110:8;
  tmp110 = tmp105 << tmp109;
  local tmp111:8;
  tmp111 = tmp63 | tmp110;
  A2_vminw_Rdd32 = tmp111;
}

:A2_vmaxw A2_vmaxw_Rdd32 A2_vmaxw_Rtt32 A2_vmaxw_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vmaxw_Rdd32 & A2_vmaxw_Rtt32 & A2_vmaxw_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vmaxw_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:4;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 32;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vmaxw_Rtt32 s>> tmp13;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = tmp14 & tmp15;
  tmp9 = tmp16:4;
  tmp8 = zext(tmp9);
  local tmp17:8;
  local tmp18:4;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 32;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vmaxw_Rss32 s>> tmp22;
  local tmp24:8;
  tmp24 = 4294967295;
  local tmp25:8;
  tmp25 = tmp23 & tmp24;
  tmp18 = tmp25:4;
  tmp17 = zext(tmp18);
  local tmp26:1;
  tmp26 = tmp8 s> tmp17;
  local tmp27:1;
  tmp27 = tmp26;
  if (tmp27) goto <t_branch_29>;
  goto <f_branch_29>;
<t_branch_29>
  local tmp29:8;
  local tmp30:4;
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 32;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = A2_vmaxw_Rtt32 s>> tmp34;
  local tmp36:8;
  tmp36 = 4294967295;
  local tmp37:8;
  tmp37 = tmp35 & tmp36;
  tmp30 = tmp37:4;
  tmp29 = zext(tmp30);
  local tmp38:8;
  tmp38 = tmp29;
  goto <done_29>;
<f_branch_29>
  local tmp39:8;
  local tmp40:4;
  local tmp41:4;
  tmp41 = 0;
  local tmp42:4;
  tmp42 = 32;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = A2_vmaxw_Rss32 s>> tmp44;
  local tmp46:8;
  tmp46 = 4294967295;
  local tmp47:8;
  tmp47 = tmp45 & tmp46;
  tmp40 = tmp47:4;
  tmp39 = zext(tmp40);
  tmp38 = tmp39;
<done_29>
  local tmp48:8;
  tmp48 = 4294967295;
  local tmp49:8;
  tmp49 = tmp38 & tmp48;
  local tmp50:4;
  tmp50 = 0;
  local tmp51:4;
  tmp51 = 32;
  local tmp52:4;
  tmp52 = tmp50 * tmp51;
  local tmp53:8;
  tmp53 = zext(tmp52);
  local tmp54:8;
  tmp54 = tmp49 << tmp53;
  local tmp55:8;
  tmp55 = tmp7 | tmp54;
  A2_vmaxw_Rdd32 = tmp55;
  local tmp56:8;
  tmp56 = 4294967295;
  local tmp57:4;
  tmp57 = 1;
  local tmp58:4;
  tmp58 = 32;
  local tmp59:4;
  tmp59 = tmp57 * tmp58;
  local tmp60:8;
  tmp60 = zext(tmp59);
  local tmp61:8;
  tmp61 = tmp56 << tmp60;
  local tmp62:8;
  tmp62 = ~ tmp61;
  local tmp63:8;
  tmp63 = A2_vmaxw_Rdd32 & tmp62;
  local tmp64:8;
  local tmp65:4;
  local tmp66:4;
  tmp66 = 1;
  local tmp67:4;
  tmp67 = 32;
  local tmp68:4;
  tmp68 = tmp66 * tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = A2_vmaxw_Rtt32 s>> tmp69;
  local tmp71:8;
  tmp71 = 4294967295;
  local tmp72:8;
  tmp72 = tmp70 & tmp71;
  tmp65 = tmp72:4;
  tmp64 = zext(tmp65);
  local tmp73:8;
  local tmp74:4;
  local tmp75:4;
  tmp75 = 1;
  local tmp76:4;
  tmp76 = 32;
  local tmp77:4;
  tmp77 = tmp75 * tmp76;
  local tmp78:8;
  tmp78 = zext(tmp77);
  local tmp79:8;
  tmp79 = A2_vmaxw_Rss32 s>> tmp78;
  local tmp80:8;
  tmp80 = 4294967295;
  local tmp81:8;
  tmp81 = tmp79 & tmp80;
  tmp74 = tmp81:4;
  tmp73 = zext(tmp74);
  local tmp82:1;
  tmp82 = tmp64 s> tmp73;
  local tmp83:1;
  tmp83 = tmp82;
  if (tmp83) goto <t_branch_85>;
  goto <f_branch_85>;
<t_branch_85>
  local tmp85:8;
  local tmp86:4;
  local tmp87:4;
  tmp87 = 1;
  local tmp88:4;
  tmp88 = 32;
  local tmp89:4;
  tmp89 = tmp87 * tmp88;
  local tmp90:8;
  tmp90 = zext(tmp89);
  local tmp91:8;
  tmp91 = A2_vmaxw_Rtt32 s>> tmp90;
  local tmp92:8;
  tmp92 = 4294967295;
  local tmp93:8;
  tmp93 = tmp91 & tmp92;
  tmp86 = tmp93:4;
  tmp85 = zext(tmp86);
  local tmp94:8;
  tmp94 = tmp85;
  goto <done_85>;
<f_branch_85>
  local tmp95:8;
  local tmp96:4;
  local tmp97:4;
  tmp97 = 1;
  local tmp98:4;
  tmp98 = 32;
  local tmp99:4;
  tmp99 = tmp97 * tmp98;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = A2_vmaxw_Rss32 s>> tmp100;
  local tmp102:8;
  tmp102 = 4294967295;
  local tmp103:8;
  tmp103 = tmp101 & tmp102;
  tmp96 = tmp103:4;
  tmp95 = zext(tmp96);
  tmp94 = tmp95;
<done_85>
  local tmp104:8;
  tmp104 = 4294967295;
  local tmp105:8;
  tmp105 = tmp94 & tmp104;
  local tmp106:4;
  tmp106 = 1;
  local tmp107:4;
  tmp107 = 32;
  local tmp108:4;
  tmp108 = tmp106 * tmp107;
  local tmp109:8;
  tmp109 = zext(tmp108);
  local tmp110:8;
  tmp110 = tmp105 << tmp109;
  local tmp111:8;
  tmp111 = tmp63 | tmp110;
  A2_vmaxw_Rdd32 = tmp111;
}

:A2_vminuw A2_vminuw_Rdd32 A2_vminuw_Rtt32 A2_vminuw_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vminuw_Rdd32 & A2_vminuw_Rtt32 & A2_vminuw_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vminuw_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:4;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 32;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vminuw_Rtt32 s>> tmp13;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = tmp14 & tmp15;
  tmp9 = tmp16:4;
  tmp8 = sext(tmp9);
  local tmp17:8;
  local tmp18:4;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 32;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vminuw_Rss32 s>> tmp22;
  local tmp24:8;
  tmp24 = 4294967295;
  local tmp25:8;
  tmp25 = tmp23 & tmp24;
  tmp18 = tmp25:4;
  tmp17 = sext(tmp18);
  local tmp26:1;
  tmp26 = tmp8 < tmp17;
  local tmp27:1;
  tmp27 = tmp26;
  if (tmp27) goto <t_branch_29>;
  goto <f_branch_29>;
<t_branch_29>
  local tmp29:8;
  local tmp30:4;
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 32;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = A2_vminuw_Rtt32 s>> tmp34;
  local tmp36:8;
  tmp36 = 4294967295;
  local tmp37:8;
  tmp37 = tmp35 & tmp36;
  tmp30 = tmp37:4;
  tmp29 = sext(tmp30);
  local tmp38:8;
  tmp38 = tmp29;
  goto <done_29>;
<f_branch_29>
  local tmp39:8;
  local tmp40:4;
  local tmp41:4;
  tmp41 = 0;
  local tmp42:4;
  tmp42 = 32;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = A2_vminuw_Rss32 s>> tmp44;
  local tmp46:8;
  tmp46 = 4294967295;
  local tmp47:8;
  tmp47 = tmp45 & tmp46;
  tmp40 = tmp47:4;
  tmp39 = sext(tmp40);
  tmp38 = tmp39;
<done_29>
  local tmp48:8;
  tmp48 = 4294967295;
  local tmp49:8;
  tmp49 = tmp38 & tmp48;
  local tmp50:4;
  tmp50 = 0;
  local tmp51:4;
  tmp51 = 32;
  local tmp52:4;
  tmp52 = tmp50 * tmp51;
  local tmp53:8;
  tmp53 = zext(tmp52);
  local tmp54:8;
  tmp54 = tmp49 << tmp53;
  local tmp55:8;
  tmp55 = tmp7 | tmp54;
  A2_vminuw_Rdd32 = tmp55;
  local tmp56:8;
  tmp56 = 4294967295;
  local tmp57:4;
  tmp57 = 1;
  local tmp58:4;
  tmp58 = 32;
  local tmp59:4;
  tmp59 = tmp57 * tmp58;
  local tmp60:8;
  tmp60 = zext(tmp59);
  local tmp61:8;
  tmp61 = tmp56 << tmp60;
  local tmp62:8;
  tmp62 = ~ tmp61;
  local tmp63:8;
  tmp63 = A2_vminuw_Rdd32 & tmp62;
  local tmp64:8;
  local tmp65:4;
  local tmp66:4;
  tmp66 = 1;
  local tmp67:4;
  tmp67 = 32;
  local tmp68:4;
  tmp68 = tmp66 * tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = A2_vminuw_Rtt32 s>> tmp69;
  local tmp71:8;
  tmp71 = 4294967295;
  local tmp72:8;
  tmp72 = tmp70 & tmp71;
  tmp65 = tmp72:4;
  tmp64 = sext(tmp65);
  local tmp73:8;
  local tmp74:4;
  local tmp75:4;
  tmp75 = 1;
  local tmp76:4;
  tmp76 = 32;
  local tmp77:4;
  tmp77 = tmp75 * tmp76;
  local tmp78:8;
  tmp78 = zext(tmp77);
  local tmp79:8;
  tmp79 = A2_vminuw_Rss32 s>> tmp78;
  local tmp80:8;
  tmp80 = 4294967295;
  local tmp81:8;
  tmp81 = tmp79 & tmp80;
  tmp74 = tmp81:4;
  tmp73 = sext(tmp74);
  local tmp82:1;
  tmp82 = tmp64 < tmp73;
  local tmp83:1;
  tmp83 = tmp82;
  if (tmp83) goto <t_branch_85>;
  goto <f_branch_85>;
<t_branch_85>
  local tmp85:8;
  local tmp86:4;
  local tmp87:4;
  tmp87 = 1;
  local tmp88:4;
  tmp88 = 32;
  local tmp89:4;
  tmp89 = tmp87 * tmp88;
  local tmp90:8;
  tmp90 = zext(tmp89);
  local tmp91:8;
  tmp91 = A2_vminuw_Rtt32 s>> tmp90;
  local tmp92:8;
  tmp92 = 4294967295;
  local tmp93:8;
  tmp93 = tmp91 & tmp92;
  tmp86 = tmp93:4;
  tmp85 = sext(tmp86);
  local tmp94:8;
  tmp94 = tmp85;
  goto <done_85>;
<f_branch_85>
  local tmp95:8;
  local tmp96:4;
  local tmp97:4;
  tmp97 = 1;
  local tmp98:4;
  tmp98 = 32;
  local tmp99:4;
  tmp99 = tmp97 * tmp98;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = A2_vminuw_Rss32 s>> tmp100;
  local tmp102:8;
  tmp102 = 4294967295;
  local tmp103:8;
  tmp103 = tmp101 & tmp102;
  tmp96 = tmp103:4;
  tmp95 = sext(tmp96);
  tmp94 = tmp95;
<done_85>
  local tmp104:8;
  tmp104 = 4294967295;
  local tmp105:8;
  tmp105 = tmp94 & tmp104;
  local tmp106:4;
  tmp106 = 1;
  local tmp107:4;
  tmp107 = 32;
  local tmp108:4;
  tmp108 = tmp106 * tmp107;
  local tmp109:8;
  tmp109 = zext(tmp108);
  local tmp110:8;
  tmp110 = tmp105 << tmp109;
  local tmp111:8;
  tmp111 = tmp63 | tmp110;
  A2_vminuw_Rdd32 = tmp111;
}

:A2_vmaxuw A2_vmaxuw_Rdd32 A2_vmaxuw_Rtt32 A2_vmaxuw_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A2_vmaxuw_Rdd32 & A2_vmaxuw_Rtt32 & A2_vmaxuw_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A2_vmaxuw_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:4;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 32;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = A2_vmaxuw_Rtt32 s>> tmp13;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = tmp14 & tmp15;
  tmp9 = tmp16:4;
  tmp8 = sext(tmp9);
  local tmp17:8;
  local tmp18:4;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 32;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = A2_vmaxuw_Rss32 s>> tmp22;
  local tmp24:8;
  tmp24 = 4294967295;
  local tmp25:8;
  tmp25 = tmp23 & tmp24;
  tmp18 = tmp25:4;
  tmp17 = sext(tmp18);
  local tmp26:1;
  tmp26 = tmp8 > tmp17;
  local tmp27:1;
  tmp27 = tmp26;
  if (tmp27) goto <t_branch_29>;
  goto <f_branch_29>;
<t_branch_29>
  local tmp29:8;
  local tmp30:4;
  local tmp31:4;
  tmp31 = 0;
  local tmp32:4;
  tmp32 = 32;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = A2_vmaxuw_Rtt32 s>> tmp34;
  local tmp36:8;
  tmp36 = 4294967295;
  local tmp37:8;
  tmp37 = tmp35 & tmp36;
  tmp30 = tmp37:4;
  tmp29 = sext(tmp30);
  local tmp38:8;
  tmp38 = tmp29;
  goto <done_29>;
<f_branch_29>
  local tmp39:8;
  local tmp40:4;
  local tmp41:4;
  tmp41 = 0;
  local tmp42:4;
  tmp42 = 32;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = A2_vmaxuw_Rss32 s>> tmp44;
  local tmp46:8;
  tmp46 = 4294967295;
  local tmp47:8;
  tmp47 = tmp45 & tmp46;
  tmp40 = tmp47:4;
  tmp39 = sext(tmp40);
  tmp38 = tmp39;
<done_29>
  local tmp48:8;
  tmp48 = 4294967295;
  local tmp49:8;
  tmp49 = tmp38 & tmp48;
  local tmp50:4;
  tmp50 = 0;
  local tmp51:4;
  tmp51 = 32;
  local tmp52:4;
  tmp52 = tmp50 * tmp51;
  local tmp53:8;
  tmp53 = zext(tmp52);
  local tmp54:8;
  tmp54 = tmp49 << tmp53;
  local tmp55:8;
  tmp55 = tmp7 | tmp54;
  A2_vmaxuw_Rdd32 = tmp55;
  local tmp56:8;
  tmp56 = 4294967295;
  local tmp57:4;
  tmp57 = 1;
  local tmp58:4;
  tmp58 = 32;
  local tmp59:4;
  tmp59 = tmp57 * tmp58;
  local tmp60:8;
  tmp60 = zext(tmp59);
  local tmp61:8;
  tmp61 = tmp56 << tmp60;
  local tmp62:8;
  tmp62 = ~ tmp61;
  local tmp63:8;
  tmp63 = A2_vmaxuw_Rdd32 & tmp62;
  local tmp64:8;
  local tmp65:4;
  local tmp66:4;
  tmp66 = 1;
  local tmp67:4;
  tmp67 = 32;
  local tmp68:4;
  tmp68 = tmp66 * tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = A2_vmaxuw_Rtt32 s>> tmp69;
  local tmp71:8;
  tmp71 = 4294967295;
  local tmp72:8;
  tmp72 = tmp70 & tmp71;
  tmp65 = tmp72:4;
  tmp64 = sext(tmp65);
  local tmp73:8;
  local tmp74:4;
  local tmp75:4;
  tmp75 = 1;
  local tmp76:4;
  tmp76 = 32;
  local tmp77:4;
  tmp77 = tmp75 * tmp76;
  local tmp78:8;
  tmp78 = zext(tmp77);
  local tmp79:8;
  tmp79 = A2_vmaxuw_Rss32 s>> tmp78;
  local tmp80:8;
  tmp80 = 4294967295;
  local tmp81:8;
  tmp81 = tmp79 & tmp80;
  tmp74 = tmp81:4;
  tmp73 = sext(tmp74);
  local tmp82:1;
  tmp82 = tmp64 > tmp73;
  local tmp83:1;
  tmp83 = tmp82;
  if (tmp83) goto <t_branch_85>;
  goto <f_branch_85>;
<t_branch_85>
  local tmp85:8;
  local tmp86:4;
  local tmp87:4;
  tmp87 = 1;
  local tmp88:4;
  tmp88 = 32;
  local tmp89:4;
  tmp89 = tmp87 * tmp88;
  local tmp90:8;
  tmp90 = zext(tmp89);
  local tmp91:8;
  tmp91 = A2_vmaxuw_Rtt32 s>> tmp90;
  local tmp92:8;
  tmp92 = 4294967295;
  local tmp93:8;
  tmp93 = tmp91 & tmp92;
  tmp86 = tmp93:4;
  tmp85 = sext(tmp86);
  local tmp94:8;
  tmp94 = tmp85;
  goto <done_85>;
<f_branch_85>
  local tmp95:8;
  local tmp96:4;
  local tmp97:4;
  tmp97 = 1;
  local tmp98:4;
  tmp98 = 32;
  local tmp99:4;
  tmp99 = tmp97 * tmp98;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = A2_vmaxuw_Rss32 s>> tmp100;
  local tmp102:8;
  tmp102 = 4294967295;
  local tmp103:8;
  tmp103 = tmp101 & tmp102;
  tmp96 = tmp103:4;
  tmp95 = sext(tmp96);
  tmp94 = tmp95;
<done_85>
  local tmp104:8;
  tmp104 = 4294967295;
  local tmp105:8;
  tmp105 = tmp94 & tmp104;
  local tmp106:4;
  tmp106 = 1;
  local tmp107:4;
  tmp107 = 32;
  local tmp108:4;
  tmp108 = tmp106 * tmp107;
  local tmp109:8;
  tmp109 = zext(tmp108);
  local tmp110:8;
  tmp110 = tmp105 << tmp109;
  local tmp111:8;
  tmp111 = tmp63 | tmp110;
  A2_vmaxuw_Rdd32 = tmp111;
}

:A5_ACS A5_ACS_Rxx32 A5_ACS_Pe4 A5_ACS_Rss32 A5_ACS_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & A5_ACS_Rxx32 & A5_ACS_Pe4 & A5_ACS_Rss32 & A5_ACS_Rtt32 unimpl

:A6_vminub_RdP A6_vminub_RdP_Rdd32 A6_vminub_RdP_Pe4 A6_vminub_RdP_Rtt32 A6_vminub_RdP_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & A6_vminub_RdP_Rdd32 & A6_vminub_RdP_Pe4 & A6_vminub_RdP_Rtt32 & A6_vminub_RdP_Rss32 unimpl

:A4_modwrapu A4_modwrapu_Rd32 A4_modwrapu_Rs32 A4_modwrapu_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_modwrapu_Rd32 & A4_modwrapu_Rs32 & A4_modwrapu_Rt32 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = A4_modwrapu_Rs32 s< tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = A4_modwrapu_Rt32;
  local tmp5:4;
  tmp5 = A4_modwrapu_Rs32 + tmp4;
  A4_modwrapu_Rd32 = tmp5;
  goto <done_4>;
<f_branch_4>
  local tmp6:4;
  tmp6 = A4_modwrapu_Rs32;
  local tmp7:4;
  tmp7 = A4_modwrapu_Rt32;
  local tmp8:1;
  tmp8 = tmp6 >= tmp7;
  local tmp9:1;
  tmp9 = tmp8;
  if (tmp9) goto <t_branch_11>;
  goto <f_branch_11>;
<t_branch_11>
  local tmp11:4;
  tmp11 = A4_modwrapu_Rt32;
  local tmp12:4;
  tmp12 = A4_modwrapu_Rs32 - tmp11;
  A4_modwrapu_Rd32 = tmp12;
  goto <done_11>;
<f_branch_11>
  A4_modwrapu_Rd32 = A4_modwrapu_Rs32;
<done_11>
<done_4>
}

:F2_sfadd F2_sfadd_Rd32 F2_sfadd_Rs32 F2_sfadd_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_sfadd_Rd32 & F2_sfadd_Rs32 & F2_sfadd_Rt32 unimpl

:F2_sfsub F2_sfsub_Rd32 F2_sfsub_Rs32 F2_sfsub_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_sfsub_Rd32 & F2_sfsub_Rs32 & F2_sfsub_Rt32 unimpl

:F2_sfmpy F2_sfmpy_Rd32 F2_sfmpy_Rs32 F2_sfmpy_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_sfmpy_Rd32 & F2_sfmpy_Rs32 & F2_sfmpy_Rt32 unimpl

:F2_sffma F2_sffma_Rx32 F2_sffma_Rs32 F2_sffma_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_sffma_Rx32 & F2_sffma_Rs32 & F2_sffma_Rt32 unimpl

:F2_sffma_sc F2_sffma_sc_Rx32 F2_sffma_sc_Rs32 F2_sffma_sc_Rt32 F2_sffma_sc_Pu4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_sffma_sc_Rx32 & F2_sffma_sc_Rs32 & F2_sffma_sc_Rt32 & F2_sffma_sc_Pu4 unimpl

:F2_sffms F2_sffms_Rx32 F2_sffms_Rs32 F2_sffms_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_sffms_Rx32 & F2_sffms_Rs32 & F2_sffms_Rt32 unimpl

:F2_sffma_lib F2_sffma_lib_Rx32 F2_sffma_lib_Rs32 F2_sffma_lib_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_sffma_lib_Rx32 & F2_sffma_lib_Rs32 & F2_sffma_lib_Rt32 unimpl

:F2_sffms_lib F2_sffms_lib_Rx32 F2_sffms_lib_Rs32 F2_sffms_lib_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_sffms_lib_Rx32 & F2_sffms_lib_Rs32 & F2_sffms_lib_Rt32 unimpl

:F2_sfcmpeq F2_sfcmpeq_Pd4 F2_sfcmpeq_Rs32 F2_sfcmpeq_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & F2_sfcmpeq_Pd4 & F2_sfcmpeq_Rs32 & F2_sfcmpeq_Rt32 unimpl

:F2_sfcmpgt F2_sfcmpgt_Pd4 F2_sfcmpgt_Rs32 F2_sfcmpgt_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & F2_sfcmpgt_Pd4 & F2_sfcmpgt_Rs32 & F2_sfcmpgt_Rt32 unimpl

:F2_sfcmpge F2_sfcmpge_Pd4 F2_sfcmpge_Rs32 F2_sfcmpge_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & F2_sfcmpge_Pd4 & F2_sfcmpge_Rs32 & F2_sfcmpge_Rt32 unimpl

:F2_sfcmpuo F2_sfcmpuo_Pd4 F2_sfcmpuo_Rs32 F2_sfcmpuo_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & F2_sfcmpuo_Pd4 & F2_sfcmpuo_Rs32 & F2_sfcmpuo_Rt32 unimpl

:F2_sfmax F2_sfmax_Rd32 F2_sfmax_Rs32 F2_sfmax_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_sfmax_Rd32 & F2_sfmax_Rs32 & F2_sfmax_Rt32 unimpl

:F2_sfmin F2_sfmin_Rd32 F2_sfmin_Rs32 F2_sfmin_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_sfmin_Rd32 & F2_sfmin_Rs32 & F2_sfmin_Rt32 unimpl

:F2_sfclass F2_sfclass_Pd4 F2_sfclass_Rs32 F2_sfclass_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_sfclass_Pd4 & F2_sfclass_Rs32 & F2_sfclass_u5 unimpl

:F2_sfimm_p F2_sfimm_p_Rd32 F2_sfimm_p_u10 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & F2_sfimm_p_Rd32 & F2_sfimm_p_u10 {
  local tmp0:4;
  tmp0 = 127;
  local tmp1:4;
  tmp1 = 6;
  local tmp2:4;
  tmp2 = tmp0 - tmp1;
  local tmp3:4;
  tmp3 = 23;
  local tmp4:4;
  tmp4 = tmp2 << tmp3;
  F2_sfimm_p_Rd32 = tmp4;
  local tmp5:4;
  tmp5 = 17;
  local tmp6:4;
  tmp6 = F2_sfimm_p_u10 << tmp5;
  local tmp7:4;
  tmp7 = F2_sfimm_p_Rd32 + tmp6;
  F2_sfimm_p_Rd32 = tmp7;
}

:F2_sfimm_n F2_sfimm_n_Rd32 F2_sfimm_n_u10 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & F2_sfimm_n_Rd32 & F2_sfimm_n_u10 {
  local tmp0:4;
  tmp0 = 127;
  local tmp1:4;
  tmp1 = 6;
  local tmp2:4;
  tmp2 = tmp0 - tmp1;
  local tmp3:4;
  tmp3 = 23;
  local tmp4:4;
  tmp4 = tmp2 << tmp3;
  F2_sfimm_n_Rd32 = tmp4;
  local tmp5:4;
  tmp5 = 17;
  local tmp6:4;
  tmp6 = F2_sfimm_n_u10 << tmp5;
  local tmp7:4;
  tmp7 = F2_sfimm_n_Rd32 + tmp6;
  F2_sfimm_n_Rd32 = tmp7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 31;
  local tmp10:4;
  tmp10 = tmp8 << tmp9;
  local tmp11:4;
  tmp11 = F2_sfimm_n_Rd32 | tmp10;
  F2_sfimm_n_Rd32 = tmp11;
}

:F2_sfrecipa F2_sfrecipa_Rd32 F2_sfrecipa_Pe4 F2_sfrecipa_Rs32 F2_sfrecipa_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_sfrecipa_Rd32 & F2_sfrecipa_Pe4 & F2_sfrecipa_Rs32 & F2_sfrecipa_Rt32 unimpl

:F2_sffixupn F2_sffixupn_Rd32 F2_sffixupn_Rs32 F2_sffixupn_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_sffixupn_Rd32 & F2_sffixupn_Rs32 & F2_sffixupn_Rt32 unimpl

:F2_sffixupd F2_sffixupd_Rd32 F2_sffixupd_Rs32 F2_sffixupd_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_sffixupd_Rd32 & F2_sffixupd_Rs32 & F2_sffixupd_Rt32 unimpl

:F2_sfinvsqrta F2_sfinvsqrta_Rd32 F2_sfinvsqrta_Pe4 F2_sfinvsqrta_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_sfinvsqrta_Rd32 & F2_sfinvsqrta_Pe4 & F2_sfinvsqrta_Rs32 unimpl

:F2_sffixupr F2_sffixupr_Rd32 F2_sffixupr_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_sffixupr_Rd32 & F2_sffixupr_Rs32 unimpl

:F2_dfadd F2_dfadd_Rdd32 F2_dfadd_Rss32 F2_dfadd_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_dfadd_Rdd32 & F2_dfadd_Rss32 & F2_dfadd_Rtt32 unimpl

:F2_dfsub F2_dfsub_Rdd32 F2_dfsub_Rss32 F2_dfsub_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_dfsub_Rdd32 & F2_dfsub_Rss32 & F2_dfsub_Rtt32 unimpl

:F2_dfmax F2_dfmax_Rdd32 F2_dfmax_Rss32 F2_dfmax_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_dfmax_Rdd32 & F2_dfmax_Rss32 & F2_dfmax_Rtt32 unimpl

:F2_dfmin F2_dfmin_Rdd32 F2_dfmin_Rss32 F2_dfmin_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_dfmin_Rdd32 & F2_dfmin_Rss32 & F2_dfmin_Rtt32 unimpl

:F2_dfmpyfix F2_dfmpyfix_Rdd32 F2_dfmpyfix_Rss32 F2_dfmpyfix_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_dfmpyfix_Rdd32 & F2_dfmpyfix_Rss32 & F2_dfmpyfix_Rtt32 unimpl

:F2_dfmpyll F2_dfmpyll_Rdd32 F2_dfmpyll_Rss32 F2_dfmpyll_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_dfmpyll_Rdd32 & F2_dfmpyll_Rss32 & F2_dfmpyll_Rtt32 unimpl

:F2_dfmpylh F2_dfmpylh_Rxx32 F2_dfmpylh_Rss32 F2_dfmpylh_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_dfmpylh_Rxx32 & F2_dfmpylh_Rss32 & F2_dfmpylh_Rtt32 {
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 32;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = F2_dfmpylh_Rss32 s>> tmp5;
  local tmp7:8;
  tmp7 = 4294967295;
  local tmp8:8;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:4;
  tmp0 = sext(tmp1);
  local tmp9:4;
  tmp9 = 1048576;
  local tmp10:8;
  local tmp11:4;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 32;
  local tmp14:4;
  tmp14 = tmp12 * tmp13;
  local tmp15:8;
  tmp15 = zext(tmp14);
  local tmp16:8;
  tmp16 = F2_dfmpylh_Rtt32 s>> tmp15;
  local tmp17:8;
  tmp17 = 4294967295;
  local tmp18:8;
  tmp18 = tmp16 & tmp17;
  tmp11 = tmp18:4;
  tmp10 = sext(tmp11);
  local tmp19:4;
  tmp19 = 1;
  local tmp20:4;
  tmp20 = 20;
  local tmp21:4;
  tmp21 = tmp19 << tmp20;
  local tmp22:4;
  tmp22 = 1;
  local tmp23:4;
  tmp23 = tmp21 - tmp22;
  local tmp24:8;
  tmp24 = zext(tmp23);
  local tmp25:8;
  tmp25 = tmp10 & tmp24;
  local tmp26:8;
  tmp26 = zext(tmp9);
  local tmp27:8;
  tmp27 = tmp26 | tmp25;
  local tmp28:8;
  tmp28 = tmp0 * tmp27;
  local tmp29:4;
  tmp29 = 1;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp28 << tmp30;
  local tmp32:8;
  tmp32 = F2_dfmpylh_Rxx32 + tmp31;
  F2_dfmpylh_Rxx32 = tmp32;
}

:F2_dfmpyhh F2_dfmpyhh_Rxx32 F2_dfmpyhh_Rss32 F2_dfmpyhh_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 1 & F2_dfmpyhh_Rxx32 & F2_dfmpyhh_Rss32 & F2_dfmpyhh_Rtt32 unimpl

:F2_dfcmpeq F2_dfcmpeq_Pd4 F2_dfcmpeq_Rss32 F2_dfcmpeq_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & F2_dfcmpeq_Pd4 & F2_dfcmpeq_Rss32 & F2_dfcmpeq_Rtt32 unimpl

:F2_dfcmpgt F2_dfcmpgt_Pd4 F2_dfcmpgt_Rss32 F2_dfcmpgt_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & F2_dfcmpgt_Pd4 & F2_dfcmpgt_Rss32 & F2_dfcmpgt_Rtt32 unimpl

:F2_dfcmpge F2_dfcmpge_Pd4 F2_dfcmpge_Rss32 F2_dfcmpge_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & F2_dfcmpge_Pd4 & F2_dfcmpge_Rss32 & F2_dfcmpge_Rtt32 unimpl

:F2_dfcmpuo F2_dfcmpuo_Pd4 F2_dfcmpuo_Rss32 F2_dfcmpuo_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & F2_dfcmpuo_Pd4 & F2_dfcmpuo_Rss32 & F2_dfcmpuo_Rtt32 unimpl

:F2_dfclass F2_dfclass_Pd4 F2_dfclass_Rss32 F2_dfclass_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b3 = 0 & b4 = 1 & b10 = 0 & b11 = 0 & b12 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & F2_dfclass_Pd4 & F2_dfclass_Rss32 & F2_dfclass_u5 unimpl

:F2_dfimm_p F2_dfimm_p_Rdd32 F2_dfimm_p_u10 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & F2_dfimm_p_Rdd32 & F2_dfimm_p_u10 {
  local tmp0:8;
  tmp0 = 1023;
  local tmp1:4;
  tmp1 = 6;
  local tmp2:8;
  tmp2 = zext(tmp1);
  local tmp3:8;
  tmp3 = tmp0 - tmp2;
  local tmp4:4;
  tmp4 = 52;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = tmp3 << tmp5;
  F2_dfimm_p_Rdd32 = tmp6;
  local tmp7:8;
  tmp7 = sext(F2_dfimm_p_u10);
  local tmp8:4;
  tmp8 = 46;
  local tmp9:8;
  tmp9 = zext(tmp8);
  local tmp10:8;
  tmp10 = tmp7 << tmp9;
  local tmp11:8;
  tmp11 = F2_dfimm_p_Rdd32 + tmp10;
  F2_dfimm_p_Rdd32 = tmp11;
}

:F2_dfimm_n F2_dfimm_n_Rdd32 F2_dfimm_n_u10 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & F2_dfimm_n_Rdd32 & F2_dfimm_n_u10 {
  local tmp0:8;
  tmp0 = 1023;
  local tmp1:4;
  tmp1 = 6;
  local tmp2:8;
  tmp2 = zext(tmp1);
  local tmp3:8;
  tmp3 = tmp0 - tmp2;
  local tmp4:4;
  tmp4 = 52;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = tmp3 << tmp5;
  F2_dfimm_n_Rdd32 = tmp6;
  local tmp7:8;
  tmp7 = sext(F2_dfimm_n_u10);
  local tmp8:4;
  tmp8 = 46;
  local tmp9:8;
  tmp9 = zext(tmp8);
  local tmp10:8;
  tmp10 = tmp7 << tmp9;
  local tmp11:8;
  tmp11 = F2_dfimm_n_Rdd32 + tmp10;
  F2_dfimm_n_Rdd32 = tmp11;
  local tmp12:8;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 63;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = tmp12 << tmp14;
  local tmp16:8;
  tmp16 = F2_dfimm_n_Rdd32 | tmp15;
  F2_dfimm_n_Rdd32 = tmp16;
}

:F2_conv_sf2df F2_conv_sf2df_Rdd32 F2_conv_sf2df_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_sf2df_Rdd32 & F2_conv_sf2df_Rs32 unimpl

:F2_conv_df2sf F2_conv_df2sf_Rd32 F2_conv_df2sf_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_df2sf_Rd32 & F2_conv_df2sf_Rss32 unimpl

:F2_conv_uw2sf F2_conv_uw2sf_Rd32 F2_conv_uw2sf_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_uw2sf_Rd32 & F2_conv_uw2sf_Rs32 unimpl

:F2_conv_uw2df F2_conv_uw2df_Rdd32 F2_conv_uw2df_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_uw2df_Rdd32 & F2_conv_uw2df_Rs32 unimpl

:F2_conv_w2sf F2_conv_w2sf_Rd32 F2_conv_w2sf_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_w2sf_Rd32 & F2_conv_w2sf_Rs32 unimpl

:F2_conv_w2df F2_conv_w2df_Rdd32 F2_conv_w2df_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_w2df_Rdd32 & F2_conv_w2df_Rs32 unimpl

:F2_conv_ud2sf F2_conv_ud2sf_Rd32 F2_conv_ud2sf_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_ud2sf_Rd32 & F2_conv_ud2sf_Rss32 unimpl

:F2_conv_ud2df F2_conv_ud2df_Rdd32 F2_conv_ud2df_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_ud2df_Rdd32 & F2_conv_ud2df_Rss32 unimpl

:F2_conv_d2sf F2_conv_d2sf_Rd32 F2_conv_d2sf_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_d2sf_Rd32 & F2_conv_d2sf_Rss32 unimpl

:F2_conv_d2df F2_conv_d2df_Rdd32 F2_conv_d2df_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_d2df_Rdd32 & F2_conv_d2df_Rss32 unimpl

:F2_conv_sf2uw F2_conv_sf2uw_Rd32 F2_conv_sf2uw_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_sf2uw_Rd32 & F2_conv_sf2uw_Rs32 unimpl

:F2_conv_sf2w F2_conv_sf2w_Rd32 F2_conv_sf2w_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_sf2w_Rd32 & F2_conv_sf2w_Rs32 unimpl

:F2_conv_sf2ud F2_conv_sf2ud_Rdd32 F2_conv_sf2ud_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_sf2ud_Rdd32 & F2_conv_sf2ud_Rs32 unimpl

:F2_conv_sf2d F2_conv_sf2d_Rdd32 F2_conv_sf2d_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_sf2d_Rdd32 & F2_conv_sf2d_Rs32 unimpl

:F2_conv_df2uw F2_conv_df2uw_Rd32 F2_conv_df2uw_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_df2uw_Rd32 & F2_conv_df2uw_Rss32 unimpl

:F2_conv_df2w F2_conv_df2w_Rd32 F2_conv_df2w_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_df2w_Rd32 & F2_conv_df2w_Rss32 unimpl

:F2_conv_df2ud F2_conv_df2ud_Rdd32 F2_conv_df2ud_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_df2ud_Rdd32 & F2_conv_df2ud_Rss32 unimpl

:F2_conv_df2d F2_conv_df2d_Rdd32 F2_conv_df2d_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_df2d_Rdd32 & F2_conv_df2d_Rss32 unimpl

:F2_conv_sf2uw_chop F2_conv_sf2uw_chop_Rd32 F2_conv_sf2uw_chop_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_sf2uw_chop_Rd32 & F2_conv_sf2uw_chop_Rs32 unimpl

:F2_conv_sf2w_chop F2_conv_sf2w_chop_Rd32 F2_conv_sf2w_chop_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_sf2w_chop_Rd32 & F2_conv_sf2w_chop_Rs32 unimpl

:F2_conv_sf2ud_chop F2_conv_sf2ud_chop_Rdd32 F2_conv_sf2ud_chop_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_sf2ud_chop_Rdd32 & F2_conv_sf2ud_chop_Rs32 unimpl

:F2_conv_sf2d_chop F2_conv_sf2d_chop_Rdd32 F2_conv_sf2d_chop_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_sf2d_chop_Rdd32 & F2_conv_sf2d_chop_Rs32 unimpl

:F2_conv_df2uw_chop F2_conv_df2uw_chop_Rd32 F2_conv_df2uw_chop_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_df2uw_chop_Rd32 & F2_conv_df2uw_chop_Rss32 unimpl

:F2_conv_df2w_chop F2_conv_df2w_chop_Rd32 F2_conv_df2w_chop_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_df2w_chop_Rd32 & F2_conv_df2w_chop_Rss32 unimpl

:F2_conv_df2ud_chop F2_conv_df2ud_chop_Rdd32 F2_conv_df2ud_chop_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_df2ud_chop_Rdd32 & F2_conv_df2ud_chop_Rss32 unimpl

:F2_conv_df2d_chop F2_conv_df2d_chop_Rdd32 F2_conv_df2d_chop_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & F2_conv_df2d_chop_Rdd32 & F2_conv_df2d_chop_Rss32 unimpl

:S2_asr_r_r S2_asr_r_r_Rd32 S2_asr_r_r_Rs32 S2_asr_r_r_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asr_r_r_Rd32 & S2_asr_r_r_Rs32 & S2_asr_r_r_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asr_r_r_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:1;
  tmp20 = tmp19;
  if (tmp20) goto <t_branch_22>;
  goto <f_branch_22>;
<t_branch_22>
  local tmp22:8;
  local tmp23:4;
  tmp23 = S2_asr_r_r_Rs32;
  tmp22 = zext(tmp23);
  local tmp24:8;
  tmp24 = zext(shamt);
  local tmp25:8;
  tmp25 = tmp22 s>> tmp24;
  local tmp26:8;
  tmp26 = tmp25;
  goto <done_22>;
<f_branch_22>
  local tmp27:8;
  local tmp28:4;
  tmp28 = S2_asr_r_r_Rs32;
  tmp27 = zext(tmp28);
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp27 << tmp29;
  tmp26 = tmp30;
<done_22>
  S2_asr_r_r_Rd32 = tmp26:4;
}

:S2_asl_r_r S2_asl_r_r_Rd32 S2_asl_r_r_Rs32 S2_asl_r_r_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asl_r_r_Rd32 & S2_asl_r_r_Rs32 & S2_asl_r_r_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asl_r_r_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:1;
  tmp20 = tmp19;
  if (tmp20) goto <t_branch_22>;
  goto <f_branch_22>;
<t_branch_22>
  local tmp22:8;
  local tmp23:4;
  tmp23 = S2_asl_r_r_Rs32;
  tmp22 = zext(tmp23);
  local tmp24:8;
  tmp24 = zext(shamt);
  local tmp25:8;
  tmp25 = tmp22 << tmp24;
  local tmp26:8;
  tmp26 = tmp25;
  goto <done_22>;
<f_branch_22>
  local tmp27:8;
  local tmp28:4;
  tmp28 = S2_asl_r_r_Rs32;
  tmp27 = zext(tmp28);
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp27 s>> tmp29;
  tmp26 = tmp30;
<done_22>
  S2_asl_r_r_Rd32 = tmp26:4;
}

:S2_lsr_r_r S2_lsr_r_r_Rd32 S2_lsr_r_r_Rs32 S2_lsr_r_r_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsr_r_r_Rd32 & S2_lsr_r_r_Rs32 & S2_lsr_r_r_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsr_r_r_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:1;
  tmp20 = tmp19;
  if (tmp20) goto <t_branch_22>;
  goto <f_branch_22>;
<t_branch_22>
  local tmp22:8;
  local tmp23:4;
  tmp23 = S2_lsr_r_r_Rs32;
  tmp22 = sext(tmp23);
  local tmp24:8;
  tmp24 = zext(shamt);
  local tmp25:8;
  tmp25 = tmp22 >> tmp24;
  local tmp26:8;
  tmp26 = tmp25;
  goto <done_22>;
<f_branch_22>
  local tmp27:8;
  local tmp28:4;
  tmp28 = S2_lsr_r_r_Rs32;
  tmp27 = sext(tmp28);
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp27 << tmp29;
  tmp26 = tmp30;
<done_22>
  S2_lsr_r_r_Rd32 = tmp26:4;
}

:S2_lsl_r_r S2_lsl_r_r_Rd32 S2_lsl_r_r_Rs32 S2_lsl_r_r_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsl_r_r_Rd32 & S2_lsl_r_r_Rs32 & S2_lsl_r_r_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsl_r_r_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:1;
  tmp20 = tmp19;
  if (tmp20) goto <t_branch_22>;
  goto <f_branch_22>;
<t_branch_22>
  local tmp22:8;
  local tmp23:4;
  tmp23 = S2_lsl_r_r_Rs32;
  tmp22 = sext(tmp23);
  local tmp24:8;
  tmp24 = zext(shamt);
  local tmp25:8;
  tmp25 = tmp22 << tmp24;
  local tmp26:8;
  tmp26 = tmp25;
  goto <done_22>;
<f_branch_22>
  local tmp27:8;
  local tmp28:4;
  tmp28 = S2_lsl_r_r_Rs32;
  tmp27 = sext(tmp28);
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp27 >> tmp29;
  tmp26 = tmp30;
<done_22>
  S2_lsl_r_r_Rd32 = tmp26:4;
}

:S2_asr_r_p S2_asr_r_p_Rdd32 S2_asr_r_p_Rss32 S2_asr_r_p_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asr_r_p_Rdd32 & S2_asr_r_p_Rss32 & S2_asr_r_p_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asr_r_p_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:1;
  tmp20 = tmp19;
  if (tmp20) goto <t_branch_22>;
  goto <f_branch_22>;
<t_branch_22>
  local tmp22:8;
  tmp22 = S2_asr_r_p_Rss32;
  local tmp23:8;
  tmp23 = zext(shamt);
  local tmp24:8;
  tmp24 = tmp22 s>> tmp23;
  local tmp25:8;
  tmp25 = tmp24;
  goto <done_22>;
<f_branch_22>
  local tmp26:8;
  tmp26 = S2_asr_r_p_Rss32;
  local tmp27:8;
  tmp27 = zext(shamt);
  local tmp28:8;
  tmp28 = tmp26 << tmp27;
  tmp25 = tmp28;
<done_22>
  S2_asr_r_p_Rdd32 = tmp25;
}

:S2_asl_r_p S2_asl_r_p_Rdd32 S2_asl_r_p_Rss32 S2_asl_r_p_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asl_r_p_Rdd32 & S2_asl_r_p_Rss32 & S2_asl_r_p_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asl_r_p_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:1;
  tmp20 = tmp19;
  if (tmp20) goto <t_branch_22>;
  goto <f_branch_22>;
<t_branch_22>
  local tmp22:8;
  tmp22 = S2_asl_r_p_Rss32;
  local tmp23:8;
  tmp23 = zext(shamt);
  local tmp24:8;
  tmp24 = tmp22 << tmp23;
  local tmp25:8;
  tmp25 = tmp24;
  goto <done_22>;
<f_branch_22>
  local tmp26:8;
  tmp26 = S2_asl_r_p_Rss32;
  local tmp27:8;
  tmp27 = zext(shamt);
  local tmp28:8;
  tmp28 = tmp26 s>> tmp27;
  tmp25 = tmp28;
<done_22>
  S2_asl_r_p_Rdd32 = tmp25;
}

:S2_lsr_r_p S2_lsr_r_p_Rdd32 S2_lsr_r_p_Rss32 S2_lsr_r_p_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsr_r_p_Rdd32 & S2_lsr_r_p_Rss32 & S2_lsr_r_p_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsr_r_p_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:1;
  tmp20 = tmp19;
  if (tmp20) goto <t_branch_22>;
  goto <f_branch_22>;
<t_branch_22>
  local tmp22:8;
  tmp22 = S2_lsr_r_p_Rss32;
  local tmp23:8;
  tmp23 = zext(shamt);
  local tmp24:8;
  tmp24 = tmp22 >> tmp23;
  local tmp25:8;
  tmp25 = tmp24;
  goto <done_22>;
<f_branch_22>
  local tmp26:8;
  tmp26 = S2_lsr_r_p_Rss32;
  local tmp27:8;
  tmp27 = zext(shamt);
  local tmp28:8;
  tmp28 = tmp26 << tmp27;
  tmp25 = tmp28;
<done_22>
  S2_lsr_r_p_Rdd32 = tmp25;
}

:S2_lsl_r_p S2_lsl_r_p_Rdd32 S2_lsl_r_p_Rss32 S2_lsl_r_p_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsl_r_p_Rdd32 & S2_lsl_r_p_Rss32 & S2_lsl_r_p_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsl_r_p_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:1;
  tmp20 = tmp19;
  if (tmp20) goto <t_branch_22>;
  goto <f_branch_22>;
<t_branch_22>
  local tmp22:8;
  tmp22 = S2_lsl_r_p_Rss32;
  local tmp23:8;
  tmp23 = zext(shamt);
  local tmp24:8;
  tmp24 = tmp22 << tmp23;
  local tmp25:8;
  tmp25 = tmp24;
  goto <done_22>;
<f_branch_22>
  local tmp26:8;
  tmp26 = S2_lsl_r_p_Rss32;
  local tmp27:8;
  tmp27 = zext(shamt);
  local tmp28:8;
  tmp28 = tmp26 >> tmp27;
  tmp25 = tmp28;
<done_22>
  S2_lsl_r_p_Rdd32 = tmp25;
}

:S2_asr_r_r_acc S2_asr_r_r_acc_Rx32 S2_asr_r_r_acc_Rs32 S2_asr_r_r_acc_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asr_r_r_acc_Rx32 & S2_asr_r_r_acc_Rs32 & S2_asr_r_r_acc_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asr_r_r_acc_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_asr_r_r_acc_Rx32 + tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_asr_r_r_acc_Rs32;
  tmp24 = zext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 s>> tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_asr_r_r_acc_Rs32;
  tmp29 = zext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 << tmp31;
  tmp28 = tmp32;
<done_24>
  S2_asr_r_r_acc_Rx32 = tmp28:4;
}

:S2_asl_r_r_acc S2_asl_r_r_acc_Rx32 S2_asl_r_r_acc_Rs32 S2_asl_r_r_acc_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asl_r_r_acc_Rx32 & S2_asl_r_r_acc_Rs32 & S2_asl_r_r_acc_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asl_r_r_acc_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_asl_r_r_acc_Rx32 + tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_asl_r_r_acc_Rs32;
  tmp24 = zext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 << tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_asl_r_r_acc_Rs32;
  tmp29 = zext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 s>> tmp31;
  tmp28 = tmp32;
<done_24>
  S2_asl_r_r_acc_Rx32 = tmp28:4;
}

:S2_lsr_r_r_acc S2_lsr_r_r_acc_Rx32 S2_lsr_r_r_acc_Rs32 S2_lsr_r_r_acc_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsr_r_r_acc_Rx32 & S2_lsr_r_r_acc_Rs32 & S2_lsr_r_r_acc_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsr_r_r_acc_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_lsr_r_r_acc_Rx32 + tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_lsr_r_r_acc_Rs32;
  tmp24 = sext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 >> tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_lsr_r_r_acc_Rs32;
  tmp29 = sext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 << tmp31;
  tmp28 = tmp32;
<done_24>
  S2_lsr_r_r_acc_Rx32 = tmp28:4;
}

:S2_lsl_r_r_acc S2_lsl_r_r_acc_Rx32 S2_lsl_r_r_acc_Rs32 S2_lsl_r_r_acc_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsl_r_r_acc_Rx32 & S2_lsl_r_r_acc_Rs32 & S2_lsl_r_r_acc_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsl_r_r_acc_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_lsl_r_r_acc_Rx32 + tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_lsl_r_r_acc_Rs32;
  tmp24 = sext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 << tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_lsl_r_r_acc_Rs32;
  tmp29 = sext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 >> tmp31;
  tmp28 = tmp32;
<done_24>
  S2_lsl_r_r_acc_Rx32 = tmp28:4;
}

:S2_asr_r_p_acc S2_asr_r_p_acc_Rxx32 S2_asr_r_p_acc_Rss32 S2_asr_r_p_acc_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asr_r_p_acc_Rxx32 & S2_asr_r_p_acc_Rss32 & S2_asr_r_p_acc_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asr_r_p_acc_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_asr_r_p_acc_Rxx32 + tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_asr_r_p_acc_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 s>> tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_asr_r_p_acc_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 << tmp29;
  tmp27 = tmp30;
<done_24>
  S2_asr_r_p_acc_Rxx32 = tmp27;
}

:S2_asl_r_p_acc S2_asl_r_p_acc_Rxx32 S2_asl_r_p_acc_Rss32 S2_asl_r_p_acc_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asl_r_p_acc_Rxx32 & S2_asl_r_p_acc_Rss32 & S2_asl_r_p_acc_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asl_r_p_acc_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_asl_r_p_acc_Rxx32 + tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_asl_r_p_acc_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 << tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_asl_r_p_acc_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 s>> tmp29;
  tmp27 = tmp30;
<done_24>
  S2_asl_r_p_acc_Rxx32 = tmp27;
}

:S2_lsr_r_p_acc S2_lsr_r_p_acc_Rxx32 S2_lsr_r_p_acc_Rss32 S2_lsr_r_p_acc_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsr_r_p_acc_Rxx32 & S2_lsr_r_p_acc_Rss32 & S2_lsr_r_p_acc_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsr_r_p_acc_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_lsr_r_p_acc_Rxx32 + tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_lsr_r_p_acc_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 >> tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_lsr_r_p_acc_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 << tmp29;
  tmp27 = tmp30;
<done_24>
  S2_lsr_r_p_acc_Rxx32 = tmp27;
}

:S2_lsl_r_p_acc S2_lsl_r_p_acc_Rxx32 S2_lsl_r_p_acc_Rss32 S2_lsl_r_p_acc_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsl_r_p_acc_Rxx32 & S2_lsl_r_p_acc_Rss32 & S2_lsl_r_p_acc_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsl_r_p_acc_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_lsl_r_p_acc_Rxx32 + tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_lsl_r_p_acc_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 << tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_lsl_r_p_acc_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 >> tmp29;
  tmp27 = tmp30;
<done_24>
  S2_lsl_r_p_acc_Rxx32 = tmp27;
}

:S2_asr_r_r_nac S2_asr_r_r_nac_Rx32 S2_asr_r_r_nac_Rs32 S2_asr_r_r_nac_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asr_r_r_nac_Rx32 & S2_asr_r_r_nac_Rs32 & S2_asr_r_r_nac_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asr_r_r_nac_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_asr_r_r_nac_Rx32 - tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_asr_r_r_nac_Rs32;
  tmp24 = zext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 s>> tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_asr_r_r_nac_Rs32;
  tmp29 = zext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 << tmp31;
  tmp28 = tmp32;
<done_24>
  S2_asr_r_r_nac_Rx32 = tmp28:4;
}

:S2_asl_r_r_nac S2_asl_r_r_nac_Rx32 S2_asl_r_r_nac_Rs32 S2_asl_r_r_nac_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asl_r_r_nac_Rx32 & S2_asl_r_r_nac_Rs32 & S2_asl_r_r_nac_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asl_r_r_nac_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_asl_r_r_nac_Rx32 - tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_asl_r_r_nac_Rs32;
  tmp24 = zext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 << tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_asl_r_r_nac_Rs32;
  tmp29 = zext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 s>> tmp31;
  tmp28 = tmp32;
<done_24>
  S2_asl_r_r_nac_Rx32 = tmp28:4;
}

:S2_lsr_r_r_nac S2_lsr_r_r_nac_Rx32 S2_lsr_r_r_nac_Rs32 S2_lsr_r_r_nac_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsr_r_r_nac_Rx32 & S2_lsr_r_r_nac_Rs32 & S2_lsr_r_r_nac_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsr_r_r_nac_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_lsr_r_r_nac_Rx32 - tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_lsr_r_r_nac_Rs32;
  tmp24 = sext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 >> tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_lsr_r_r_nac_Rs32;
  tmp29 = sext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 << tmp31;
  tmp28 = tmp32;
<done_24>
  S2_lsr_r_r_nac_Rx32 = tmp28:4;
}

:S2_lsl_r_r_nac S2_lsl_r_r_nac_Rx32 S2_lsl_r_r_nac_Rs32 S2_lsl_r_r_nac_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsl_r_r_nac_Rx32 & S2_lsl_r_r_nac_Rs32 & S2_lsl_r_r_nac_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsl_r_r_nac_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_lsl_r_r_nac_Rx32 - tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_lsl_r_r_nac_Rs32;
  tmp24 = sext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 << tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_lsl_r_r_nac_Rs32;
  tmp29 = sext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 >> tmp31;
  tmp28 = tmp32;
<done_24>
  S2_lsl_r_r_nac_Rx32 = tmp28:4;
}

:S2_asr_r_p_nac S2_asr_r_p_nac_Rxx32 S2_asr_r_p_nac_Rss32 S2_asr_r_p_nac_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asr_r_p_nac_Rxx32 & S2_asr_r_p_nac_Rss32 & S2_asr_r_p_nac_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asr_r_p_nac_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_asr_r_p_nac_Rxx32 - tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_asr_r_p_nac_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 s>> tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_asr_r_p_nac_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 << tmp29;
  tmp27 = tmp30;
<done_24>
  S2_asr_r_p_nac_Rxx32 = tmp27;
}

:S2_asl_r_p_nac S2_asl_r_p_nac_Rxx32 S2_asl_r_p_nac_Rss32 S2_asl_r_p_nac_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asl_r_p_nac_Rxx32 & S2_asl_r_p_nac_Rss32 & S2_asl_r_p_nac_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asl_r_p_nac_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_asl_r_p_nac_Rxx32 - tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_asl_r_p_nac_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 << tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_asl_r_p_nac_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 s>> tmp29;
  tmp27 = tmp30;
<done_24>
  S2_asl_r_p_nac_Rxx32 = tmp27;
}

:S2_lsr_r_p_nac S2_lsr_r_p_nac_Rxx32 S2_lsr_r_p_nac_Rss32 S2_lsr_r_p_nac_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsr_r_p_nac_Rxx32 & S2_lsr_r_p_nac_Rss32 & S2_lsr_r_p_nac_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsr_r_p_nac_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_lsr_r_p_nac_Rxx32 - tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_lsr_r_p_nac_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 >> tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_lsr_r_p_nac_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 << tmp29;
  tmp27 = tmp30;
<done_24>
  S2_lsr_r_p_nac_Rxx32 = tmp27;
}

:S2_lsl_r_p_nac S2_lsl_r_p_nac_Rxx32 S2_lsl_r_p_nac_Rss32 S2_lsl_r_p_nac_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsl_r_p_nac_Rxx32 & S2_lsl_r_p_nac_Rss32 & S2_lsl_r_p_nac_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsl_r_p_nac_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_lsl_r_p_nac_Rxx32 - tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_lsl_r_p_nac_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 << tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_lsl_r_p_nac_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 >> tmp29;
  tmp27 = tmp30;
<done_24>
  S2_lsl_r_p_nac_Rxx32 = tmp27;
}

:S2_asr_r_r_and S2_asr_r_r_and_Rx32 S2_asr_r_r_and_Rs32 S2_asr_r_r_and_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asr_r_r_and_Rx32 & S2_asr_r_r_and_Rs32 & S2_asr_r_r_and_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asr_r_r_and_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_asr_r_r_and_Rx32 & tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_asr_r_r_and_Rs32;
  tmp24 = zext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 s>> tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_asr_r_r_and_Rs32;
  tmp29 = zext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 << tmp31;
  tmp28 = tmp32;
<done_24>
  S2_asr_r_r_and_Rx32 = tmp28:4;
}

:S2_asl_r_r_and S2_asl_r_r_and_Rx32 S2_asl_r_r_and_Rs32 S2_asl_r_r_and_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asl_r_r_and_Rx32 & S2_asl_r_r_and_Rs32 & S2_asl_r_r_and_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asl_r_r_and_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_asl_r_r_and_Rx32 & tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_asl_r_r_and_Rs32;
  tmp24 = zext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 << tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_asl_r_r_and_Rs32;
  tmp29 = zext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 s>> tmp31;
  tmp28 = tmp32;
<done_24>
  S2_asl_r_r_and_Rx32 = tmp28:4;
}

:S2_lsr_r_r_and S2_lsr_r_r_and_Rx32 S2_lsr_r_r_and_Rs32 S2_lsr_r_r_and_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsr_r_r_and_Rx32 & S2_lsr_r_r_and_Rs32 & S2_lsr_r_r_and_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsr_r_r_and_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_lsr_r_r_and_Rx32 & tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_lsr_r_r_and_Rs32;
  tmp24 = sext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 >> tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_lsr_r_r_and_Rs32;
  tmp29 = sext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 << tmp31;
  tmp28 = tmp32;
<done_24>
  S2_lsr_r_r_and_Rx32 = tmp28:4;
}

:S2_lsl_r_r_and S2_lsl_r_r_and_Rx32 S2_lsl_r_r_and_Rs32 S2_lsl_r_r_and_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsl_r_r_and_Rx32 & S2_lsl_r_r_and_Rs32 & S2_lsl_r_r_and_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsl_r_r_and_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_lsl_r_r_and_Rx32 & tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_lsl_r_r_and_Rs32;
  tmp24 = sext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 << tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_lsl_r_r_and_Rs32;
  tmp29 = sext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 >> tmp31;
  tmp28 = tmp32;
<done_24>
  S2_lsl_r_r_and_Rx32 = tmp28:4;
}

:S2_asr_r_r_or S2_asr_r_r_or_Rx32 S2_asr_r_r_or_Rs32 S2_asr_r_r_or_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asr_r_r_or_Rx32 & S2_asr_r_r_or_Rs32 & S2_asr_r_r_or_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asr_r_r_or_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_asr_r_r_or_Rx32 | tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_asr_r_r_or_Rs32;
  tmp24 = zext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 s>> tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_asr_r_r_or_Rs32;
  tmp29 = zext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 << tmp31;
  tmp28 = tmp32;
<done_24>
  S2_asr_r_r_or_Rx32 = tmp28:4;
}

:S2_asl_r_r_or S2_asl_r_r_or_Rx32 S2_asl_r_r_or_Rs32 S2_asl_r_r_or_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asl_r_r_or_Rx32 & S2_asl_r_r_or_Rs32 & S2_asl_r_r_or_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asl_r_r_or_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_asl_r_r_or_Rx32 | tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_asl_r_r_or_Rs32;
  tmp24 = zext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 << tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_asl_r_r_or_Rs32;
  tmp29 = zext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 s>> tmp31;
  tmp28 = tmp32;
<done_24>
  S2_asl_r_r_or_Rx32 = tmp28:4;
}

:S2_lsr_r_r_or S2_lsr_r_r_or_Rx32 S2_lsr_r_r_or_Rs32 S2_lsr_r_r_or_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsr_r_r_or_Rx32 & S2_lsr_r_r_or_Rs32 & S2_lsr_r_r_or_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsr_r_r_or_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_lsr_r_r_or_Rx32 | tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_lsr_r_r_or_Rs32;
  tmp24 = sext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 >> tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_lsr_r_r_or_Rs32;
  tmp29 = sext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 << tmp31;
  tmp28 = tmp32;
<done_24>
  S2_lsr_r_r_or_Rx32 = tmp28:4;
}

:S2_lsl_r_r_or S2_lsl_r_r_or_Rx32 S2_lsl_r_r_or_Rs32 S2_lsl_r_r_or_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsl_r_r_or_Rx32 & S2_lsl_r_r_or_Rs32 & S2_lsl_r_r_or_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsl_r_r_or_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_lsl_r_r_or_Rx32 | tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  tmp25 = S2_lsl_r_r_or_Rs32;
  tmp24 = sext(tmp25);
  local tmp26:8;
  tmp26 = zext(shamt);
  local tmp27:8;
  tmp27 = tmp24 << tmp26;
  local tmp28:8;
  tmp28 = tmp27;
  goto <done_24>;
<f_branch_24>
  local tmp29:8;
  local tmp30:4;
  tmp30 = S2_lsl_r_r_or_Rs32;
  tmp29 = sext(tmp30);
  local tmp31:8;
  tmp31 = zext(shamt);
  local tmp32:8;
  tmp32 = tmp29 >> tmp31;
  tmp28 = tmp32;
<done_24>
  S2_lsl_r_r_or_Rx32 = tmp28:4;
}

:S2_asr_r_p_and S2_asr_r_p_and_Rxx32 S2_asr_r_p_and_Rss32 S2_asr_r_p_and_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asr_r_p_and_Rxx32 & S2_asr_r_p_and_Rss32 & S2_asr_r_p_and_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asr_r_p_and_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_asr_r_p_and_Rxx32 & tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_asr_r_p_and_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 s>> tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_asr_r_p_and_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 << tmp29;
  tmp27 = tmp30;
<done_24>
  S2_asr_r_p_and_Rxx32 = tmp27;
}

:S2_asl_r_p_and S2_asl_r_p_and_Rxx32 S2_asl_r_p_and_Rss32 S2_asl_r_p_and_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asl_r_p_and_Rxx32 & S2_asl_r_p_and_Rss32 & S2_asl_r_p_and_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asl_r_p_and_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_asl_r_p_and_Rxx32 & tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_asl_r_p_and_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 << tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_asl_r_p_and_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 s>> tmp29;
  tmp27 = tmp30;
<done_24>
  S2_asl_r_p_and_Rxx32 = tmp27;
}

:S2_lsr_r_p_and S2_lsr_r_p_and_Rxx32 S2_lsr_r_p_and_Rss32 S2_lsr_r_p_and_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsr_r_p_and_Rxx32 & S2_lsr_r_p_and_Rss32 & S2_lsr_r_p_and_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsr_r_p_and_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_lsr_r_p_and_Rxx32 & tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_lsr_r_p_and_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 >> tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_lsr_r_p_and_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 << tmp29;
  tmp27 = tmp30;
<done_24>
  S2_lsr_r_p_and_Rxx32 = tmp27;
}

:S2_lsl_r_p_and S2_lsl_r_p_and_Rxx32 S2_lsl_r_p_and_Rss32 S2_lsl_r_p_and_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsl_r_p_and_Rxx32 & S2_lsl_r_p_and_Rss32 & S2_lsl_r_p_and_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsl_r_p_and_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_lsl_r_p_and_Rxx32 & tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_lsl_r_p_and_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 << tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_lsl_r_p_and_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 >> tmp29;
  tmp27 = tmp30;
<done_24>
  S2_lsl_r_p_and_Rxx32 = tmp27;
}

:S2_asr_r_p_or S2_asr_r_p_or_Rxx32 S2_asr_r_p_or_Rss32 S2_asr_r_p_or_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asr_r_p_or_Rxx32 & S2_asr_r_p_or_Rss32 & S2_asr_r_p_or_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asr_r_p_or_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_asr_r_p_or_Rxx32 | tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_asr_r_p_or_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 s>> tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_asr_r_p_or_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 << tmp29;
  tmp27 = tmp30;
<done_24>
  S2_asr_r_p_or_Rxx32 = tmp27;
}

:S2_asl_r_p_or S2_asl_r_p_or_Rxx32 S2_asl_r_p_or_Rss32 S2_asl_r_p_or_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asl_r_p_or_Rxx32 & S2_asl_r_p_or_Rss32 & S2_asl_r_p_or_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asl_r_p_or_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_asl_r_p_or_Rxx32 | tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_asl_r_p_or_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 << tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_asl_r_p_or_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 s>> tmp29;
  tmp27 = tmp30;
<done_24>
  S2_asl_r_p_or_Rxx32 = tmp27;
}

:S2_lsr_r_p_or S2_lsr_r_p_or_Rxx32 S2_lsr_r_p_or_Rss32 S2_lsr_r_p_or_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsr_r_p_or_Rxx32 & S2_lsr_r_p_or_Rss32 & S2_lsr_r_p_or_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsr_r_p_or_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_lsr_r_p_or_Rxx32 | tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_lsr_r_p_or_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 >> tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_lsr_r_p_or_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 << tmp29;
  tmp27 = tmp30;
<done_24>
  S2_lsr_r_p_or_Rxx32 = tmp27;
}

:S2_lsl_r_p_or S2_lsl_r_p_or_Rxx32 S2_lsl_r_p_or_Rss32 S2_lsl_r_p_or_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsl_r_p_or_Rxx32 & S2_lsl_r_p_or_Rss32 & S2_lsl_r_p_or_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsl_r_p_or_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_lsl_r_p_or_Rxx32 | tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_lsl_r_p_or_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 << tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_lsl_r_p_or_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 >> tmp29;
  tmp27 = tmp30;
<done_24>
  S2_lsl_r_p_or_Rxx32 = tmp27;
}

:S2_asr_r_p_xor S2_asr_r_p_xor_Rxx32 S2_asr_r_p_xor_Rss32 S2_asr_r_p_xor_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asr_r_p_xor_Rxx32 & S2_asr_r_p_xor_Rss32 & S2_asr_r_p_xor_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asr_r_p_xor_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_asr_r_p_xor_Rxx32 ^ tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_asr_r_p_xor_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 s>> tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_asr_r_p_xor_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 << tmp29;
  tmp27 = tmp30;
<done_24>
  S2_asr_r_p_xor_Rxx32 = tmp27;
}

:S2_asl_r_p_xor S2_asl_r_p_xor_Rxx32 S2_asl_r_p_xor_Rss32 S2_asl_r_p_xor_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asl_r_p_xor_Rxx32 & S2_asl_r_p_xor_Rss32 & S2_asl_r_p_xor_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_asl_r_p_xor_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_asl_r_p_xor_Rxx32 ^ tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_asl_r_p_xor_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 << tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_asl_r_p_xor_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 s>> tmp29;
  tmp27 = tmp30;
<done_24>
  S2_asl_r_p_xor_Rxx32 = tmp27;
}

:S2_lsr_r_p_xor S2_lsr_r_p_xor_Rxx32 S2_lsr_r_p_xor_Rss32 S2_lsr_r_p_xor_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsr_r_p_xor_Rxx32 & S2_lsr_r_p_xor_Rss32 & S2_lsr_r_p_xor_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsr_r_p_xor_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_lsr_r_p_xor_Rxx32 ^ tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_lsr_r_p_xor_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 >> tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_lsr_r_p_xor_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 << tmp29;
  tmp27 = tmp30;
<done_24>
  S2_lsr_r_p_xor_Rxx32 = tmp27;
}

:S2_lsl_r_p_xor S2_lsl_r_p_xor_Rxx32 S2_lsl_r_p_xor_Rss32 S2_lsl_r_p_xor_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsl_r_p_xor_Rxx32 & S2_lsl_r_p_xor_Rss32 & S2_lsl_r_p_xor_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_lsl_r_p_xor_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = S2_lsl_r_p_xor_Rxx32 ^ tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  tmp24 = S2_lsl_r_p_xor_Rss32;
  local tmp25:8;
  tmp25 = zext(shamt);
  local tmp26:8;
  tmp26 = tmp24 << tmp25;
  local tmp27:8;
  tmp27 = tmp26;
  goto <done_24>;
<f_branch_24>
  local tmp28:8;
  tmp28 = S2_lsl_r_p_xor_Rss32;
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp28 >> tmp29;
  tmp27 = tmp30;
<done_24>
  S2_lsl_r_p_xor_Rxx32 = tmp27;
}

:S2_asr_r_r_sat S2_asr_r_r_sat_Rd32 S2_asr_r_r_sat_Rs32 S2_asr_r_r_sat_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asr_r_r_sat_Rd32 & S2_asr_r_r_sat_Rs32 & S2_asr_r_r_sat_Rt32 unimpl

:S2_asl_r_r_sat S2_asl_r_r_sat_Rd32 S2_asl_r_r_sat_Rs32 S2_asl_r_r_sat_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asl_r_r_sat_Rd32 & S2_asl_r_r_sat_Rs32 & S2_asl_r_r_sat_Rt32 unimpl

:S2_asr_i_r S2_asr_i_r_Rd32 S2_asr_i_r_Rs32 S2_asr_i_r_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asr_i_r_Rd32 & S2_asr_i_r_Rs32 & S2_asr_i_r_u5 {
  local tmp0:4;
  tmp0 = S2_asr_i_r_Rs32;
  local tmp1:4;
  tmp1 = tmp0 >> S2_asr_i_r_u5;
  S2_asr_i_r_Rd32 = tmp1;
}

:S2_lsr_i_r S2_lsr_i_r_Rd32 S2_lsr_i_r_Rs32 S2_lsr_i_r_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_lsr_i_r_Rd32 & S2_lsr_i_r_Rs32 & S2_lsr_i_r_u5 {
  local tmp0:4;
  tmp0 = S2_lsr_i_r_Rs32;
  local tmp1:4;
  tmp1 = tmp0 >> S2_lsr_i_r_u5;
  S2_lsr_i_r_Rd32 = tmp1;
}

:S2_asl_i_r S2_asl_i_r_Rd32 S2_asl_i_r_Rs32 S2_asl_i_r_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asl_i_r_Rd32 & S2_asl_i_r_Rs32 & S2_asl_i_r_u5 {
  local tmp0:4;
  tmp0 = S2_asl_i_r_Rs32;
  local tmp1:4;
  tmp1 = tmp0 << S2_asl_i_r_u5;
  S2_asl_i_r_Rd32 = tmp1;
}

:S6_rol_i_r S6_rol_i_r_Rd32 S6_rol_i_r_Rs32 S6_rol_i_r_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S6_rol_i_r_Rd32 & S6_rol_i_r_Rs32 & S6_rol_i_r_u5 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = S6_rol_i_r_u5 == tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = S6_rol_i_r_Rs32;
  goto <done_4>;
<f_branch_4>
  local tmp5:4;
  tmp5 = S6_rol_i_r_Rs32;
  local tmp6:4;
  tmp6 = tmp5 << S6_rol_i_r_u5;
  local tmp7:4;
  tmp7 = S6_rol_i_r_Rs32;
  local tmp8:4;
  tmp8 = 4;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = tmp10 - S6_rol_i_r_u5;
  local tmp12:4;
  tmp12 = tmp7 >> tmp11;
  local tmp13:4;
  tmp13 = tmp6 | tmp12;
  tmp4 = tmp13;
<done_4>
  S6_rol_i_r_Rd32 = tmp4;
}

:S2_asr_i_p S2_asr_i_p_Rdd32 S2_asr_i_p_Rss32 S2_asr_i_p_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asr_i_p_Rdd32 & S2_asr_i_p_Rss32 & S2_asr_i_p_u6 {
  local tmp0:8;
  tmp0 = S2_asr_i_p_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_asr_i_p_u6);
  local tmp2:8;
  tmp2 = tmp0 >> tmp1;
  S2_asr_i_p_Rdd32 = tmp2;
}

:S2_lsr_i_p S2_lsr_i_p_Rdd32 S2_lsr_i_p_Rss32 S2_lsr_i_p_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_lsr_i_p_Rdd32 & S2_lsr_i_p_Rss32 & S2_lsr_i_p_u6 {
  local tmp0:8;
  tmp0 = S2_lsr_i_p_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_lsr_i_p_u6);
  local tmp2:8;
  tmp2 = tmp0 >> tmp1;
  S2_lsr_i_p_Rdd32 = tmp2;
}

:S2_asl_i_p S2_asl_i_p_Rdd32 S2_asl_i_p_Rss32 S2_asl_i_p_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asl_i_p_Rdd32 & S2_asl_i_p_Rss32 & S2_asl_i_p_u6 {
  local tmp0:8;
  tmp0 = S2_asl_i_p_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_asl_i_p_u6);
  local tmp2:8;
  tmp2 = tmp0 << tmp1;
  S2_asl_i_p_Rdd32 = tmp2;
}

:S6_rol_i_p S6_rol_i_p_Rdd32 S6_rol_i_p_Rss32 S6_rol_i_p_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S6_rol_i_p_Rdd32 & S6_rol_i_p_Rss32 & S6_rol_i_p_u6 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = S6_rol_i_p_u6 == tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:8;
  tmp4 = S6_rol_i_p_Rss32;
  goto <done_4>;
<f_branch_4>
  local tmp5:8;
  tmp5 = S6_rol_i_p_Rss32;
  local tmp6:8;
  tmp6 = sext(S6_rol_i_p_u6);
  local tmp7:8;
  tmp7 = tmp5 << tmp6;
  local tmp8:8;
  tmp8 = S6_rol_i_p_Rss32;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = 8;
  local tmp11:4;
  tmp11 = tmp9 * tmp10;
  local tmp12:4;
  tmp12 = tmp11 - S6_rol_i_p_u6;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = tmp8 >> tmp13;
  local tmp15:8;
  tmp15 = tmp7 | tmp14;
  tmp4 = tmp15;
<done_4>
  S6_rol_i_p_Rdd32 = tmp4;
}

:S2_asr_i_r_acc S2_asr_i_r_acc_Rx32 S2_asr_i_r_acc_Rs32 S2_asr_i_r_acc_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asr_i_r_acc_Rx32 & S2_asr_i_r_acc_Rs32 & S2_asr_i_r_acc_u5 {
  local tmp0:4;
  tmp0 = S2_asr_i_r_acc_Rs32;
  local tmp1:4;
  tmp1 = tmp0 >> S2_asr_i_r_acc_u5;
  local tmp2:4;
  tmp2 = S2_asr_i_r_acc_Rx32 + tmp1;
  S2_asr_i_r_acc_Rx32 = tmp2;
}

:S2_lsr_i_r_acc S2_lsr_i_r_acc_Rx32 S2_lsr_i_r_acc_Rs32 S2_lsr_i_r_acc_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_lsr_i_r_acc_Rx32 & S2_lsr_i_r_acc_Rs32 & S2_lsr_i_r_acc_u5 {
  local tmp0:4;
  tmp0 = S2_lsr_i_r_acc_Rs32;
  local tmp1:4;
  tmp1 = tmp0 >> S2_lsr_i_r_acc_u5;
  local tmp2:4;
  tmp2 = S2_lsr_i_r_acc_Rx32 + tmp1;
  S2_lsr_i_r_acc_Rx32 = tmp2;
}

:S2_asl_i_r_acc S2_asl_i_r_acc_Rx32 S2_asl_i_r_acc_Rs32 S2_asl_i_r_acc_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asl_i_r_acc_Rx32 & S2_asl_i_r_acc_Rs32 & S2_asl_i_r_acc_u5 {
  local tmp0:4;
  tmp0 = S2_asl_i_r_acc_Rs32;
  local tmp1:4;
  tmp1 = tmp0 << S2_asl_i_r_acc_u5;
  local tmp2:4;
  tmp2 = S2_asl_i_r_acc_Rx32 + tmp1;
  S2_asl_i_r_acc_Rx32 = tmp2;
}

:S6_rol_i_r_acc S6_rol_i_r_acc_Rx32 S6_rol_i_r_acc_Rs32 S6_rol_i_r_acc_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S6_rol_i_r_acc_Rx32 & S6_rol_i_r_acc_Rs32 & S6_rol_i_r_acc_u5 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = S6_rol_i_r_acc_u5 == tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = S6_rol_i_r_acc_Rs32;
  goto <done_4>;
<f_branch_4>
  local tmp5:4;
  tmp5 = S6_rol_i_r_acc_Rs32;
  local tmp6:4;
  tmp6 = tmp5 << S6_rol_i_r_acc_u5;
  local tmp7:4;
  tmp7 = S6_rol_i_r_acc_Rs32;
  local tmp8:4;
  tmp8 = 4;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = tmp10 - S6_rol_i_r_acc_u5;
  local tmp12:4;
  tmp12 = tmp7 >> tmp11;
  local tmp13:4;
  tmp13 = tmp6 | tmp12;
  tmp4 = tmp13;
<done_4>
  local tmp14:4;
  tmp14 = S6_rol_i_r_acc_Rx32 + tmp4;
  S6_rol_i_r_acc_Rx32 = tmp14;
}

:S2_asr_i_p_acc S2_asr_i_p_acc_Rxx32 S2_asr_i_p_acc_Rss32 S2_asr_i_p_acc_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asr_i_p_acc_Rxx32 & S2_asr_i_p_acc_Rss32 & S2_asr_i_p_acc_u6 {
  local tmp0:8;
  tmp0 = S2_asr_i_p_acc_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_asr_i_p_acc_u6);
  local tmp2:8;
  tmp2 = tmp0 >> tmp1;
  local tmp3:8;
  tmp3 = S2_asr_i_p_acc_Rxx32 + tmp2;
  S2_asr_i_p_acc_Rxx32 = tmp3;
}

:S2_lsr_i_p_acc S2_lsr_i_p_acc_Rxx32 S2_lsr_i_p_acc_Rss32 S2_lsr_i_p_acc_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_lsr_i_p_acc_Rxx32 & S2_lsr_i_p_acc_Rss32 & S2_lsr_i_p_acc_u6 {
  local tmp0:8;
  tmp0 = S2_lsr_i_p_acc_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_lsr_i_p_acc_u6);
  local tmp2:8;
  tmp2 = tmp0 >> tmp1;
  local tmp3:8;
  tmp3 = S2_lsr_i_p_acc_Rxx32 + tmp2;
  S2_lsr_i_p_acc_Rxx32 = tmp3;
}

:S2_asl_i_p_acc S2_asl_i_p_acc_Rxx32 S2_asl_i_p_acc_Rss32 S2_asl_i_p_acc_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asl_i_p_acc_Rxx32 & S2_asl_i_p_acc_Rss32 & S2_asl_i_p_acc_u6 {
  local tmp0:8;
  tmp0 = S2_asl_i_p_acc_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_asl_i_p_acc_u6);
  local tmp2:8;
  tmp2 = tmp0 << tmp1;
  local tmp3:8;
  tmp3 = S2_asl_i_p_acc_Rxx32 + tmp2;
  S2_asl_i_p_acc_Rxx32 = tmp3;
}

:S6_rol_i_p_acc S6_rol_i_p_acc_Rxx32 S6_rol_i_p_acc_Rss32 S6_rol_i_p_acc_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S6_rol_i_p_acc_Rxx32 & S6_rol_i_p_acc_Rss32 & S6_rol_i_p_acc_u6 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = S6_rol_i_p_acc_u6 == tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:8;
  tmp4 = S6_rol_i_p_acc_Rss32;
  goto <done_4>;
<f_branch_4>
  local tmp5:8;
  tmp5 = S6_rol_i_p_acc_Rss32;
  local tmp6:8;
  tmp6 = sext(S6_rol_i_p_acc_u6);
  local tmp7:8;
  tmp7 = tmp5 << tmp6;
  local tmp8:8;
  tmp8 = S6_rol_i_p_acc_Rss32;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = 8;
  local tmp11:4;
  tmp11 = tmp9 * tmp10;
  local tmp12:4;
  tmp12 = tmp11 - S6_rol_i_p_acc_u6;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = tmp8 >> tmp13;
  local tmp15:8;
  tmp15 = tmp7 | tmp14;
  tmp4 = tmp15;
<done_4>
  local tmp16:8;
  tmp16 = S6_rol_i_p_acc_Rxx32 + tmp4;
  S6_rol_i_p_acc_Rxx32 = tmp16;
}

:S2_asr_i_r_nac S2_asr_i_r_nac_Rx32 S2_asr_i_r_nac_Rs32 S2_asr_i_r_nac_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asr_i_r_nac_Rx32 & S2_asr_i_r_nac_Rs32 & S2_asr_i_r_nac_u5 {
  local tmp0:4;
  tmp0 = S2_asr_i_r_nac_Rs32;
  local tmp1:4;
  tmp1 = tmp0 >> S2_asr_i_r_nac_u5;
  local tmp2:4;
  tmp2 = S2_asr_i_r_nac_Rx32 - tmp1;
  S2_asr_i_r_nac_Rx32 = tmp2;
}

:S2_lsr_i_r_nac S2_lsr_i_r_nac_Rx32 S2_lsr_i_r_nac_Rs32 S2_lsr_i_r_nac_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_lsr_i_r_nac_Rx32 & S2_lsr_i_r_nac_Rs32 & S2_lsr_i_r_nac_u5 {
  local tmp0:4;
  tmp0 = S2_lsr_i_r_nac_Rs32;
  local tmp1:4;
  tmp1 = tmp0 >> S2_lsr_i_r_nac_u5;
  local tmp2:4;
  tmp2 = S2_lsr_i_r_nac_Rx32 - tmp1;
  S2_lsr_i_r_nac_Rx32 = tmp2;
}

:S2_asl_i_r_nac S2_asl_i_r_nac_Rx32 S2_asl_i_r_nac_Rs32 S2_asl_i_r_nac_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asl_i_r_nac_Rx32 & S2_asl_i_r_nac_Rs32 & S2_asl_i_r_nac_u5 {
  local tmp0:4;
  tmp0 = S2_asl_i_r_nac_Rs32;
  local tmp1:4;
  tmp1 = tmp0 << S2_asl_i_r_nac_u5;
  local tmp2:4;
  tmp2 = S2_asl_i_r_nac_Rx32 - tmp1;
  S2_asl_i_r_nac_Rx32 = tmp2;
}

:S6_rol_i_r_nac S6_rol_i_r_nac_Rx32 S6_rol_i_r_nac_Rs32 S6_rol_i_r_nac_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S6_rol_i_r_nac_Rx32 & S6_rol_i_r_nac_Rs32 & S6_rol_i_r_nac_u5 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = S6_rol_i_r_nac_u5 == tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = S6_rol_i_r_nac_Rs32;
  goto <done_4>;
<f_branch_4>
  local tmp5:4;
  tmp5 = S6_rol_i_r_nac_Rs32;
  local tmp6:4;
  tmp6 = tmp5 << S6_rol_i_r_nac_u5;
  local tmp7:4;
  tmp7 = S6_rol_i_r_nac_Rs32;
  local tmp8:4;
  tmp8 = 4;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = tmp10 - S6_rol_i_r_nac_u5;
  local tmp12:4;
  tmp12 = tmp7 >> tmp11;
  local tmp13:4;
  tmp13 = tmp6 | tmp12;
  tmp4 = tmp13;
<done_4>
  local tmp14:4;
  tmp14 = S6_rol_i_r_nac_Rx32 - tmp4;
  S6_rol_i_r_nac_Rx32 = tmp14;
}

:S2_asr_i_p_nac S2_asr_i_p_nac_Rxx32 S2_asr_i_p_nac_Rss32 S2_asr_i_p_nac_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asr_i_p_nac_Rxx32 & S2_asr_i_p_nac_Rss32 & S2_asr_i_p_nac_u6 {
  local tmp0:8;
  tmp0 = S2_asr_i_p_nac_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_asr_i_p_nac_u6);
  local tmp2:8;
  tmp2 = tmp0 >> tmp1;
  local tmp3:8;
  tmp3 = S2_asr_i_p_nac_Rxx32 - tmp2;
  S2_asr_i_p_nac_Rxx32 = tmp3;
}

:S2_lsr_i_p_nac S2_lsr_i_p_nac_Rxx32 S2_lsr_i_p_nac_Rss32 S2_lsr_i_p_nac_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_lsr_i_p_nac_Rxx32 & S2_lsr_i_p_nac_Rss32 & S2_lsr_i_p_nac_u6 {
  local tmp0:8;
  tmp0 = S2_lsr_i_p_nac_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_lsr_i_p_nac_u6);
  local tmp2:8;
  tmp2 = tmp0 >> tmp1;
  local tmp3:8;
  tmp3 = S2_lsr_i_p_nac_Rxx32 - tmp2;
  S2_lsr_i_p_nac_Rxx32 = tmp3;
}

:S2_asl_i_p_nac S2_asl_i_p_nac_Rxx32 S2_asl_i_p_nac_Rss32 S2_asl_i_p_nac_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asl_i_p_nac_Rxx32 & S2_asl_i_p_nac_Rss32 & S2_asl_i_p_nac_u6 {
  local tmp0:8;
  tmp0 = S2_asl_i_p_nac_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_asl_i_p_nac_u6);
  local tmp2:8;
  tmp2 = tmp0 << tmp1;
  local tmp3:8;
  tmp3 = S2_asl_i_p_nac_Rxx32 - tmp2;
  S2_asl_i_p_nac_Rxx32 = tmp3;
}

:S6_rol_i_p_nac S6_rol_i_p_nac_Rxx32 S6_rol_i_p_nac_Rss32 S6_rol_i_p_nac_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S6_rol_i_p_nac_Rxx32 & S6_rol_i_p_nac_Rss32 & S6_rol_i_p_nac_u6 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = S6_rol_i_p_nac_u6 == tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:8;
  tmp4 = S6_rol_i_p_nac_Rss32;
  goto <done_4>;
<f_branch_4>
  local tmp5:8;
  tmp5 = S6_rol_i_p_nac_Rss32;
  local tmp6:8;
  tmp6 = sext(S6_rol_i_p_nac_u6);
  local tmp7:8;
  tmp7 = tmp5 << tmp6;
  local tmp8:8;
  tmp8 = S6_rol_i_p_nac_Rss32;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = 8;
  local tmp11:4;
  tmp11 = tmp9 * tmp10;
  local tmp12:4;
  tmp12 = tmp11 - S6_rol_i_p_nac_u6;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = tmp8 >> tmp13;
  local tmp15:8;
  tmp15 = tmp7 | tmp14;
  tmp4 = tmp15;
<done_4>
  local tmp16:8;
  tmp16 = S6_rol_i_p_nac_Rxx32 - tmp4;
  S6_rol_i_p_nac_Rxx32 = tmp16;
}

:S2_lsr_i_r_xacc S2_lsr_i_r_xacc_Rx32 S2_lsr_i_r_xacc_Rs32 S2_lsr_i_r_xacc_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_lsr_i_r_xacc_Rx32 & S2_lsr_i_r_xacc_Rs32 & S2_lsr_i_r_xacc_u5 {
  local tmp0:4;
  tmp0 = S2_lsr_i_r_xacc_Rs32;
  local tmp1:4;
  tmp1 = tmp0 >> S2_lsr_i_r_xacc_u5;
  local tmp2:4;
  tmp2 = S2_lsr_i_r_xacc_Rx32 ^ tmp1;
  S2_lsr_i_r_xacc_Rx32 = tmp2;
}

:S2_asl_i_r_xacc S2_asl_i_r_xacc_Rx32 S2_asl_i_r_xacc_Rs32 S2_asl_i_r_xacc_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asl_i_r_xacc_Rx32 & S2_asl_i_r_xacc_Rs32 & S2_asl_i_r_xacc_u5 {
  local tmp0:4;
  tmp0 = S2_asl_i_r_xacc_Rs32;
  local tmp1:4;
  tmp1 = tmp0 << S2_asl_i_r_xacc_u5;
  local tmp2:4;
  tmp2 = S2_asl_i_r_xacc_Rx32 ^ tmp1;
  S2_asl_i_r_xacc_Rx32 = tmp2;
}

:S6_rol_i_r_xacc S6_rol_i_r_xacc_Rx32 S6_rol_i_r_xacc_Rs32 S6_rol_i_r_xacc_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S6_rol_i_r_xacc_Rx32 & S6_rol_i_r_xacc_Rs32 & S6_rol_i_r_xacc_u5 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = S6_rol_i_r_xacc_u5 == tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = S6_rol_i_r_xacc_Rs32;
  goto <done_4>;
<f_branch_4>
  local tmp5:4;
  tmp5 = S6_rol_i_r_xacc_Rs32;
  local tmp6:4;
  tmp6 = tmp5 << S6_rol_i_r_xacc_u5;
  local tmp7:4;
  tmp7 = S6_rol_i_r_xacc_Rs32;
  local tmp8:4;
  tmp8 = 4;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = tmp10 - S6_rol_i_r_xacc_u5;
  local tmp12:4;
  tmp12 = tmp7 >> tmp11;
  local tmp13:4;
  tmp13 = tmp6 | tmp12;
  tmp4 = tmp13;
<done_4>
  local tmp14:4;
  tmp14 = S6_rol_i_r_xacc_Rx32 ^ tmp4;
  S6_rol_i_r_xacc_Rx32 = tmp14;
}

:S2_lsr_i_p_xacc S2_lsr_i_p_xacc_Rxx32 S2_lsr_i_p_xacc_Rss32 S2_lsr_i_p_xacc_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_lsr_i_p_xacc_Rxx32 & S2_lsr_i_p_xacc_Rss32 & S2_lsr_i_p_xacc_u6 {
  local tmp0:8;
  tmp0 = S2_lsr_i_p_xacc_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_lsr_i_p_xacc_u6);
  local tmp2:8;
  tmp2 = tmp0 >> tmp1;
  local tmp3:8;
  tmp3 = S2_lsr_i_p_xacc_Rxx32 ^ tmp2;
  S2_lsr_i_p_xacc_Rxx32 = tmp3;
}

:S2_asl_i_p_xacc S2_asl_i_p_xacc_Rxx32 S2_asl_i_p_xacc_Rss32 S2_asl_i_p_xacc_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asl_i_p_xacc_Rxx32 & S2_asl_i_p_xacc_Rss32 & S2_asl_i_p_xacc_u6 {
  local tmp0:8;
  tmp0 = S2_asl_i_p_xacc_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_asl_i_p_xacc_u6);
  local tmp2:8;
  tmp2 = tmp0 << tmp1;
  local tmp3:8;
  tmp3 = S2_asl_i_p_xacc_Rxx32 ^ tmp2;
  S2_asl_i_p_xacc_Rxx32 = tmp3;
}

:S6_rol_i_p_xacc S6_rol_i_p_xacc_Rxx32 S6_rol_i_p_xacc_Rss32 S6_rol_i_p_xacc_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S6_rol_i_p_xacc_Rxx32 & S6_rol_i_p_xacc_Rss32 & S6_rol_i_p_xacc_u6 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = S6_rol_i_p_xacc_u6 == tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:8;
  tmp4 = S6_rol_i_p_xacc_Rss32;
  goto <done_4>;
<f_branch_4>
  local tmp5:8;
  tmp5 = S6_rol_i_p_xacc_Rss32;
  local tmp6:8;
  tmp6 = sext(S6_rol_i_p_xacc_u6);
  local tmp7:8;
  tmp7 = tmp5 << tmp6;
  local tmp8:8;
  tmp8 = S6_rol_i_p_xacc_Rss32;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = 8;
  local tmp11:4;
  tmp11 = tmp9 * tmp10;
  local tmp12:4;
  tmp12 = tmp11 - S6_rol_i_p_xacc_u6;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = tmp8 >> tmp13;
  local tmp15:8;
  tmp15 = tmp7 | tmp14;
  tmp4 = tmp15;
<done_4>
  local tmp16:8;
  tmp16 = S6_rol_i_p_xacc_Rxx32 ^ tmp4;
  S6_rol_i_p_xacc_Rxx32 = tmp16;
}

:S2_asr_i_r_and S2_asr_i_r_and_Rx32 S2_asr_i_r_and_Rs32 S2_asr_i_r_and_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asr_i_r_and_Rx32 & S2_asr_i_r_and_Rs32 & S2_asr_i_r_and_u5 {
  local tmp0:4;
  tmp0 = S2_asr_i_r_and_Rs32;
  local tmp1:4;
  tmp1 = tmp0 >> S2_asr_i_r_and_u5;
  local tmp2:4;
  tmp2 = S2_asr_i_r_and_Rx32 & tmp1;
  S2_asr_i_r_and_Rx32 = tmp2;
}

:S2_lsr_i_r_and S2_lsr_i_r_and_Rx32 S2_lsr_i_r_and_Rs32 S2_lsr_i_r_and_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_lsr_i_r_and_Rx32 & S2_lsr_i_r_and_Rs32 & S2_lsr_i_r_and_u5 {
  local tmp0:4;
  tmp0 = S2_lsr_i_r_and_Rs32;
  local tmp1:4;
  tmp1 = tmp0 >> S2_lsr_i_r_and_u5;
  local tmp2:4;
  tmp2 = S2_lsr_i_r_and_Rx32 & tmp1;
  S2_lsr_i_r_and_Rx32 = tmp2;
}

:S2_asl_i_r_and S2_asl_i_r_and_Rx32 S2_asl_i_r_and_Rs32 S2_asl_i_r_and_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asl_i_r_and_Rx32 & S2_asl_i_r_and_Rs32 & S2_asl_i_r_and_u5 {
  local tmp0:4;
  tmp0 = S2_asl_i_r_and_Rs32;
  local tmp1:4;
  tmp1 = tmp0 << S2_asl_i_r_and_u5;
  local tmp2:4;
  tmp2 = S2_asl_i_r_and_Rx32 & tmp1;
  S2_asl_i_r_and_Rx32 = tmp2;
}

:S6_rol_i_r_and S6_rol_i_r_and_Rx32 S6_rol_i_r_and_Rs32 S6_rol_i_r_and_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S6_rol_i_r_and_Rx32 & S6_rol_i_r_and_Rs32 & S6_rol_i_r_and_u5 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = S6_rol_i_r_and_u5 == tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = S6_rol_i_r_and_Rs32;
  goto <done_4>;
<f_branch_4>
  local tmp5:4;
  tmp5 = S6_rol_i_r_and_Rs32;
  local tmp6:4;
  tmp6 = tmp5 << S6_rol_i_r_and_u5;
  local tmp7:4;
  tmp7 = S6_rol_i_r_and_Rs32;
  local tmp8:4;
  tmp8 = 4;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = tmp10 - S6_rol_i_r_and_u5;
  local tmp12:4;
  tmp12 = tmp7 >> tmp11;
  local tmp13:4;
  tmp13 = tmp6 | tmp12;
  tmp4 = tmp13;
<done_4>
  local tmp14:4;
  tmp14 = S6_rol_i_r_and_Rx32 & tmp4;
  S6_rol_i_r_and_Rx32 = tmp14;
}

:S2_asr_i_r_or S2_asr_i_r_or_Rx32 S2_asr_i_r_or_Rs32 S2_asr_i_r_or_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asr_i_r_or_Rx32 & S2_asr_i_r_or_Rs32 & S2_asr_i_r_or_u5 {
  local tmp0:4;
  tmp0 = S2_asr_i_r_or_Rs32;
  local tmp1:4;
  tmp1 = tmp0 >> S2_asr_i_r_or_u5;
  local tmp2:4;
  tmp2 = S2_asr_i_r_or_Rx32 | tmp1;
  S2_asr_i_r_or_Rx32 = tmp2;
}

:S2_lsr_i_r_or S2_lsr_i_r_or_Rx32 S2_lsr_i_r_or_Rs32 S2_lsr_i_r_or_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_lsr_i_r_or_Rx32 & S2_lsr_i_r_or_Rs32 & S2_lsr_i_r_or_u5 {
  local tmp0:4;
  tmp0 = S2_lsr_i_r_or_Rs32;
  local tmp1:4;
  tmp1 = tmp0 >> S2_lsr_i_r_or_u5;
  local tmp2:4;
  tmp2 = S2_lsr_i_r_or_Rx32 | tmp1;
  S2_lsr_i_r_or_Rx32 = tmp2;
}

:S2_asl_i_r_or S2_asl_i_r_or_Rx32 S2_asl_i_r_or_Rs32 S2_asl_i_r_or_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asl_i_r_or_Rx32 & S2_asl_i_r_or_Rs32 & S2_asl_i_r_or_u5 {
  local tmp0:4;
  tmp0 = S2_asl_i_r_or_Rs32;
  local tmp1:4;
  tmp1 = tmp0 << S2_asl_i_r_or_u5;
  local tmp2:4;
  tmp2 = S2_asl_i_r_or_Rx32 | tmp1;
  S2_asl_i_r_or_Rx32 = tmp2;
}

:S6_rol_i_r_or S6_rol_i_r_or_Rx32 S6_rol_i_r_or_Rs32 S6_rol_i_r_or_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b13 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S6_rol_i_r_or_Rx32 & S6_rol_i_r_or_Rs32 & S6_rol_i_r_or_u5 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = S6_rol_i_r_or_u5 == tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = S6_rol_i_r_or_Rs32;
  goto <done_4>;
<f_branch_4>
  local tmp5:4;
  tmp5 = S6_rol_i_r_or_Rs32;
  local tmp6:4;
  tmp6 = tmp5 << S6_rol_i_r_or_u5;
  local tmp7:4;
  tmp7 = S6_rol_i_r_or_Rs32;
  local tmp8:4;
  tmp8 = 4;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = tmp8 * tmp9;
  local tmp11:4;
  tmp11 = tmp10 - S6_rol_i_r_or_u5;
  local tmp12:4;
  tmp12 = tmp7 >> tmp11;
  local tmp13:4;
  tmp13 = tmp6 | tmp12;
  tmp4 = tmp13;
<done_4>
  local tmp14:4;
  tmp14 = S6_rol_i_r_or_Rx32 | tmp4;
  S6_rol_i_r_or_Rx32 = tmp14;
}

:S2_asr_i_p_and S2_asr_i_p_and_Rxx32 S2_asr_i_p_and_Rss32 S2_asr_i_p_and_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asr_i_p_and_Rxx32 & S2_asr_i_p_and_Rss32 & S2_asr_i_p_and_u6 {
  local tmp0:8;
  tmp0 = S2_asr_i_p_and_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_asr_i_p_and_u6);
  local tmp2:8;
  tmp2 = tmp0 >> tmp1;
  local tmp3:8;
  tmp3 = S2_asr_i_p_and_Rxx32 & tmp2;
  S2_asr_i_p_and_Rxx32 = tmp3;
}

:S2_lsr_i_p_and S2_lsr_i_p_and_Rxx32 S2_lsr_i_p_and_Rss32 S2_lsr_i_p_and_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_lsr_i_p_and_Rxx32 & S2_lsr_i_p_and_Rss32 & S2_lsr_i_p_and_u6 {
  local tmp0:8;
  tmp0 = S2_lsr_i_p_and_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_lsr_i_p_and_u6);
  local tmp2:8;
  tmp2 = tmp0 >> tmp1;
  local tmp3:8;
  tmp3 = S2_lsr_i_p_and_Rxx32 & tmp2;
  S2_lsr_i_p_and_Rxx32 = tmp3;
}

:S2_asl_i_p_and S2_asl_i_p_and_Rxx32 S2_asl_i_p_and_Rss32 S2_asl_i_p_and_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asl_i_p_and_Rxx32 & S2_asl_i_p_and_Rss32 & S2_asl_i_p_and_u6 {
  local tmp0:8;
  tmp0 = S2_asl_i_p_and_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_asl_i_p_and_u6);
  local tmp2:8;
  tmp2 = tmp0 << tmp1;
  local tmp3:8;
  tmp3 = S2_asl_i_p_and_Rxx32 & tmp2;
  S2_asl_i_p_and_Rxx32 = tmp3;
}

:S6_rol_i_p_and S6_rol_i_p_and_Rxx32 S6_rol_i_p_and_Rss32 S6_rol_i_p_and_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S6_rol_i_p_and_Rxx32 & S6_rol_i_p_and_Rss32 & S6_rol_i_p_and_u6 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = S6_rol_i_p_and_u6 == tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:8;
  tmp4 = S6_rol_i_p_and_Rss32;
  goto <done_4>;
<f_branch_4>
  local tmp5:8;
  tmp5 = S6_rol_i_p_and_Rss32;
  local tmp6:8;
  tmp6 = sext(S6_rol_i_p_and_u6);
  local tmp7:8;
  tmp7 = tmp5 << tmp6;
  local tmp8:8;
  tmp8 = S6_rol_i_p_and_Rss32;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = 8;
  local tmp11:4;
  tmp11 = tmp9 * tmp10;
  local tmp12:4;
  tmp12 = tmp11 - S6_rol_i_p_and_u6;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = tmp8 >> tmp13;
  local tmp15:8;
  tmp15 = tmp7 | tmp14;
  tmp4 = tmp15;
<done_4>
  local tmp16:8;
  tmp16 = S6_rol_i_p_and_Rxx32 & tmp4;
  S6_rol_i_p_and_Rxx32 = tmp16;
}

:S2_asr_i_p_or S2_asr_i_p_or_Rxx32 S2_asr_i_p_or_Rss32 S2_asr_i_p_or_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asr_i_p_or_Rxx32 & S2_asr_i_p_or_Rss32 & S2_asr_i_p_or_u6 {
  local tmp0:8;
  tmp0 = S2_asr_i_p_or_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_asr_i_p_or_u6);
  local tmp2:8;
  tmp2 = tmp0 >> tmp1;
  local tmp3:8;
  tmp3 = S2_asr_i_p_or_Rxx32 | tmp2;
  S2_asr_i_p_or_Rxx32 = tmp3;
}

:S2_lsr_i_p_or S2_lsr_i_p_or_Rxx32 S2_lsr_i_p_or_Rss32 S2_lsr_i_p_or_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_lsr_i_p_or_Rxx32 & S2_lsr_i_p_or_Rss32 & S2_lsr_i_p_or_u6 {
  local tmp0:8;
  tmp0 = S2_lsr_i_p_or_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_lsr_i_p_or_u6);
  local tmp2:8;
  tmp2 = tmp0 >> tmp1;
  local tmp3:8;
  tmp3 = S2_lsr_i_p_or_Rxx32 | tmp2;
  S2_lsr_i_p_or_Rxx32 = tmp3;
}

:S2_asl_i_p_or S2_asl_i_p_or_Rxx32 S2_asl_i_p_or_Rss32 S2_asl_i_p_or_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asl_i_p_or_Rxx32 & S2_asl_i_p_or_Rss32 & S2_asl_i_p_or_u6 {
  local tmp0:8;
  tmp0 = S2_asl_i_p_or_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_asl_i_p_or_u6);
  local tmp2:8;
  tmp2 = tmp0 << tmp1;
  local tmp3:8;
  tmp3 = S2_asl_i_p_or_Rxx32 | tmp2;
  S2_asl_i_p_or_Rxx32 = tmp3;
}

:S6_rol_i_p_or S6_rol_i_p_or_Rxx32 S6_rol_i_p_or_Rss32 S6_rol_i_p_or_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S6_rol_i_p_or_Rxx32 & S6_rol_i_p_or_Rss32 & S6_rol_i_p_or_u6 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = S6_rol_i_p_or_u6 == tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:8;
  tmp4 = S6_rol_i_p_or_Rss32;
  goto <done_4>;
<f_branch_4>
  local tmp5:8;
  tmp5 = S6_rol_i_p_or_Rss32;
  local tmp6:8;
  tmp6 = sext(S6_rol_i_p_or_u6);
  local tmp7:8;
  tmp7 = tmp5 << tmp6;
  local tmp8:8;
  tmp8 = S6_rol_i_p_or_Rss32;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = 8;
  local tmp11:4;
  tmp11 = tmp9 * tmp10;
  local tmp12:4;
  tmp12 = tmp11 - S6_rol_i_p_or_u6;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = tmp8 >> tmp13;
  local tmp15:8;
  tmp15 = tmp7 | tmp14;
  tmp4 = tmp15;
<done_4>
  local tmp16:8;
  tmp16 = S6_rol_i_p_or_Rxx32 | tmp4;
  S6_rol_i_p_or_Rxx32 = tmp16;
}

:S2_asl_i_r_sat S2_asl_i_r_sat_Rd32 S2_asl_i_r_sat_Rs32 S2_asl_i_r_sat_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asl_i_r_sat_Rd32 & S2_asl_i_r_sat_Rs32 & S2_asl_i_r_sat_u5 unimpl

:S2_asr_i_r_rnd S2_asr_i_r_rnd_Rd32 S2_asr_i_r_rnd_Rs32 S2_asr_i_r_rnd_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asr_i_r_rnd_Rd32 & S2_asr_i_r_rnd_Rs32 & S2_asr_i_r_rnd_u5 {
  local tmp0:8;
  local tmp1:8;
  local tmp2:4;
  tmp2 = S2_asr_i_r_rnd_Rs32;
  tmp1 = zext(tmp2);
  local tmp3:8;
  tmp3 = sext(S2_asr_i_r_rnd_u5);
  local tmp4:8;
  tmp4 = tmp1 >> tmp3;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:8;
  tmp6 = zext(tmp5);
  local tmp7:8;
  tmp7 = tmp4 + tmp6;
  tmp0 = tmp7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:8;
  tmp9 = zext(tmp8);
  local tmp10:8;
  tmp10 = tmp0 s>> tmp9;
  S2_asr_i_r_rnd_Rd32 = tmp10:4;
}

:S2_asr_i_p_rnd S2_asr_i_p_rnd_Rdd32 S2_asr_i_p_rnd_Rss32 S2_asr_i_p_rnd_u6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asr_i_p_rnd_Rdd32 & S2_asr_i_p_rnd_Rss32 & S2_asr_i_p_rnd_u6 {
  local tmp:8;
  local rnd:8;
  local tmp0:8;
  tmp0 = S2_asr_i_p_rnd_Rss32;
  local tmp1:8;
  tmp1 = sext(S2_asr_i_p_rnd_u6);
  local tmp2:8;
  tmp2 = tmp0 >> tmp1;
  tmp = tmp2;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp & tmp4;
  rnd = tmp5;
  local tmp6:8;
  tmp6 = tmp;
  local tmp7:4;
  tmp7 = 1;
  local tmp8:8;
  tmp8 = zext(tmp7);
  local tmp9:8;
  tmp9 = tmp6 s>> tmp8;
  local tmp10:8;
  tmp10 = tmp9 + rnd;
  S2_asr_i_p_rnd_Rdd32 = tmp10;
}

:S4_lsli S4_lsli_Rd32 S4_lsli_Rt32 S4_lsli_s6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S4_lsli_Rd32 & S4_lsli_Rt32 & S4_lsli_s6 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S4_lsli_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  shamt = tmp17;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = shamt s> tmp18;
  local tmp20:1;
  tmp20 = tmp19;
  if (tmp20) goto <t_branch_22>;
  goto <f_branch_22>;
<t_branch_22>
  local tmp22:8;
  local tmp23:4;
  tmp23 = S4_lsli_s6;
  tmp22 = sext(tmp23);
  local tmp24:8;
  tmp24 = zext(shamt);
  local tmp25:8;
  tmp25 = tmp22 << tmp24;
  local tmp26:8;
  tmp26 = tmp25;
  goto <done_22>;
<f_branch_22>
  local tmp27:8;
  local tmp28:4;
  tmp28 = S4_lsli_s6;
  tmp27 = sext(tmp28);
  local tmp29:8;
  tmp29 = zext(shamt);
  local tmp30:8;
  tmp30 = tmp27 >> tmp29;
  tmp26 = tmp30;
<done_22>
  S4_lsli_Rd32 = tmp26:4;
}

:S2_addasl_rrri S2_addasl_rrri_Rd32 S2_addasl_rrri_Rt32 S2_addasl_rrri_Rs32 S2_addasl_rrri_u3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_addasl_rrri_Rd32 & S2_addasl_rrri_Rt32 & S2_addasl_rrri_Rs32 & S2_addasl_rrri_u3 {
  local tmp0:4;
  tmp0 = S2_addasl_rrri_Rs32;
  local tmp1:4;
  tmp1 = tmp0 << S2_addasl_rrri_u3;
  local tmp2:4;
  tmp2 = S2_addasl_rrri_Rt32 + tmp1;
  S2_addasl_rrri_Rd32 = tmp2;
}

:S4_andi_asl_ri S4_andi_asl_ri_Rx32 S4_andi_asl_ri_u8 S4_andi_asl_ri_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b1 = 0 & b2 = 0 & b4 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & S4_andi_asl_ri_Rx32 & S4_andi_asl_ri_u8 & S4_andi_asl_ri_U5 {
  local tmp0:4;
  tmp0 = S4_andi_asl_ri_Rx32 << S4_andi_asl_ri_U5;
  local tmp1:4;
  tmp1 = S4_andi_asl_ri_u8 & tmp0;
  S4_andi_asl_ri_Rx32 = tmp1;
}

:S4_ori_asl_ri S4_ori_asl_ri_Rx32 S4_ori_asl_ri_u8 S4_ori_asl_ri_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b1 = 1 & b2 = 0 & b4 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & S4_ori_asl_ri_Rx32 & S4_ori_asl_ri_u8 & S4_ori_asl_ri_U5 {
  local tmp0:4;
  tmp0 = S4_ori_asl_ri_Rx32 << S4_ori_asl_ri_U5;
  local tmp1:4;
  tmp1 = S4_ori_asl_ri_u8 | tmp0;
  S4_ori_asl_ri_Rx32 = tmp1;
}

:S4_addi_asl_ri S4_addi_asl_ri_Rx32 S4_addi_asl_ri_u8 S4_addi_asl_ri_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b1 = 0 & b2 = 1 & b4 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & S4_addi_asl_ri_Rx32 & S4_addi_asl_ri_u8 & S4_addi_asl_ri_U5 {
  local tmp0:4;
  tmp0 = S4_addi_asl_ri_Rx32 << S4_addi_asl_ri_U5;
  local tmp1:4;
  tmp1 = S4_addi_asl_ri_u8 + tmp0;
  S4_addi_asl_ri_Rx32 = tmp1;
}

:S4_subi_asl_ri S4_subi_asl_ri_Rx32 S4_subi_asl_ri_u8 S4_subi_asl_ri_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b1 = 1 & b2 = 1 & b4 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & S4_subi_asl_ri_Rx32 & S4_subi_asl_ri_u8 & S4_subi_asl_ri_U5 {
  local tmp0:4;
  tmp0 = S4_subi_asl_ri_Rx32 << S4_subi_asl_ri_U5;
  local tmp1:4;
  tmp1 = S4_subi_asl_ri_u8 - tmp0;
  S4_subi_asl_ri_Rx32 = tmp1;
}

:S4_andi_lsr_ri S4_andi_lsr_ri_Rx32 S4_andi_lsr_ri_u8 S4_andi_lsr_ri_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b1 = 0 & b2 = 0 & b4 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & S4_andi_lsr_ri_Rx32 & S4_andi_lsr_ri_u8 & S4_andi_lsr_ri_U5 {
  local tmp0:4;
  tmp0 = S4_andi_lsr_ri_Rx32;
  local tmp1:4;
  tmp1 = tmp0 >> S4_andi_lsr_ri_U5;
  local tmp2:4;
  tmp2 = S4_andi_lsr_ri_u8 & tmp1;
  S4_andi_lsr_ri_Rx32 = tmp2;
}

:S4_ori_lsr_ri S4_ori_lsr_ri_Rx32 S4_ori_lsr_ri_u8 S4_ori_lsr_ri_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b1 = 1 & b2 = 0 & b4 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & S4_ori_lsr_ri_Rx32 & S4_ori_lsr_ri_u8 & S4_ori_lsr_ri_U5 {
  local tmp0:4;
  tmp0 = S4_ori_lsr_ri_Rx32;
  local tmp1:4;
  tmp1 = tmp0 >> S4_ori_lsr_ri_U5;
  local tmp2:4;
  tmp2 = S4_ori_lsr_ri_u8 | tmp1;
  S4_ori_lsr_ri_Rx32 = tmp2;
}

:S4_addi_lsr_ri S4_addi_lsr_ri_Rx32 S4_addi_lsr_ri_u8 S4_addi_lsr_ri_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b1 = 0 & b2 = 1 & b4 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & S4_addi_lsr_ri_Rx32 & S4_addi_lsr_ri_u8 & S4_addi_lsr_ri_U5 {
  local tmp0:4;
  tmp0 = S4_addi_lsr_ri_Rx32;
  local tmp1:4;
  tmp1 = tmp0 >> S4_addi_lsr_ri_U5;
  local tmp2:4;
  tmp2 = S4_addi_lsr_ri_u8 + tmp1;
  S4_addi_lsr_ri_Rx32 = tmp2;
}

:S4_subi_lsr_ri S4_subi_lsr_ri_Rx32 S4_subi_lsr_ri_u8 S4_subi_lsr_ri_U5 is phase = 1 & Parse != 0b00 & subinsn = 0 & b1 = 1 & b2 = 1 & b4 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & S4_subi_lsr_ri_Rx32 & S4_subi_lsr_ri_u8 & S4_subi_lsr_ri_U5 {
  local tmp0:4;
  tmp0 = S4_subi_lsr_ri_Rx32;
  local tmp1:4;
  tmp1 = tmp0 >> S4_subi_lsr_ri_U5;
  local tmp2:4;
  tmp2 = S4_subi_lsr_ri_u8 - tmp1;
  S4_subi_lsr_ri_Rx32 = tmp2;
}

:S2_valignib S2_valignib_Rdd32 S2_valignib_Rtt32 S2_valignib_Rss32 S2_valignib_u3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_valignib_Rdd32 & S2_valignib_Rtt32 & S2_valignib_Rss32 & S2_valignib_u3 {
  local tmp0:8;
  tmp0 = S2_valignib_Rss32;
  local tmp1:4;
  tmp1 = 8;
  local tmp2:4;
  tmp2 = S2_valignib_u3 * tmp1;
  local tmp3:8;
  tmp3 = zext(tmp2);
  local tmp4:8;
  tmp4 = tmp0 >> tmp3;
  local tmp5:8;
  tmp5 = S2_valignib_Rtt32;
  local tmp6:4;
  tmp6 = 8;
  local tmp7:4;
  tmp7 = tmp6 - S2_valignib_u3;
  local tmp8:4;
  tmp8 = 8;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:8;
  tmp10 = zext(tmp9);
  local tmp11:8;
  tmp11 = tmp5 << tmp10;
  local tmp12:8;
  tmp12 = tmp4 | tmp11;
  S2_valignib_Rdd32 = tmp12;
}

:S2_valignrb S2_valignrb_Rdd32 S2_valignrb_Rtt32 S2_valignrb_Rss32 S2_valignrb_Pu4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_valignrb_Rdd32 & S2_valignrb_Rtt32 & S2_valignrb_Rss32 & S2_valignrb_Pu4 {
  local tmp0:8;
  tmp0 = S2_valignrb_Rss32;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = zext(S2_valignrb_Pu4);
  local tmp3:4;
  tmp3 = tmp2 & tmp1;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:8;
  tmp6 = zext(tmp5);
  local tmp7:8;
  tmp7 = tmp0 >> tmp6;
  local tmp8:8;
  tmp8 = S2_valignrb_Rtt32;
  local tmp9:4;
  tmp9 = 8;
  local tmp10:4;
  tmp10 = 7;
  local tmp11:4;
  tmp11 = zext(S2_valignrb_Pu4);
  local tmp12:4;
  tmp12 = tmp11 & tmp10;
  local tmp13:4;
  tmp13 = tmp9 - tmp12;
  local tmp14:4;
  tmp14 = 8;
  local tmp15:4;
  tmp15 = tmp13 * tmp14;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp8 << tmp16;
  local tmp18:8;
  tmp18 = tmp7 | tmp17;
  S2_valignrb_Rdd32 = tmp18;
}

:S2_vspliceib S2_vspliceib_Rdd32 S2_vspliceib_Rss32 S2_vspliceib_Rtt32 S2_vspliceib_u3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_vspliceib_Rdd32 & S2_vspliceib_Rss32 & S2_vspliceib_Rtt32 & S2_vspliceib_u3 {
  local tmp0:8;
  tmp0 = S2_vspliceib_Rtt32;
  local tmp1:4;
  tmp1 = 8;
  local tmp2:4;
  tmp2 = S2_vspliceib_u3 * tmp1;
  local tmp3:8;
  tmp3 = zext(tmp2);
  local tmp4:8;
  tmp4 = tmp0 << tmp3;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = 8;
  local tmp7:4;
  tmp7 = S2_vspliceib_u3 * tmp6;
  local tmp8:4;
  tmp8 = tmp5 << tmp7;
  local tmp9:4;
  tmp9 = 1;
  local tmp10:4;
  tmp10 = tmp8 - tmp9;
  local tmp11:8;
  tmp11 = zext(tmp10);
  local tmp12:8;
  tmp12 = S2_vspliceib_Rss32 & tmp11;
  local tmp13:8;
  tmp13 = tmp4 | tmp12;
  S2_vspliceib_Rdd32 = tmp13;
}

:S2_vsplicerb S2_vsplicerb_Rdd32 S2_vsplicerb_Rss32 S2_vsplicerb_Rtt32 S2_vsplicerb_Pu4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_vsplicerb_Rdd32 & S2_vsplicerb_Rss32 & S2_vsplicerb_Rtt32 & S2_vsplicerb_Pu4 {
  local tmp0:8;
  tmp0 = S2_vsplicerb_Rtt32;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = zext(S2_vsplicerb_Pu4);
  local tmp3:4;
  tmp3 = tmp2 & tmp1;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:8;
  tmp6 = zext(tmp5);
  local tmp7:8;
  tmp7 = tmp0 << tmp6;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 7;
  local tmp10:4;
  tmp10 = zext(S2_vsplicerb_Pu4);
  local tmp11:4;
  tmp11 = tmp10 & tmp9;
  local tmp12:4;
  tmp12 = 8;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = tmp8 << tmp13;
  local tmp15:4;
  tmp15 = 1;
  local tmp16:4;
  tmp16 = tmp14 - tmp15;
  local tmp17:8;
  tmp17 = zext(tmp16);
  local tmp18:8;
  tmp18 = S2_vsplicerb_Rss32 & tmp17;
  local tmp19:8;
  tmp19 = tmp7 | tmp18;
  S2_vsplicerb_Rdd32 = tmp19;
}

:S2_vsplatrh S2_vsplatrh_Rdd32 S2_vsplatrh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vsplatrh_Rdd32 & S2_vsplatrh_Rs32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_vsplatrh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:4;
  tmp13 = S2_vsplatrh_Rs32 s>> tmp12;
  local tmp14:4;
  tmp14 = 65535;
  local tmp15:4;
  tmp15 = tmp13 & tmp14;
  tmp9 = tmp15:2;
  local tmp16:4;
  tmp16 = 65535;
  local tmp17:4;
  tmp17 = zext(tmp9);
  local tmp18:4;
  tmp18 = tmp17 & tmp16;
  tmp8 = sext(tmp18);
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp8 << tmp22;
  local tmp24:8;
  tmp24 = tmp7 | tmp23;
  S2_vsplatrh_Rdd32 = tmp24;
  local tmp25:8;
  tmp25 = 65535;
  local tmp26:4;
  tmp26 = 1;
  local tmp27:4;
  tmp27 = 16;
  local tmp28:4;
  tmp28 = tmp26 * tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp25 << tmp29;
  local tmp31:8;
  tmp31 = ~ tmp30;
  local tmp32:8;
  tmp32 = S2_vsplatrh_Rdd32 & tmp31;
  local tmp33:8;
  local tmp34:2;
  local tmp35:4;
  tmp35 = 0;
  local tmp36:4;
  tmp36 = 16;
  local tmp37:4;
  tmp37 = tmp35 * tmp36;
  local tmp38:4;
  tmp38 = S2_vsplatrh_Rs32 s>> tmp37;
  local tmp39:4;
  tmp39 = 65535;
  local tmp40:4;
  tmp40 = tmp38 & tmp39;
  tmp34 = tmp40:2;
  local tmp41:4;
  tmp41 = 65535;
  local tmp42:4;
  tmp42 = zext(tmp34);
  local tmp43:4;
  tmp43 = tmp42 & tmp41;
  tmp33 = sext(tmp43);
  local tmp44:4;
  tmp44 = 1;
  local tmp45:4;
  tmp45 = 16;
  local tmp46:4;
  tmp46 = tmp44 * tmp45;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp33 << tmp47;
  local tmp49:8;
  tmp49 = tmp32 | tmp48;
  S2_vsplatrh_Rdd32 = tmp49;
  local tmp50:8;
  tmp50 = 65535;
  local tmp51:4;
  tmp51 = 2;
  local tmp52:4;
  tmp52 = 16;
  local tmp53:4;
  tmp53 = tmp51 * tmp52;
  local tmp54:8;
  tmp54 = zext(tmp53);
  local tmp55:8;
  tmp55 = tmp50 << tmp54;
  local tmp56:8;
  tmp56 = ~ tmp55;
  local tmp57:8;
  tmp57 = S2_vsplatrh_Rdd32 & tmp56;
  local tmp58:8;
  local tmp59:2;
  local tmp60:4;
  tmp60 = 0;
  local tmp61:4;
  tmp61 = 16;
  local tmp62:4;
  tmp62 = tmp60 * tmp61;
  local tmp63:4;
  tmp63 = S2_vsplatrh_Rs32 s>> tmp62;
  local tmp64:4;
  tmp64 = 65535;
  local tmp65:4;
  tmp65 = tmp63 & tmp64;
  tmp59 = tmp65:2;
  local tmp66:4;
  tmp66 = 65535;
  local tmp67:4;
  tmp67 = zext(tmp59);
  local tmp68:4;
  tmp68 = tmp67 & tmp66;
  tmp58 = sext(tmp68);
  local tmp69:4;
  tmp69 = 2;
  local tmp70:4;
  tmp70 = 16;
  local tmp71:4;
  tmp71 = tmp69 * tmp70;
  local tmp72:8;
  tmp72 = zext(tmp71);
  local tmp73:8;
  tmp73 = tmp58 << tmp72;
  local tmp74:8;
  tmp74 = tmp57 | tmp73;
  S2_vsplatrh_Rdd32 = tmp74;
  local tmp75:8;
  tmp75 = 65535;
  local tmp76:4;
  tmp76 = 3;
  local tmp77:4;
  tmp77 = 16;
  local tmp78:4;
  tmp78 = tmp76 * tmp77;
  local tmp79:8;
  tmp79 = zext(tmp78);
  local tmp80:8;
  tmp80 = tmp75 << tmp79;
  local tmp81:8;
  tmp81 = ~ tmp80;
  local tmp82:8;
  tmp82 = S2_vsplatrh_Rdd32 & tmp81;
  local tmp83:8;
  local tmp84:2;
  local tmp85:4;
  tmp85 = 0;
  local tmp86:4;
  tmp86 = 16;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:4;
  tmp88 = S2_vsplatrh_Rs32 s>> tmp87;
  local tmp89:4;
  tmp89 = 65535;
  local tmp90:4;
  tmp90 = tmp88 & tmp89;
  tmp84 = tmp90:2;
  local tmp91:4;
  tmp91 = 65535;
  local tmp92:4;
  tmp92 = zext(tmp84);
  local tmp93:4;
  tmp93 = tmp92 & tmp91;
  tmp83 = sext(tmp93);
  local tmp94:4;
  tmp94 = 3;
  local tmp95:4;
  tmp95 = 16;
  local tmp96:4;
  tmp96 = tmp94 * tmp95;
  local tmp97:8;
  tmp97 = zext(tmp96);
  local tmp98:8;
  tmp98 = tmp83 << tmp97;
  local tmp99:8;
  tmp99 = tmp82 | tmp98;
  S2_vsplatrh_Rdd32 = tmp99;
}

:S2_vsplatrb S2_vsplatrb_Rd32 S2_vsplatrb_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vsplatrb_Rd32 & S2_vsplatrb_Rs32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = zext(S2_vsplatrb_Rd32);
  local tmp8:8;
  tmp8 = tmp7 & tmp6;
  local tmp9:8;
  local tmp10:1;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 8;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = S2_vsplatrb_Rs32 s>> tmp13;
  local tmp15:4;
  tmp15 = 255;
  local tmp16:4;
  tmp16 = tmp14 & tmp15;
  tmp10 = tmp16:1;
  local tmp17:8;
  tmp17 = 255;
  local tmp18:8;
  tmp18 = zext(tmp10);
  local tmp19:8;
  tmp19 = tmp18 & tmp17;
  tmp9 = tmp19;
  local tmp20:4;
  tmp20 = 0;
  local tmp21:4;
  tmp21 = 8;
  local tmp22:4;
  tmp22 = tmp20 * tmp21;
  local tmp23:8;
  tmp23 = zext(tmp22);
  local tmp24:8;
  tmp24 = tmp9 << tmp23;
  local tmp25:8;
  tmp25 = tmp8 | tmp24;
  S2_vsplatrb_Rd32 = tmp25:4;
  local tmp26:8;
  tmp26 = 255;
  local tmp27:4;
  tmp27 = 1;
  local tmp28:4;
  tmp28 = 8;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp26 << tmp30;
  local tmp32:8;
  tmp32 = ~ tmp31;
  local tmp33:8;
  tmp33 = zext(S2_vsplatrb_Rd32);
  local tmp34:8;
  tmp34 = tmp33 & tmp32;
  local tmp35:8;
  local tmp36:1;
  local tmp37:4;
  tmp37 = 0;
  local tmp38:4;
  tmp38 = 8;
  local tmp39:4;
  tmp39 = tmp37 * tmp38;
  local tmp40:4;
  tmp40 = S2_vsplatrb_Rs32 s>> tmp39;
  local tmp41:4;
  tmp41 = 255;
  local tmp42:4;
  tmp42 = tmp40 & tmp41;
  tmp36 = tmp42:1;
  local tmp43:8;
  tmp43 = 255;
  local tmp44:8;
  tmp44 = zext(tmp36);
  local tmp45:8;
  tmp45 = tmp44 & tmp43;
  tmp35 = tmp45;
  local tmp46:4;
  tmp46 = 1;
  local tmp47:4;
  tmp47 = 8;
  local tmp48:4;
  tmp48 = tmp46 * tmp47;
  local tmp49:8;
  tmp49 = zext(tmp48);
  local tmp50:8;
  tmp50 = tmp35 << tmp49;
  local tmp51:8;
  tmp51 = tmp34 | tmp50;
  S2_vsplatrb_Rd32 = tmp51:4;
  local tmp52:8;
  tmp52 = 255;
  local tmp53:4;
  tmp53 = 2;
  local tmp54:4;
  tmp54 = 8;
  local tmp55:4;
  tmp55 = tmp53 * tmp54;
  local tmp56:8;
  tmp56 = zext(tmp55);
  local tmp57:8;
  tmp57 = tmp52 << tmp56;
  local tmp58:8;
  tmp58 = ~ tmp57;
  local tmp59:8;
  tmp59 = zext(S2_vsplatrb_Rd32);
  local tmp60:8;
  tmp60 = tmp59 & tmp58;
  local tmp61:8;
  local tmp62:1;
  local tmp63:4;
  tmp63 = 0;
  local tmp64:4;
  tmp64 = 8;
  local tmp65:4;
  tmp65 = tmp63 * tmp64;
  local tmp66:4;
  tmp66 = S2_vsplatrb_Rs32 s>> tmp65;
  local tmp67:4;
  tmp67 = 255;
  local tmp68:4;
  tmp68 = tmp66 & tmp67;
  tmp62 = tmp68:1;
  local tmp69:8;
  tmp69 = 255;
  local tmp70:8;
  tmp70 = zext(tmp62);
  local tmp71:8;
  tmp71 = tmp70 & tmp69;
  tmp61 = tmp71;
  local tmp72:4;
  tmp72 = 2;
  local tmp73:4;
  tmp73 = 8;
  local tmp74:4;
  tmp74 = tmp72 * tmp73;
  local tmp75:8;
  tmp75 = zext(tmp74);
  local tmp76:8;
  tmp76 = tmp61 << tmp75;
  local tmp77:8;
  tmp77 = tmp60 | tmp76;
  S2_vsplatrb_Rd32 = tmp77:4;
  local tmp78:8;
  tmp78 = 255;
  local tmp79:4;
  tmp79 = 3;
  local tmp80:4;
  tmp80 = 8;
  local tmp81:4;
  tmp81 = tmp79 * tmp80;
  local tmp82:8;
  tmp82 = zext(tmp81);
  local tmp83:8;
  tmp83 = tmp78 << tmp82;
  local tmp84:8;
  tmp84 = ~ tmp83;
  local tmp85:8;
  tmp85 = zext(S2_vsplatrb_Rd32);
  local tmp86:8;
  tmp86 = tmp85 & tmp84;
  local tmp87:8;
  local tmp88:1;
  local tmp89:4;
  tmp89 = 0;
  local tmp90:4;
  tmp90 = 8;
  local tmp91:4;
  tmp91 = tmp89 * tmp90;
  local tmp92:4;
  tmp92 = S2_vsplatrb_Rs32 s>> tmp91;
  local tmp93:4;
  tmp93 = 255;
  local tmp94:4;
  tmp94 = tmp92 & tmp93;
  tmp88 = tmp94:1;
  local tmp95:8;
  tmp95 = 255;
  local tmp96:8;
  tmp96 = zext(tmp88);
  local tmp97:8;
  tmp97 = tmp96 & tmp95;
  tmp87 = tmp97;
  local tmp98:4;
  tmp98 = 3;
  local tmp99:4;
  tmp99 = 8;
  local tmp100:4;
  tmp100 = tmp98 * tmp99;
  local tmp101:8;
  tmp101 = zext(tmp100);
  local tmp102:8;
  tmp102 = tmp87 << tmp101;
  local tmp103:8;
  tmp103 = tmp86 | tmp102;
  S2_vsplatrb_Rd32 = tmp103:4;
}

:S6_vsplatrbp S6_vsplatrbp_Rdd32 S6_vsplatrbp_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S6_vsplatrbp_Rdd32 & S6_vsplatrbp_Rs32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S6_vsplatrbp_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:1;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 8;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:4;
  tmp13 = S6_vsplatrbp_Rs32 s>> tmp12;
  local tmp14:4;
  tmp14 = 255;
  local tmp15:4;
  tmp15 = tmp13 & tmp14;
  tmp9 = tmp15:1;
  local tmp16:8;
  tmp16 = 255;
  local tmp17:8;
  tmp17 = zext(tmp9);
  local tmp18:8;
  tmp18 = tmp17 & tmp16;
  tmp8 = tmp18;
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 8;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp8 << tmp22;
  local tmp24:8;
  tmp24 = tmp7 | tmp23;
  S6_vsplatrbp_Rdd32 = tmp24;
  local tmp25:8;
  tmp25 = 255;
  local tmp26:4;
  tmp26 = 1;
  local tmp27:4;
  tmp27 = 8;
  local tmp28:4;
  tmp28 = tmp26 * tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp25 << tmp29;
  local tmp31:8;
  tmp31 = ~ tmp30;
  local tmp32:8;
  tmp32 = S6_vsplatrbp_Rdd32 & tmp31;
  local tmp33:8;
  local tmp34:1;
  local tmp35:4;
  tmp35 = 0;
  local tmp36:4;
  tmp36 = 8;
  local tmp37:4;
  tmp37 = tmp35 * tmp36;
  local tmp38:4;
  tmp38 = S6_vsplatrbp_Rs32 s>> tmp37;
  local tmp39:4;
  tmp39 = 255;
  local tmp40:4;
  tmp40 = tmp38 & tmp39;
  tmp34 = tmp40:1;
  local tmp41:8;
  tmp41 = 255;
  local tmp42:8;
  tmp42 = zext(tmp34);
  local tmp43:8;
  tmp43 = tmp42 & tmp41;
  tmp33 = tmp43;
  local tmp44:4;
  tmp44 = 1;
  local tmp45:4;
  tmp45 = 8;
  local tmp46:4;
  tmp46 = tmp44 * tmp45;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp33 << tmp47;
  local tmp49:8;
  tmp49 = tmp32 | tmp48;
  S6_vsplatrbp_Rdd32 = tmp49;
  local tmp50:8;
  tmp50 = 255;
  local tmp51:4;
  tmp51 = 2;
  local tmp52:4;
  tmp52 = 8;
  local tmp53:4;
  tmp53 = tmp51 * tmp52;
  local tmp54:8;
  tmp54 = zext(tmp53);
  local tmp55:8;
  tmp55 = tmp50 << tmp54;
  local tmp56:8;
  tmp56 = ~ tmp55;
  local tmp57:8;
  tmp57 = S6_vsplatrbp_Rdd32 & tmp56;
  local tmp58:8;
  local tmp59:1;
  local tmp60:4;
  tmp60 = 0;
  local tmp61:4;
  tmp61 = 8;
  local tmp62:4;
  tmp62 = tmp60 * tmp61;
  local tmp63:4;
  tmp63 = S6_vsplatrbp_Rs32 s>> tmp62;
  local tmp64:4;
  tmp64 = 255;
  local tmp65:4;
  tmp65 = tmp63 & tmp64;
  tmp59 = tmp65:1;
  local tmp66:8;
  tmp66 = 255;
  local tmp67:8;
  tmp67 = zext(tmp59);
  local tmp68:8;
  tmp68 = tmp67 & tmp66;
  tmp58 = tmp68;
  local tmp69:4;
  tmp69 = 2;
  local tmp70:4;
  tmp70 = 8;
  local tmp71:4;
  tmp71 = tmp69 * tmp70;
  local tmp72:8;
  tmp72 = zext(tmp71);
  local tmp73:8;
  tmp73 = tmp58 << tmp72;
  local tmp74:8;
  tmp74 = tmp57 | tmp73;
  S6_vsplatrbp_Rdd32 = tmp74;
  local tmp75:8;
  tmp75 = 255;
  local tmp76:4;
  tmp76 = 3;
  local tmp77:4;
  tmp77 = 8;
  local tmp78:4;
  tmp78 = tmp76 * tmp77;
  local tmp79:8;
  tmp79 = zext(tmp78);
  local tmp80:8;
  tmp80 = tmp75 << tmp79;
  local tmp81:8;
  tmp81 = ~ tmp80;
  local tmp82:8;
  tmp82 = S6_vsplatrbp_Rdd32 & tmp81;
  local tmp83:8;
  local tmp84:1;
  local tmp85:4;
  tmp85 = 0;
  local tmp86:4;
  tmp86 = 8;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:4;
  tmp88 = S6_vsplatrbp_Rs32 s>> tmp87;
  local tmp89:4;
  tmp89 = 255;
  local tmp90:4;
  tmp90 = tmp88 & tmp89;
  tmp84 = tmp90:1;
  local tmp91:8;
  tmp91 = 255;
  local tmp92:8;
  tmp92 = zext(tmp84);
  local tmp93:8;
  tmp93 = tmp92 & tmp91;
  tmp83 = tmp93;
  local tmp94:4;
  tmp94 = 3;
  local tmp95:4;
  tmp95 = 8;
  local tmp96:4;
  tmp96 = tmp94 * tmp95;
  local tmp97:8;
  tmp97 = zext(tmp96);
  local tmp98:8;
  tmp98 = tmp83 << tmp97;
  local tmp99:8;
  tmp99 = tmp82 | tmp98;
  S6_vsplatrbp_Rdd32 = tmp99;
  local tmp100:8;
  tmp100 = 255;
  local tmp101:4;
  tmp101 = 4;
  local tmp102:4;
  tmp102 = 8;
  local tmp103:4;
  tmp103 = tmp101 * tmp102;
  local tmp104:8;
  tmp104 = zext(tmp103);
  local tmp105:8;
  tmp105 = tmp100 << tmp104;
  local tmp106:8;
  tmp106 = ~ tmp105;
  local tmp107:8;
  tmp107 = S6_vsplatrbp_Rdd32 & tmp106;
  local tmp108:8;
  local tmp109:1;
  local tmp110:4;
  tmp110 = 0;
  local tmp111:4;
  tmp111 = 8;
  local tmp112:4;
  tmp112 = tmp110 * tmp111;
  local tmp113:4;
  tmp113 = S6_vsplatrbp_Rs32 s>> tmp112;
  local tmp114:4;
  tmp114 = 255;
  local tmp115:4;
  tmp115 = tmp113 & tmp114;
  tmp109 = tmp115:1;
  local tmp116:8;
  tmp116 = 255;
  local tmp117:8;
  tmp117 = zext(tmp109);
  local tmp118:8;
  tmp118 = tmp117 & tmp116;
  tmp108 = tmp118;
  local tmp119:4;
  tmp119 = 4;
  local tmp120:4;
  tmp120 = 8;
  local tmp121:4;
  tmp121 = tmp119 * tmp120;
  local tmp122:8;
  tmp122 = zext(tmp121);
  local tmp123:8;
  tmp123 = tmp108 << tmp122;
  local tmp124:8;
  tmp124 = tmp107 | tmp123;
  S6_vsplatrbp_Rdd32 = tmp124;
  local tmp125:8;
  tmp125 = 255;
  local tmp126:4;
  tmp126 = 5;
  local tmp127:4;
  tmp127 = 8;
  local tmp128:4;
  tmp128 = tmp126 * tmp127;
  local tmp129:8;
  tmp129 = zext(tmp128);
  local tmp130:8;
  tmp130 = tmp125 << tmp129;
  local tmp131:8;
  tmp131 = ~ tmp130;
  local tmp132:8;
  tmp132 = S6_vsplatrbp_Rdd32 & tmp131;
  local tmp133:8;
  local tmp134:1;
  local tmp135:4;
  tmp135 = 0;
  local tmp136:4;
  tmp136 = 8;
  local tmp137:4;
  tmp137 = tmp135 * tmp136;
  local tmp138:4;
  tmp138 = S6_vsplatrbp_Rs32 s>> tmp137;
  local tmp139:4;
  tmp139 = 255;
  local tmp140:4;
  tmp140 = tmp138 & tmp139;
  tmp134 = tmp140:1;
  local tmp141:8;
  tmp141 = 255;
  local tmp142:8;
  tmp142 = zext(tmp134);
  local tmp143:8;
  tmp143 = tmp142 & tmp141;
  tmp133 = tmp143;
  local tmp144:4;
  tmp144 = 5;
  local tmp145:4;
  tmp145 = 8;
  local tmp146:4;
  tmp146 = tmp144 * tmp145;
  local tmp147:8;
  tmp147 = zext(tmp146);
  local tmp148:8;
  tmp148 = tmp133 << tmp147;
  local tmp149:8;
  tmp149 = tmp132 | tmp148;
  S6_vsplatrbp_Rdd32 = tmp149;
  local tmp150:8;
  tmp150 = 255;
  local tmp151:4;
  tmp151 = 6;
  local tmp152:4;
  tmp152 = 8;
  local tmp153:4;
  tmp153 = tmp151 * tmp152;
  local tmp154:8;
  tmp154 = zext(tmp153);
  local tmp155:8;
  tmp155 = tmp150 << tmp154;
  local tmp156:8;
  tmp156 = ~ tmp155;
  local tmp157:8;
  tmp157 = S6_vsplatrbp_Rdd32 & tmp156;
  local tmp158:8;
  local tmp159:1;
  local tmp160:4;
  tmp160 = 0;
  local tmp161:4;
  tmp161 = 8;
  local tmp162:4;
  tmp162 = tmp160 * tmp161;
  local tmp163:4;
  tmp163 = S6_vsplatrbp_Rs32 s>> tmp162;
  local tmp164:4;
  tmp164 = 255;
  local tmp165:4;
  tmp165 = tmp163 & tmp164;
  tmp159 = tmp165:1;
  local tmp166:8;
  tmp166 = 255;
  local tmp167:8;
  tmp167 = zext(tmp159);
  local tmp168:8;
  tmp168 = tmp167 & tmp166;
  tmp158 = tmp168;
  local tmp169:4;
  tmp169 = 6;
  local tmp170:4;
  tmp170 = 8;
  local tmp171:4;
  tmp171 = tmp169 * tmp170;
  local tmp172:8;
  tmp172 = zext(tmp171);
  local tmp173:8;
  tmp173 = tmp158 << tmp172;
  local tmp174:8;
  tmp174 = tmp157 | tmp173;
  S6_vsplatrbp_Rdd32 = tmp174;
  local tmp175:8;
  tmp175 = 255;
  local tmp176:4;
  tmp176 = 7;
  local tmp177:4;
  tmp177 = 8;
  local tmp178:4;
  tmp178 = tmp176 * tmp177;
  local tmp179:8;
  tmp179 = zext(tmp178);
  local tmp180:8;
  tmp180 = tmp175 << tmp179;
  local tmp181:8;
  tmp181 = ~ tmp180;
  local tmp182:8;
  tmp182 = S6_vsplatrbp_Rdd32 & tmp181;
  local tmp183:8;
  local tmp184:1;
  local tmp185:4;
  tmp185 = 0;
  local tmp186:4;
  tmp186 = 8;
  local tmp187:4;
  tmp187 = tmp185 * tmp186;
  local tmp188:4;
  tmp188 = S6_vsplatrbp_Rs32 s>> tmp187;
  local tmp189:4;
  tmp189 = 255;
  local tmp190:4;
  tmp190 = tmp188 & tmp189;
  tmp184 = tmp190:1;
  local tmp191:8;
  tmp191 = 255;
  local tmp192:8;
  tmp192 = zext(tmp184);
  local tmp193:8;
  tmp193 = tmp192 & tmp191;
  tmp183 = tmp193;
  local tmp194:4;
  tmp194 = 7;
  local tmp195:4;
  tmp195 = 8;
  local tmp196:4;
  tmp196 = tmp194 * tmp195;
  local tmp197:8;
  tmp197 = zext(tmp196);
  local tmp198:8;
  tmp198 = tmp183 << tmp197;
  local tmp199:8;
  tmp199 = tmp182 | tmp198;
  S6_vsplatrbp_Rdd32 = tmp199;
}

:S2_insert S2_insert_Rx32 S2_insert_Rs32 S2_insert_u5 S2_insert_U5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_insert_Rx32 & S2_insert_Rs32 & S2_insert_u5 & S2_insert_U5 {
  local width:4;
  width = S2_insert_u5;
  local offset:4;
  offset = S2_insert_U5;
  local tmp0:8;
  local tmp1:4;
  tmp1 = 1;
  tmp0 = zext(tmp1);
  local tmp2:8;
  tmp2 = zext(width);
  local tmp3:8;
  tmp3 = tmp0 << tmp2;
  local tmp4:4;
  tmp4 = 1;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = tmp3 - tmp5;
  local tmp7:8;
  tmp7 = zext(offset);
  local tmp8:8;
  tmp8 = tmp6 << tmp7;
  local tmp9:8;
  tmp9 = ~ tmp8;
  local tmp10:8;
  tmp10 = zext(S2_insert_Rx32);
  local tmp11:8;
  tmp11 = tmp10 & tmp9;
  S2_insert_Rx32 = tmp11:4;
  local tmp12:8;
  local tmp13:4;
  tmp13 = 1;
  tmp12 = zext(tmp13);
  local tmp14:8;
  tmp14 = zext(width);
  local tmp15:8;
  tmp15 = tmp12 << tmp14;
  local tmp16:4;
  tmp16 = 1;
  local tmp17:8;
  tmp17 = zext(tmp16);
  local tmp18:8;
  tmp18 = tmp15 - tmp17;
  local tmp19:8;
  tmp19 = zext(S2_insert_Rs32);
  local tmp20:8;
  tmp20 = tmp19 & tmp18;
  local tmp21:8;
  tmp21 = zext(offset);
  local tmp22:8;
  tmp22 = tmp20 << tmp21;
  local tmp23:8;
  tmp23 = zext(S2_insert_Rx32);
  local tmp24:8;
  tmp24 = tmp23 | tmp22;
  S2_insert_Rx32 = tmp24:4;
}

:S2_tableidxb S2_tableidxb_Rx32 S2_tableidxb_Rs32 S2_tableidxb_u4 S2_tableidxb_S6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_tableidxb_Rx32 & S2_tableidxb_Rs32 & S2_tableidxb_u4 & S2_tableidxb_S6 unimpl

:S2_tableidxh S2_tableidxh_Rx32 S2_tableidxh_Rs32 S2_tableidxh_u4 S2_tableidxh_S6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_tableidxh_Rx32 & S2_tableidxh_Rs32 & S2_tableidxh_u4 & S2_tableidxh_S6 unimpl

:S2_tableidxw S2_tableidxw_Rx32 S2_tableidxw_Rs32 S2_tableidxw_u4 S2_tableidxw_S6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_tableidxw_Rx32 & S2_tableidxw_Rs32 & S2_tableidxw_u4 & S2_tableidxw_S6 unimpl

:S2_tableidxd S2_tableidxd_Rx32 S2_tableidxd_Rs32 S2_tableidxd_u4 S2_tableidxd_S6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_tableidxd_Rx32 & S2_tableidxd_Rs32 & S2_tableidxd_u4 & S2_tableidxd_S6 unimpl

:A4_bitspliti A4_bitspliti_Rdd32 A4_bitspliti_Rs32 A4_bitspliti_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A4_bitspliti_Rdd32 & A4_bitspliti_Rs32 & A4_bitspliti_u5 {
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 1;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = A4_bitspliti_Rdd32 & tmp6;
  local tmp8:4;
  tmp8 = A4_bitspliti_Rs32;
  local tmp9:4;
  tmp9 = tmp8 >> A4_bitspliti_u5;
  local tmp10:8;
  tmp10 = 4294967295;
  local tmp11:8;
  tmp11 = zext(tmp9);
  local tmp12:8;
  tmp12 = tmp11 & tmp10;
  local tmp13:4;
  tmp13 = 1;
  local tmp14:4;
  tmp14 = 32;
  local tmp15:4;
  tmp15 = tmp13 * tmp14;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp12 << tmp16;
  local tmp18:8;
  tmp18 = tmp7 | tmp17;
  A4_bitspliti_Rdd32 = tmp18;
  local tmp19:8;
  tmp19 = 4294967295;
  local tmp20:4;
  tmp20 = 0;
  local tmp21:4;
  tmp21 = 32;
  local tmp22:4;
  tmp22 = tmp20 * tmp21;
  local tmp23:8;
  tmp23 = zext(tmp22);
  local tmp24:8;
  tmp24 = tmp19 << tmp23;
  local tmp25:8;
  tmp25 = ~ tmp24;
  local tmp26:8;
  tmp26 = A4_bitspliti_Rdd32 & tmp25;
  local tmp27:4;
  tmp27 = 1;
  local tmp28:4;
  tmp28 = tmp27 << A4_bitspliti_u5;
  local tmp29:4;
  tmp29 = 1;
  local tmp30:4;
  tmp30 = tmp28 - tmp29;
  local tmp31:4;
  tmp31 = A4_bitspliti_Rs32 & tmp30;
  local tmp32:8;
  tmp32 = 4294967295;
  local tmp33:8;
  tmp33 = zext(tmp31);
  local tmp34:8;
  tmp34 = tmp33 & tmp32;
  local tmp35:4;
  tmp35 = 0;
  local tmp36:4;
  tmp36 = 32;
  local tmp37:4;
  tmp37 = tmp35 * tmp36;
  local tmp38:8;
  tmp38 = zext(tmp37);
  local tmp39:8;
  tmp39 = tmp34 << tmp38;
  local tmp40:8;
  tmp40 = tmp26 | tmp39;
  A4_bitspliti_Rdd32 = tmp40;
}

:A4_bitsplit A4_bitsplit_Rdd32 A4_bitsplit_Rs32 A4_bitsplit_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & A4_bitsplit_Rdd32 & A4_bitsplit_Rs32 & A4_bitsplit_Rt32 {
  local shamt:4;
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 5;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = A4_bitsplit_Rt32 & tmp4;
  shamt = tmp5;
  local tmp6:8;
  tmp6 = 4294967295;
  local tmp7:4;
  tmp7 = 1;
  local tmp8:4;
  tmp8 = 32;
  local tmp9:4;
  tmp9 = tmp7 * tmp8;
  local tmp10:8;
  tmp10 = zext(tmp9);
  local tmp11:8;
  tmp11 = tmp6 << tmp10;
  local tmp12:8;
  tmp12 = ~ tmp11;
  local tmp13:8;
  tmp13 = A4_bitsplit_Rdd32 & tmp12;
  local tmp14:4;
  tmp14 = A4_bitsplit_Rs32;
  local tmp15:4;
  tmp15 = tmp14 >> shamt;
  local tmp16:8;
  tmp16 = 4294967295;
  local tmp17:8;
  tmp17 = zext(tmp15);
  local tmp18:8;
  tmp18 = tmp17 & tmp16;
  local tmp19:4;
  tmp19 = 1;
  local tmp20:4;
  tmp20 = 32;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp18 << tmp22;
  local tmp24:8;
  tmp24 = tmp13 | tmp23;
  A4_bitsplit_Rdd32 = tmp24;
  local tmp25:8;
  tmp25 = 4294967295;
  local tmp26:4;
  tmp26 = 0;
  local tmp27:4;
  tmp27 = 32;
  local tmp28:4;
  tmp28 = tmp26 * tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp25 << tmp29;
  local tmp31:8;
  tmp31 = ~ tmp30;
  local tmp32:8;
  tmp32 = A4_bitsplit_Rdd32 & tmp31;
  local tmp33:4;
  tmp33 = 1;
  local tmp34:4;
  tmp34 = tmp33 << shamt;
  local tmp35:4;
  tmp35 = 1;
  local tmp36:4;
  tmp36 = tmp34 - tmp35;
  local tmp37:4;
  tmp37 = A4_bitsplit_Rs32 & tmp36;
  local tmp38:8;
  tmp38 = 4294967295;
  local tmp39:8;
  tmp39 = zext(tmp37);
  local tmp40:8;
  tmp40 = tmp39 & tmp38;
  local tmp41:4;
  tmp41 = 0;
  local tmp42:4;
  tmp42 = 32;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = tmp40 << tmp44;
  local tmp46:8;
  tmp46 = tmp32 | tmp45;
  A4_bitsplit_Rdd32 = tmp46;
}

:S4_extract S4_extract_Rd32 S4_extract_Rs32 S4_extract_u5 S4_extract_U5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S4_extract_Rd32 & S4_extract_Rs32 & S4_extract_u5 & S4_extract_U5 {
  local width:4;
  width = S4_extract_u5;
  local offset:4;
  offset = S4_extract_U5;
  local tmp0:4;
  tmp0 = S4_extract_Rs32;
  local tmp1:4;
  tmp1 = tmp0 >> offset;
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = tmp2 << width;
  local tmp4:4;
  tmp4 = 1;
  local tmp5:4;
  tmp5 = tmp3 - tmp4;
  local tmp6:4;
  tmp6 = tmp1 & tmp5;
  local tmp7:4;
  tmp7 = 1;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = width - tmp8;
  local tmp10:4;
  tmp10 = tmp7 << tmp9;
  local tmp11:4;
  tmp11 = tmp6 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 1;
  local tmp14:4;
  tmp14 = width - tmp13;
  local tmp15:4;
  tmp15 = tmp12 << tmp14;
  local tmp16:4;
  tmp16 = tmp11 - tmp15;
  S4_extract_Rd32 = tmp16;
}

:S2_extractu S2_extractu_Rd32 S2_extractu_Rs32 S2_extractu_u5 S2_extractu_U5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_extractu_Rd32 & S2_extractu_Rs32 & S2_extractu_u5 & S2_extractu_U5 {
  local width:4;
  width = S2_extractu_u5;
  local offset:4;
  offset = S2_extractu_U5;
  local tmp0:4;
  tmp0 = S2_extractu_Rs32;
  local tmp1:4;
  tmp1 = tmp0 >> offset;
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = tmp2 << width;
  local tmp4:4;
  tmp4 = 1;
  local tmp5:4;
  tmp5 = tmp3 - tmp4;
  local tmp6:4;
  tmp6 = tmp1 & tmp5;
  S2_extractu_Rd32 = tmp6;
}

:S2_insertp S2_insertp_Rxx32 S2_insertp_Rss32 S2_insertp_u6 S2_insertp_U6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_insertp_Rxx32 & S2_insertp_Rss32 & S2_insertp_u6 & S2_insertp_U6 {
  local width:4;
  width = S2_insertp_u6;
  local offset:4;
  offset = S2_insertp_U6;
  local tmp0:8;
  local tmp1:4;
  tmp1 = 1;
  tmp0 = zext(tmp1);
  local tmp2:8;
  tmp2 = zext(width);
  local tmp3:8;
  tmp3 = tmp0 << tmp2;
  local tmp4:4;
  tmp4 = 1;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = tmp3 - tmp5;
  local tmp7:8;
  tmp7 = zext(offset);
  local tmp8:8;
  tmp8 = tmp6 << tmp7;
  local tmp9:8;
  tmp9 = ~ tmp8;
  local tmp10:8;
  tmp10 = S2_insertp_Rxx32 & tmp9;
  S2_insertp_Rxx32 = tmp10;
  local tmp11:8;
  local tmp12:4;
  tmp12 = 1;
  tmp11 = zext(tmp12);
  local tmp13:8;
  tmp13 = zext(width);
  local tmp14:8;
  tmp14 = tmp11 << tmp13;
  local tmp15:4;
  tmp15 = 1;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 - tmp16;
  local tmp18:8;
  tmp18 = S2_insertp_Rss32 & tmp17;
  local tmp19:8;
  tmp19 = zext(offset);
  local tmp20:8;
  tmp20 = tmp18 << tmp19;
  local tmp21:8;
  tmp21 = S2_insertp_Rxx32 | tmp20;
  S2_insertp_Rxx32 = tmp21;
}

:S4_extractp S4_extractp_Rdd32 S4_extractp_Rss32 S4_extractp_u6 S4_extractp_U6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S4_extractp_Rdd32 & S4_extractp_Rss32 & S4_extractp_u6 & S4_extractp_U6 {
  local width:4;
  width = S4_extractp_u6;
  local offset:4;
  offset = S4_extractp_U6;
  local tmp0:8;
  tmp0 = S4_extractp_Rss32;
  local tmp1:8;
  tmp1 = zext(offset);
  local tmp2:8;
  tmp2 = tmp0 >> tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp3 << width;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = tmp4 - tmp5;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = tmp2 & tmp7;
  local tmp9:4;
  tmp9 = 1;
  local tmp10:4;
  tmp10 = 1;
  local tmp11:4;
  tmp11 = width - tmp10;
  local tmp12:4;
  tmp12 = tmp9 << tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = tmp8 ^ tmp13;
  local tmp15:4;
  tmp15 = 1;
  local tmp16:4;
  tmp16 = 1;
  local tmp17:4;
  tmp17 = width - tmp16;
  local tmp18:4;
  tmp18 = tmp15 << tmp17;
  local tmp19:8;
  tmp19 = zext(tmp18);
  local tmp20:8;
  tmp20 = tmp14 - tmp19;
  S4_extractp_Rdd32 = tmp20;
}

:S2_extractup S2_extractup_Rdd32 S2_extractup_Rss32 S2_extractup_u6 S2_extractup_U6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_extractup_Rdd32 & S2_extractup_Rss32 & S2_extractup_u6 & S2_extractup_U6 {
  local width:4;
  width = S2_extractup_u6;
  local offset:4;
  offset = S2_extractup_U6;
  local tmp0:8;
  tmp0 = S2_extractup_Rss32;
  local tmp1:8;
  tmp1 = zext(offset);
  local tmp2:8;
  tmp2 = tmp0 >> tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp3 << width;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = tmp4 - tmp5;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = tmp2 & tmp7;
  S2_extractup_Rdd32 = tmp8;
}

:S2_mask S2_mask_Rd32 S2_mask_u5 S2_mask_U5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 1 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_mask_Rd32 & S2_mask_u5 & S2_mask_U5 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = tmp0 << S2_mask_u5;
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = tmp1 - tmp2;
  local tmp4:4;
  tmp4 = tmp3 << S2_mask_U5;
  S2_mask_Rd32 = tmp4;
}

:S2_insert_rp S2_insert_rp_Rx32 S2_insert_rp_Rs32 S2_insert_rp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_insert_rp_Rx32 & S2_insert_rp_Rs32 & S2_insert_rp_Rtt32 {
  local width:4;
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 32;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = S2_insert_rp_Rtt32 s>> tmp5;
  local tmp7:8;
  tmp7 = 4294967295;
  local tmp8:8;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:4;
  tmp0 = zext(tmp1);
  local tmp9:4;
  tmp9 = 1;
  local tmp10:4;
  tmp10 = 6;
  local tmp11:4;
  tmp11 = tmp9 << tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = tmp11 - tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = tmp0 & tmp14;
  width = tmp15:4;
  local offset:4;
  local tmp16:8;
  local tmp17:4;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:4;
  tmp19 = 32;
  local tmp20:4;
  tmp20 = tmp18 * tmp19;
  local tmp21:8;
  tmp21 = zext(tmp20);
  local tmp22:8;
  tmp22 = S2_insert_rp_Rtt32 s>> tmp21;
  local tmp23:8;
  tmp23 = 4294967295;
  local tmp24:8;
  tmp24 = tmp22 & tmp23;
  tmp17 = tmp24:4;
  tmp16 = zext(tmp17);
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = 7;
  local tmp27:4;
  tmp27 = tmp25 << tmp26;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = tmp27 - tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp16 & tmp30;
  local tmp32:4;
  tmp32 = 1;
  local tmp33:4;
  tmp33 = 7;
  local tmp34:4;
  tmp34 = 1;
  local tmp35:4;
  tmp35 = tmp33 - tmp34;
  local tmp36:4;
  tmp36 = tmp32 << tmp35;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp31 ^ tmp37;
  local tmp39:4;
  tmp39 = 1;
  local tmp40:4;
  tmp40 = 7;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = tmp40 - tmp41;
  local tmp43:4;
  tmp43 = tmp39 << tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = tmp38 - tmp44;
  offset = tmp45:4;
  local mask:8;
  local tmp46:8;
  local tmp47:4;
  tmp47 = 1;
  tmp46 = zext(tmp47);
  local tmp48:8;
  tmp48 = zext(width);
  local tmp49:8;
  tmp49 = tmp46 << tmp48;
  local tmp50:4;
  tmp50 = 1;
  local tmp51:8;
  tmp51 = zext(tmp50);
  local tmp52:8;
  tmp52 = tmp49 - tmp51;
  mask = tmp52;
  local tmp53:4;
  tmp53 = 0;
  local tmp54:1;
  tmp54 = offset s< tmp53;
  local tmp55:1;
  tmp55 = tmp54;
  if (tmp55) goto <t_branch_57>;
  goto <f_branch_57>;
<t_branch_57>
  local tmp57:4;
  tmp57 = 0;
  S2_insert_rp_Rx32 = tmp57;
  goto <done_57>;
<f_branch_57>
  local tmp58:8;
  tmp58 = zext(offset);
  local tmp59:8;
  tmp59 = mask << tmp58;
  local tmp60:8;
  tmp60 = ~ tmp59;
  local tmp61:8;
  tmp61 = zext(S2_insert_rp_Rx32);
  local tmp62:8;
  tmp62 = tmp61 & tmp60;
  S2_insert_rp_Rx32 = tmp62:4;
  local tmp63:8;
  tmp63 = zext(S2_insert_rp_Rs32);
  local tmp64:8;
  tmp64 = tmp63 & mask;
  local tmp65:8;
  tmp65 = zext(offset);
  local tmp66:8;
  tmp66 = tmp64 << tmp65;
  local tmp67:8;
  tmp67 = zext(S2_insert_rp_Rx32);
  local tmp68:8;
  tmp68 = tmp67 | tmp66;
  S2_insert_rp_Rx32 = tmp68:4;
<done_57>
}

:S4_extract_rp S4_extract_rp_Rd32 S4_extract_rp_Rs32 S4_extract_rp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S4_extract_rp_Rd32 & S4_extract_rp_Rs32 & S4_extract_rp_Rtt32 {
  local width:4;
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 32;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = S4_extract_rp_Rtt32 s>> tmp5;
  local tmp7:8;
  tmp7 = 4294967295;
  local tmp8:8;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:4;
  tmp0 = zext(tmp1);
  local tmp9:4;
  tmp9 = 1;
  local tmp10:4;
  tmp10 = 6;
  local tmp11:4;
  tmp11 = tmp9 << tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = tmp11 - tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = tmp0 & tmp14;
  width = tmp15:4;
  local offset:4;
  local tmp16:8;
  local tmp17:4;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:4;
  tmp19 = 32;
  local tmp20:4;
  tmp20 = tmp18 * tmp19;
  local tmp21:8;
  tmp21 = zext(tmp20);
  local tmp22:8;
  tmp22 = S4_extract_rp_Rtt32 s>> tmp21;
  local tmp23:8;
  tmp23 = 4294967295;
  local tmp24:8;
  tmp24 = tmp22 & tmp23;
  tmp17 = tmp24:4;
  tmp16 = zext(tmp17);
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = 7;
  local tmp27:4;
  tmp27 = tmp25 << tmp26;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = tmp27 - tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp16 & tmp30;
  local tmp32:4;
  tmp32 = 1;
  local tmp33:4;
  tmp33 = 7;
  local tmp34:4;
  tmp34 = 1;
  local tmp35:4;
  tmp35 = tmp33 - tmp34;
  local tmp36:4;
  tmp36 = tmp32 << tmp35;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp31 ^ tmp37;
  local tmp39:4;
  tmp39 = 1;
  local tmp40:4;
  tmp40 = 7;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = tmp40 - tmp41;
  local tmp43:4;
  tmp43 = tmp39 << tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = tmp38 - tmp44;
  offset = tmp45:4;
  local tmp46:4;
  tmp46 = 0;
  local tmp47:1;
  tmp47 = offset s> tmp46;
  local tmp48:1;
  tmp48 = tmp47;
  if (tmp48) goto <t_branch_50>;
  goto <f_branch_50>;
<t_branch_50>
  local tmp50:8;
  local tmp51:4;
  local tmp52:8;
  local tmp53:4;
  tmp53 = S4_extract_rp_Rs32;
  tmp52 = sext(tmp53);
  tmp51 = tmp52:4;
  tmp50 = sext(tmp51);
  local tmp54:8;
  tmp54 = zext(offset);
  local tmp55:8;
  tmp55 = tmp50 >> tmp54;
  local tmp56:8;
  tmp56 = tmp55;
  goto <done_50>;
<f_branch_50>
  local tmp57:8;
  local tmp58:4;
  local tmp59:8;
  local tmp60:4;
  tmp60 = S4_extract_rp_Rs32;
  tmp59 = sext(tmp60);
  tmp58 = tmp59:4;
  tmp57 = sext(tmp58);
  local tmp61:8;
  tmp61 = zext(offset);
  local tmp62:8;
  tmp62 = tmp57 << tmp61;
  tmp56 = tmp62;
<done_50>
  local tmp63:4;
  tmp63 = 1;
  local tmp64:4;
  tmp64 = tmp63 << width;
  local tmp65:4;
  tmp65 = 1;
  local tmp66:4;
  tmp66 = tmp64 - tmp65;
  local tmp67:8;
  tmp67 = zext(tmp66);
  local tmp68:8;
  tmp68 = tmp56 & tmp67;
  local tmp69:4;
  tmp69 = 1;
  local tmp70:4;
  tmp70 = 1;
  local tmp71:4;
  tmp71 = width - tmp70;
  local tmp72:4;
  tmp72 = tmp69 << tmp71;
  local tmp73:8;
  tmp73 = zext(tmp72);
  local tmp74:8;
  tmp74 = tmp68 ^ tmp73;
  local tmp75:4;
  tmp75 = 1;
  local tmp76:4;
  tmp76 = 1;
  local tmp77:4;
  tmp77 = width - tmp76;
  local tmp78:4;
  tmp78 = tmp75 << tmp77;
  local tmp79:8;
  tmp79 = zext(tmp78);
  local tmp80:8;
  tmp80 = tmp74 - tmp79;
  S4_extract_rp_Rd32 = tmp80:4;
}

:S2_extractu_rp S2_extractu_rp_Rd32 S2_extractu_rp_Rs32 S2_extractu_rp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_extractu_rp_Rd32 & S2_extractu_rp_Rs32 & S2_extractu_rp_Rtt32 {
  local width:4;
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 32;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = S2_extractu_rp_Rtt32 s>> tmp5;
  local tmp7:8;
  tmp7 = 4294967295;
  local tmp8:8;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:4;
  tmp0 = zext(tmp1);
  local tmp9:4;
  tmp9 = 1;
  local tmp10:4;
  tmp10 = 6;
  local tmp11:4;
  tmp11 = tmp9 << tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = tmp11 - tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = tmp0 & tmp14;
  width = tmp15:4;
  local offset:4;
  local tmp16:8;
  local tmp17:4;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:4;
  tmp19 = 32;
  local tmp20:4;
  tmp20 = tmp18 * tmp19;
  local tmp21:8;
  tmp21 = zext(tmp20);
  local tmp22:8;
  tmp22 = S2_extractu_rp_Rtt32 s>> tmp21;
  local tmp23:8;
  tmp23 = 4294967295;
  local tmp24:8;
  tmp24 = tmp22 & tmp23;
  tmp17 = tmp24:4;
  tmp16 = zext(tmp17);
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = 7;
  local tmp27:4;
  tmp27 = tmp25 << tmp26;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = tmp27 - tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp16 & tmp30;
  local tmp32:4;
  tmp32 = 1;
  local tmp33:4;
  tmp33 = 7;
  local tmp34:4;
  tmp34 = 1;
  local tmp35:4;
  tmp35 = tmp33 - tmp34;
  local tmp36:4;
  tmp36 = tmp32 << tmp35;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp31 ^ tmp37;
  local tmp39:4;
  tmp39 = 1;
  local tmp40:4;
  tmp40 = 7;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = tmp40 - tmp41;
  local tmp43:4;
  tmp43 = tmp39 << tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = tmp38 - tmp44;
  offset = tmp45:4;
  local tmp46:4;
  tmp46 = 0;
  local tmp47:1;
  tmp47 = offset s> tmp46;
  local tmp48:1;
  tmp48 = tmp47;
  if (tmp48) goto <t_branch_50>;
  goto <f_branch_50>;
<t_branch_50>
  local tmp50:8;
  local tmp51:4;
  local tmp52:8;
  local tmp53:4;
  tmp53 = S2_extractu_rp_Rs32;
  tmp52 = sext(tmp53);
  tmp51 = tmp52:4;
  tmp50 = sext(tmp51);
  local tmp54:8;
  tmp54 = zext(offset);
  local tmp55:8;
  tmp55 = tmp50 >> tmp54;
  local tmp56:8;
  tmp56 = tmp55;
  goto <done_50>;
<f_branch_50>
  local tmp57:8;
  local tmp58:4;
  local tmp59:8;
  local tmp60:4;
  tmp60 = S2_extractu_rp_Rs32;
  tmp59 = sext(tmp60);
  tmp58 = tmp59:4;
  tmp57 = sext(tmp58);
  local tmp61:8;
  tmp61 = zext(offset);
  local tmp62:8;
  tmp62 = tmp57 << tmp61;
  tmp56 = tmp62;
<done_50>
  local tmp63:4;
  tmp63 = 1;
  local tmp64:4;
  tmp64 = tmp63 << width;
  local tmp65:4;
  tmp65 = 1;
  local tmp66:4;
  tmp66 = tmp64 - tmp65;
  local tmp67:8;
  tmp67 = zext(tmp66);
  local tmp68:8;
  tmp68 = tmp56 & tmp67;
  S2_extractu_rp_Rd32 = tmp68:4;
}

:S2_insertp_rp S2_insertp_rp_Rxx32 S2_insertp_rp_Rss32 S2_insertp_rp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_insertp_rp_Rxx32 & S2_insertp_rp_Rss32 & S2_insertp_rp_Rtt32 {
  local width:4;
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 32;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = S2_insertp_rp_Rtt32 s>> tmp5;
  local tmp7:8;
  tmp7 = 4294967295;
  local tmp8:8;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:4;
  tmp0 = zext(tmp1);
  local tmp9:4;
  tmp9 = 1;
  local tmp10:4;
  tmp10 = 6;
  local tmp11:4;
  tmp11 = tmp9 << tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = tmp11 - tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = tmp0 & tmp14;
  width = tmp15:4;
  local offset:4;
  local tmp16:8;
  local tmp17:4;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:4;
  tmp19 = 32;
  local tmp20:4;
  tmp20 = tmp18 * tmp19;
  local tmp21:8;
  tmp21 = zext(tmp20);
  local tmp22:8;
  tmp22 = S2_insertp_rp_Rtt32 s>> tmp21;
  local tmp23:8;
  tmp23 = 4294967295;
  local tmp24:8;
  tmp24 = tmp22 & tmp23;
  tmp17 = tmp24:4;
  tmp16 = zext(tmp17);
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = 7;
  local tmp27:4;
  tmp27 = tmp25 << tmp26;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = tmp27 - tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp16 & tmp30;
  local tmp32:4;
  tmp32 = 1;
  local tmp33:4;
  tmp33 = 7;
  local tmp34:4;
  tmp34 = 1;
  local tmp35:4;
  tmp35 = tmp33 - tmp34;
  local tmp36:4;
  tmp36 = tmp32 << tmp35;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp31 ^ tmp37;
  local tmp39:4;
  tmp39 = 1;
  local tmp40:4;
  tmp40 = 7;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = tmp40 - tmp41;
  local tmp43:4;
  tmp43 = tmp39 << tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = tmp38 - tmp44;
  offset = tmp45:4;
  local mask:8;
  local tmp46:8;
  local tmp47:4;
  tmp47 = 1;
  tmp46 = zext(tmp47);
  local tmp48:8;
  tmp48 = zext(width);
  local tmp49:8;
  tmp49 = tmp46 << tmp48;
  local tmp50:4;
  tmp50 = 1;
  local tmp51:8;
  tmp51 = zext(tmp50);
  local tmp52:8;
  tmp52 = tmp49 - tmp51;
  mask = tmp52;
  local tmp53:4;
  tmp53 = 0;
  local tmp54:1;
  tmp54 = offset s< tmp53;
  local tmp55:1;
  tmp55 = tmp54;
  if (tmp55) goto <t_branch_57>;
  goto <f_branch_57>;
<t_branch_57>
  local tmp57:4;
  tmp57 = 0;
  S2_insertp_rp_Rxx32 = zext(tmp57);
  goto <done_57>;
<f_branch_57>
  local tmp58:8;
  tmp58 = zext(offset);
  local tmp59:8;
  tmp59 = mask << tmp58;
  local tmp60:8;
  tmp60 = ~ tmp59;
  local tmp61:8;
  tmp61 = S2_insertp_rp_Rxx32 & tmp60;
  S2_insertp_rp_Rxx32 = tmp61;
  local tmp62:8;
  tmp62 = S2_insertp_rp_Rss32 & mask;
  local tmp63:8;
  tmp63 = zext(offset);
  local tmp64:8;
  tmp64 = tmp62 << tmp63;
  local tmp65:8;
  tmp65 = S2_insertp_rp_Rxx32 | tmp64;
  S2_insertp_rp_Rxx32 = tmp65;
<done_57>
}

:S4_extractp_rp S4_extractp_rp_Rdd32 S4_extractp_rp_Rss32 S4_extractp_rp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S4_extractp_rp_Rdd32 & S4_extractp_rp_Rss32 & S4_extractp_rp_Rtt32 {
  local width:4;
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 32;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = S4_extractp_rp_Rtt32 s>> tmp5;
  local tmp7:8;
  tmp7 = 4294967295;
  local tmp8:8;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:4;
  tmp0 = zext(tmp1);
  local tmp9:4;
  tmp9 = 1;
  local tmp10:4;
  tmp10 = 6;
  local tmp11:4;
  tmp11 = tmp9 << tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = tmp11 - tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = tmp0 & tmp14;
  width = tmp15:4;
  local offset:4;
  local tmp16:8;
  local tmp17:4;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:4;
  tmp19 = 32;
  local tmp20:4;
  tmp20 = tmp18 * tmp19;
  local tmp21:8;
  tmp21 = zext(tmp20);
  local tmp22:8;
  tmp22 = S4_extractp_rp_Rtt32 s>> tmp21;
  local tmp23:8;
  tmp23 = 4294967295;
  local tmp24:8;
  tmp24 = tmp22 & tmp23;
  tmp17 = tmp24:4;
  tmp16 = zext(tmp17);
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = 7;
  local tmp27:4;
  tmp27 = tmp25 << tmp26;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = tmp27 - tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp16 & tmp30;
  local tmp32:4;
  tmp32 = 1;
  local tmp33:4;
  tmp33 = 7;
  local tmp34:4;
  tmp34 = 1;
  local tmp35:4;
  tmp35 = tmp33 - tmp34;
  local tmp36:4;
  tmp36 = tmp32 << tmp35;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp31 ^ tmp37;
  local tmp39:4;
  tmp39 = 1;
  local tmp40:4;
  tmp40 = 7;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = tmp40 - tmp41;
  local tmp43:4;
  tmp43 = tmp39 << tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = tmp38 - tmp44;
  offset = tmp45:4;
  local tmp46:4;
  tmp46 = 0;
  local tmp47:1;
  tmp47 = offset s> tmp46;
  local tmp48:1;
  tmp48 = tmp47;
  if (tmp48) goto <t_branch_50>;
  goto <f_branch_50>;
<t_branch_50>
  local tmp50:8;
  local tmp51:8;
  tmp51 = S4_extractp_rp_Rss32;
  tmp50 = tmp51;
  local tmp52:8;
  tmp52 = zext(offset);
  local tmp53:8;
  tmp53 = tmp50 >> tmp52;
  local tmp54:8;
  tmp54 = tmp53;
  goto <done_50>;
<f_branch_50>
  local tmp55:8;
  local tmp56:8;
  tmp56 = S4_extractp_rp_Rss32;
  tmp55 = tmp56;
  local tmp57:8;
  tmp57 = zext(offset);
  local tmp58:8;
  tmp58 = tmp55 << tmp57;
  tmp54 = tmp58;
<done_50>
  local tmp59:4;
  tmp59 = 1;
  local tmp60:4;
  tmp60 = tmp59 << width;
  local tmp61:4;
  tmp61 = 1;
  local tmp62:4;
  tmp62 = tmp60 - tmp61;
  local tmp63:8;
  tmp63 = zext(tmp62);
  local tmp64:8;
  tmp64 = tmp54 & tmp63;
  local tmp65:4;
  tmp65 = 1;
  local tmp66:4;
  tmp66 = 1;
  local tmp67:4;
  tmp67 = width - tmp66;
  local tmp68:4;
  tmp68 = tmp65 << tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = tmp64 ^ tmp69;
  local tmp71:4;
  tmp71 = 1;
  local tmp72:4;
  tmp72 = 1;
  local tmp73:4;
  tmp73 = width - tmp72;
  local tmp74:4;
  tmp74 = tmp71 << tmp73;
  local tmp75:8;
  tmp75 = zext(tmp74);
  local tmp76:8;
  tmp76 = tmp70 - tmp75;
  S4_extractp_rp_Rdd32 = tmp76;
}

:S2_extractup_rp S2_extractup_rp_Rdd32 S2_extractup_rp_Rss32 S2_extractup_rp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_extractup_rp_Rdd32 & S2_extractup_rp_Rss32 & S2_extractup_rp_Rtt32 {
  local width:4;
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 32;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = S2_extractup_rp_Rtt32 s>> tmp5;
  local tmp7:8;
  tmp7 = 4294967295;
  local tmp8:8;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:4;
  tmp0 = zext(tmp1);
  local tmp9:4;
  tmp9 = 1;
  local tmp10:4;
  tmp10 = 6;
  local tmp11:4;
  tmp11 = tmp9 << tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = tmp11 - tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = tmp0 & tmp14;
  width = tmp15:4;
  local offset:4;
  local tmp16:8;
  local tmp17:4;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:4;
  tmp19 = 32;
  local tmp20:4;
  tmp20 = tmp18 * tmp19;
  local tmp21:8;
  tmp21 = zext(tmp20);
  local tmp22:8;
  tmp22 = S2_extractup_rp_Rtt32 s>> tmp21;
  local tmp23:8;
  tmp23 = 4294967295;
  local tmp24:8;
  tmp24 = tmp22 & tmp23;
  tmp17 = tmp24:4;
  tmp16 = zext(tmp17);
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = 7;
  local tmp27:4;
  tmp27 = tmp25 << tmp26;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = tmp27 - tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp16 & tmp30;
  local tmp32:4;
  tmp32 = 1;
  local tmp33:4;
  tmp33 = 7;
  local tmp34:4;
  tmp34 = 1;
  local tmp35:4;
  tmp35 = tmp33 - tmp34;
  local tmp36:4;
  tmp36 = tmp32 << tmp35;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp31 ^ tmp37;
  local tmp39:4;
  tmp39 = 1;
  local tmp40:4;
  tmp40 = 7;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = tmp40 - tmp41;
  local tmp43:4;
  tmp43 = tmp39 << tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = tmp38 - tmp44;
  offset = tmp45:4;
  local tmp46:4;
  tmp46 = 0;
  local tmp47:1;
  tmp47 = offset s> tmp46;
  local tmp48:1;
  tmp48 = tmp47;
  if (tmp48) goto <t_branch_50>;
  goto <f_branch_50>;
<t_branch_50>
  local tmp50:8;
  local tmp51:8;
  tmp51 = S2_extractup_rp_Rss32;
  tmp50 = tmp51;
  local tmp52:8;
  tmp52 = zext(offset);
  local tmp53:8;
  tmp53 = tmp50 >> tmp52;
  local tmp54:8;
  tmp54 = tmp53;
  goto <done_50>;
<f_branch_50>
  local tmp55:8;
  local tmp56:8;
  tmp56 = S2_extractup_rp_Rss32;
  tmp55 = tmp56;
  local tmp57:8;
  tmp57 = zext(offset);
  local tmp58:8;
  tmp58 = tmp55 << tmp57;
  tmp54 = tmp58;
<done_50>
  local tmp59:4;
  tmp59 = 1;
  local tmp60:4;
  tmp60 = tmp59 << width;
  local tmp61:4;
  tmp61 = 1;
  local tmp62:4;
  tmp62 = tmp60 - tmp61;
  local tmp63:8;
  tmp63 = zext(tmp62);
  local tmp64:8;
  tmp64 = tmp54 & tmp63;
  S2_extractup_rp_Rdd32 = tmp64;
}

:S2_tstbit_i S2_tstbit_i_Pd4 S2_tstbit_i_Rs32 S2_tstbit_i_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_tstbit_i_Pd4 & S2_tstbit_i_Rs32 & S2_tstbit_i_u5 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = tmp0 << S2_tstbit_i_u5;
  local tmp2:4;
  tmp2 = S2_tstbit_i_Rs32 & tmp1;
  local tmp3:4;
  tmp3 = 0;
  local tmp4:1;
  tmp4 = tmp2 != tmp3;
  S2_tstbit_i_Pd4 = tmp4;
}

:S4_ntstbit_i S4_ntstbit_i_Pd4 S4_ntstbit_i_Rs32 S4_ntstbit_i_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S4_ntstbit_i_Pd4 & S4_ntstbit_i_Rs32 & S4_ntstbit_i_u5 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = tmp0 << S4_ntstbit_i_u5;
  local tmp2:4;
  tmp2 = S4_ntstbit_i_Rs32 & tmp1;
  local tmp3:4;
  tmp3 = 0;
  local tmp4:1;
  tmp4 = tmp2 == tmp3;
  S4_ntstbit_i_Pd4 = tmp4;
}

:S2_setbit_i S2_setbit_i_Rd32 S2_setbit_i_Rs32 S2_setbit_i_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_setbit_i_Rd32 & S2_setbit_i_Rs32 & S2_setbit_i_u5 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = tmp0 << S2_setbit_i_u5;
  local tmp2:4;
  tmp2 = S2_setbit_i_Rs32 | tmp1;
  S2_setbit_i_Rd32 = tmp2;
}

:S2_togglebit_i S2_togglebit_i_Rd32 S2_togglebit_i_Rs32 S2_togglebit_i_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_togglebit_i_Rd32 & S2_togglebit_i_Rs32 & S2_togglebit_i_u5 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = tmp0 << S2_togglebit_i_u5;
  local tmp2:4;
  tmp2 = S2_togglebit_i_Rs32 ^ tmp1;
  S2_togglebit_i_Rd32 = tmp2;
}

:S2_clrbit_i S2_clrbit_i_Rd32 S2_clrbit_i_Rs32 S2_clrbit_i_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_clrbit_i_Rd32 & S2_clrbit_i_Rs32 & S2_clrbit_i_u5 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = tmp0 << S2_clrbit_i_u5;
  local tmp2:4;
  tmp2 = ~ tmp1;
  local tmp3:4;
  tmp3 = S2_clrbit_i_Rs32 & tmp2;
  S2_clrbit_i_Rd32 = tmp3;
}

:S2_tstbit_r S2_tstbit_r_Pd4 S2_tstbit_r_Rs32 S2_tstbit_r_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_tstbit_r_Pd4 & S2_tstbit_r_Rs32 & S2_tstbit_r_Rt32 {
  local tmp0:8;
  local tmp1:4;
  tmp1 = S2_tstbit_r_Rs32;
  tmp0 = sext(tmp1);
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 7;
  local tmp4:4;
  tmp4 = tmp2 << tmp3;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = tmp4 - tmp5;
  local tmp7:4;
  tmp7 = S2_tstbit_r_Rt32 & tmp6;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 7;
  local tmp10:4;
  tmp10 = 1;
  local tmp11:4;
  tmp11 = tmp9 - tmp10;
  local tmp12:4;
  tmp12 = tmp8 << tmp11;
  local tmp13:4;
  tmp13 = tmp7 ^ tmp12;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = 7;
  local tmp16:4;
  tmp16 = 1;
  local tmp17:4;
  tmp17 = tmp15 - tmp16;
  local tmp18:4;
  tmp18 = tmp14 << tmp17;
  local tmp19:4;
  tmp19 = tmp13 - tmp18;
  local tmp20:4;
  tmp20 = 0;
  local tmp21:1;
  tmp21 = tmp19 s> tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp0 & tmp22;
  local tmp24:1;
  tmp24 = tmp23:1;
  if (tmp24) goto <t_branch_26>;
  goto <f_branch_26>;
<t_branch_26>
  local tmp26:8;
  local tmp27:4;
  local tmp28:4;
  tmp28 = 1;
  tmp27 = tmp28;
  tmp26 = sext(tmp27);
  local tmp29:4;
  tmp29 = 1;
  local tmp30:4;
  tmp30 = 7;
  local tmp31:4;
  tmp31 = tmp29 << tmp30;
  local tmp32:4;
  tmp32 = 1;
  local tmp33:4;
  tmp33 = tmp31 - tmp32;
  local tmp34:4;
  tmp34 = S2_tstbit_r_Rt32 & tmp33;
  local tmp35:4;
  tmp35 = 1;
  local tmp36:4;
  tmp36 = 7;
  local tmp37:4;
  tmp37 = 1;
  local tmp38:4;
  tmp38 = tmp36 - tmp37;
  local tmp39:4;
  tmp39 = tmp35 << tmp38;
  local tmp40:4;
  tmp40 = tmp34 ^ tmp39;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = 7;
  local tmp43:4;
  tmp43 = 1;
  local tmp44:4;
  tmp44 = tmp42 - tmp43;
  local tmp45:4;
  tmp45 = tmp41 << tmp44;
  local tmp46:4;
  tmp46 = tmp40 - tmp45;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp26 << tmp47;
  local tmp49:8;
  tmp49 = tmp48;
  goto <done_26>;
<f_branch_26>
  local tmp50:8;
  local tmp51:4;
  local tmp52:4;
  tmp52 = 1;
  tmp51 = tmp52;
  tmp50 = sext(tmp51);
  local tmp53:4;
  tmp53 = 1;
  local tmp54:4;
  tmp54 = 7;
  local tmp55:4;
  tmp55 = tmp53 << tmp54;
  local tmp56:4;
  tmp56 = 1;
  local tmp57:4;
  tmp57 = tmp55 - tmp56;
  local tmp58:4;
  tmp58 = S2_tstbit_r_Rt32 & tmp57;
  local tmp59:4;
  tmp59 = 1;
  local tmp60:4;
  tmp60 = 7;
  local tmp61:4;
  tmp61 = 1;
  local tmp62:4;
  tmp62 = tmp60 - tmp61;
  local tmp63:4;
  tmp63 = tmp59 << tmp62;
  local tmp64:4;
  tmp64 = tmp58 ^ tmp63;
  local tmp65:4;
  tmp65 = 1;
  local tmp66:4;
  tmp66 = 7;
  local tmp67:4;
  tmp67 = 1;
  local tmp68:4;
  tmp68 = tmp66 - tmp67;
  local tmp69:4;
  tmp69 = tmp65 << tmp68;
  local tmp70:4;
  tmp70 = tmp64 - tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = tmp50 >> tmp71;
  tmp49 = tmp72;
<done_26>
  local tmp73:4;
  tmp73 = 0;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:1;
  tmp75 = tmp49 != tmp74;
  S2_tstbit_r_Pd4 = tmp75;
}

:S4_ntstbit_r S4_ntstbit_r_Pd4 S4_ntstbit_r_Rs32 S4_ntstbit_r_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S4_ntstbit_r_Pd4 & S4_ntstbit_r_Rs32 & S4_ntstbit_r_Rt32 {
  local tmp0:8;
  local tmp1:4;
  tmp1 = S4_ntstbit_r_Rs32;
  tmp0 = sext(tmp1);
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 7;
  local tmp4:4;
  tmp4 = tmp2 << tmp3;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = tmp4 - tmp5;
  local tmp7:4;
  tmp7 = S4_ntstbit_r_Rt32 & tmp6;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 7;
  local tmp10:4;
  tmp10 = 1;
  local tmp11:4;
  tmp11 = tmp9 - tmp10;
  local tmp12:4;
  tmp12 = tmp8 << tmp11;
  local tmp13:4;
  tmp13 = tmp7 ^ tmp12;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = 7;
  local tmp16:4;
  tmp16 = 1;
  local tmp17:4;
  tmp17 = tmp15 - tmp16;
  local tmp18:4;
  tmp18 = tmp14 << tmp17;
  local tmp19:4;
  tmp19 = tmp13 - tmp18;
  local tmp20:4;
  tmp20 = 0;
  local tmp21:1;
  tmp21 = tmp19 s> tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp0 & tmp22;
  local tmp24:1;
  tmp24 = tmp23:1;
  if (tmp24) goto <t_branch_26>;
  goto <f_branch_26>;
<t_branch_26>
  local tmp26:8;
  local tmp27:4;
  local tmp28:4;
  tmp28 = 1;
  tmp27 = tmp28;
  tmp26 = sext(tmp27);
  local tmp29:4;
  tmp29 = 1;
  local tmp30:4;
  tmp30 = 7;
  local tmp31:4;
  tmp31 = tmp29 << tmp30;
  local tmp32:4;
  tmp32 = 1;
  local tmp33:4;
  tmp33 = tmp31 - tmp32;
  local tmp34:4;
  tmp34 = S4_ntstbit_r_Rt32 & tmp33;
  local tmp35:4;
  tmp35 = 1;
  local tmp36:4;
  tmp36 = 7;
  local tmp37:4;
  tmp37 = 1;
  local tmp38:4;
  tmp38 = tmp36 - tmp37;
  local tmp39:4;
  tmp39 = tmp35 << tmp38;
  local tmp40:4;
  tmp40 = tmp34 ^ tmp39;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = 7;
  local tmp43:4;
  tmp43 = 1;
  local tmp44:4;
  tmp44 = tmp42 - tmp43;
  local tmp45:4;
  tmp45 = tmp41 << tmp44;
  local tmp46:4;
  tmp46 = tmp40 - tmp45;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp26 << tmp47;
  local tmp49:8;
  tmp49 = tmp48;
  goto <done_26>;
<f_branch_26>
  local tmp50:8;
  local tmp51:4;
  local tmp52:4;
  tmp52 = 1;
  tmp51 = tmp52;
  tmp50 = sext(tmp51);
  local tmp53:4;
  tmp53 = 1;
  local tmp54:4;
  tmp54 = 7;
  local tmp55:4;
  tmp55 = tmp53 << tmp54;
  local tmp56:4;
  tmp56 = 1;
  local tmp57:4;
  tmp57 = tmp55 - tmp56;
  local tmp58:4;
  tmp58 = S4_ntstbit_r_Rt32 & tmp57;
  local tmp59:4;
  tmp59 = 1;
  local tmp60:4;
  tmp60 = 7;
  local tmp61:4;
  tmp61 = 1;
  local tmp62:4;
  tmp62 = tmp60 - tmp61;
  local tmp63:4;
  tmp63 = tmp59 << tmp62;
  local tmp64:4;
  tmp64 = tmp58 ^ tmp63;
  local tmp65:4;
  tmp65 = 1;
  local tmp66:4;
  tmp66 = 7;
  local tmp67:4;
  tmp67 = 1;
  local tmp68:4;
  tmp68 = tmp66 - tmp67;
  local tmp69:4;
  tmp69 = tmp65 << tmp68;
  local tmp70:4;
  tmp70 = tmp64 - tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = tmp50 >> tmp71;
  tmp49 = tmp72;
<done_26>
  local tmp73:4;
  tmp73 = 0;
  local tmp74:8;
  tmp74 = zext(tmp73);
  local tmp75:1;
  tmp75 = tmp49 == tmp74;
  S4_ntstbit_r_Pd4 = tmp75;
}

:S2_setbit_r S2_setbit_r_Rd32 S2_setbit_r_Rs32 S2_setbit_r_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_setbit_r_Rd32 & S2_setbit_r_Rs32 & S2_setbit_r_Rt32 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_setbit_r_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = tmp17 s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_setbit_r_Rs32 | tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  local tmp26:4;
  tmp26 = 1;
  tmp25 = tmp26;
  tmp24 = sext(tmp25);
  local tmp27:4;
  tmp27 = 1;
  local tmp28:4;
  tmp28 = 7;
  local tmp29:4;
  tmp29 = tmp27 << tmp28;
  local tmp30:4;
  tmp30 = 1;
  local tmp31:4;
  tmp31 = tmp29 - tmp30;
  local tmp32:4;
  tmp32 = S2_setbit_r_Rt32 & tmp31;
  local tmp33:4;
  tmp33 = 1;
  local tmp34:4;
  tmp34 = 7;
  local tmp35:4;
  tmp35 = 1;
  local tmp36:4;
  tmp36 = tmp34 - tmp35;
  local tmp37:4;
  tmp37 = tmp33 << tmp36;
  local tmp38:4;
  tmp38 = tmp32 ^ tmp37;
  local tmp39:4;
  tmp39 = 1;
  local tmp40:4;
  tmp40 = 7;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = tmp40 - tmp41;
  local tmp43:4;
  tmp43 = tmp39 << tmp42;
  local tmp44:4;
  tmp44 = tmp38 - tmp43;
  local tmp45:8;
  tmp45 = zext(tmp44);
  local tmp46:8;
  tmp46 = tmp24 << tmp45;
  local tmp47:8;
  tmp47 = tmp46;
  goto <done_24>;
<f_branch_24>
  local tmp48:8;
  local tmp49:4;
  local tmp50:4;
  tmp50 = 1;
  tmp49 = tmp50;
  tmp48 = sext(tmp49);
  local tmp51:4;
  tmp51 = 1;
  local tmp52:4;
  tmp52 = 7;
  local tmp53:4;
  tmp53 = tmp51 << tmp52;
  local tmp54:4;
  tmp54 = 1;
  local tmp55:4;
  tmp55 = tmp53 - tmp54;
  local tmp56:4;
  tmp56 = S2_setbit_r_Rt32 & tmp55;
  local tmp57:4;
  tmp57 = 1;
  local tmp58:4;
  tmp58 = 7;
  local tmp59:4;
  tmp59 = 1;
  local tmp60:4;
  tmp60 = tmp58 - tmp59;
  local tmp61:4;
  tmp61 = tmp57 << tmp60;
  local tmp62:4;
  tmp62 = tmp56 ^ tmp61;
  local tmp63:4;
  tmp63 = 1;
  local tmp64:4;
  tmp64 = 7;
  local tmp65:4;
  tmp65 = 1;
  local tmp66:4;
  tmp66 = tmp64 - tmp65;
  local tmp67:4;
  tmp67 = tmp63 << tmp66;
  local tmp68:4;
  tmp68 = tmp62 - tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = tmp48 >> tmp69;
  tmp47 = tmp70;
<done_24>
  S2_setbit_r_Rd32 = tmp47:4;
}

:S2_togglebit_r S2_togglebit_r_Rd32 S2_togglebit_r_Rs32 S2_togglebit_r_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_togglebit_r_Rd32 & S2_togglebit_r_Rs32 & S2_togglebit_r_Rt32 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_togglebit_r_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = tmp17 s> tmp18;
  local tmp20:4;
  tmp20 = zext(tmp19);
  local tmp21:4;
  tmp21 = S2_togglebit_r_Rs32 ^ tmp20;
  local tmp22:1;
  tmp22 = tmp21:1;
  if (tmp22) goto <t_branch_24>;
  goto <f_branch_24>;
<t_branch_24>
  local tmp24:8;
  local tmp25:4;
  local tmp26:4;
  tmp26 = 1;
  tmp25 = tmp26;
  tmp24 = sext(tmp25);
  local tmp27:4;
  tmp27 = 1;
  local tmp28:4;
  tmp28 = 7;
  local tmp29:4;
  tmp29 = tmp27 << tmp28;
  local tmp30:4;
  tmp30 = 1;
  local tmp31:4;
  tmp31 = tmp29 - tmp30;
  local tmp32:4;
  tmp32 = S2_togglebit_r_Rt32 & tmp31;
  local tmp33:4;
  tmp33 = 1;
  local tmp34:4;
  tmp34 = 7;
  local tmp35:4;
  tmp35 = 1;
  local tmp36:4;
  tmp36 = tmp34 - tmp35;
  local tmp37:4;
  tmp37 = tmp33 << tmp36;
  local tmp38:4;
  tmp38 = tmp32 ^ tmp37;
  local tmp39:4;
  tmp39 = 1;
  local tmp40:4;
  tmp40 = 7;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = tmp40 - tmp41;
  local tmp43:4;
  tmp43 = tmp39 << tmp42;
  local tmp44:4;
  tmp44 = tmp38 - tmp43;
  local tmp45:8;
  tmp45 = zext(tmp44);
  local tmp46:8;
  tmp46 = tmp24 << tmp45;
  local tmp47:8;
  tmp47 = tmp46;
  goto <done_24>;
<f_branch_24>
  local tmp48:8;
  local tmp49:4;
  local tmp50:4;
  tmp50 = 1;
  tmp49 = tmp50;
  tmp48 = sext(tmp49);
  local tmp51:4;
  tmp51 = 1;
  local tmp52:4;
  tmp52 = 7;
  local tmp53:4;
  tmp53 = tmp51 << tmp52;
  local tmp54:4;
  tmp54 = 1;
  local tmp55:4;
  tmp55 = tmp53 - tmp54;
  local tmp56:4;
  tmp56 = S2_togglebit_r_Rt32 & tmp55;
  local tmp57:4;
  tmp57 = 1;
  local tmp58:4;
  tmp58 = 7;
  local tmp59:4;
  tmp59 = 1;
  local tmp60:4;
  tmp60 = tmp58 - tmp59;
  local tmp61:4;
  tmp61 = tmp57 << tmp60;
  local tmp62:4;
  tmp62 = tmp56 ^ tmp61;
  local tmp63:4;
  tmp63 = 1;
  local tmp64:4;
  tmp64 = 7;
  local tmp65:4;
  tmp65 = 1;
  local tmp66:4;
  tmp66 = tmp64 - tmp65;
  local tmp67:4;
  tmp67 = tmp63 << tmp66;
  local tmp68:4;
  tmp68 = tmp62 - tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = tmp48 >> tmp69;
  tmp47 = tmp70;
<done_24>
  S2_togglebit_r_Rd32 = tmp47:4;
}

:S2_clrbit_r S2_clrbit_r_Rd32 S2_clrbit_r_Rs32 S2_clrbit_r_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_clrbit_r_Rd32 & S2_clrbit_r_Rs32 & S2_clrbit_r_Rt32 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 7;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = S2_clrbit_r_Rt32 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 7;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 7;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:1;
  tmp19 = tmp17 s> tmp18;
  local tmp20:1;
  tmp20 = tmp19;
  if (tmp20) goto <t_branch_22>;
  goto <f_branch_22>;
<t_branch_22>
  local tmp22:8;
  local tmp23:4;
  local tmp24:4;
  tmp24 = 1;
  tmp23 = tmp24;
  tmp22 = sext(tmp23);
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = 7;
  local tmp27:4;
  tmp27 = tmp25 << tmp26;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = tmp27 - tmp28;
  local tmp30:4;
  tmp30 = S2_clrbit_r_Rt32 & tmp29;
  local tmp31:4;
  tmp31 = 1;
  local tmp32:4;
  tmp32 = 7;
  local tmp33:4;
  tmp33 = 1;
  local tmp34:4;
  tmp34 = tmp32 - tmp33;
  local tmp35:4;
  tmp35 = tmp31 << tmp34;
  local tmp36:4;
  tmp36 = tmp30 ^ tmp35;
  local tmp37:4;
  tmp37 = 1;
  local tmp38:4;
  tmp38 = 7;
  local tmp39:4;
  tmp39 = 1;
  local tmp40:4;
  tmp40 = tmp38 - tmp39;
  local tmp41:4;
  tmp41 = tmp37 << tmp40;
  local tmp42:4;
  tmp42 = tmp36 - tmp41;
  local tmp43:8;
  tmp43 = zext(tmp42);
  local tmp44:8;
  tmp44 = tmp22 << tmp43;
  local tmp45:8;
  tmp45 = tmp44;
  goto <done_22>;
<f_branch_22>
  local tmp46:8;
  local tmp47:4;
  local tmp48:4;
  tmp48 = 1;
  tmp47 = tmp48;
  tmp46 = sext(tmp47);
  local tmp49:4;
  tmp49 = 1;
  local tmp50:4;
  tmp50 = 7;
  local tmp51:4;
  tmp51 = tmp49 << tmp50;
  local tmp52:4;
  tmp52 = 1;
  local tmp53:4;
  tmp53 = tmp51 - tmp52;
  local tmp54:4;
  tmp54 = S2_clrbit_r_Rt32 & tmp53;
  local tmp55:4;
  tmp55 = 1;
  local tmp56:4;
  tmp56 = 7;
  local tmp57:4;
  tmp57 = 1;
  local tmp58:4;
  tmp58 = tmp56 - tmp57;
  local tmp59:4;
  tmp59 = tmp55 << tmp58;
  local tmp60:4;
  tmp60 = tmp54 ^ tmp59;
  local tmp61:4;
  tmp61 = 1;
  local tmp62:4;
  tmp62 = 7;
  local tmp63:4;
  tmp63 = 1;
  local tmp64:4;
  tmp64 = tmp62 - tmp63;
  local tmp65:4;
  tmp65 = tmp61 << tmp64;
  local tmp66:4;
  tmp66 = tmp60 - tmp65;
  local tmp67:8;
  tmp67 = zext(tmp66);
  local tmp68:8;
  tmp68 = tmp46 >> tmp67;
  tmp45 = tmp68;
<done_22>
  local tmp69:8;
  tmp69 = ~ tmp45;
  local tmp70:8;
  tmp70 = zext(S2_clrbit_r_Rs32);
  local tmp71:8;
  tmp71 = tmp70 & tmp69;
  S2_clrbit_r_Rd32 = tmp71:4;
}

:S2_asr_i_vh S2_asr_i_vh_Rdd32 S2_asr_i_vh_Rss32 S2_asr_i_vh_u4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b12 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asr_i_vh_Rdd32 & S2_asr_i_vh_Rss32 & S2_asr_i_vh_u4 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_asr_i_vh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = S2_asr_i_vh_Rss32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:4;
  tmp18 = zext(tmp9);
  local tmp19:4;
  tmp19 = tmp18 >> S2_asr_i_vh_u4;
  local tmp20:4;
  tmp20 = 65535;
  local tmp21:4;
  tmp21 = tmp19 & tmp20;
  tmp8 = sext(tmp21);
  local tmp22:4;
  tmp22 = 0;
  local tmp23:4;
  tmp23 = 16;
  local tmp24:4;
  tmp24 = tmp22 * tmp23;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp8 << tmp25;
  local tmp27:8;
  tmp27 = tmp7 | tmp26;
  S2_asr_i_vh_Rdd32 = tmp27;
  local tmp28:8;
  tmp28 = 65535;
  local tmp29:4;
  tmp29 = 1;
  local tmp30:4;
  tmp30 = 16;
  local tmp31:4;
  tmp31 = tmp29 * tmp30;
  local tmp32:8;
  tmp32 = zext(tmp31);
  local tmp33:8;
  tmp33 = tmp28 << tmp32;
  local tmp34:8;
  tmp34 = ~ tmp33;
  local tmp35:8;
  tmp35 = S2_asr_i_vh_Rdd32 & tmp34;
  local tmp36:8;
  local tmp37:2;
  local tmp38:4;
  tmp38 = 1;
  local tmp39:4;
  tmp39 = 16;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = S2_asr_i_vh_Rss32 s>> tmp41;
  local tmp43:4;
  tmp43 = 65535;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = tmp42 & tmp44;
  tmp37 = tmp45:2;
  local tmp46:4;
  tmp46 = zext(tmp37);
  local tmp47:4;
  tmp47 = tmp46 >> S2_asr_i_vh_u4;
  local tmp48:4;
  tmp48 = 65535;
  local tmp49:4;
  tmp49 = tmp47 & tmp48;
  tmp36 = sext(tmp49);
  local tmp50:4;
  tmp50 = 1;
  local tmp51:4;
  tmp51 = 16;
  local tmp52:4;
  tmp52 = tmp50 * tmp51;
  local tmp53:8;
  tmp53 = zext(tmp52);
  local tmp54:8;
  tmp54 = tmp36 << tmp53;
  local tmp55:8;
  tmp55 = tmp35 | tmp54;
  S2_asr_i_vh_Rdd32 = tmp55;
  local tmp56:8;
  tmp56 = 65535;
  local tmp57:4;
  tmp57 = 2;
  local tmp58:4;
  tmp58 = 16;
  local tmp59:4;
  tmp59 = tmp57 * tmp58;
  local tmp60:8;
  tmp60 = zext(tmp59);
  local tmp61:8;
  tmp61 = tmp56 << tmp60;
  local tmp62:8;
  tmp62 = ~ tmp61;
  local tmp63:8;
  tmp63 = S2_asr_i_vh_Rdd32 & tmp62;
  local tmp64:8;
  local tmp65:2;
  local tmp66:4;
  tmp66 = 2;
  local tmp67:4;
  tmp67 = 16;
  local tmp68:4;
  tmp68 = tmp66 * tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = S2_asr_i_vh_Rss32 s>> tmp69;
  local tmp71:4;
  tmp71 = 65535;
  local tmp72:8;
  tmp72 = zext(tmp71);
  local tmp73:8;
  tmp73 = tmp70 & tmp72;
  tmp65 = tmp73:2;
  local tmp74:4;
  tmp74 = zext(tmp65);
  local tmp75:4;
  tmp75 = tmp74 >> S2_asr_i_vh_u4;
  local tmp76:4;
  tmp76 = 65535;
  local tmp77:4;
  tmp77 = tmp75 & tmp76;
  tmp64 = sext(tmp77);
  local tmp78:4;
  tmp78 = 2;
  local tmp79:4;
  tmp79 = 16;
  local tmp80:4;
  tmp80 = tmp78 * tmp79;
  local tmp81:8;
  tmp81 = zext(tmp80);
  local tmp82:8;
  tmp82 = tmp64 << tmp81;
  local tmp83:8;
  tmp83 = tmp63 | tmp82;
  S2_asr_i_vh_Rdd32 = tmp83;
  local tmp84:8;
  tmp84 = 65535;
  local tmp85:4;
  tmp85 = 3;
  local tmp86:4;
  tmp86 = 16;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:8;
  tmp88 = zext(tmp87);
  local tmp89:8;
  tmp89 = tmp84 << tmp88;
  local tmp90:8;
  tmp90 = ~ tmp89;
  local tmp91:8;
  tmp91 = S2_asr_i_vh_Rdd32 & tmp90;
  local tmp92:8;
  local tmp93:2;
  local tmp94:4;
  tmp94 = 3;
  local tmp95:4;
  tmp95 = 16;
  local tmp96:4;
  tmp96 = tmp94 * tmp95;
  local tmp97:8;
  tmp97 = zext(tmp96);
  local tmp98:8;
  tmp98 = S2_asr_i_vh_Rss32 s>> tmp97;
  local tmp99:4;
  tmp99 = 65535;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = tmp98 & tmp100;
  tmp93 = tmp101:2;
  local tmp102:4;
  tmp102 = zext(tmp93);
  local tmp103:4;
  tmp103 = tmp102 >> S2_asr_i_vh_u4;
  local tmp104:4;
  tmp104 = 65535;
  local tmp105:4;
  tmp105 = tmp103 & tmp104;
  tmp92 = sext(tmp105);
  local tmp106:4;
  tmp106 = 3;
  local tmp107:4;
  tmp107 = 16;
  local tmp108:4;
  tmp108 = tmp106 * tmp107;
  local tmp109:8;
  tmp109 = zext(tmp108);
  local tmp110:8;
  tmp110 = tmp92 << tmp109;
  local tmp111:8;
  tmp111 = tmp91 | tmp110;
  S2_asr_i_vh_Rdd32 = tmp111;
}

:S2_lsr_i_vh S2_lsr_i_vh_Rdd32 S2_lsr_i_vh_Rss32 S2_lsr_i_vh_u4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b12 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_lsr_i_vh_Rdd32 & S2_lsr_i_vh_Rss32 & S2_lsr_i_vh_u4 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_lsr_i_vh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = S2_lsr_i_vh_Rss32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:4;
  tmp18 = sext(tmp9);
  local tmp19:4;
  tmp19 = tmp18 >> S2_lsr_i_vh_u4;
  local tmp20:4;
  tmp20 = 65535;
  local tmp21:4;
  tmp21 = tmp19 & tmp20;
  tmp8 = sext(tmp21);
  local tmp22:4;
  tmp22 = 0;
  local tmp23:4;
  tmp23 = 16;
  local tmp24:4;
  tmp24 = tmp22 * tmp23;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp8 << tmp25;
  local tmp27:8;
  tmp27 = tmp7 | tmp26;
  S2_lsr_i_vh_Rdd32 = tmp27;
  local tmp28:8;
  tmp28 = 65535;
  local tmp29:4;
  tmp29 = 1;
  local tmp30:4;
  tmp30 = 16;
  local tmp31:4;
  tmp31 = tmp29 * tmp30;
  local tmp32:8;
  tmp32 = zext(tmp31);
  local tmp33:8;
  tmp33 = tmp28 << tmp32;
  local tmp34:8;
  tmp34 = ~ tmp33;
  local tmp35:8;
  tmp35 = S2_lsr_i_vh_Rdd32 & tmp34;
  local tmp36:8;
  local tmp37:2;
  local tmp38:4;
  tmp38 = 1;
  local tmp39:4;
  tmp39 = 16;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = S2_lsr_i_vh_Rss32 s>> tmp41;
  local tmp43:4;
  tmp43 = 65535;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = tmp42 & tmp44;
  tmp37 = tmp45:2;
  local tmp46:4;
  tmp46 = sext(tmp37);
  local tmp47:4;
  tmp47 = tmp46 >> S2_lsr_i_vh_u4;
  local tmp48:4;
  tmp48 = 65535;
  local tmp49:4;
  tmp49 = tmp47 & tmp48;
  tmp36 = sext(tmp49);
  local tmp50:4;
  tmp50 = 1;
  local tmp51:4;
  tmp51 = 16;
  local tmp52:4;
  tmp52 = tmp50 * tmp51;
  local tmp53:8;
  tmp53 = zext(tmp52);
  local tmp54:8;
  tmp54 = tmp36 << tmp53;
  local tmp55:8;
  tmp55 = tmp35 | tmp54;
  S2_lsr_i_vh_Rdd32 = tmp55;
  local tmp56:8;
  tmp56 = 65535;
  local tmp57:4;
  tmp57 = 2;
  local tmp58:4;
  tmp58 = 16;
  local tmp59:4;
  tmp59 = tmp57 * tmp58;
  local tmp60:8;
  tmp60 = zext(tmp59);
  local tmp61:8;
  tmp61 = tmp56 << tmp60;
  local tmp62:8;
  tmp62 = ~ tmp61;
  local tmp63:8;
  tmp63 = S2_lsr_i_vh_Rdd32 & tmp62;
  local tmp64:8;
  local tmp65:2;
  local tmp66:4;
  tmp66 = 2;
  local tmp67:4;
  tmp67 = 16;
  local tmp68:4;
  tmp68 = tmp66 * tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = S2_lsr_i_vh_Rss32 s>> tmp69;
  local tmp71:4;
  tmp71 = 65535;
  local tmp72:8;
  tmp72 = zext(tmp71);
  local tmp73:8;
  tmp73 = tmp70 & tmp72;
  tmp65 = tmp73:2;
  local tmp74:4;
  tmp74 = sext(tmp65);
  local tmp75:4;
  tmp75 = tmp74 >> S2_lsr_i_vh_u4;
  local tmp76:4;
  tmp76 = 65535;
  local tmp77:4;
  tmp77 = tmp75 & tmp76;
  tmp64 = sext(tmp77);
  local tmp78:4;
  tmp78 = 2;
  local tmp79:4;
  tmp79 = 16;
  local tmp80:4;
  tmp80 = tmp78 * tmp79;
  local tmp81:8;
  tmp81 = zext(tmp80);
  local tmp82:8;
  tmp82 = tmp64 << tmp81;
  local tmp83:8;
  tmp83 = tmp63 | tmp82;
  S2_lsr_i_vh_Rdd32 = tmp83;
  local tmp84:8;
  tmp84 = 65535;
  local tmp85:4;
  tmp85 = 3;
  local tmp86:4;
  tmp86 = 16;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:8;
  tmp88 = zext(tmp87);
  local tmp89:8;
  tmp89 = tmp84 << tmp88;
  local tmp90:8;
  tmp90 = ~ tmp89;
  local tmp91:8;
  tmp91 = S2_lsr_i_vh_Rdd32 & tmp90;
  local tmp92:8;
  local tmp93:2;
  local tmp94:4;
  tmp94 = 3;
  local tmp95:4;
  tmp95 = 16;
  local tmp96:4;
  tmp96 = tmp94 * tmp95;
  local tmp97:8;
  tmp97 = zext(tmp96);
  local tmp98:8;
  tmp98 = S2_lsr_i_vh_Rss32 s>> tmp97;
  local tmp99:4;
  tmp99 = 65535;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = tmp98 & tmp100;
  tmp93 = tmp101:2;
  local tmp102:4;
  tmp102 = sext(tmp93);
  local tmp103:4;
  tmp103 = tmp102 >> S2_lsr_i_vh_u4;
  local tmp104:4;
  tmp104 = 65535;
  local tmp105:4;
  tmp105 = tmp103 & tmp104;
  tmp92 = sext(tmp105);
  local tmp106:4;
  tmp106 = 3;
  local tmp107:4;
  tmp107 = 16;
  local tmp108:4;
  tmp108 = tmp106 * tmp107;
  local tmp109:8;
  tmp109 = zext(tmp108);
  local tmp110:8;
  tmp110 = tmp92 << tmp109;
  local tmp111:8;
  tmp111 = tmp91 | tmp110;
  S2_lsr_i_vh_Rdd32 = tmp111;
}

:S2_asl_i_vh S2_asl_i_vh_Rdd32 S2_asl_i_vh_Rss32 S2_asl_i_vh_u4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b12 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asl_i_vh_Rdd32 & S2_asl_i_vh_Rss32 & S2_asl_i_vh_u4 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_asl_i_vh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = S2_asl_i_vh_Rss32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:4;
  tmp18 = zext(tmp9);
  local tmp19:4;
  tmp19 = tmp18 << S2_asl_i_vh_u4;
  local tmp20:4;
  tmp20 = 65535;
  local tmp21:4;
  tmp21 = tmp19 & tmp20;
  tmp8 = sext(tmp21);
  local tmp22:4;
  tmp22 = 0;
  local tmp23:4;
  tmp23 = 16;
  local tmp24:4;
  tmp24 = tmp22 * tmp23;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp8 << tmp25;
  local tmp27:8;
  tmp27 = tmp7 | tmp26;
  S2_asl_i_vh_Rdd32 = tmp27;
  local tmp28:8;
  tmp28 = 65535;
  local tmp29:4;
  tmp29 = 1;
  local tmp30:4;
  tmp30 = 16;
  local tmp31:4;
  tmp31 = tmp29 * tmp30;
  local tmp32:8;
  tmp32 = zext(tmp31);
  local tmp33:8;
  tmp33 = tmp28 << tmp32;
  local tmp34:8;
  tmp34 = ~ tmp33;
  local tmp35:8;
  tmp35 = S2_asl_i_vh_Rdd32 & tmp34;
  local tmp36:8;
  local tmp37:2;
  local tmp38:4;
  tmp38 = 1;
  local tmp39:4;
  tmp39 = 16;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = S2_asl_i_vh_Rss32 s>> tmp41;
  local tmp43:4;
  tmp43 = 65535;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = tmp42 & tmp44;
  tmp37 = tmp45:2;
  local tmp46:4;
  tmp46 = zext(tmp37);
  local tmp47:4;
  tmp47 = tmp46 << S2_asl_i_vh_u4;
  local tmp48:4;
  tmp48 = 65535;
  local tmp49:4;
  tmp49 = tmp47 & tmp48;
  tmp36 = sext(tmp49);
  local tmp50:4;
  tmp50 = 1;
  local tmp51:4;
  tmp51 = 16;
  local tmp52:4;
  tmp52 = tmp50 * tmp51;
  local tmp53:8;
  tmp53 = zext(tmp52);
  local tmp54:8;
  tmp54 = tmp36 << tmp53;
  local tmp55:8;
  tmp55 = tmp35 | tmp54;
  S2_asl_i_vh_Rdd32 = tmp55;
  local tmp56:8;
  tmp56 = 65535;
  local tmp57:4;
  tmp57 = 2;
  local tmp58:4;
  tmp58 = 16;
  local tmp59:4;
  tmp59 = tmp57 * tmp58;
  local tmp60:8;
  tmp60 = zext(tmp59);
  local tmp61:8;
  tmp61 = tmp56 << tmp60;
  local tmp62:8;
  tmp62 = ~ tmp61;
  local tmp63:8;
  tmp63 = S2_asl_i_vh_Rdd32 & tmp62;
  local tmp64:8;
  local tmp65:2;
  local tmp66:4;
  tmp66 = 2;
  local tmp67:4;
  tmp67 = 16;
  local tmp68:4;
  tmp68 = tmp66 * tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = S2_asl_i_vh_Rss32 s>> tmp69;
  local tmp71:4;
  tmp71 = 65535;
  local tmp72:8;
  tmp72 = zext(tmp71);
  local tmp73:8;
  tmp73 = tmp70 & tmp72;
  tmp65 = tmp73:2;
  local tmp74:4;
  tmp74 = zext(tmp65);
  local tmp75:4;
  tmp75 = tmp74 << S2_asl_i_vh_u4;
  local tmp76:4;
  tmp76 = 65535;
  local tmp77:4;
  tmp77 = tmp75 & tmp76;
  tmp64 = sext(tmp77);
  local tmp78:4;
  tmp78 = 2;
  local tmp79:4;
  tmp79 = 16;
  local tmp80:4;
  tmp80 = tmp78 * tmp79;
  local tmp81:8;
  tmp81 = zext(tmp80);
  local tmp82:8;
  tmp82 = tmp64 << tmp81;
  local tmp83:8;
  tmp83 = tmp63 | tmp82;
  S2_asl_i_vh_Rdd32 = tmp83;
  local tmp84:8;
  tmp84 = 65535;
  local tmp85:4;
  tmp85 = 3;
  local tmp86:4;
  tmp86 = 16;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:8;
  tmp88 = zext(tmp87);
  local tmp89:8;
  tmp89 = tmp84 << tmp88;
  local tmp90:8;
  tmp90 = ~ tmp89;
  local tmp91:8;
  tmp91 = S2_asl_i_vh_Rdd32 & tmp90;
  local tmp92:8;
  local tmp93:2;
  local tmp94:4;
  tmp94 = 3;
  local tmp95:4;
  tmp95 = 16;
  local tmp96:4;
  tmp96 = tmp94 * tmp95;
  local tmp97:8;
  tmp97 = zext(tmp96);
  local tmp98:8;
  tmp98 = S2_asl_i_vh_Rss32 s>> tmp97;
  local tmp99:4;
  tmp99 = 65535;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = tmp98 & tmp100;
  tmp93 = tmp101:2;
  local tmp102:4;
  tmp102 = zext(tmp93);
  local tmp103:4;
  tmp103 = tmp102 << S2_asl_i_vh_u4;
  local tmp104:4;
  tmp104 = 65535;
  local tmp105:4;
  tmp105 = tmp103 & tmp104;
  tmp92 = sext(tmp105);
  local tmp106:4;
  tmp106 = 3;
  local tmp107:4;
  tmp107 = 16;
  local tmp108:4;
  tmp108 = tmp106 * tmp107;
  local tmp109:8;
  tmp109 = zext(tmp108);
  local tmp110:8;
  tmp110 = tmp92 << tmp109;
  local tmp111:8;
  tmp111 = tmp91 | tmp110;
  S2_asl_i_vh_Rdd32 = tmp111;
}

:S2_asr_r_vh S2_asr_r_vh_Rdd32 S2_asr_r_vh_Rss32 S2_asr_r_vh_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asr_r_vh_Rdd32 & S2_asr_r_vh_Rss32 & S2_asr_r_vh_Rt32 unimpl

:S5_asrhub_rnd_sat S5_asrhub_rnd_sat_Rd32 S5_asrhub_rnd_sat_Rss32 S5_asrhub_rnd_sat_u4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S5_asrhub_rnd_sat_Rd32 & S5_asrhub_rnd_sat_Rss32 & S5_asrhub_rnd_sat_u4 unimpl

:S5_asrhub_sat S5_asrhub_sat_Rd32 S5_asrhub_sat_Rss32 S5_asrhub_sat_u4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S5_asrhub_sat_Rd32 & S5_asrhub_sat_Rss32 & S5_asrhub_sat_u4 unimpl

:S5_vasrhrnd S5_vasrhrnd_Rdd32 S5_vasrhrnd_Rss32 S5_vasrhrnd_u4 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S5_vasrhrnd_Rdd32 & S5_vasrhrnd_Rss32 & S5_vasrhrnd_u4 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S5_vasrhrnd_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = S5_vasrhrnd_Rss32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:4;
  tmp18 = zext(tmp9);
  local tmp19:4;
  tmp19 = tmp18 >> S5_vasrhrnd_u4;
  local tmp20:4;
  tmp20 = 1;
  local tmp21:4;
  tmp21 = tmp19 + tmp20;
  local tmp22:4;
  tmp22 = 1;
  local tmp23:4;
  tmp23 = tmp21 s>> tmp22;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:4;
  tmp25 = tmp23 & tmp24;
  tmp8 = sext(tmp25);
  local tmp26:4;
  tmp26 = 0;
  local tmp27:4;
  tmp27 = 16;
  local tmp28:4;
  tmp28 = tmp26 * tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp8 << tmp29;
  local tmp31:8;
  tmp31 = tmp7 | tmp30;
  S5_vasrhrnd_Rdd32 = tmp31;
  local tmp32:8;
  tmp32 = 65535;
  local tmp33:4;
  tmp33 = 1;
  local tmp34:4;
  tmp34 = 16;
  local tmp35:4;
  tmp35 = tmp33 * tmp34;
  local tmp36:8;
  tmp36 = zext(tmp35);
  local tmp37:8;
  tmp37 = tmp32 << tmp36;
  local tmp38:8;
  tmp38 = ~ tmp37;
  local tmp39:8;
  tmp39 = S5_vasrhrnd_Rdd32 & tmp38;
  local tmp40:8;
  local tmp41:2;
  local tmp42:4;
  tmp42 = 1;
  local tmp43:4;
  tmp43 = 16;
  local tmp44:4;
  tmp44 = tmp42 * tmp43;
  local tmp45:8;
  tmp45 = zext(tmp44);
  local tmp46:8;
  tmp46 = S5_vasrhrnd_Rss32 s>> tmp45;
  local tmp47:4;
  tmp47 = 65535;
  local tmp48:8;
  tmp48 = zext(tmp47);
  local tmp49:8;
  tmp49 = tmp46 & tmp48;
  tmp41 = tmp49:2;
  local tmp50:4;
  tmp50 = zext(tmp41);
  local tmp51:4;
  tmp51 = tmp50 >> S5_vasrhrnd_u4;
  local tmp52:4;
  tmp52 = 1;
  local tmp53:4;
  tmp53 = tmp51 + tmp52;
  local tmp54:4;
  tmp54 = 1;
  local tmp55:4;
  tmp55 = tmp53 s>> tmp54;
  local tmp56:4;
  tmp56 = 65535;
  local tmp57:4;
  tmp57 = tmp55 & tmp56;
  tmp40 = sext(tmp57);
  local tmp58:4;
  tmp58 = 1;
  local tmp59:4;
  tmp59 = 16;
  local tmp60:4;
  tmp60 = tmp58 * tmp59;
  local tmp61:8;
  tmp61 = zext(tmp60);
  local tmp62:8;
  tmp62 = tmp40 << tmp61;
  local tmp63:8;
  tmp63 = tmp39 | tmp62;
  S5_vasrhrnd_Rdd32 = tmp63;
  local tmp64:8;
  tmp64 = 65535;
  local tmp65:4;
  tmp65 = 2;
  local tmp66:4;
  tmp66 = 16;
  local tmp67:4;
  tmp67 = tmp65 * tmp66;
  local tmp68:8;
  tmp68 = zext(tmp67);
  local tmp69:8;
  tmp69 = tmp64 << tmp68;
  local tmp70:8;
  tmp70 = ~ tmp69;
  local tmp71:8;
  tmp71 = S5_vasrhrnd_Rdd32 & tmp70;
  local tmp72:8;
  local tmp73:2;
  local tmp74:4;
  tmp74 = 2;
  local tmp75:4;
  tmp75 = 16;
  local tmp76:4;
  tmp76 = tmp74 * tmp75;
  local tmp77:8;
  tmp77 = zext(tmp76);
  local tmp78:8;
  tmp78 = S5_vasrhrnd_Rss32 s>> tmp77;
  local tmp79:4;
  tmp79 = 65535;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = tmp78 & tmp80;
  tmp73 = tmp81:2;
  local tmp82:4;
  tmp82 = zext(tmp73);
  local tmp83:4;
  tmp83 = tmp82 >> S5_vasrhrnd_u4;
  local tmp84:4;
  tmp84 = 1;
  local tmp85:4;
  tmp85 = tmp83 + tmp84;
  local tmp86:4;
  tmp86 = 1;
  local tmp87:4;
  tmp87 = tmp85 s>> tmp86;
  local tmp88:4;
  tmp88 = 65535;
  local tmp89:4;
  tmp89 = tmp87 & tmp88;
  tmp72 = sext(tmp89);
  local tmp90:4;
  tmp90 = 2;
  local tmp91:4;
  tmp91 = 16;
  local tmp92:4;
  tmp92 = tmp90 * tmp91;
  local tmp93:8;
  tmp93 = zext(tmp92);
  local tmp94:8;
  tmp94 = tmp72 << tmp93;
  local tmp95:8;
  tmp95 = tmp71 | tmp94;
  S5_vasrhrnd_Rdd32 = tmp95;
  local tmp96:8;
  tmp96 = 65535;
  local tmp97:4;
  tmp97 = 3;
  local tmp98:4;
  tmp98 = 16;
  local tmp99:4;
  tmp99 = tmp97 * tmp98;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = tmp96 << tmp100;
  local tmp102:8;
  tmp102 = ~ tmp101;
  local tmp103:8;
  tmp103 = S5_vasrhrnd_Rdd32 & tmp102;
  local tmp104:8;
  local tmp105:2;
  local tmp106:4;
  tmp106 = 3;
  local tmp107:4;
  tmp107 = 16;
  local tmp108:4;
  tmp108 = tmp106 * tmp107;
  local tmp109:8;
  tmp109 = zext(tmp108);
  local tmp110:8;
  tmp110 = S5_vasrhrnd_Rss32 s>> tmp109;
  local tmp111:4;
  tmp111 = 65535;
  local tmp112:8;
  tmp112 = zext(tmp111);
  local tmp113:8;
  tmp113 = tmp110 & tmp112;
  tmp105 = tmp113:2;
  local tmp114:4;
  tmp114 = zext(tmp105);
  local tmp115:4;
  tmp115 = tmp114 >> S5_vasrhrnd_u4;
  local tmp116:4;
  tmp116 = 1;
  local tmp117:4;
  tmp117 = tmp115 + tmp116;
  local tmp118:4;
  tmp118 = 1;
  local tmp119:4;
  tmp119 = tmp117 s>> tmp118;
  local tmp120:4;
  tmp120 = 65535;
  local tmp121:4;
  tmp121 = tmp119 & tmp120;
  tmp104 = sext(tmp121);
  local tmp122:4;
  tmp122 = 3;
  local tmp123:4;
  tmp123 = 16;
  local tmp124:4;
  tmp124 = tmp122 * tmp123;
  local tmp125:8;
  tmp125 = zext(tmp124);
  local tmp126:8;
  tmp126 = tmp104 << tmp125;
  local tmp127:8;
  tmp127 = tmp103 | tmp126;
  S5_vasrhrnd_Rdd32 = tmp127;
}

:S2_asl_r_vh S2_asl_r_vh_Rdd32 S2_asl_r_vh_Rss32 S2_asl_r_vh_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asl_r_vh_Rdd32 & S2_asl_r_vh_Rss32 & S2_asl_r_vh_Rt32 unimpl

:S2_lsr_r_vh S2_lsr_r_vh_Rdd32 S2_lsr_r_vh_Rss32 S2_lsr_r_vh_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsr_r_vh_Rdd32 & S2_lsr_r_vh_Rss32 & S2_lsr_r_vh_Rt32 unimpl

:S2_lsl_r_vh S2_lsl_r_vh_Rdd32 S2_lsl_r_vh_Rss32 S2_lsl_r_vh_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsl_r_vh_Rdd32 & S2_lsl_r_vh_Rss32 & S2_lsl_r_vh_Rt32 unimpl

:S2_asr_i_vw S2_asr_i_vw_Rdd32 S2_asr_i_vw_Rss32 S2_asr_i_vw_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asr_i_vw_Rdd32 & S2_asr_i_vw_Rss32 & S2_asr_i_vw_u5 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_asr_i_vw_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:4;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 32;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = S2_asr_i_vw_Rss32 s>> tmp13;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = tmp14 & tmp15;
  tmp9 = tmp16:4;
  tmp8 = zext(tmp9);
  local tmp17:8;
  tmp17 = sext(S2_asr_i_vw_u5);
  local tmp18:8;
  tmp18 = tmp8 >> tmp17;
  local tmp19:8;
  tmp19 = 4294967295;
  local tmp20:8;
  tmp20 = tmp18 & tmp19;
  local tmp21:4;
  tmp21 = 0;
  local tmp22:4;
  tmp22 = 32;
  local tmp23:4;
  tmp23 = tmp21 * tmp22;
  local tmp24:8;
  tmp24 = zext(tmp23);
  local tmp25:8;
  tmp25 = tmp20 << tmp24;
  local tmp26:8;
  tmp26 = tmp7 | tmp25;
  S2_asr_i_vw_Rdd32 = tmp26;
  local tmp27:8;
  tmp27 = 4294967295;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = 32;
  local tmp30:4;
  tmp30 = tmp28 * tmp29;
  local tmp31:8;
  tmp31 = zext(tmp30);
  local tmp32:8;
  tmp32 = tmp27 << tmp31;
  local tmp33:8;
  tmp33 = ~ tmp32;
  local tmp34:8;
  tmp34 = S2_asr_i_vw_Rdd32 & tmp33;
  local tmp35:8;
  local tmp36:4;
  local tmp37:4;
  tmp37 = 1;
  local tmp38:4;
  tmp38 = 32;
  local tmp39:4;
  tmp39 = tmp37 * tmp38;
  local tmp40:8;
  tmp40 = zext(tmp39);
  local tmp41:8;
  tmp41 = S2_asr_i_vw_Rss32 s>> tmp40;
  local tmp42:8;
  tmp42 = 4294967295;
  local tmp43:8;
  tmp43 = tmp41 & tmp42;
  tmp36 = tmp43:4;
  tmp35 = zext(tmp36);
  local tmp44:8;
  tmp44 = sext(S2_asr_i_vw_u5);
  local tmp45:8;
  tmp45 = tmp35 >> tmp44;
  local tmp46:8;
  tmp46 = 4294967295;
  local tmp47:8;
  tmp47 = tmp45 & tmp46;
  local tmp48:4;
  tmp48 = 1;
  local tmp49:4;
  tmp49 = 32;
  local tmp50:4;
  tmp50 = tmp48 * tmp49;
  local tmp51:8;
  tmp51 = zext(tmp50);
  local tmp52:8;
  tmp52 = tmp47 << tmp51;
  local tmp53:8;
  tmp53 = tmp34 | tmp52;
  S2_asr_i_vw_Rdd32 = tmp53;
}

:S2_asr_i_svw_trun S2_asr_i_svw_trun_Rd32 S2_asr_i_svw_trun_Rss32 S2_asr_i_svw_trun_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asr_i_svw_trun_Rd32 & S2_asr_i_svw_trun_Rss32 & S2_asr_i_svw_trun_u5 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = zext(S2_asr_i_svw_trun_Rd32);
  local tmp8:8;
  tmp8 = tmp7 & tmp6;
  local tmp9:8;
  local tmp10:2;
  local tmp11:8;
  local tmp12:4;
  local tmp13:4;
  tmp13 = 0;
  local tmp14:4;
  tmp14 = 32;
  local tmp15:4;
  tmp15 = tmp13 * tmp14;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = S2_asr_i_svw_trun_Rss32 s>> tmp16;
  local tmp18:8;
  tmp18 = 4294967295;
  local tmp19:8;
  tmp19 = tmp17 & tmp18;
  tmp12 = tmp19:4;
  tmp11 = zext(tmp12);
  local tmp20:8;
  tmp20 = sext(S2_asr_i_svw_trun_u5);
  local tmp21:8;
  tmp21 = tmp11 >> tmp20;
  local tmp22:4;
  tmp22 = 0;
  local tmp23:4;
  tmp23 = 16;
  local tmp24:4;
  tmp24 = tmp22 * tmp23;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp21 s>> tmp25;
  local tmp27:4;
  tmp27 = 65535;
  local tmp28:8;
  tmp28 = zext(tmp27);
  local tmp29:8;
  tmp29 = tmp26 & tmp28;
  tmp10 = tmp29:2;
  local tmp30:4;
  tmp30 = 65535;
  local tmp31:4;
  tmp31 = zext(tmp10);
  local tmp32:4;
  tmp32 = tmp31 & tmp30;
  tmp9 = sext(tmp32);
  local tmp33:4;
  tmp33 = 0;
  local tmp34:4;
  tmp34 = 16;
  local tmp35:4;
  tmp35 = tmp33 * tmp34;
  local tmp36:8;
  tmp36 = zext(tmp35);
  local tmp37:8;
  tmp37 = tmp9 << tmp36;
  local tmp38:8;
  tmp38 = tmp8 | tmp37;
  S2_asr_i_svw_trun_Rd32 = tmp38:4;
  local tmp39:8;
  tmp39 = 65535;
  local tmp40:4;
  tmp40 = 1;
  local tmp41:4;
  tmp41 = 16;
  local tmp42:4;
  tmp42 = tmp40 * tmp41;
  local tmp43:8;
  tmp43 = zext(tmp42);
  local tmp44:8;
  tmp44 = tmp39 << tmp43;
  local tmp45:8;
  tmp45 = ~ tmp44;
  local tmp46:8;
  tmp46 = zext(S2_asr_i_svw_trun_Rd32);
  local tmp47:8;
  tmp47 = tmp46 & tmp45;
  local tmp48:8;
  local tmp49:2;
  local tmp50:8;
  local tmp51:4;
  local tmp52:4;
  tmp52 = 1;
  local tmp53:4;
  tmp53 = 32;
  local tmp54:4;
  tmp54 = tmp52 * tmp53;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = S2_asr_i_svw_trun_Rss32 s>> tmp55;
  local tmp57:8;
  tmp57 = 4294967295;
  local tmp58:8;
  tmp58 = tmp56 & tmp57;
  tmp51 = tmp58:4;
  tmp50 = zext(tmp51);
  local tmp59:8;
  tmp59 = sext(S2_asr_i_svw_trun_u5);
  local tmp60:8;
  tmp60 = tmp50 >> tmp59;
  local tmp61:4;
  tmp61 = 0;
  local tmp62:4;
  tmp62 = 16;
  local tmp63:4;
  tmp63 = tmp61 * tmp62;
  local tmp64:8;
  tmp64 = zext(tmp63);
  local tmp65:8;
  tmp65 = tmp60 s>> tmp64;
  local tmp66:4;
  tmp66 = 65535;
  local tmp67:8;
  tmp67 = zext(tmp66);
  local tmp68:8;
  tmp68 = tmp65 & tmp67;
  tmp49 = tmp68:2;
  local tmp69:4;
  tmp69 = 65535;
  local tmp70:4;
  tmp70 = zext(tmp49);
  local tmp71:4;
  tmp71 = tmp70 & tmp69;
  tmp48 = sext(tmp71);
  local tmp72:4;
  tmp72 = 1;
  local tmp73:4;
  tmp73 = 16;
  local tmp74:4;
  tmp74 = tmp72 * tmp73;
  local tmp75:8;
  tmp75 = zext(tmp74);
  local tmp76:8;
  tmp76 = tmp48 << tmp75;
  local tmp77:8;
  tmp77 = tmp47 | tmp76;
  S2_asr_i_svw_trun_Rd32 = tmp77:4;
}

:S2_asr_r_svw_trun S2_asr_r_svw_trun_Rd32 S2_asr_r_svw_trun_Rss32 S2_asr_r_svw_trun_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asr_r_svw_trun_Rd32 & S2_asr_r_svw_trun_Rss32 & S2_asr_r_svw_trun_Rt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = zext(S2_asr_r_svw_trun_Rd32);
  local tmp8:8;
  tmp8 = tmp7 & tmp6;
  local tmp9:8;
  local tmp10:2;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = 7;
  local tmp13:4;
  tmp13 = tmp11 << tmp12;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = S2_asr_r_svw_trun_Rt32 & tmp15;
  local tmp17:4;
  tmp17 = 1;
  local tmp18:4;
  tmp18 = 7;
  local tmp19:4;
  tmp19 = 1;
  local tmp20:4;
  tmp20 = tmp18 - tmp19;
  local tmp21:4;
  tmp21 = tmp17 << tmp20;
  local tmp22:4;
  tmp22 = tmp16 ^ tmp21;
  local tmp23:4;
  tmp23 = 1;
  local tmp24:4;
  tmp24 = 7;
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = tmp24 - tmp25;
  local tmp27:4;
  tmp27 = tmp23 << tmp26;
  local tmp28:4;
  tmp28 = tmp22 - tmp27;
  local tmp29:4;
  tmp29 = 0;
  local tmp30:1;
  tmp30 = tmp28 s> tmp29;
  local tmp31:1;
  tmp31 = tmp30;
  if (tmp31) goto <t_branch_33>;
  goto <f_branch_33>;
<t_branch_33>
  local tmp33:8;
  local tmp34:4;
  local tmp35:8;
  local tmp36:4;
  local tmp37:4;
  tmp37 = 0;
  local tmp38:4;
  tmp38 = 32;
  local tmp39:4;
  tmp39 = tmp37 * tmp38;
  local tmp40:8;
  tmp40 = zext(tmp39);
  local tmp41:8;
  tmp41 = S2_asr_r_svw_trun_Rss32 s>> tmp40;
  local tmp42:8;
  tmp42 = 4294967295;
  local tmp43:8;
  tmp43 = tmp41 & tmp42;
  tmp36 = tmp43:4;
  tmp35 = zext(tmp36);
  tmp34 = tmp35:4;
  tmp33 = zext(tmp34);
  local tmp44:4;
  tmp44 = 1;
  local tmp45:4;
  tmp45 = 7;
  local tmp46:4;
  tmp46 = tmp44 << tmp45;
  local tmp47:4;
  tmp47 = 1;
  local tmp48:4;
  tmp48 = tmp46 - tmp47;
  local tmp49:4;
  tmp49 = S2_asr_r_svw_trun_Rt32 & tmp48;
  local tmp50:4;
  tmp50 = 1;
  local tmp51:4;
  tmp51 = 7;
  local tmp52:4;
  tmp52 = 1;
  local tmp53:4;
  tmp53 = tmp51 - tmp52;
  local tmp54:4;
  tmp54 = tmp50 << tmp53;
  local tmp55:4;
  tmp55 = tmp49 ^ tmp54;
  local tmp56:4;
  tmp56 = 1;
  local tmp57:4;
  tmp57 = 7;
  local tmp58:4;
  tmp58 = 1;
  local tmp59:4;
  tmp59 = tmp57 - tmp58;
  local tmp60:4;
  tmp60 = tmp56 << tmp59;
  local tmp61:4;
  tmp61 = tmp55 - tmp60;
  local tmp62:8;
  tmp62 = zext(tmp61);
  local tmp63:8;
  tmp63 = tmp33 s>> tmp62;
  local tmp64:8;
  tmp64 = tmp63;
  goto <done_33>;
<f_branch_33>
  local tmp65:8;
  local tmp66:4;
  local tmp67:8;
  local tmp68:4;
  local tmp69:4;
  tmp69 = 0;
  local tmp70:4;
  tmp70 = 32;
  local tmp71:4;
  tmp71 = tmp69 * tmp70;
  local tmp72:8;
  tmp72 = zext(tmp71);
  local tmp73:8;
  tmp73 = S2_asr_r_svw_trun_Rss32 s>> tmp72;
  local tmp74:8;
  tmp74 = 4294967295;
  local tmp75:8;
  tmp75 = tmp73 & tmp74;
  tmp68 = tmp75:4;
  tmp67 = zext(tmp68);
  tmp66 = tmp67:4;
  tmp65 = zext(tmp66);
  local tmp76:4;
  tmp76 = 1;
  local tmp77:4;
  tmp77 = 7;
  local tmp78:4;
  tmp78 = tmp76 << tmp77;
  local tmp79:4;
  tmp79 = 1;
  local tmp80:4;
  tmp80 = tmp78 - tmp79;
  local tmp81:4;
  tmp81 = S2_asr_r_svw_trun_Rt32 & tmp80;
  local tmp82:4;
  tmp82 = 1;
  local tmp83:4;
  tmp83 = 7;
  local tmp84:4;
  tmp84 = 1;
  local tmp85:4;
  tmp85 = tmp83 - tmp84;
  local tmp86:4;
  tmp86 = tmp82 << tmp85;
  local tmp87:4;
  tmp87 = tmp81 ^ tmp86;
  local tmp88:4;
  tmp88 = 1;
  local tmp89:4;
  tmp89 = 7;
  local tmp90:4;
  tmp90 = 1;
  local tmp91:4;
  tmp91 = tmp89 - tmp90;
  local tmp92:4;
  tmp92 = tmp88 << tmp91;
  local tmp93:4;
  tmp93 = tmp87 - tmp92;
  local tmp94:8;
  tmp94 = zext(tmp93);
  local tmp95:8;
  tmp95 = tmp65 << tmp94;
  local tmp96:4;
  tmp96 = 0;
  local tmp97:4;
  tmp97 = 16;
  local tmp98:4;
  tmp98 = tmp96 * tmp97;
  local tmp99:8;
  tmp99 = zext(tmp98);
  local tmp100:8;
  tmp100 = tmp95 s>> tmp99;
  tmp64 = tmp100;
<done_33>
  local tmp101:4;
  tmp101 = 65535;
  local tmp102:8;
  tmp102 = zext(tmp101);
  local tmp103:8;
  tmp103 = tmp64 & tmp102;
  tmp10 = tmp103:2;
  local tmp104:4;
  tmp104 = 65535;
  local tmp105:4;
  tmp105 = zext(tmp10);
  local tmp106:4;
  tmp106 = tmp105 & tmp104;
  tmp9 = sext(tmp106);
  local tmp107:4;
  tmp107 = 0;
  local tmp108:4;
  tmp108 = 16;
  local tmp109:4;
  tmp109 = tmp107 * tmp108;
  local tmp110:8;
  tmp110 = zext(tmp109);
  local tmp111:8;
  tmp111 = tmp9 << tmp110;
  local tmp112:8;
  tmp112 = tmp8 | tmp111;
  S2_asr_r_svw_trun_Rd32 = tmp112:4;
  local tmp113:8;
  tmp113 = 65535;
  local tmp114:4;
  tmp114 = 1;
  local tmp115:4;
  tmp115 = 16;
  local tmp116:4;
  tmp116 = tmp114 * tmp115;
  local tmp117:8;
  tmp117 = zext(tmp116);
  local tmp118:8;
  tmp118 = tmp113 << tmp117;
  local tmp119:8;
  tmp119 = ~ tmp118;
  local tmp120:8;
  tmp120 = zext(S2_asr_r_svw_trun_Rd32);
  local tmp121:8;
  tmp121 = tmp120 & tmp119;
  local tmp122:8;
  local tmp123:2;
  local tmp124:4;
  tmp124 = 1;
  local tmp125:4;
  tmp125 = 7;
  local tmp126:4;
  tmp126 = tmp124 << tmp125;
  local tmp127:4;
  tmp127 = 1;
  local tmp128:4;
  tmp128 = tmp126 - tmp127;
  local tmp129:4;
  tmp129 = S2_asr_r_svw_trun_Rt32 & tmp128;
  local tmp130:4;
  tmp130 = 1;
  local tmp131:4;
  tmp131 = 7;
  local tmp132:4;
  tmp132 = 1;
  local tmp133:4;
  tmp133 = tmp131 - tmp132;
  local tmp134:4;
  tmp134 = tmp130 << tmp133;
  local tmp135:4;
  tmp135 = tmp129 ^ tmp134;
  local tmp136:4;
  tmp136 = 1;
  local tmp137:4;
  tmp137 = 7;
  local tmp138:4;
  tmp138 = 1;
  local tmp139:4;
  tmp139 = tmp137 - tmp138;
  local tmp140:4;
  tmp140 = tmp136 << tmp139;
  local tmp141:4;
  tmp141 = tmp135 - tmp140;
  local tmp142:4;
  tmp142 = 0;
  local tmp143:1;
  tmp143 = tmp141 s> tmp142;
  local tmp144:1;
  tmp144 = tmp143;
  if (tmp144) goto <t_branch_146>;
  goto <f_branch_146>;
<t_branch_146>
  local tmp146:8;
  local tmp147:4;
  local tmp148:8;
  local tmp149:4;
  local tmp150:4;
  tmp150 = 1;
  local tmp151:4;
  tmp151 = 32;
  local tmp152:4;
  tmp152 = tmp150 * tmp151;
  local tmp153:8;
  tmp153 = zext(tmp152);
  local tmp154:8;
  tmp154 = S2_asr_r_svw_trun_Rss32 s>> tmp153;
  local tmp155:8;
  tmp155 = 4294967295;
  local tmp156:8;
  tmp156 = tmp154 & tmp155;
  tmp149 = tmp156:4;
  tmp148 = zext(tmp149);
  tmp147 = tmp148:4;
  tmp146 = zext(tmp147);
  local tmp157:4;
  tmp157 = 1;
  local tmp158:4;
  tmp158 = 7;
  local tmp159:4;
  tmp159 = tmp157 << tmp158;
  local tmp160:4;
  tmp160 = 1;
  local tmp161:4;
  tmp161 = tmp159 - tmp160;
  local tmp162:4;
  tmp162 = S2_asr_r_svw_trun_Rt32 & tmp161;
  local tmp163:4;
  tmp163 = 1;
  local tmp164:4;
  tmp164 = 7;
  local tmp165:4;
  tmp165 = 1;
  local tmp166:4;
  tmp166 = tmp164 - tmp165;
  local tmp167:4;
  tmp167 = tmp163 << tmp166;
  local tmp168:4;
  tmp168 = tmp162 ^ tmp167;
  local tmp169:4;
  tmp169 = 1;
  local tmp170:4;
  tmp170 = 7;
  local tmp171:4;
  tmp171 = 1;
  local tmp172:4;
  tmp172 = tmp170 - tmp171;
  local tmp173:4;
  tmp173 = tmp169 << tmp172;
  local tmp174:4;
  tmp174 = tmp168 - tmp173;
  local tmp175:8;
  tmp175 = zext(tmp174);
  local tmp176:8;
  tmp176 = tmp146 s>> tmp175;
  local tmp177:8;
  tmp177 = tmp176;
  goto <done_146>;
<f_branch_146>
  local tmp178:8;
  local tmp179:4;
  local tmp180:8;
  local tmp181:4;
  local tmp182:4;
  tmp182 = 1;
  local tmp183:4;
  tmp183 = 32;
  local tmp184:4;
  tmp184 = tmp182 * tmp183;
  local tmp185:8;
  tmp185 = zext(tmp184);
  local tmp186:8;
  tmp186 = S2_asr_r_svw_trun_Rss32 s>> tmp185;
  local tmp187:8;
  tmp187 = 4294967295;
  local tmp188:8;
  tmp188 = tmp186 & tmp187;
  tmp181 = tmp188:4;
  tmp180 = zext(tmp181);
  tmp179 = tmp180:4;
  tmp178 = zext(tmp179);
  local tmp189:4;
  tmp189 = 1;
  local tmp190:4;
  tmp190 = 7;
  local tmp191:4;
  tmp191 = tmp189 << tmp190;
  local tmp192:4;
  tmp192 = 1;
  local tmp193:4;
  tmp193 = tmp191 - tmp192;
  local tmp194:4;
  tmp194 = S2_asr_r_svw_trun_Rt32 & tmp193;
  local tmp195:4;
  tmp195 = 1;
  local tmp196:4;
  tmp196 = 7;
  local tmp197:4;
  tmp197 = 1;
  local tmp198:4;
  tmp198 = tmp196 - tmp197;
  local tmp199:4;
  tmp199 = tmp195 << tmp198;
  local tmp200:4;
  tmp200 = tmp194 ^ tmp199;
  local tmp201:4;
  tmp201 = 1;
  local tmp202:4;
  tmp202 = 7;
  local tmp203:4;
  tmp203 = 1;
  local tmp204:4;
  tmp204 = tmp202 - tmp203;
  local tmp205:4;
  tmp205 = tmp201 << tmp204;
  local tmp206:4;
  tmp206 = tmp200 - tmp205;
  local tmp207:8;
  tmp207 = zext(tmp206);
  local tmp208:8;
  tmp208 = tmp178 << tmp207;
  local tmp209:4;
  tmp209 = 0;
  local tmp210:4;
  tmp210 = 16;
  local tmp211:4;
  tmp211 = tmp209 * tmp210;
  local tmp212:8;
  tmp212 = zext(tmp211);
  local tmp213:8;
  tmp213 = tmp208 s>> tmp212;
  tmp177 = tmp213;
<done_146>
  local tmp214:4;
  tmp214 = 65535;
  local tmp215:8;
  tmp215 = zext(tmp214);
  local tmp216:8;
  tmp216 = tmp177 & tmp215;
  tmp123 = tmp216:2;
  local tmp217:4;
  tmp217 = 65535;
  local tmp218:4;
  tmp218 = zext(tmp123);
  local tmp219:4;
  tmp219 = tmp218 & tmp217;
  tmp122 = sext(tmp219);
  local tmp220:4;
  tmp220 = 1;
  local tmp221:4;
  tmp221 = 16;
  local tmp222:4;
  tmp222 = tmp220 * tmp221;
  local tmp223:8;
  tmp223 = zext(tmp222);
  local tmp224:8;
  tmp224 = tmp122 << tmp223;
  local tmp225:8;
  tmp225 = tmp121 | tmp224;
  S2_asr_r_svw_trun_Rd32 = tmp225:4;
}

:S2_lsr_i_vw S2_lsr_i_vw_Rdd32 S2_lsr_i_vw_Rss32 S2_lsr_i_vw_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_lsr_i_vw_Rdd32 & S2_lsr_i_vw_Rss32 & S2_lsr_i_vw_u5 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_lsr_i_vw_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:4;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 32;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = S2_lsr_i_vw_Rss32 s>> tmp13;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = tmp14 & tmp15;
  tmp9 = tmp16:4;
  tmp8 = sext(tmp9);
  local tmp17:8;
  tmp17 = sext(S2_lsr_i_vw_u5);
  local tmp18:8;
  tmp18 = tmp8 >> tmp17;
  local tmp19:8;
  tmp19 = 4294967295;
  local tmp20:8;
  tmp20 = tmp18 & tmp19;
  local tmp21:4;
  tmp21 = 0;
  local tmp22:4;
  tmp22 = 32;
  local tmp23:4;
  tmp23 = tmp21 * tmp22;
  local tmp24:8;
  tmp24 = zext(tmp23);
  local tmp25:8;
  tmp25 = tmp20 << tmp24;
  local tmp26:8;
  tmp26 = tmp7 | tmp25;
  S2_lsr_i_vw_Rdd32 = tmp26;
  local tmp27:8;
  tmp27 = 4294967295;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = 32;
  local tmp30:4;
  tmp30 = tmp28 * tmp29;
  local tmp31:8;
  tmp31 = zext(tmp30);
  local tmp32:8;
  tmp32 = tmp27 << tmp31;
  local tmp33:8;
  tmp33 = ~ tmp32;
  local tmp34:8;
  tmp34 = S2_lsr_i_vw_Rdd32 & tmp33;
  local tmp35:8;
  local tmp36:4;
  local tmp37:4;
  tmp37 = 1;
  local tmp38:4;
  tmp38 = 32;
  local tmp39:4;
  tmp39 = tmp37 * tmp38;
  local tmp40:8;
  tmp40 = zext(tmp39);
  local tmp41:8;
  tmp41 = S2_lsr_i_vw_Rss32 s>> tmp40;
  local tmp42:8;
  tmp42 = 4294967295;
  local tmp43:8;
  tmp43 = tmp41 & tmp42;
  tmp36 = tmp43:4;
  tmp35 = sext(tmp36);
  local tmp44:8;
  tmp44 = sext(S2_lsr_i_vw_u5);
  local tmp45:8;
  tmp45 = tmp35 >> tmp44;
  local tmp46:8;
  tmp46 = 4294967295;
  local tmp47:8;
  tmp47 = tmp45 & tmp46;
  local tmp48:4;
  tmp48 = 1;
  local tmp49:4;
  tmp49 = 32;
  local tmp50:4;
  tmp50 = tmp48 * tmp49;
  local tmp51:8;
  tmp51 = zext(tmp50);
  local tmp52:8;
  tmp52 = tmp47 << tmp51;
  local tmp53:8;
  tmp53 = tmp34 | tmp52;
  S2_lsr_i_vw_Rdd32 = tmp53;
}

:S2_asl_i_vw S2_asl_i_vw_Rdd32 S2_asl_i_vw_Rss32 S2_asl_i_vw_u5 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_asl_i_vw_Rdd32 & S2_asl_i_vw_Rss32 & S2_asl_i_vw_u5 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_asl_i_vw_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:4;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 32;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = S2_asl_i_vw_Rss32 s>> tmp13;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = tmp14 & tmp15;
  tmp9 = tmp16:4;
  tmp8 = zext(tmp9);
  local tmp17:8;
  tmp17 = sext(S2_asl_i_vw_u5);
  local tmp18:8;
  tmp18 = tmp8 << tmp17;
  local tmp19:8;
  tmp19 = 4294967295;
  local tmp20:8;
  tmp20 = tmp18 & tmp19;
  local tmp21:4;
  tmp21 = 0;
  local tmp22:4;
  tmp22 = 32;
  local tmp23:4;
  tmp23 = tmp21 * tmp22;
  local tmp24:8;
  tmp24 = zext(tmp23);
  local tmp25:8;
  tmp25 = tmp20 << tmp24;
  local tmp26:8;
  tmp26 = tmp7 | tmp25;
  S2_asl_i_vw_Rdd32 = tmp26;
  local tmp27:8;
  tmp27 = 4294967295;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = 32;
  local tmp30:4;
  tmp30 = tmp28 * tmp29;
  local tmp31:8;
  tmp31 = zext(tmp30);
  local tmp32:8;
  tmp32 = tmp27 << tmp31;
  local tmp33:8;
  tmp33 = ~ tmp32;
  local tmp34:8;
  tmp34 = S2_asl_i_vw_Rdd32 & tmp33;
  local tmp35:8;
  local tmp36:4;
  local tmp37:4;
  tmp37 = 1;
  local tmp38:4;
  tmp38 = 32;
  local tmp39:4;
  tmp39 = tmp37 * tmp38;
  local tmp40:8;
  tmp40 = zext(tmp39);
  local tmp41:8;
  tmp41 = S2_asl_i_vw_Rss32 s>> tmp40;
  local tmp42:8;
  tmp42 = 4294967295;
  local tmp43:8;
  tmp43 = tmp41 & tmp42;
  tmp36 = tmp43:4;
  tmp35 = zext(tmp36);
  local tmp44:8;
  tmp44 = sext(S2_asl_i_vw_u5);
  local tmp45:8;
  tmp45 = tmp35 << tmp44;
  local tmp46:8;
  tmp46 = 4294967295;
  local tmp47:8;
  tmp47 = tmp45 & tmp46;
  local tmp48:4;
  tmp48 = 1;
  local tmp49:4;
  tmp49 = 32;
  local tmp50:4;
  tmp50 = tmp48 * tmp49;
  local tmp51:8;
  tmp51 = zext(tmp50);
  local tmp52:8;
  tmp52 = tmp47 << tmp51;
  local tmp53:8;
  tmp53 = tmp34 | tmp52;
  S2_asl_i_vw_Rdd32 = tmp53;
}

:S2_asr_r_vw S2_asr_r_vw_Rdd32 S2_asr_r_vw_Rss32 S2_asr_r_vw_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asr_r_vw_Rdd32 & S2_asr_r_vw_Rss32 & S2_asr_r_vw_Rt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_asr_r_vw_Rdd32 & tmp6;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 7;
  local tmp10:4;
  tmp10 = tmp8 << tmp9;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = tmp10 - tmp11;
  local tmp13:4;
  tmp13 = S2_asr_r_vw_Rt32 & tmp12;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = 7;
  local tmp16:4;
  tmp16 = 1;
  local tmp17:4;
  tmp17 = tmp15 - tmp16;
  local tmp18:4;
  tmp18 = tmp14 << tmp17;
  local tmp19:4;
  tmp19 = tmp13 ^ tmp18;
  local tmp20:4;
  tmp20 = 1;
  local tmp21:4;
  tmp21 = 7;
  local tmp22:4;
  tmp22 = 1;
  local tmp23:4;
  tmp23 = tmp21 - tmp22;
  local tmp24:4;
  tmp24 = tmp20 << tmp23;
  local tmp25:4;
  tmp25 = tmp19 - tmp24;
  local tmp26:4;
  tmp26 = 0;
  local tmp27:1;
  tmp27 = tmp25 s> tmp26;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <f_branch_30>;
<t_branch_30>
  local tmp30:8;
  local tmp31:4;
  local tmp32:8;
  local tmp33:4;
  local tmp34:4;
  tmp34 = 0;
  local tmp35:4;
  tmp35 = 32;
  local tmp36:4;
  tmp36 = tmp34 * tmp35;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = S2_asr_r_vw_Rss32 s>> tmp37;
  local tmp39:8;
  tmp39 = 4294967295;
  local tmp40:8;
  tmp40 = tmp38 & tmp39;
  tmp33 = tmp40:4;
  tmp32 = zext(tmp33);
  tmp31 = tmp32:4;
  tmp30 = zext(tmp31);
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = 7;
  local tmp43:4;
  tmp43 = tmp41 << tmp42;
  local tmp44:4;
  tmp44 = 1;
  local tmp45:4;
  tmp45 = tmp43 - tmp44;
  local tmp46:4;
  tmp46 = S2_asr_r_vw_Rt32 & tmp45;
  local tmp47:4;
  tmp47 = 1;
  local tmp48:4;
  tmp48 = 7;
  local tmp49:4;
  tmp49 = 1;
  local tmp50:4;
  tmp50 = tmp48 - tmp49;
  local tmp51:4;
  tmp51 = tmp47 << tmp50;
  local tmp52:4;
  tmp52 = tmp46 ^ tmp51;
  local tmp53:4;
  tmp53 = 1;
  local tmp54:4;
  tmp54 = 7;
  local tmp55:4;
  tmp55 = 1;
  local tmp56:4;
  tmp56 = tmp54 - tmp55;
  local tmp57:4;
  tmp57 = tmp53 << tmp56;
  local tmp58:4;
  tmp58 = tmp52 - tmp57;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = tmp30 s>> tmp59;
  local tmp61:8;
  tmp61 = tmp60;
  goto <done_30>;
<f_branch_30>
  local tmp62:8;
  local tmp63:4;
  local tmp64:8;
  local tmp65:4;
  local tmp66:4;
  tmp66 = 0;
  local tmp67:4;
  tmp67 = 32;
  local tmp68:4;
  tmp68 = tmp66 * tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = S2_asr_r_vw_Rss32 s>> tmp69;
  local tmp71:8;
  tmp71 = 4294967295;
  local tmp72:8;
  tmp72 = tmp70 & tmp71;
  tmp65 = tmp72:4;
  tmp64 = zext(tmp65);
  tmp63 = tmp64:4;
  tmp62 = zext(tmp63);
  local tmp73:4;
  tmp73 = 1;
  local tmp74:4;
  tmp74 = 7;
  local tmp75:4;
  tmp75 = tmp73 << tmp74;
  local tmp76:4;
  tmp76 = 1;
  local tmp77:4;
  tmp77 = tmp75 - tmp76;
  local tmp78:4;
  tmp78 = S2_asr_r_vw_Rt32 & tmp77;
  local tmp79:4;
  tmp79 = 1;
  local tmp80:4;
  tmp80 = 7;
  local tmp81:4;
  tmp81 = 1;
  local tmp82:4;
  tmp82 = tmp80 - tmp81;
  local tmp83:4;
  tmp83 = tmp79 << tmp82;
  local tmp84:4;
  tmp84 = tmp78 ^ tmp83;
  local tmp85:4;
  tmp85 = 1;
  local tmp86:4;
  tmp86 = 7;
  local tmp87:4;
  tmp87 = 1;
  local tmp88:4;
  tmp88 = tmp86 - tmp87;
  local tmp89:4;
  tmp89 = tmp85 << tmp88;
  local tmp90:4;
  tmp90 = tmp84 - tmp89;
  local tmp91:8;
  tmp91 = zext(tmp90);
  local tmp92:8;
  tmp92 = tmp62 << tmp91;
  tmp61 = tmp92;
<done_30>
  local tmp93:8;
  tmp93 = 4294967295;
  local tmp94:8;
  tmp94 = tmp61 & tmp93;
  local tmp95:4;
  tmp95 = 0;
  local tmp96:4;
  tmp96 = 32;
  local tmp97:4;
  tmp97 = tmp95 * tmp96;
  local tmp98:8;
  tmp98 = zext(tmp97);
  local tmp99:8;
  tmp99 = tmp94 << tmp98;
  local tmp100:8;
  tmp100 = tmp7 | tmp99;
  S2_asr_r_vw_Rdd32 = tmp100;
  local tmp101:8;
  tmp101 = 4294967295;
  local tmp102:4;
  tmp102 = 1;
  local tmp103:4;
  tmp103 = 32;
  local tmp104:4;
  tmp104 = tmp102 * tmp103;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp101 << tmp105;
  local tmp107:8;
  tmp107 = ~ tmp106;
  local tmp108:8;
  tmp108 = S2_asr_r_vw_Rdd32 & tmp107;
  local tmp109:4;
  tmp109 = 1;
  local tmp110:4;
  tmp110 = 7;
  local tmp111:4;
  tmp111 = tmp109 << tmp110;
  local tmp112:4;
  tmp112 = 1;
  local tmp113:4;
  tmp113 = tmp111 - tmp112;
  local tmp114:4;
  tmp114 = S2_asr_r_vw_Rt32 & tmp113;
  local tmp115:4;
  tmp115 = 1;
  local tmp116:4;
  tmp116 = 7;
  local tmp117:4;
  tmp117 = 1;
  local tmp118:4;
  tmp118 = tmp116 - tmp117;
  local tmp119:4;
  tmp119 = tmp115 << tmp118;
  local tmp120:4;
  tmp120 = tmp114 ^ tmp119;
  local tmp121:4;
  tmp121 = 1;
  local tmp122:4;
  tmp122 = 7;
  local tmp123:4;
  tmp123 = 1;
  local tmp124:4;
  tmp124 = tmp122 - tmp123;
  local tmp125:4;
  tmp125 = tmp121 << tmp124;
  local tmp126:4;
  tmp126 = tmp120 - tmp125;
  local tmp127:4;
  tmp127 = 0;
  local tmp128:1;
  tmp128 = tmp126 s> tmp127;
  local tmp129:1;
  tmp129 = tmp128;
  if (tmp129) goto <t_branch_131>;
  goto <f_branch_131>;
<t_branch_131>
  local tmp131:8;
  local tmp132:4;
  local tmp133:8;
  local tmp134:4;
  local tmp135:4;
  tmp135 = 1;
  local tmp136:4;
  tmp136 = 32;
  local tmp137:4;
  tmp137 = tmp135 * tmp136;
  local tmp138:8;
  tmp138 = zext(tmp137);
  local tmp139:8;
  tmp139 = S2_asr_r_vw_Rss32 s>> tmp138;
  local tmp140:8;
  tmp140 = 4294967295;
  local tmp141:8;
  tmp141 = tmp139 & tmp140;
  tmp134 = tmp141:4;
  tmp133 = zext(tmp134);
  tmp132 = tmp133:4;
  tmp131 = zext(tmp132);
  local tmp142:4;
  tmp142 = 1;
  local tmp143:4;
  tmp143 = 7;
  local tmp144:4;
  tmp144 = tmp142 << tmp143;
  local tmp145:4;
  tmp145 = 1;
  local tmp146:4;
  tmp146 = tmp144 - tmp145;
  local tmp147:4;
  tmp147 = S2_asr_r_vw_Rt32 & tmp146;
  local tmp148:4;
  tmp148 = 1;
  local tmp149:4;
  tmp149 = 7;
  local tmp150:4;
  tmp150 = 1;
  local tmp151:4;
  tmp151 = tmp149 - tmp150;
  local tmp152:4;
  tmp152 = tmp148 << tmp151;
  local tmp153:4;
  tmp153 = tmp147 ^ tmp152;
  local tmp154:4;
  tmp154 = 1;
  local tmp155:4;
  tmp155 = 7;
  local tmp156:4;
  tmp156 = 1;
  local tmp157:4;
  tmp157 = tmp155 - tmp156;
  local tmp158:4;
  tmp158 = tmp154 << tmp157;
  local tmp159:4;
  tmp159 = tmp153 - tmp158;
  local tmp160:8;
  tmp160 = zext(tmp159);
  local tmp161:8;
  tmp161 = tmp131 s>> tmp160;
  local tmp162:8;
  tmp162 = tmp161;
  goto <done_131>;
<f_branch_131>
  local tmp163:8;
  local tmp164:4;
  local tmp165:8;
  local tmp166:4;
  local tmp167:4;
  tmp167 = 1;
  local tmp168:4;
  tmp168 = 32;
  local tmp169:4;
  tmp169 = tmp167 * tmp168;
  local tmp170:8;
  tmp170 = zext(tmp169);
  local tmp171:8;
  tmp171 = S2_asr_r_vw_Rss32 s>> tmp170;
  local tmp172:8;
  tmp172 = 4294967295;
  local tmp173:8;
  tmp173 = tmp171 & tmp172;
  tmp166 = tmp173:4;
  tmp165 = zext(tmp166);
  tmp164 = tmp165:4;
  tmp163 = zext(tmp164);
  local tmp174:4;
  tmp174 = 1;
  local tmp175:4;
  tmp175 = 7;
  local tmp176:4;
  tmp176 = tmp174 << tmp175;
  local tmp177:4;
  tmp177 = 1;
  local tmp178:4;
  tmp178 = tmp176 - tmp177;
  local tmp179:4;
  tmp179 = S2_asr_r_vw_Rt32 & tmp178;
  local tmp180:4;
  tmp180 = 1;
  local tmp181:4;
  tmp181 = 7;
  local tmp182:4;
  tmp182 = 1;
  local tmp183:4;
  tmp183 = tmp181 - tmp182;
  local tmp184:4;
  tmp184 = tmp180 << tmp183;
  local tmp185:4;
  tmp185 = tmp179 ^ tmp184;
  local tmp186:4;
  tmp186 = 1;
  local tmp187:4;
  tmp187 = 7;
  local tmp188:4;
  tmp188 = 1;
  local tmp189:4;
  tmp189 = tmp187 - tmp188;
  local tmp190:4;
  tmp190 = tmp186 << tmp189;
  local tmp191:4;
  tmp191 = tmp185 - tmp190;
  local tmp192:8;
  tmp192 = zext(tmp191);
  local tmp193:8;
  tmp193 = tmp163 << tmp192;
  tmp162 = tmp193;
<done_131>
  local tmp194:8;
  tmp194 = 4294967295;
  local tmp195:8;
  tmp195 = tmp162 & tmp194;
  local tmp196:4;
  tmp196 = 1;
  local tmp197:4;
  tmp197 = 32;
  local tmp198:4;
  tmp198 = tmp196 * tmp197;
  local tmp199:8;
  tmp199 = zext(tmp198);
  local tmp200:8;
  tmp200 = tmp195 << tmp199;
  local tmp201:8;
  tmp201 = tmp108 | tmp200;
  S2_asr_r_vw_Rdd32 = tmp201;
}

:S2_asl_r_vw S2_asl_r_vw_Rdd32 S2_asl_r_vw_Rss32 S2_asl_r_vw_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_asl_r_vw_Rdd32 & S2_asl_r_vw_Rss32 & S2_asl_r_vw_Rt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_asl_r_vw_Rdd32 & tmp6;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 7;
  local tmp10:4;
  tmp10 = tmp8 << tmp9;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = tmp10 - tmp11;
  local tmp13:4;
  tmp13 = S2_asl_r_vw_Rt32 & tmp12;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = 7;
  local tmp16:4;
  tmp16 = 1;
  local tmp17:4;
  tmp17 = tmp15 - tmp16;
  local tmp18:4;
  tmp18 = tmp14 << tmp17;
  local tmp19:4;
  tmp19 = tmp13 ^ tmp18;
  local tmp20:4;
  tmp20 = 1;
  local tmp21:4;
  tmp21 = 7;
  local tmp22:4;
  tmp22 = 1;
  local tmp23:4;
  tmp23 = tmp21 - tmp22;
  local tmp24:4;
  tmp24 = tmp20 << tmp23;
  local tmp25:4;
  tmp25 = tmp19 - tmp24;
  local tmp26:4;
  tmp26 = 0;
  local tmp27:1;
  tmp27 = tmp25 s> tmp26;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <f_branch_30>;
<t_branch_30>
  local tmp30:8;
  local tmp31:4;
  local tmp32:8;
  local tmp33:4;
  local tmp34:4;
  tmp34 = 0;
  local tmp35:4;
  tmp35 = 32;
  local tmp36:4;
  tmp36 = tmp34 * tmp35;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = S2_asl_r_vw_Rss32 s>> tmp37;
  local tmp39:8;
  tmp39 = 4294967295;
  local tmp40:8;
  tmp40 = tmp38 & tmp39;
  tmp33 = tmp40:4;
  tmp32 = zext(tmp33);
  tmp31 = tmp32:4;
  tmp30 = zext(tmp31);
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = 7;
  local tmp43:4;
  tmp43 = tmp41 << tmp42;
  local tmp44:4;
  tmp44 = 1;
  local tmp45:4;
  tmp45 = tmp43 - tmp44;
  local tmp46:4;
  tmp46 = S2_asl_r_vw_Rt32 & tmp45;
  local tmp47:4;
  tmp47 = 1;
  local tmp48:4;
  tmp48 = 7;
  local tmp49:4;
  tmp49 = 1;
  local tmp50:4;
  tmp50 = tmp48 - tmp49;
  local tmp51:4;
  tmp51 = tmp47 << tmp50;
  local tmp52:4;
  tmp52 = tmp46 ^ tmp51;
  local tmp53:4;
  tmp53 = 1;
  local tmp54:4;
  tmp54 = 7;
  local tmp55:4;
  tmp55 = 1;
  local tmp56:4;
  tmp56 = tmp54 - tmp55;
  local tmp57:4;
  tmp57 = tmp53 << tmp56;
  local tmp58:4;
  tmp58 = tmp52 - tmp57;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = tmp30 << tmp59;
  local tmp61:8;
  tmp61 = tmp60;
  goto <done_30>;
<f_branch_30>
  local tmp62:8;
  local tmp63:4;
  local tmp64:8;
  local tmp65:4;
  local tmp66:4;
  tmp66 = 0;
  local tmp67:4;
  tmp67 = 32;
  local tmp68:4;
  tmp68 = tmp66 * tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = S2_asl_r_vw_Rss32 s>> tmp69;
  local tmp71:8;
  tmp71 = 4294967295;
  local tmp72:8;
  tmp72 = tmp70 & tmp71;
  tmp65 = tmp72:4;
  tmp64 = zext(tmp65);
  tmp63 = tmp64:4;
  tmp62 = zext(tmp63);
  local tmp73:4;
  tmp73 = 1;
  local tmp74:4;
  tmp74 = 7;
  local tmp75:4;
  tmp75 = tmp73 << tmp74;
  local tmp76:4;
  tmp76 = 1;
  local tmp77:4;
  tmp77 = tmp75 - tmp76;
  local tmp78:4;
  tmp78 = S2_asl_r_vw_Rt32 & tmp77;
  local tmp79:4;
  tmp79 = 1;
  local tmp80:4;
  tmp80 = 7;
  local tmp81:4;
  tmp81 = 1;
  local tmp82:4;
  tmp82 = tmp80 - tmp81;
  local tmp83:4;
  tmp83 = tmp79 << tmp82;
  local tmp84:4;
  tmp84 = tmp78 ^ tmp83;
  local tmp85:4;
  tmp85 = 1;
  local tmp86:4;
  tmp86 = 7;
  local tmp87:4;
  tmp87 = 1;
  local tmp88:4;
  tmp88 = tmp86 - tmp87;
  local tmp89:4;
  tmp89 = tmp85 << tmp88;
  local tmp90:4;
  tmp90 = tmp84 - tmp89;
  local tmp91:8;
  tmp91 = zext(tmp90);
  local tmp92:8;
  tmp92 = tmp62 s>> tmp91;
  tmp61 = tmp92;
<done_30>
  local tmp93:8;
  tmp93 = 4294967295;
  local tmp94:8;
  tmp94 = tmp61 & tmp93;
  local tmp95:4;
  tmp95 = 0;
  local tmp96:4;
  tmp96 = 32;
  local tmp97:4;
  tmp97 = tmp95 * tmp96;
  local tmp98:8;
  tmp98 = zext(tmp97);
  local tmp99:8;
  tmp99 = tmp94 << tmp98;
  local tmp100:8;
  tmp100 = tmp7 | tmp99;
  S2_asl_r_vw_Rdd32 = tmp100;
  local tmp101:8;
  tmp101 = 4294967295;
  local tmp102:4;
  tmp102 = 1;
  local tmp103:4;
  tmp103 = 32;
  local tmp104:4;
  tmp104 = tmp102 * tmp103;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp101 << tmp105;
  local tmp107:8;
  tmp107 = ~ tmp106;
  local tmp108:8;
  tmp108 = S2_asl_r_vw_Rdd32 & tmp107;
  local tmp109:4;
  tmp109 = 1;
  local tmp110:4;
  tmp110 = 7;
  local tmp111:4;
  tmp111 = tmp109 << tmp110;
  local tmp112:4;
  tmp112 = 1;
  local tmp113:4;
  tmp113 = tmp111 - tmp112;
  local tmp114:4;
  tmp114 = S2_asl_r_vw_Rt32 & tmp113;
  local tmp115:4;
  tmp115 = 1;
  local tmp116:4;
  tmp116 = 7;
  local tmp117:4;
  tmp117 = 1;
  local tmp118:4;
  tmp118 = tmp116 - tmp117;
  local tmp119:4;
  tmp119 = tmp115 << tmp118;
  local tmp120:4;
  tmp120 = tmp114 ^ tmp119;
  local tmp121:4;
  tmp121 = 1;
  local tmp122:4;
  tmp122 = 7;
  local tmp123:4;
  tmp123 = 1;
  local tmp124:4;
  tmp124 = tmp122 - tmp123;
  local tmp125:4;
  tmp125 = tmp121 << tmp124;
  local tmp126:4;
  tmp126 = tmp120 - tmp125;
  local tmp127:4;
  tmp127 = 0;
  local tmp128:1;
  tmp128 = tmp126 s> tmp127;
  local tmp129:1;
  tmp129 = tmp128;
  if (tmp129) goto <t_branch_131>;
  goto <f_branch_131>;
<t_branch_131>
  local tmp131:8;
  local tmp132:4;
  local tmp133:8;
  local tmp134:4;
  local tmp135:4;
  tmp135 = 1;
  local tmp136:4;
  tmp136 = 32;
  local tmp137:4;
  tmp137 = tmp135 * tmp136;
  local tmp138:8;
  tmp138 = zext(tmp137);
  local tmp139:8;
  tmp139 = S2_asl_r_vw_Rss32 s>> tmp138;
  local tmp140:8;
  tmp140 = 4294967295;
  local tmp141:8;
  tmp141 = tmp139 & tmp140;
  tmp134 = tmp141:4;
  tmp133 = zext(tmp134);
  tmp132 = tmp133:4;
  tmp131 = zext(tmp132);
  local tmp142:4;
  tmp142 = 1;
  local tmp143:4;
  tmp143 = 7;
  local tmp144:4;
  tmp144 = tmp142 << tmp143;
  local tmp145:4;
  tmp145 = 1;
  local tmp146:4;
  tmp146 = tmp144 - tmp145;
  local tmp147:4;
  tmp147 = S2_asl_r_vw_Rt32 & tmp146;
  local tmp148:4;
  tmp148 = 1;
  local tmp149:4;
  tmp149 = 7;
  local tmp150:4;
  tmp150 = 1;
  local tmp151:4;
  tmp151 = tmp149 - tmp150;
  local tmp152:4;
  tmp152 = tmp148 << tmp151;
  local tmp153:4;
  tmp153 = tmp147 ^ tmp152;
  local tmp154:4;
  tmp154 = 1;
  local tmp155:4;
  tmp155 = 7;
  local tmp156:4;
  tmp156 = 1;
  local tmp157:4;
  tmp157 = tmp155 - tmp156;
  local tmp158:4;
  tmp158 = tmp154 << tmp157;
  local tmp159:4;
  tmp159 = tmp153 - tmp158;
  local tmp160:8;
  tmp160 = zext(tmp159);
  local tmp161:8;
  tmp161 = tmp131 << tmp160;
  local tmp162:8;
  tmp162 = tmp161;
  goto <done_131>;
<f_branch_131>
  local tmp163:8;
  local tmp164:4;
  local tmp165:8;
  local tmp166:4;
  local tmp167:4;
  tmp167 = 1;
  local tmp168:4;
  tmp168 = 32;
  local tmp169:4;
  tmp169 = tmp167 * tmp168;
  local tmp170:8;
  tmp170 = zext(tmp169);
  local tmp171:8;
  tmp171 = S2_asl_r_vw_Rss32 s>> tmp170;
  local tmp172:8;
  tmp172 = 4294967295;
  local tmp173:8;
  tmp173 = tmp171 & tmp172;
  tmp166 = tmp173:4;
  tmp165 = zext(tmp166);
  tmp164 = tmp165:4;
  tmp163 = zext(tmp164);
  local tmp174:4;
  tmp174 = 1;
  local tmp175:4;
  tmp175 = 7;
  local tmp176:4;
  tmp176 = tmp174 << tmp175;
  local tmp177:4;
  tmp177 = 1;
  local tmp178:4;
  tmp178 = tmp176 - tmp177;
  local tmp179:4;
  tmp179 = S2_asl_r_vw_Rt32 & tmp178;
  local tmp180:4;
  tmp180 = 1;
  local tmp181:4;
  tmp181 = 7;
  local tmp182:4;
  tmp182 = 1;
  local tmp183:4;
  tmp183 = tmp181 - tmp182;
  local tmp184:4;
  tmp184 = tmp180 << tmp183;
  local tmp185:4;
  tmp185 = tmp179 ^ tmp184;
  local tmp186:4;
  tmp186 = 1;
  local tmp187:4;
  tmp187 = 7;
  local tmp188:4;
  tmp188 = 1;
  local tmp189:4;
  tmp189 = tmp187 - tmp188;
  local tmp190:4;
  tmp190 = tmp186 << tmp189;
  local tmp191:4;
  tmp191 = tmp185 - tmp190;
  local tmp192:8;
  tmp192 = zext(tmp191);
  local tmp193:8;
  tmp193 = tmp163 s>> tmp192;
  tmp162 = tmp193;
<done_131>
  local tmp194:8;
  tmp194 = 4294967295;
  local tmp195:8;
  tmp195 = tmp162 & tmp194;
  local tmp196:4;
  tmp196 = 1;
  local tmp197:4;
  tmp197 = 32;
  local tmp198:4;
  tmp198 = tmp196 * tmp197;
  local tmp199:8;
  tmp199 = zext(tmp198);
  local tmp200:8;
  tmp200 = tmp195 << tmp199;
  local tmp201:8;
  tmp201 = tmp108 | tmp200;
  S2_asl_r_vw_Rdd32 = tmp201;
}

:S2_lsr_r_vw S2_lsr_r_vw_Rdd32 S2_lsr_r_vw_Rss32 S2_lsr_r_vw_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsr_r_vw_Rdd32 & S2_lsr_r_vw_Rss32 & S2_lsr_r_vw_Rt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_lsr_r_vw_Rdd32 & tmp6;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 7;
  local tmp10:4;
  tmp10 = tmp8 << tmp9;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = tmp10 - tmp11;
  local tmp13:4;
  tmp13 = S2_lsr_r_vw_Rt32 & tmp12;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = 7;
  local tmp16:4;
  tmp16 = 1;
  local tmp17:4;
  tmp17 = tmp15 - tmp16;
  local tmp18:4;
  tmp18 = tmp14 << tmp17;
  local tmp19:4;
  tmp19 = tmp13 ^ tmp18;
  local tmp20:4;
  tmp20 = 1;
  local tmp21:4;
  tmp21 = 7;
  local tmp22:4;
  tmp22 = 1;
  local tmp23:4;
  tmp23 = tmp21 - tmp22;
  local tmp24:4;
  tmp24 = tmp20 << tmp23;
  local tmp25:4;
  tmp25 = tmp19 - tmp24;
  local tmp26:4;
  tmp26 = 0;
  local tmp27:1;
  tmp27 = tmp25 s> tmp26;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <f_branch_30>;
<t_branch_30>
  local tmp30:8;
  local tmp31:4;
  local tmp32:8;
  local tmp33:4;
  local tmp34:4;
  tmp34 = 0;
  local tmp35:4;
  tmp35 = 32;
  local tmp36:4;
  tmp36 = tmp34 * tmp35;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = S2_lsr_r_vw_Rss32 s>> tmp37;
  local tmp39:8;
  tmp39 = 4294967295;
  local tmp40:8;
  tmp40 = tmp38 & tmp39;
  tmp33 = tmp40:4;
  tmp32 = sext(tmp33);
  tmp31 = tmp32:4;
  tmp30 = sext(tmp31);
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = 7;
  local tmp43:4;
  tmp43 = tmp41 << tmp42;
  local tmp44:4;
  tmp44 = 1;
  local tmp45:4;
  tmp45 = tmp43 - tmp44;
  local tmp46:4;
  tmp46 = S2_lsr_r_vw_Rt32 & tmp45;
  local tmp47:4;
  tmp47 = 1;
  local tmp48:4;
  tmp48 = 7;
  local tmp49:4;
  tmp49 = 1;
  local tmp50:4;
  tmp50 = tmp48 - tmp49;
  local tmp51:4;
  tmp51 = tmp47 << tmp50;
  local tmp52:4;
  tmp52 = tmp46 ^ tmp51;
  local tmp53:4;
  tmp53 = 1;
  local tmp54:4;
  tmp54 = 7;
  local tmp55:4;
  tmp55 = 1;
  local tmp56:4;
  tmp56 = tmp54 - tmp55;
  local tmp57:4;
  tmp57 = tmp53 << tmp56;
  local tmp58:4;
  tmp58 = tmp52 - tmp57;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = tmp30 >> tmp59;
  local tmp61:8;
  tmp61 = tmp60;
  goto <done_30>;
<f_branch_30>
  local tmp62:8;
  local tmp63:4;
  local tmp64:8;
  local tmp65:4;
  local tmp66:4;
  tmp66 = 0;
  local tmp67:4;
  tmp67 = 32;
  local tmp68:4;
  tmp68 = tmp66 * tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = S2_lsr_r_vw_Rss32 s>> tmp69;
  local tmp71:8;
  tmp71 = 4294967295;
  local tmp72:8;
  tmp72 = tmp70 & tmp71;
  tmp65 = tmp72:4;
  tmp64 = sext(tmp65);
  tmp63 = tmp64:4;
  tmp62 = sext(tmp63);
  local tmp73:4;
  tmp73 = 1;
  local tmp74:4;
  tmp74 = 7;
  local tmp75:4;
  tmp75 = tmp73 << tmp74;
  local tmp76:4;
  tmp76 = 1;
  local tmp77:4;
  tmp77 = tmp75 - tmp76;
  local tmp78:4;
  tmp78 = S2_lsr_r_vw_Rt32 & tmp77;
  local tmp79:4;
  tmp79 = 1;
  local tmp80:4;
  tmp80 = 7;
  local tmp81:4;
  tmp81 = 1;
  local tmp82:4;
  tmp82 = tmp80 - tmp81;
  local tmp83:4;
  tmp83 = tmp79 << tmp82;
  local tmp84:4;
  tmp84 = tmp78 ^ tmp83;
  local tmp85:4;
  tmp85 = 1;
  local tmp86:4;
  tmp86 = 7;
  local tmp87:4;
  tmp87 = 1;
  local tmp88:4;
  tmp88 = tmp86 - tmp87;
  local tmp89:4;
  tmp89 = tmp85 << tmp88;
  local tmp90:4;
  tmp90 = tmp84 - tmp89;
  local tmp91:8;
  tmp91 = zext(tmp90);
  local tmp92:8;
  tmp92 = tmp62 << tmp91;
  tmp61 = tmp92;
<done_30>
  local tmp93:8;
  tmp93 = 4294967295;
  local tmp94:8;
  tmp94 = tmp61 & tmp93;
  local tmp95:4;
  tmp95 = 0;
  local tmp96:4;
  tmp96 = 32;
  local tmp97:4;
  tmp97 = tmp95 * tmp96;
  local tmp98:8;
  tmp98 = zext(tmp97);
  local tmp99:8;
  tmp99 = tmp94 << tmp98;
  local tmp100:8;
  tmp100 = tmp7 | tmp99;
  S2_lsr_r_vw_Rdd32 = tmp100;
  local tmp101:8;
  tmp101 = 4294967295;
  local tmp102:4;
  tmp102 = 1;
  local tmp103:4;
  tmp103 = 32;
  local tmp104:4;
  tmp104 = tmp102 * tmp103;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp101 << tmp105;
  local tmp107:8;
  tmp107 = ~ tmp106;
  local tmp108:8;
  tmp108 = S2_lsr_r_vw_Rdd32 & tmp107;
  local tmp109:4;
  tmp109 = 1;
  local tmp110:4;
  tmp110 = 7;
  local tmp111:4;
  tmp111 = tmp109 << tmp110;
  local tmp112:4;
  tmp112 = 1;
  local tmp113:4;
  tmp113 = tmp111 - tmp112;
  local tmp114:4;
  tmp114 = S2_lsr_r_vw_Rt32 & tmp113;
  local tmp115:4;
  tmp115 = 1;
  local tmp116:4;
  tmp116 = 7;
  local tmp117:4;
  tmp117 = 1;
  local tmp118:4;
  tmp118 = tmp116 - tmp117;
  local tmp119:4;
  tmp119 = tmp115 << tmp118;
  local tmp120:4;
  tmp120 = tmp114 ^ tmp119;
  local tmp121:4;
  tmp121 = 1;
  local tmp122:4;
  tmp122 = 7;
  local tmp123:4;
  tmp123 = 1;
  local tmp124:4;
  tmp124 = tmp122 - tmp123;
  local tmp125:4;
  tmp125 = tmp121 << tmp124;
  local tmp126:4;
  tmp126 = tmp120 - tmp125;
  local tmp127:4;
  tmp127 = 0;
  local tmp128:1;
  tmp128 = tmp126 s> tmp127;
  local tmp129:1;
  tmp129 = tmp128;
  if (tmp129) goto <t_branch_131>;
  goto <f_branch_131>;
<t_branch_131>
  local tmp131:8;
  local tmp132:4;
  local tmp133:8;
  local tmp134:4;
  local tmp135:4;
  tmp135 = 1;
  local tmp136:4;
  tmp136 = 32;
  local tmp137:4;
  tmp137 = tmp135 * tmp136;
  local tmp138:8;
  tmp138 = zext(tmp137);
  local tmp139:8;
  tmp139 = S2_lsr_r_vw_Rss32 s>> tmp138;
  local tmp140:8;
  tmp140 = 4294967295;
  local tmp141:8;
  tmp141 = tmp139 & tmp140;
  tmp134 = tmp141:4;
  tmp133 = sext(tmp134);
  tmp132 = tmp133:4;
  tmp131 = sext(tmp132);
  local tmp142:4;
  tmp142 = 1;
  local tmp143:4;
  tmp143 = 7;
  local tmp144:4;
  tmp144 = tmp142 << tmp143;
  local tmp145:4;
  tmp145 = 1;
  local tmp146:4;
  tmp146 = tmp144 - tmp145;
  local tmp147:4;
  tmp147 = S2_lsr_r_vw_Rt32 & tmp146;
  local tmp148:4;
  tmp148 = 1;
  local tmp149:4;
  tmp149 = 7;
  local tmp150:4;
  tmp150 = 1;
  local tmp151:4;
  tmp151 = tmp149 - tmp150;
  local tmp152:4;
  tmp152 = tmp148 << tmp151;
  local tmp153:4;
  tmp153 = tmp147 ^ tmp152;
  local tmp154:4;
  tmp154 = 1;
  local tmp155:4;
  tmp155 = 7;
  local tmp156:4;
  tmp156 = 1;
  local tmp157:4;
  tmp157 = tmp155 - tmp156;
  local tmp158:4;
  tmp158 = tmp154 << tmp157;
  local tmp159:4;
  tmp159 = tmp153 - tmp158;
  local tmp160:8;
  tmp160 = zext(tmp159);
  local tmp161:8;
  tmp161 = tmp131 >> tmp160;
  local tmp162:8;
  tmp162 = tmp161;
  goto <done_131>;
<f_branch_131>
  local tmp163:8;
  local tmp164:4;
  local tmp165:8;
  local tmp166:4;
  local tmp167:4;
  tmp167 = 1;
  local tmp168:4;
  tmp168 = 32;
  local tmp169:4;
  tmp169 = tmp167 * tmp168;
  local tmp170:8;
  tmp170 = zext(tmp169);
  local tmp171:8;
  tmp171 = S2_lsr_r_vw_Rss32 s>> tmp170;
  local tmp172:8;
  tmp172 = 4294967295;
  local tmp173:8;
  tmp173 = tmp171 & tmp172;
  tmp166 = tmp173:4;
  tmp165 = sext(tmp166);
  tmp164 = tmp165:4;
  tmp163 = sext(tmp164);
  local tmp174:4;
  tmp174 = 1;
  local tmp175:4;
  tmp175 = 7;
  local tmp176:4;
  tmp176 = tmp174 << tmp175;
  local tmp177:4;
  tmp177 = 1;
  local tmp178:4;
  tmp178 = tmp176 - tmp177;
  local tmp179:4;
  tmp179 = S2_lsr_r_vw_Rt32 & tmp178;
  local tmp180:4;
  tmp180 = 1;
  local tmp181:4;
  tmp181 = 7;
  local tmp182:4;
  tmp182 = 1;
  local tmp183:4;
  tmp183 = tmp181 - tmp182;
  local tmp184:4;
  tmp184 = tmp180 << tmp183;
  local tmp185:4;
  tmp185 = tmp179 ^ tmp184;
  local tmp186:4;
  tmp186 = 1;
  local tmp187:4;
  tmp187 = 7;
  local tmp188:4;
  tmp188 = 1;
  local tmp189:4;
  tmp189 = tmp187 - tmp188;
  local tmp190:4;
  tmp190 = tmp186 << tmp189;
  local tmp191:4;
  tmp191 = tmp185 - tmp190;
  local tmp192:8;
  tmp192 = zext(tmp191);
  local tmp193:8;
  tmp193 = tmp163 << tmp192;
  tmp162 = tmp193;
<done_131>
  local tmp194:8;
  tmp194 = 4294967295;
  local tmp195:8;
  tmp195 = tmp162 & tmp194;
  local tmp196:4;
  tmp196 = 1;
  local tmp197:4;
  tmp197 = 32;
  local tmp198:4;
  tmp198 = tmp196 * tmp197;
  local tmp199:8;
  tmp199 = zext(tmp198);
  local tmp200:8;
  tmp200 = tmp195 << tmp199;
  local tmp201:8;
  tmp201 = tmp108 | tmp200;
  S2_lsr_r_vw_Rdd32 = tmp201;
}

:S2_lsl_r_vw S2_lsl_r_vw_Rdd32 S2_lsl_r_vw_Rss32 S2_lsl_r_vw_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lsl_r_vw_Rdd32 & S2_lsl_r_vw_Rss32 & S2_lsl_r_vw_Rt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_lsl_r_vw_Rdd32 & tmp6;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = 7;
  local tmp10:4;
  tmp10 = tmp8 << tmp9;
  local tmp11:4;
  tmp11 = 1;
  local tmp12:4;
  tmp12 = tmp10 - tmp11;
  local tmp13:4;
  tmp13 = S2_lsl_r_vw_Rt32 & tmp12;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = 7;
  local tmp16:4;
  tmp16 = 1;
  local tmp17:4;
  tmp17 = tmp15 - tmp16;
  local tmp18:4;
  tmp18 = tmp14 << tmp17;
  local tmp19:4;
  tmp19 = tmp13 ^ tmp18;
  local tmp20:4;
  tmp20 = 1;
  local tmp21:4;
  tmp21 = 7;
  local tmp22:4;
  tmp22 = 1;
  local tmp23:4;
  tmp23 = tmp21 - tmp22;
  local tmp24:4;
  tmp24 = tmp20 << tmp23;
  local tmp25:4;
  tmp25 = tmp19 - tmp24;
  local tmp26:4;
  tmp26 = 0;
  local tmp27:1;
  tmp27 = tmp25 s> tmp26;
  local tmp28:1;
  tmp28 = tmp27;
  if (tmp28) goto <t_branch_30>;
  goto <f_branch_30>;
<t_branch_30>
  local tmp30:8;
  local tmp31:4;
  local tmp32:8;
  local tmp33:4;
  local tmp34:4;
  tmp34 = 0;
  local tmp35:4;
  tmp35 = 32;
  local tmp36:4;
  tmp36 = tmp34 * tmp35;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = S2_lsl_r_vw_Rss32 s>> tmp37;
  local tmp39:8;
  tmp39 = 4294967295;
  local tmp40:8;
  tmp40 = tmp38 & tmp39;
  tmp33 = tmp40:4;
  tmp32 = sext(tmp33);
  tmp31 = tmp32:4;
  tmp30 = sext(tmp31);
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = 7;
  local tmp43:4;
  tmp43 = tmp41 << tmp42;
  local tmp44:4;
  tmp44 = 1;
  local tmp45:4;
  tmp45 = tmp43 - tmp44;
  local tmp46:4;
  tmp46 = S2_lsl_r_vw_Rt32 & tmp45;
  local tmp47:4;
  tmp47 = 1;
  local tmp48:4;
  tmp48 = 7;
  local tmp49:4;
  tmp49 = 1;
  local tmp50:4;
  tmp50 = tmp48 - tmp49;
  local tmp51:4;
  tmp51 = tmp47 << tmp50;
  local tmp52:4;
  tmp52 = tmp46 ^ tmp51;
  local tmp53:4;
  tmp53 = 1;
  local tmp54:4;
  tmp54 = 7;
  local tmp55:4;
  tmp55 = 1;
  local tmp56:4;
  tmp56 = tmp54 - tmp55;
  local tmp57:4;
  tmp57 = tmp53 << tmp56;
  local tmp58:4;
  tmp58 = tmp52 - tmp57;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = tmp30 << tmp59;
  local tmp61:8;
  tmp61 = tmp60;
  goto <done_30>;
<f_branch_30>
  local tmp62:8;
  local tmp63:4;
  local tmp64:8;
  local tmp65:4;
  local tmp66:4;
  tmp66 = 0;
  local tmp67:4;
  tmp67 = 32;
  local tmp68:4;
  tmp68 = tmp66 * tmp67;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = S2_lsl_r_vw_Rss32 s>> tmp69;
  local tmp71:8;
  tmp71 = 4294967295;
  local tmp72:8;
  tmp72 = tmp70 & tmp71;
  tmp65 = tmp72:4;
  tmp64 = sext(tmp65);
  tmp63 = tmp64:4;
  tmp62 = sext(tmp63);
  local tmp73:4;
  tmp73 = 1;
  local tmp74:4;
  tmp74 = 7;
  local tmp75:4;
  tmp75 = tmp73 << tmp74;
  local tmp76:4;
  tmp76 = 1;
  local tmp77:4;
  tmp77 = tmp75 - tmp76;
  local tmp78:4;
  tmp78 = S2_lsl_r_vw_Rt32 & tmp77;
  local tmp79:4;
  tmp79 = 1;
  local tmp80:4;
  tmp80 = 7;
  local tmp81:4;
  tmp81 = 1;
  local tmp82:4;
  tmp82 = tmp80 - tmp81;
  local tmp83:4;
  tmp83 = tmp79 << tmp82;
  local tmp84:4;
  tmp84 = tmp78 ^ tmp83;
  local tmp85:4;
  tmp85 = 1;
  local tmp86:4;
  tmp86 = 7;
  local tmp87:4;
  tmp87 = 1;
  local tmp88:4;
  tmp88 = tmp86 - tmp87;
  local tmp89:4;
  tmp89 = tmp85 << tmp88;
  local tmp90:4;
  tmp90 = tmp84 - tmp89;
  local tmp91:8;
  tmp91 = zext(tmp90);
  local tmp92:8;
  tmp92 = tmp62 >> tmp91;
  tmp61 = tmp92;
<done_30>
  local tmp93:8;
  tmp93 = 4294967295;
  local tmp94:8;
  tmp94 = tmp61 & tmp93;
  local tmp95:4;
  tmp95 = 0;
  local tmp96:4;
  tmp96 = 32;
  local tmp97:4;
  tmp97 = tmp95 * tmp96;
  local tmp98:8;
  tmp98 = zext(tmp97);
  local tmp99:8;
  tmp99 = tmp94 << tmp98;
  local tmp100:8;
  tmp100 = tmp7 | tmp99;
  S2_lsl_r_vw_Rdd32 = tmp100;
  local tmp101:8;
  tmp101 = 4294967295;
  local tmp102:4;
  tmp102 = 1;
  local tmp103:4;
  tmp103 = 32;
  local tmp104:4;
  tmp104 = tmp102 * tmp103;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp101 << tmp105;
  local tmp107:8;
  tmp107 = ~ tmp106;
  local tmp108:8;
  tmp108 = S2_lsl_r_vw_Rdd32 & tmp107;
  local tmp109:4;
  tmp109 = 1;
  local tmp110:4;
  tmp110 = 7;
  local tmp111:4;
  tmp111 = tmp109 << tmp110;
  local tmp112:4;
  tmp112 = 1;
  local tmp113:4;
  tmp113 = tmp111 - tmp112;
  local tmp114:4;
  tmp114 = S2_lsl_r_vw_Rt32 & tmp113;
  local tmp115:4;
  tmp115 = 1;
  local tmp116:4;
  tmp116 = 7;
  local tmp117:4;
  tmp117 = 1;
  local tmp118:4;
  tmp118 = tmp116 - tmp117;
  local tmp119:4;
  tmp119 = tmp115 << tmp118;
  local tmp120:4;
  tmp120 = tmp114 ^ tmp119;
  local tmp121:4;
  tmp121 = 1;
  local tmp122:4;
  tmp122 = 7;
  local tmp123:4;
  tmp123 = 1;
  local tmp124:4;
  tmp124 = tmp122 - tmp123;
  local tmp125:4;
  tmp125 = tmp121 << tmp124;
  local tmp126:4;
  tmp126 = tmp120 - tmp125;
  local tmp127:4;
  tmp127 = 0;
  local tmp128:1;
  tmp128 = tmp126 s> tmp127;
  local tmp129:1;
  tmp129 = tmp128;
  if (tmp129) goto <t_branch_131>;
  goto <f_branch_131>;
<t_branch_131>
  local tmp131:8;
  local tmp132:4;
  local tmp133:8;
  local tmp134:4;
  local tmp135:4;
  tmp135 = 1;
  local tmp136:4;
  tmp136 = 32;
  local tmp137:4;
  tmp137 = tmp135 * tmp136;
  local tmp138:8;
  tmp138 = zext(tmp137);
  local tmp139:8;
  tmp139 = S2_lsl_r_vw_Rss32 s>> tmp138;
  local tmp140:8;
  tmp140 = 4294967295;
  local tmp141:8;
  tmp141 = tmp139 & tmp140;
  tmp134 = tmp141:4;
  tmp133 = sext(tmp134);
  tmp132 = tmp133:4;
  tmp131 = sext(tmp132);
  local tmp142:4;
  tmp142 = 1;
  local tmp143:4;
  tmp143 = 7;
  local tmp144:4;
  tmp144 = tmp142 << tmp143;
  local tmp145:4;
  tmp145 = 1;
  local tmp146:4;
  tmp146 = tmp144 - tmp145;
  local tmp147:4;
  tmp147 = S2_lsl_r_vw_Rt32 & tmp146;
  local tmp148:4;
  tmp148 = 1;
  local tmp149:4;
  tmp149 = 7;
  local tmp150:4;
  tmp150 = 1;
  local tmp151:4;
  tmp151 = tmp149 - tmp150;
  local tmp152:4;
  tmp152 = tmp148 << tmp151;
  local tmp153:4;
  tmp153 = tmp147 ^ tmp152;
  local tmp154:4;
  tmp154 = 1;
  local tmp155:4;
  tmp155 = 7;
  local tmp156:4;
  tmp156 = 1;
  local tmp157:4;
  tmp157 = tmp155 - tmp156;
  local tmp158:4;
  tmp158 = tmp154 << tmp157;
  local tmp159:4;
  tmp159 = tmp153 - tmp158;
  local tmp160:8;
  tmp160 = zext(tmp159);
  local tmp161:8;
  tmp161 = tmp131 << tmp160;
  local tmp162:8;
  tmp162 = tmp161;
  goto <done_131>;
<f_branch_131>
  local tmp163:8;
  local tmp164:4;
  local tmp165:8;
  local tmp166:4;
  local tmp167:4;
  tmp167 = 1;
  local tmp168:4;
  tmp168 = 32;
  local tmp169:4;
  tmp169 = tmp167 * tmp168;
  local tmp170:8;
  tmp170 = zext(tmp169);
  local tmp171:8;
  tmp171 = S2_lsl_r_vw_Rss32 s>> tmp170;
  local tmp172:8;
  tmp172 = 4294967295;
  local tmp173:8;
  tmp173 = tmp171 & tmp172;
  tmp166 = tmp173:4;
  tmp165 = sext(tmp166);
  tmp164 = tmp165:4;
  tmp163 = sext(tmp164);
  local tmp174:4;
  tmp174 = 1;
  local tmp175:4;
  tmp175 = 7;
  local tmp176:4;
  tmp176 = tmp174 << tmp175;
  local tmp177:4;
  tmp177 = 1;
  local tmp178:4;
  tmp178 = tmp176 - tmp177;
  local tmp179:4;
  tmp179 = S2_lsl_r_vw_Rt32 & tmp178;
  local tmp180:4;
  tmp180 = 1;
  local tmp181:4;
  tmp181 = 7;
  local tmp182:4;
  tmp182 = 1;
  local tmp183:4;
  tmp183 = tmp181 - tmp182;
  local tmp184:4;
  tmp184 = tmp180 << tmp183;
  local tmp185:4;
  tmp185 = tmp179 ^ tmp184;
  local tmp186:4;
  tmp186 = 1;
  local tmp187:4;
  tmp187 = 7;
  local tmp188:4;
  tmp188 = 1;
  local tmp189:4;
  tmp189 = tmp187 - tmp188;
  local tmp190:4;
  tmp190 = tmp186 << tmp189;
  local tmp191:4;
  tmp191 = tmp185 - tmp190;
  local tmp192:8;
  tmp192 = zext(tmp191);
  local tmp193:8;
  tmp193 = tmp163 >> tmp192;
  tmp162 = tmp193;
<done_131>
  local tmp194:8;
  tmp194 = 4294967295;
  local tmp195:8;
  tmp195 = tmp162 & tmp194;
  local tmp196:4;
  tmp196 = 1;
  local tmp197:4;
  tmp197 = 32;
  local tmp198:4;
  tmp198 = tmp196 * tmp197;
  local tmp199:8;
  tmp199 = zext(tmp198);
  local tmp200:8;
  tmp200 = tmp195 << tmp199;
  local tmp201:8;
  tmp201 = tmp108 | tmp200;
  S2_lsl_r_vw_Rdd32 = tmp201;
}

:S2_vrndpackwh S2_vrndpackwh_Rd32 S2_vrndpackwh_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vrndpackwh_Rd32 & S2_vrndpackwh_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = zext(S2_vrndpackwh_Rd32);
  local tmp8:8;
  tmp8 = tmp7 & tmp6;
  local tmp9:8;
  local tmp10:2;
  local tmp11:8;
  local tmp12:4;
  local tmp13:4;
  tmp13 = 0;
  local tmp14:4;
  tmp14 = 32;
  local tmp15:4;
  tmp15 = tmp13 * tmp14;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = S2_vrndpackwh_Rss32 s>> tmp16;
  local tmp18:8;
  tmp18 = 4294967295;
  local tmp19:8;
  tmp19 = tmp17 & tmp18;
  tmp12 = tmp19:4;
  tmp11 = zext(tmp12);
  local tmp20:4;
  tmp20 = 32768;
  local tmp21:8;
  tmp21 = zext(tmp20);
  local tmp22:8;
  tmp22 = tmp11 + tmp21;
  local tmp23:4;
  tmp23 = 1;
  local tmp24:4;
  tmp24 = 16;
  local tmp25:4;
  tmp25 = tmp23 * tmp24;
  local tmp26:8;
  tmp26 = zext(tmp25);
  local tmp27:8;
  tmp27 = tmp22 s>> tmp26;
  local tmp28:4;
  tmp28 = 65535;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp27 & tmp29;
  tmp10 = tmp30:2;
  local tmp31:4;
  tmp31 = 65535;
  local tmp32:4;
  tmp32 = zext(tmp10);
  local tmp33:4;
  tmp33 = tmp32 & tmp31;
  tmp9 = sext(tmp33);
  local tmp34:4;
  tmp34 = 0;
  local tmp35:4;
  tmp35 = 16;
  local tmp36:4;
  tmp36 = tmp34 * tmp35;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp9 << tmp37;
  local tmp39:8;
  tmp39 = tmp8 | tmp38;
  S2_vrndpackwh_Rd32 = tmp39:4;
  local tmp40:8;
  tmp40 = 65535;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = 16;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:8;
  tmp44 = zext(tmp43);
  local tmp45:8;
  tmp45 = tmp40 << tmp44;
  local tmp46:8;
  tmp46 = ~ tmp45;
  local tmp47:8;
  tmp47 = zext(S2_vrndpackwh_Rd32);
  local tmp48:8;
  tmp48 = tmp47 & tmp46;
  local tmp49:8;
  local tmp50:2;
  local tmp51:8;
  local tmp52:4;
  local tmp53:4;
  tmp53 = 1;
  local tmp54:4;
  tmp54 = 32;
  local tmp55:4;
  tmp55 = tmp53 * tmp54;
  local tmp56:8;
  tmp56 = zext(tmp55);
  local tmp57:8;
  tmp57 = S2_vrndpackwh_Rss32 s>> tmp56;
  local tmp58:8;
  tmp58 = 4294967295;
  local tmp59:8;
  tmp59 = tmp57 & tmp58;
  tmp52 = tmp59:4;
  tmp51 = zext(tmp52);
  local tmp60:4;
  tmp60 = 32768;
  local tmp61:8;
  tmp61 = zext(tmp60);
  local tmp62:8;
  tmp62 = tmp51 + tmp61;
  local tmp63:4;
  tmp63 = 1;
  local tmp64:4;
  tmp64 = 16;
  local tmp65:4;
  tmp65 = tmp63 * tmp64;
  local tmp66:8;
  tmp66 = zext(tmp65);
  local tmp67:8;
  tmp67 = tmp62 s>> tmp66;
  local tmp68:4;
  tmp68 = 65535;
  local tmp69:8;
  tmp69 = zext(tmp68);
  local tmp70:8;
  tmp70 = tmp67 & tmp69;
  tmp50 = tmp70:2;
  local tmp71:4;
  tmp71 = 65535;
  local tmp72:4;
  tmp72 = zext(tmp50);
  local tmp73:4;
  tmp73 = tmp72 & tmp71;
  tmp49 = sext(tmp73);
  local tmp74:4;
  tmp74 = 1;
  local tmp75:4;
  tmp75 = 16;
  local tmp76:4;
  tmp76 = tmp74 * tmp75;
  local tmp77:8;
  tmp77 = zext(tmp76);
  local tmp78:8;
  tmp78 = tmp49 << tmp77;
  local tmp79:8;
  tmp79 = tmp48 | tmp78;
  S2_vrndpackwh_Rd32 = tmp79:4;
}

:S2_vrndpackwhs S2_vrndpackwhs_Rd32 S2_vrndpackwhs_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vrndpackwhs_Rd32 & S2_vrndpackwhs_Rss32 unimpl

:S2_vsxtbh S2_vsxtbh_Rdd32 S2_vsxtbh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vsxtbh_Rdd32 & S2_vsxtbh_Rs32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_vsxtbh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:1;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 8;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:4;
  tmp13 = S2_vsxtbh_Rs32 s>> tmp12;
  local tmp14:4;
  tmp14 = 255;
  local tmp15:4;
  tmp15 = tmp13 & tmp14;
  tmp9 = tmp15:1;
  local tmp16:4;
  tmp16 = 65535;
  local tmp17:4;
  tmp17 = zext(tmp9);
  local tmp18:4;
  tmp18 = tmp17 & tmp16;
  tmp8 = sext(tmp18);
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp8 << tmp22;
  local tmp24:8;
  tmp24 = tmp7 | tmp23;
  S2_vsxtbh_Rdd32 = tmp24;
  local tmp25:8;
  tmp25 = 65535;
  local tmp26:4;
  tmp26 = 1;
  local tmp27:4;
  tmp27 = 16;
  local tmp28:4;
  tmp28 = tmp26 * tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp25 << tmp29;
  local tmp31:8;
  tmp31 = ~ tmp30;
  local tmp32:8;
  tmp32 = S2_vsxtbh_Rdd32 & tmp31;
  local tmp33:8;
  local tmp34:1;
  local tmp35:4;
  tmp35 = 1;
  local tmp36:4;
  tmp36 = 8;
  local tmp37:4;
  tmp37 = tmp35 * tmp36;
  local tmp38:4;
  tmp38 = S2_vsxtbh_Rs32 s>> tmp37;
  local tmp39:4;
  tmp39 = 255;
  local tmp40:4;
  tmp40 = tmp38 & tmp39;
  tmp34 = tmp40:1;
  local tmp41:4;
  tmp41 = 65535;
  local tmp42:4;
  tmp42 = zext(tmp34);
  local tmp43:4;
  tmp43 = tmp42 & tmp41;
  tmp33 = sext(tmp43);
  local tmp44:4;
  tmp44 = 1;
  local tmp45:4;
  tmp45 = 16;
  local tmp46:4;
  tmp46 = tmp44 * tmp45;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp33 << tmp47;
  local tmp49:8;
  tmp49 = tmp32 | tmp48;
  S2_vsxtbh_Rdd32 = tmp49;
  local tmp50:8;
  tmp50 = 65535;
  local tmp51:4;
  tmp51 = 2;
  local tmp52:4;
  tmp52 = 16;
  local tmp53:4;
  tmp53 = tmp51 * tmp52;
  local tmp54:8;
  tmp54 = zext(tmp53);
  local tmp55:8;
  tmp55 = tmp50 << tmp54;
  local tmp56:8;
  tmp56 = ~ tmp55;
  local tmp57:8;
  tmp57 = S2_vsxtbh_Rdd32 & tmp56;
  local tmp58:8;
  local tmp59:1;
  local tmp60:4;
  tmp60 = 2;
  local tmp61:4;
  tmp61 = 8;
  local tmp62:4;
  tmp62 = tmp60 * tmp61;
  local tmp63:4;
  tmp63 = S2_vsxtbh_Rs32 s>> tmp62;
  local tmp64:4;
  tmp64 = 255;
  local tmp65:4;
  tmp65 = tmp63 & tmp64;
  tmp59 = tmp65:1;
  local tmp66:4;
  tmp66 = 65535;
  local tmp67:4;
  tmp67 = zext(tmp59);
  local tmp68:4;
  tmp68 = tmp67 & tmp66;
  tmp58 = sext(tmp68);
  local tmp69:4;
  tmp69 = 2;
  local tmp70:4;
  tmp70 = 16;
  local tmp71:4;
  tmp71 = tmp69 * tmp70;
  local tmp72:8;
  tmp72 = zext(tmp71);
  local tmp73:8;
  tmp73 = tmp58 << tmp72;
  local tmp74:8;
  tmp74 = tmp57 | tmp73;
  S2_vsxtbh_Rdd32 = tmp74;
  local tmp75:8;
  tmp75 = 65535;
  local tmp76:4;
  tmp76 = 3;
  local tmp77:4;
  tmp77 = 16;
  local tmp78:4;
  tmp78 = tmp76 * tmp77;
  local tmp79:8;
  tmp79 = zext(tmp78);
  local tmp80:8;
  tmp80 = tmp75 << tmp79;
  local tmp81:8;
  tmp81 = ~ tmp80;
  local tmp82:8;
  tmp82 = S2_vsxtbh_Rdd32 & tmp81;
  local tmp83:8;
  local tmp84:1;
  local tmp85:4;
  tmp85 = 3;
  local tmp86:4;
  tmp86 = 8;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:4;
  tmp88 = S2_vsxtbh_Rs32 s>> tmp87;
  local tmp89:4;
  tmp89 = 255;
  local tmp90:4;
  tmp90 = tmp88 & tmp89;
  tmp84 = tmp90:1;
  local tmp91:4;
  tmp91 = 65535;
  local tmp92:4;
  tmp92 = zext(tmp84);
  local tmp93:4;
  tmp93 = tmp92 & tmp91;
  tmp83 = sext(tmp93);
  local tmp94:4;
  tmp94 = 3;
  local tmp95:4;
  tmp95 = 16;
  local tmp96:4;
  tmp96 = tmp94 * tmp95;
  local tmp97:8;
  tmp97 = zext(tmp96);
  local tmp98:8;
  tmp98 = tmp83 << tmp97;
  local tmp99:8;
  tmp99 = tmp82 | tmp98;
  S2_vsxtbh_Rdd32 = tmp99;
}

:S2_vzxtbh S2_vzxtbh_Rdd32 S2_vzxtbh_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vzxtbh_Rdd32 & S2_vzxtbh_Rs32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_vzxtbh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:1;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 8;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:4;
  tmp13 = S2_vzxtbh_Rs32 s>> tmp12;
  local tmp14:4;
  tmp14 = 255;
  local tmp15:4;
  tmp15 = tmp13 & tmp14;
  tmp9 = tmp15:1;
  local tmp16:4;
  tmp16 = 65535;
  local tmp17:4;
  tmp17 = sext(tmp9);
  local tmp18:4;
  tmp18 = tmp17 & tmp16;
  tmp8 = sext(tmp18);
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp8 << tmp22;
  local tmp24:8;
  tmp24 = tmp7 | tmp23;
  S2_vzxtbh_Rdd32 = tmp24;
  local tmp25:8;
  tmp25 = 65535;
  local tmp26:4;
  tmp26 = 1;
  local tmp27:4;
  tmp27 = 16;
  local tmp28:4;
  tmp28 = tmp26 * tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp25 << tmp29;
  local tmp31:8;
  tmp31 = ~ tmp30;
  local tmp32:8;
  tmp32 = S2_vzxtbh_Rdd32 & tmp31;
  local tmp33:8;
  local tmp34:1;
  local tmp35:4;
  tmp35 = 1;
  local tmp36:4;
  tmp36 = 8;
  local tmp37:4;
  tmp37 = tmp35 * tmp36;
  local tmp38:4;
  tmp38 = S2_vzxtbh_Rs32 s>> tmp37;
  local tmp39:4;
  tmp39 = 255;
  local tmp40:4;
  tmp40 = tmp38 & tmp39;
  tmp34 = tmp40:1;
  local tmp41:4;
  tmp41 = 65535;
  local tmp42:4;
  tmp42 = sext(tmp34);
  local tmp43:4;
  tmp43 = tmp42 & tmp41;
  tmp33 = sext(tmp43);
  local tmp44:4;
  tmp44 = 1;
  local tmp45:4;
  tmp45 = 16;
  local tmp46:4;
  tmp46 = tmp44 * tmp45;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp33 << tmp47;
  local tmp49:8;
  tmp49 = tmp32 | tmp48;
  S2_vzxtbh_Rdd32 = tmp49;
  local tmp50:8;
  tmp50 = 65535;
  local tmp51:4;
  tmp51 = 2;
  local tmp52:4;
  tmp52 = 16;
  local tmp53:4;
  tmp53 = tmp51 * tmp52;
  local tmp54:8;
  tmp54 = zext(tmp53);
  local tmp55:8;
  tmp55 = tmp50 << tmp54;
  local tmp56:8;
  tmp56 = ~ tmp55;
  local tmp57:8;
  tmp57 = S2_vzxtbh_Rdd32 & tmp56;
  local tmp58:8;
  local tmp59:1;
  local tmp60:4;
  tmp60 = 2;
  local tmp61:4;
  tmp61 = 8;
  local tmp62:4;
  tmp62 = tmp60 * tmp61;
  local tmp63:4;
  tmp63 = S2_vzxtbh_Rs32 s>> tmp62;
  local tmp64:4;
  tmp64 = 255;
  local tmp65:4;
  tmp65 = tmp63 & tmp64;
  tmp59 = tmp65:1;
  local tmp66:4;
  tmp66 = 65535;
  local tmp67:4;
  tmp67 = sext(tmp59);
  local tmp68:4;
  tmp68 = tmp67 & tmp66;
  tmp58 = sext(tmp68);
  local tmp69:4;
  tmp69 = 2;
  local tmp70:4;
  tmp70 = 16;
  local tmp71:4;
  tmp71 = tmp69 * tmp70;
  local tmp72:8;
  tmp72 = zext(tmp71);
  local tmp73:8;
  tmp73 = tmp58 << tmp72;
  local tmp74:8;
  tmp74 = tmp57 | tmp73;
  S2_vzxtbh_Rdd32 = tmp74;
  local tmp75:8;
  tmp75 = 65535;
  local tmp76:4;
  tmp76 = 3;
  local tmp77:4;
  tmp77 = 16;
  local tmp78:4;
  tmp78 = tmp76 * tmp77;
  local tmp79:8;
  tmp79 = zext(tmp78);
  local tmp80:8;
  tmp80 = tmp75 << tmp79;
  local tmp81:8;
  tmp81 = ~ tmp80;
  local tmp82:8;
  tmp82 = S2_vzxtbh_Rdd32 & tmp81;
  local tmp83:8;
  local tmp84:1;
  local tmp85:4;
  tmp85 = 3;
  local tmp86:4;
  tmp86 = 8;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:4;
  tmp88 = S2_vzxtbh_Rs32 s>> tmp87;
  local tmp89:4;
  tmp89 = 255;
  local tmp90:4;
  tmp90 = tmp88 & tmp89;
  tmp84 = tmp90:1;
  local tmp91:4;
  tmp91 = 65535;
  local tmp92:4;
  tmp92 = sext(tmp84);
  local tmp93:4;
  tmp93 = tmp92 & tmp91;
  tmp83 = sext(tmp93);
  local tmp94:4;
  tmp94 = 3;
  local tmp95:4;
  tmp95 = 16;
  local tmp96:4;
  tmp96 = tmp94 * tmp95;
  local tmp97:8;
  tmp97 = zext(tmp96);
  local tmp98:8;
  tmp98 = tmp83 << tmp97;
  local tmp99:8;
  tmp99 = tmp82 | tmp98;
  S2_vzxtbh_Rdd32 = tmp99;
}

:S2_vsathub S2_vsathub_Rd32 S2_vsathub_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vsathub_Rd32 & S2_vsathub_Rss32 unimpl

:S2_svsathub S2_svsathub_Rd32 S2_svsathub_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_svsathub_Rd32 & S2_svsathub_Rs32 unimpl

:S2_svsathb S2_svsathb_Rd32 S2_svsathb_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_svsathb_Rd32 & S2_svsathb_Rs32 unimpl

:S2_vsathb S2_vsathb_Rd32 S2_vsathb_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vsathb_Rd32 & S2_vsathb_Rss32 unimpl

:S2_vtrunohb S2_vtrunohb_Rd32 S2_vtrunohb_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vtrunohb_Rd32 & S2_vtrunohb_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = zext(S2_vtrunohb_Rd32);
  local tmp8:8;
  tmp8 = tmp7 & tmp6;
  local tmp9:8;
  local tmp10:1;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 2;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 + tmp14;
  local tmp16:4;
  tmp16 = 8;
  local tmp17:4;
  tmp17 = tmp15 * tmp16;
  local tmp18:8;
  tmp18 = zext(tmp17);
  local tmp19:8;
  tmp19 = S2_vtrunohb_Rss32 s>> tmp18;
  local tmp20:4;
  tmp20 = 255;
  local tmp21:8;
  tmp21 = zext(tmp20);
  local tmp22:8;
  tmp22 = tmp19 & tmp21;
  tmp10 = tmp22:1;
  local tmp23:8;
  tmp23 = 255;
  local tmp24:8;
  tmp24 = zext(tmp10);
  local tmp25:8;
  tmp25 = tmp24 & tmp23;
  tmp9 = tmp25;
  local tmp26:4;
  tmp26 = 0;
  local tmp27:4;
  tmp27 = 8;
  local tmp28:4;
  tmp28 = tmp26 * tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp9 << tmp29;
  local tmp31:8;
  tmp31 = tmp8 | tmp30;
  S2_vtrunohb_Rd32 = tmp31:4;
  local tmp32:8;
  tmp32 = 255;
  local tmp33:4;
  tmp33 = 1;
  local tmp34:4;
  tmp34 = 8;
  local tmp35:4;
  tmp35 = tmp33 * tmp34;
  local tmp36:8;
  tmp36 = zext(tmp35);
  local tmp37:8;
  tmp37 = tmp32 << tmp36;
  local tmp38:8;
  tmp38 = ~ tmp37;
  local tmp39:8;
  tmp39 = zext(S2_vtrunohb_Rd32);
  local tmp40:8;
  tmp40 = tmp39 & tmp38;
  local tmp41:8;
  local tmp42:1;
  local tmp43:4;
  tmp43 = 1;
  local tmp44:4;
  tmp44 = 2;
  local tmp45:4;
  tmp45 = tmp43 * tmp44;
  local tmp46:4;
  tmp46 = 1;
  local tmp47:4;
  tmp47 = tmp45 + tmp46;
  local tmp48:4;
  tmp48 = 8;
  local tmp49:4;
  tmp49 = tmp47 * tmp48;
  local tmp50:8;
  tmp50 = zext(tmp49);
  local tmp51:8;
  tmp51 = S2_vtrunohb_Rss32 s>> tmp50;
  local tmp52:4;
  tmp52 = 255;
  local tmp53:8;
  tmp53 = zext(tmp52);
  local tmp54:8;
  tmp54 = tmp51 & tmp53;
  tmp42 = tmp54:1;
  local tmp55:8;
  tmp55 = 255;
  local tmp56:8;
  tmp56 = zext(tmp42);
  local tmp57:8;
  tmp57 = tmp56 & tmp55;
  tmp41 = tmp57;
  local tmp58:4;
  tmp58 = 1;
  local tmp59:4;
  tmp59 = 8;
  local tmp60:4;
  tmp60 = tmp58 * tmp59;
  local tmp61:8;
  tmp61 = zext(tmp60);
  local tmp62:8;
  tmp62 = tmp41 << tmp61;
  local tmp63:8;
  tmp63 = tmp40 | tmp62;
  S2_vtrunohb_Rd32 = tmp63:4;
  local tmp64:8;
  tmp64 = 255;
  local tmp65:4;
  tmp65 = 2;
  local tmp66:4;
  tmp66 = 8;
  local tmp67:4;
  tmp67 = tmp65 * tmp66;
  local tmp68:8;
  tmp68 = zext(tmp67);
  local tmp69:8;
  tmp69 = tmp64 << tmp68;
  local tmp70:8;
  tmp70 = ~ tmp69;
  local tmp71:8;
  tmp71 = zext(S2_vtrunohb_Rd32);
  local tmp72:8;
  tmp72 = tmp71 & tmp70;
  local tmp73:8;
  local tmp74:1;
  local tmp75:4;
  tmp75 = 2;
  local tmp76:4;
  tmp76 = 2;
  local tmp77:4;
  tmp77 = tmp75 * tmp76;
  local tmp78:4;
  tmp78 = 1;
  local tmp79:4;
  tmp79 = tmp77 + tmp78;
  local tmp80:4;
  tmp80 = 8;
  local tmp81:4;
  tmp81 = tmp79 * tmp80;
  local tmp82:8;
  tmp82 = zext(tmp81);
  local tmp83:8;
  tmp83 = S2_vtrunohb_Rss32 s>> tmp82;
  local tmp84:4;
  tmp84 = 255;
  local tmp85:8;
  tmp85 = zext(tmp84);
  local tmp86:8;
  tmp86 = tmp83 & tmp85;
  tmp74 = tmp86:1;
  local tmp87:8;
  tmp87 = 255;
  local tmp88:8;
  tmp88 = zext(tmp74);
  local tmp89:8;
  tmp89 = tmp88 & tmp87;
  tmp73 = tmp89;
  local tmp90:4;
  tmp90 = 2;
  local tmp91:4;
  tmp91 = 8;
  local tmp92:4;
  tmp92 = tmp90 * tmp91;
  local tmp93:8;
  tmp93 = zext(tmp92);
  local tmp94:8;
  tmp94 = tmp73 << tmp93;
  local tmp95:8;
  tmp95 = tmp72 | tmp94;
  S2_vtrunohb_Rd32 = tmp95:4;
  local tmp96:8;
  tmp96 = 255;
  local tmp97:4;
  tmp97 = 3;
  local tmp98:4;
  tmp98 = 8;
  local tmp99:4;
  tmp99 = tmp97 * tmp98;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = tmp96 << tmp100;
  local tmp102:8;
  tmp102 = ~ tmp101;
  local tmp103:8;
  tmp103 = zext(S2_vtrunohb_Rd32);
  local tmp104:8;
  tmp104 = tmp103 & tmp102;
  local tmp105:8;
  local tmp106:1;
  local tmp107:4;
  tmp107 = 3;
  local tmp108:4;
  tmp108 = 2;
  local tmp109:4;
  tmp109 = tmp107 * tmp108;
  local tmp110:4;
  tmp110 = 1;
  local tmp111:4;
  tmp111 = tmp109 + tmp110;
  local tmp112:4;
  tmp112 = 8;
  local tmp113:4;
  tmp113 = tmp111 * tmp112;
  local tmp114:8;
  tmp114 = zext(tmp113);
  local tmp115:8;
  tmp115 = S2_vtrunohb_Rss32 s>> tmp114;
  local tmp116:4;
  tmp116 = 255;
  local tmp117:8;
  tmp117 = zext(tmp116);
  local tmp118:8;
  tmp118 = tmp115 & tmp117;
  tmp106 = tmp118:1;
  local tmp119:8;
  tmp119 = 255;
  local tmp120:8;
  tmp120 = zext(tmp106);
  local tmp121:8;
  tmp121 = tmp120 & tmp119;
  tmp105 = tmp121;
  local tmp122:4;
  tmp122 = 3;
  local tmp123:4;
  tmp123 = 8;
  local tmp124:4;
  tmp124 = tmp122 * tmp123;
  local tmp125:8;
  tmp125 = zext(tmp124);
  local tmp126:8;
  tmp126 = tmp105 << tmp125;
  local tmp127:8;
  tmp127 = tmp104 | tmp126;
  S2_vtrunohb_Rd32 = tmp127:4;
}

:S2_vtrunewh S2_vtrunewh_Rdd32 S2_vtrunewh_Rss32 S2_vtrunewh_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_vtrunewh_Rdd32 & S2_vtrunewh_Rss32 & S2_vtrunewh_Rtt32 {
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_vtrunewh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = S2_vtrunewh_Rtt32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:4;
  tmp18 = 65535;
  local tmp19:4;
  tmp19 = zext(tmp9);
  local tmp20:4;
  tmp20 = tmp19 & tmp18;
  tmp8 = sext(tmp20);
  local tmp21:4;
  tmp21 = 0;
  local tmp22:4;
  tmp22 = 16;
  local tmp23:4;
  tmp23 = tmp21 * tmp22;
  local tmp24:8;
  tmp24 = zext(tmp23);
  local tmp25:8;
  tmp25 = tmp8 << tmp24;
  local tmp26:8;
  tmp26 = tmp7 | tmp25;
  S2_vtrunewh_Rdd32 = tmp26;
  local tmp27:8;
  tmp27 = 65535;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = 16;
  local tmp30:4;
  tmp30 = tmp28 * tmp29;
  local tmp31:8;
  tmp31 = zext(tmp30);
  local tmp32:8;
  tmp32 = tmp27 << tmp31;
  local tmp33:8;
  tmp33 = ~ tmp32;
  local tmp34:8;
  tmp34 = S2_vtrunewh_Rdd32 & tmp33;
  local tmp35:8;
  local tmp36:2;
  local tmp37:4;
  tmp37 = 2;
  local tmp38:4;
  tmp38 = 16;
  local tmp39:4;
  tmp39 = tmp37 * tmp38;
  local tmp40:8;
  tmp40 = zext(tmp39);
  local tmp41:8;
  tmp41 = S2_vtrunewh_Rtt32 s>> tmp40;
  local tmp42:4;
  tmp42 = 65535;
  local tmp43:8;
  tmp43 = zext(tmp42);
  local tmp44:8;
  tmp44 = tmp41 & tmp43;
  tmp36 = tmp44:2;
  local tmp45:4;
  tmp45 = 65535;
  local tmp46:4;
  tmp46 = zext(tmp36);
  local tmp47:4;
  tmp47 = tmp46 & tmp45;
  tmp35 = sext(tmp47);
  local tmp48:4;
  tmp48 = 1;
  local tmp49:4;
  tmp49 = 16;
  local tmp50:4;
  tmp50 = tmp48 * tmp49;
  local tmp51:8;
  tmp51 = zext(tmp50);
  local tmp52:8;
  tmp52 = tmp35 << tmp51;
  local tmp53:8;
  tmp53 = tmp34 | tmp52;
  S2_vtrunewh_Rdd32 = tmp53;
  local tmp54:8;
  tmp54 = 65535;
  local tmp55:4;
  tmp55 = 2;
  local tmp56:4;
  tmp56 = 16;
  local tmp57:4;
  tmp57 = tmp55 * tmp56;
  local tmp58:8;
  tmp58 = zext(tmp57);
  local tmp59:8;
  tmp59 = tmp54 << tmp58;
  local tmp60:8;
  tmp60 = ~ tmp59;
  local tmp61:8;
  tmp61 = S2_vtrunewh_Rdd32 & tmp60;
  local tmp62:8;
  local tmp63:2;
  local tmp64:4;
  tmp64 = 0;
  local tmp65:4;
  tmp65 = 16;
  local tmp66:4;
  tmp66 = tmp64 * tmp65;
  local tmp67:8;
  tmp67 = zext(tmp66);
  local tmp68:8;
  tmp68 = S2_vtrunewh_Rss32 s>> tmp67;
  local tmp69:4;
  tmp69 = 65535;
  local tmp70:8;
  tmp70 = zext(tmp69);
  local tmp71:8;
  tmp71 = tmp68 & tmp70;
  tmp63 = tmp71:2;
  local tmp72:4;
  tmp72 = 65535;
  local tmp73:4;
  tmp73 = zext(tmp63);
  local tmp74:4;
  tmp74 = tmp73 & tmp72;
  tmp62 = sext(tmp74);
  local tmp75:4;
  tmp75 = 2;
  local tmp76:4;
  tmp76 = 16;
  local tmp77:4;
  tmp77 = tmp75 * tmp76;
  local tmp78:8;
  tmp78 = zext(tmp77);
  local tmp79:8;
  tmp79 = tmp62 << tmp78;
  local tmp80:8;
  tmp80 = tmp61 | tmp79;
  S2_vtrunewh_Rdd32 = tmp80;
  local tmp81:8;
  tmp81 = 65535;
  local tmp82:4;
  tmp82 = 3;
  local tmp83:4;
  tmp83 = 16;
  local tmp84:4;
  tmp84 = tmp82 * tmp83;
  local tmp85:8;
  tmp85 = zext(tmp84);
  local tmp86:8;
  tmp86 = tmp81 << tmp85;
  local tmp87:8;
  tmp87 = ~ tmp86;
  local tmp88:8;
  tmp88 = S2_vtrunewh_Rdd32 & tmp87;
  local tmp89:8;
  local tmp90:2;
  local tmp91:4;
  tmp91 = 2;
  local tmp92:4;
  tmp92 = 16;
  local tmp93:4;
  tmp93 = tmp91 * tmp92;
  local tmp94:8;
  tmp94 = zext(tmp93);
  local tmp95:8;
  tmp95 = S2_vtrunewh_Rss32 s>> tmp94;
  local tmp96:4;
  tmp96 = 65535;
  local tmp97:8;
  tmp97 = zext(tmp96);
  local tmp98:8;
  tmp98 = tmp95 & tmp97;
  tmp90 = tmp98:2;
  local tmp99:4;
  tmp99 = 65535;
  local tmp100:4;
  tmp100 = zext(tmp90);
  local tmp101:4;
  tmp101 = tmp100 & tmp99;
  tmp89 = sext(tmp101);
  local tmp102:4;
  tmp102 = 3;
  local tmp103:4;
  tmp103 = 16;
  local tmp104:4;
  tmp104 = tmp102 * tmp103;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp89 << tmp105;
  local tmp107:8;
  tmp107 = tmp88 | tmp106;
  S2_vtrunewh_Rdd32 = tmp107;
}

:S2_vtrunowh S2_vtrunowh_Rdd32 S2_vtrunowh_Rss32 S2_vtrunowh_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_vtrunowh_Rdd32 & S2_vtrunowh_Rss32 & S2_vtrunowh_Rtt32 {
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_vtrunowh_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 1;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:8;
  tmp13 = zext(tmp12);
  local tmp14:8;
  tmp14 = S2_vtrunowh_Rtt32 s>> tmp13;
  local tmp15:4;
  tmp15 = 65535;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp14 & tmp16;
  tmp9 = tmp17:2;
  local tmp18:4;
  tmp18 = 65535;
  local tmp19:4;
  tmp19 = zext(tmp9);
  local tmp20:4;
  tmp20 = tmp19 & tmp18;
  tmp8 = sext(tmp20);
  local tmp21:4;
  tmp21 = 0;
  local tmp22:4;
  tmp22 = 16;
  local tmp23:4;
  tmp23 = tmp21 * tmp22;
  local tmp24:8;
  tmp24 = zext(tmp23);
  local tmp25:8;
  tmp25 = tmp8 << tmp24;
  local tmp26:8;
  tmp26 = tmp7 | tmp25;
  S2_vtrunowh_Rdd32 = tmp26;
  local tmp27:8;
  tmp27 = 65535;
  local tmp28:4;
  tmp28 = 1;
  local tmp29:4;
  tmp29 = 16;
  local tmp30:4;
  tmp30 = tmp28 * tmp29;
  local tmp31:8;
  tmp31 = zext(tmp30);
  local tmp32:8;
  tmp32 = tmp27 << tmp31;
  local tmp33:8;
  tmp33 = ~ tmp32;
  local tmp34:8;
  tmp34 = S2_vtrunowh_Rdd32 & tmp33;
  local tmp35:8;
  local tmp36:2;
  local tmp37:4;
  tmp37 = 3;
  local tmp38:4;
  tmp38 = 16;
  local tmp39:4;
  tmp39 = tmp37 * tmp38;
  local tmp40:8;
  tmp40 = zext(tmp39);
  local tmp41:8;
  tmp41 = S2_vtrunowh_Rtt32 s>> tmp40;
  local tmp42:4;
  tmp42 = 65535;
  local tmp43:8;
  tmp43 = zext(tmp42);
  local tmp44:8;
  tmp44 = tmp41 & tmp43;
  tmp36 = tmp44:2;
  local tmp45:4;
  tmp45 = 65535;
  local tmp46:4;
  tmp46 = zext(tmp36);
  local tmp47:4;
  tmp47 = tmp46 & tmp45;
  tmp35 = sext(tmp47);
  local tmp48:4;
  tmp48 = 1;
  local tmp49:4;
  tmp49 = 16;
  local tmp50:4;
  tmp50 = tmp48 * tmp49;
  local tmp51:8;
  tmp51 = zext(tmp50);
  local tmp52:8;
  tmp52 = tmp35 << tmp51;
  local tmp53:8;
  tmp53 = tmp34 | tmp52;
  S2_vtrunowh_Rdd32 = tmp53;
  local tmp54:8;
  tmp54 = 65535;
  local tmp55:4;
  tmp55 = 2;
  local tmp56:4;
  tmp56 = 16;
  local tmp57:4;
  tmp57 = tmp55 * tmp56;
  local tmp58:8;
  tmp58 = zext(tmp57);
  local tmp59:8;
  tmp59 = tmp54 << tmp58;
  local tmp60:8;
  tmp60 = ~ tmp59;
  local tmp61:8;
  tmp61 = S2_vtrunowh_Rdd32 & tmp60;
  local tmp62:8;
  local tmp63:2;
  local tmp64:4;
  tmp64 = 1;
  local tmp65:4;
  tmp65 = 16;
  local tmp66:4;
  tmp66 = tmp64 * tmp65;
  local tmp67:8;
  tmp67 = zext(tmp66);
  local tmp68:8;
  tmp68 = S2_vtrunowh_Rss32 s>> tmp67;
  local tmp69:4;
  tmp69 = 65535;
  local tmp70:8;
  tmp70 = zext(tmp69);
  local tmp71:8;
  tmp71 = tmp68 & tmp70;
  tmp63 = tmp71:2;
  local tmp72:4;
  tmp72 = 65535;
  local tmp73:4;
  tmp73 = zext(tmp63);
  local tmp74:4;
  tmp74 = tmp73 & tmp72;
  tmp62 = sext(tmp74);
  local tmp75:4;
  tmp75 = 2;
  local tmp76:4;
  tmp76 = 16;
  local tmp77:4;
  tmp77 = tmp75 * tmp76;
  local tmp78:8;
  tmp78 = zext(tmp77);
  local tmp79:8;
  tmp79 = tmp62 << tmp78;
  local tmp80:8;
  tmp80 = tmp61 | tmp79;
  S2_vtrunowh_Rdd32 = tmp80;
  local tmp81:8;
  tmp81 = 65535;
  local tmp82:4;
  tmp82 = 3;
  local tmp83:4;
  tmp83 = 16;
  local tmp84:4;
  tmp84 = tmp82 * tmp83;
  local tmp85:8;
  tmp85 = zext(tmp84);
  local tmp86:8;
  tmp86 = tmp81 << tmp85;
  local tmp87:8;
  tmp87 = ~ tmp86;
  local tmp88:8;
  tmp88 = S2_vtrunowh_Rdd32 & tmp87;
  local tmp89:8;
  local tmp90:2;
  local tmp91:4;
  tmp91 = 3;
  local tmp92:4;
  tmp92 = 16;
  local tmp93:4;
  tmp93 = tmp91 * tmp92;
  local tmp94:8;
  tmp94 = zext(tmp93);
  local tmp95:8;
  tmp95 = S2_vtrunowh_Rss32 s>> tmp94;
  local tmp96:4;
  tmp96 = 65535;
  local tmp97:8;
  tmp97 = zext(tmp96);
  local tmp98:8;
  tmp98 = tmp95 & tmp97;
  tmp90 = tmp98:2;
  local tmp99:4;
  tmp99 = 65535;
  local tmp100:4;
  tmp100 = zext(tmp90);
  local tmp101:4;
  tmp101 = tmp100 & tmp99;
  tmp89 = sext(tmp101);
  local tmp102:4;
  tmp102 = 3;
  local tmp103:4;
  tmp103 = 16;
  local tmp104:4;
  tmp104 = tmp102 * tmp103;
  local tmp105:8;
  tmp105 = zext(tmp104);
  local tmp106:8;
  tmp106 = tmp89 << tmp105;
  local tmp107:8;
  tmp107 = tmp88 | tmp106;
  S2_vtrunowh_Rdd32 = tmp107;
}

:S2_vtrunehb S2_vtrunehb_Rd32 S2_vtrunehb_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vtrunehb_Rd32 & S2_vtrunehb_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = zext(S2_vtrunehb_Rd32);
  local tmp8:8;
  tmp8 = tmp7 & tmp6;
  local tmp9:8;
  local tmp10:1;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 2;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = 8;
  local tmp15:4;
  tmp15 = tmp13 * tmp14;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = S2_vtrunehb_Rss32 s>> tmp16;
  local tmp18:4;
  tmp18 = 255;
  local tmp19:8;
  tmp19 = zext(tmp18);
  local tmp20:8;
  tmp20 = tmp17 & tmp19;
  tmp10 = tmp20:1;
  local tmp21:8;
  tmp21 = 255;
  local tmp22:8;
  tmp22 = zext(tmp10);
  local tmp23:8;
  tmp23 = tmp22 & tmp21;
  tmp9 = tmp23;
  local tmp24:4;
  tmp24 = 0;
  local tmp25:4;
  tmp25 = 8;
  local tmp26:4;
  tmp26 = tmp24 * tmp25;
  local tmp27:8;
  tmp27 = zext(tmp26);
  local tmp28:8;
  tmp28 = tmp9 << tmp27;
  local tmp29:8;
  tmp29 = tmp8 | tmp28;
  S2_vtrunehb_Rd32 = tmp29:4;
  local tmp30:8;
  tmp30 = 255;
  local tmp31:4;
  tmp31 = 1;
  local tmp32:4;
  tmp32 = 8;
  local tmp33:4;
  tmp33 = tmp31 * tmp32;
  local tmp34:8;
  tmp34 = zext(tmp33);
  local tmp35:8;
  tmp35 = tmp30 << tmp34;
  local tmp36:8;
  tmp36 = ~ tmp35;
  local tmp37:8;
  tmp37 = zext(S2_vtrunehb_Rd32);
  local tmp38:8;
  tmp38 = tmp37 & tmp36;
  local tmp39:8;
  local tmp40:1;
  local tmp41:4;
  tmp41 = 1;
  local tmp42:4;
  tmp42 = 2;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:4;
  tmp44 = 8;
  local tmp45:4;
  tmp45 = tmp43 * tmp44;
  local tmp46:8;
  tmp46 = zext(tmp45);
  local tmp47:8;
  tmp47 = S2_vtrunehb_Rss32 s>> tmp46;
  local tmp48:4;
  tmp48 = 255;
  local tmp49:8;
  tmp49 = zext(tmp48);
  local tmp50:8;
  tmp50 = tmp47 & tmp49;
  tmp40 = tmp50:1;
  local tmp51:8;
  tmp51 = 255;
  local tmp52:8;
  tmp52 = zext(tmp40);
  local tmp53:8;
  tmp53 = tmp52 & tmp51;
  tmp39 = tmp53;
  local tmp54:4;
  tmp54 = 1;
  local tmp55:4;
  tmp55 = 8;
  local tmp56:4;
  tmp56 = tmp54 * tmp55;
  local tmp57:8;
  tmp57 = zext(tmp56);
  local tmp58:8;
  tmp58 = tmp39 << tmp57;
  local tmp59:8;
  tmp59 = tmp38 | tmp58;
  S2_vtrunehb_Rd32 = tmp59:4;
  local tmp60:8;
  tmp60 = 255;
  local tmp61:4;
  tmp61 = 2;
  local tmp62:4;
  tmp62 = 8;
  local tmp63:4;
  tmp63 = tmp61 * tmp62;
  local tmp64:8;
  tmp64 = zext(tmp63);
  local tmp65:8;
  tmp65 = tmp60 << tmp64;
  local tmp66:8;
  tmp66 = ~ tmp65;
  local tmp67:8;
  tmp67 = zext(S2_vtrunehb_Rd32);
  local tmp68:8;
  tmp68 = tmp67 & tmp66;
  local tmp69:8;
  local tmp70:1;
  local tmp71:4;
  tmp71 = 2;
  local tmp72:4;
  tmp72 = 2;
  local tmp73:4;
  tmp73 = tmp71 * tmp72;
  local tmp74:4;
  tmp74 = 8;
  local tmp75:4;
  tmp75 = tmp73 * tmp74;
  local tmp76:8;
  tmp76 = zext(tmp75);
  local tmp77:8;
  tmp77 = S2_vtrunehb_Rss32 s>> tmp76;
  local tmp78:4;
  tmp78 = 255;
  local tmp79:8;
  tmp79 = zext(tmp78);
  local tmp80:8;
  tmp80 = tmp77 & tmp79;
  tmp70 = tmp80:1;
  local tmp81:8;
  tmp81 = 255;
  local tmp82:8;
  tmp82 = zext(tmp70);
  local tmp83:8;
  tmp83 = tmp82 & tmp81;
  tmp69 = tmp83;
  local tmp84:4;
  tmp84 = 2;
  local tmp85:4;
  tmp85 = 8;
  local tmp86:4;
  tmp86 = tmp84 * tmp85;
  local tmp87:8;
  tmp87 = zext(tmp86);
  local tmp88:8;
  tmp88 = tmp69 << tmp87;
  local tmp89:8;
  tmp89 = tmp68 | tmp88;
  S2_vtrunehb_Rd32 = tmp89:4;
  local tmp90:8;
  tmp90 = 255;
  local tmp91:4;
  tmp91 = 3;
  local tmp92:4;
  tmp92 = 8;
  local tmp93:4;
  tmp93 = tmp91 * tmp92;
  local tmp94:8;
  tmp94 = zext(tmp93);
  local tmp95:8;
  tmp95 = tmp90 << tmp94;
  local tmp96:8;
  tmp96 = ~ tmp95;
  local tmp97:8;
  tmp97 = zext(S2_vtrunehb_Rd32);
  local tmp98:8;
  tmp98 = tmp97 & tmp96;
  local tmp99:8;
  local tmp100:1;
  local tmp101:4;
  tmp101 = 3;
  local tmp102:4;
  tmp102 = 2;
  local tmp103:4;
  tmp103 = tmp101 * tmp102;
  local tmp104:4;
  tmp104 = 8;
  local tmp105:4;
  tmp105 = tmp103 * tmp104;
  local tmp106:8;
  tmp106 = zext(tmp105);
  local tmp107:8;
  tmp107 = S2_vtrunehb_Rss32 s>> tmp106;
  local tmp108:4;
  tmp108 = 255;
  local tmp109:8;
  tmp109 = zext(tmp108);
  local tmp110:8;
  tmp110 = tmp107 & tmp109;
  tmp100 = tmp110:1;
  local tmp111:8;
  tmp111 = 255;
  local tmp112:8;
  tmp112 = zext(tmp100);
  local tmp113:8;
  tmp113 = tmp112 & tmp111;
  tmp99 = tmp113;
  local tmp114:4;
  tmp114 = 3;
  local tmp115:4;
  tmp115 = 8;
  local tmp116:4;
  tmp116 = tmp114 * tmp115;
  local tmp117:8;
  tmp117 = zext(tmp116);
  local tmp118:8;
  tmp118 = tmp99 << tmp117;
  local tmp119:8;
  tmp119 = tmp98 | tmp118;
  S2_vtrunehb_Rd32 = tmp119:4;
}

:S6_vtrunehb_ppp S6_vtrunehb_ppp_Rdd32 S6_vtrunehb_ppp_Rss32 S6_vtrunehb_ppp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S6_vtrunehb_ppp_Rdd32 & S6_vtrunehb_ppp_Rss32 & S6_vtrunehb_ppp_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S6_vtrunehb_ppp_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:1;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 2;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:4;
  tmp13 = 8;
  local tmp14:4;
  tmp14 = tmp12 * tmp13;
  local tmp15:8;
  tmp15 = zext(tmp14);
  local tmp16:8;
  tmp16 = S6_vtrunehb_ppp_Rtt32 s>> tmp15;
  local tmp17:4;
  tmp17 = 255;
  local tmp18:8;
  tmp18 = zext(tmp17);
  local tmp19:8;
  tmp19 = tmp16 & tmp18;
  tmp9 = tmp19:1;
  local tmp20:8;
  tmp20 = 255;
  local tmp21:8;
  tmp21 = zext(tmp9);
  local tmp22:8;
  tmp22 = tmp21 & tmp20;
  tmp8 = tmp22;
  local tmp23:4;
  tmp23 = 0;
  local tmp24:4;
  tmp24 = 8;
  local tmp25:4;
  tmp25 = tmp23 * tmp24;
  local tmp26:8;
  tmp26 = zext(tmp25);
  local tmp27:8;
  tmp27 = tmp8 << tmp26;
  local tmp28:8;
  tmp28 = tmp7 | tmp27;
  S6_vtrunehb_ppp_Rdd32 = tmp28;
  local tmp29:8;
  tmp29 = 255;
  local tmp30:4;
  tmp30 = 0;
  local tmp31:4;
  tmp31 = 4;
  local tmp32:4;
  tmp32 = tmp30 + tmp31;
  local tmp33:4;
  tmp33 = 8;
  local tmp34:4;
  tmp34 = tmp32 * tmp33;
  local tmp35:8;
  tmp35 = zext(tmp34);
  local tmp36:8;
  tmp36 = tmp29 << tmp35;
  local tmp37:8;
  tmp37 = ~ tmp36;
  local tmp38:8;
  tmp38 = S6_vtrunehb_ppp_Rdd32 & tmp37;
  local tmp39:8;
  local tmp40:1;
  local tmp41:4;
  tmp41 = 0;
  local tmp42:4;
  tmp42 = 2;
  local tmp43:4;
  tmp43 = tmp41 * tmp42;
  local tmp44:4;
  tmp44 = 8;
  local tmp45:4;
  tmp45 = tmp43 * tmp44;
  local tmp46:8;
  tmp46 = zext(tmp45);
  local tmp47:8;
  tmp47 = S6_vtrunehb_ppp_Rss32 s>> tmp46;
  local tmp48:4;
  tmp48 = 255;
  local tmp49:8;
  tmp49 = zext(tmp48);
  local tmp50:8;
  tmp50 = tmp47 & tmp49;
  tmp40 = tmp50:1;
  local tmp51:8;
  tmp51 = 255;
  local tmp52:8;
  tmp52 = zext(tmp40);
  local tmp53:8;
  tmp53 = tmp52 & tmp51;
  tmp39 = tmp53;
  local tmp54:4;
  tmp54 = 0;
  local tmp55:4;
  tmp55 = 4;
  local tmp56:4;
  tmp56 = tmp54 + tmp55;
  local tmp57:4;
  tmp57 = 8;
  local tmp58:4;
  tmp58 = tmp56 * tmp57;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = tmp39 << tmp59;
  local tmp61:8;
  tmp61 = tmp38 | tmp60;
  S6_vtrunehb_ppp_Rdd32 = tmp61;
  local tmp62:8;
  tmp62 = 255;
  local tmp63:4;
  tmp63 = 1;
  local tmp64:4;
  tmp64 = 8;
  local tmp65:4;
  tmp65 = tmp63 * tmp64;
  local tmp66:8;
  tmp66 = zext(tmp65);
  local tmp67:8;
  tmp67 = tmp62 << tmp66;
  local tmp68:8;
  tmp68 = ~ tmp67;
  local tmp69:8;
  tmp69 = S6_vtrunehb_ppp_Rdd32 & tmp68;
  local tmp70:8;
  local tmp71:1;
  local tmp72:4;
  tmp72 = 1;
  local tmp73:4;
  tmp73 = 2;
  local tmp74:4;
  tmp74 = tmp72 * tmp73;
  local tmp75:4;
  tmp75 = 8;
  local tmp76:4;
  tmp76 = tmp74 * tmp75;
  local tmp77:8;
  tmp77 = zext(tmp76);
  local tmp78:8;
  tmp78 = S6_vtrunehb_ppp_Rtt32 s>> tmp77;
  local tmp79:4;
  tmp79 = 255;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = tmp78 & tmp80;
  tmp71 = tmp81:1;
  local tmp82:8;
  tmp82 = 255;
  local tmp83:8;
  tmp83 = zext(tmp71);
  local tmp84:8;
  tmp84 = tmp83 & tmp82;
  tmp70 = tmp84;
  local tmp85:4;
  tmp85 = 1;
  local tmp86:4;
  tmp86 = 8;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:8;
  tmp88 = zext(tmp87);
  local tmp89:8;
  tmp89 = tmp70 << tmp88;
  local tmp90:8;
  tmp90 = tmp69 | tmp89;
  S6_vtrunehb_ppp_Rdd32 = tmp90;
  local tmp91:8;
  tmp91 = 255;
  local tmp92:4;
  tmp92 = 1;
  local tmp93:4;
  tmp93 = 4;
  local tmp94:4;
  tmp94 = tmp92 + tmp93;
  local tmp95:4;
  tmp95 = 8;
  local tmp96:4;
  tmp96 = tmp94 * tmp95;
  local tmp97:8;
  tmp97 = zext(tmp96);
  local tmp98:8;
  tmp98 = tmp91 << tmp97;
  local tmp99:8;
  tmp99 = ~ tmp98;
  local tmp100:8;
  tmp100 = S6_vtrunehb_ppp_Rdd32 & tmp99;
  local tmp101:8;
  local tmp102:1;
  local tmp103:4;
  tmp103 = 1;
  local tmp104:4;
  tmp104 = 2;
  local tmp105:4;
  tmp105 = tmp103 * tmp104;
  local tmp106:4;
  tmp106 = 8;
  local tmp107:4;
  tmp107 = tmp105 * tmp106;
  local tmp108:8;
  tmp108 = zext(tmp107);
  local tmp109:8;
  tmp109 = S6_vtrunehb_ppp_Rss32 s>> tmp108;
  local tmp110:4;
  tmp110 = 255;
  local tmp111:8;
  tmp111 = zext(tmp110);
  local tmp112:8;
  tmp112 = tmp109 & tmp111;
  tmp102 = tmp112:1;
  local tmp113:8;
  tmp113 = 255;
  local tmp114:8;
  tmp114 = zext(tmp102);
  local tmp115:8;
  tmp115 = tmp114 & tmp113;
  tmp101 = tmp115;
  local tmp116:4;
  tmp116 = 1;
  local tmp117:4;
  tmp117 = 4;
  local tmp118:4;
  tmp118 = tmp116 + tmp117;
  local tmp119:4;
  tmp119 = 8;
  local tmp120:4;
  tmp120 = tmp118 * tmp119;
  local tmp121:8;
  tmp121 = zext(tmp120);
  local tmp122:8;
  tmp122 = tmp101 << tmp121;
  local tmp123:8;
  tmp123 = tmp100 | tmp122;
  S6_vtrunehb_ppp_Rdd32 = tmp123;
  local tmp124:8;
  tmp124 = 255;
  local tmp125:4;
  tmp125 = 2;
  local tmp126:4;
  tmp126 = 8;
  local tmp127:4;
  tmp127 = tmp125 * tmp126;
  local tmp128:8;
  tmp128 = zext(tmp127);
  local tmp129:8;
  tmp129 = tmp124 << tmp128;
  local tmp130:8;
  tmp130 = ~ tmp129;
  local tmp131:8;
  tmp131 = S6_vtrunehb_ppp_Rdd32 & tmp130;
  local tmp132:8;
  local tmp133:1;
  local tmp134:4;
  tmp134 = 2;
  local tmp135:4;
  tmp135 = 2;
  local tmp136:4;
  tmp136 = tmp134 * tmp135;
  local tmp137:4;
  tmp137 = 8;
  local tmp138:4;
  tmp138 = tmp136 * tmp137;
  local tmp139:8;
  tmp139 = zext(tmp138);
  local tmp140:8;
  tmp140 = S6_vtrunehb_ppp_Rtt32 s>> tmp139;
  local tmp141:4;
  tmp141 = 255;
  local tmp142:8;
  tmp142 = zext(tmp141);
  local tmp143:8;
  tmp143 = tmp140 & tmp142;
  tmp133 = tmp143:1;
  local tmp144:8;
  tmp144 = 255;
  local tmp145:8;
  tmp145 = zext(tmp133);
  local tmp146:8;
  tmp146 = tmp145 & tmp144;
  tmp132 = tmp146;
  local tmp147:4;
  tmp147 = 2;
  local tmp148:4;
  tmp148 = 8;
  local tmp149:4;
  tmp149 = tmp147 * tmp148;
  local tmp150:8;
  tmp150 = zext(tmp149);
  local tmp151:8;
  tmp151 = tmp132 << tmp150;
  local tmp152:8;
  tmp152 = tmp131 | tmp151;
  S6_vtrunehb_ppp_Rdd32 = tmp152;
  local tmp153:8;
  tmp153 = 255;
  local tmp154:4;
  tmp154 = 2;
  local tmp155:4;
  tmp155 = 4;
  local tmp156:4;
  tmp156 = tmp154 + tmp155;
  local tmp157:4;
  tmp157 = 8;
  local tmp158:4;
  tmp158 = tmp156 * tmp157;
  local tmp159:8;
  tmp159 = zext(tmp158);
  local tmp160:8;
  tmp160 = tmp153 << tmp159;
  local tmp161:8;
  tmp161 = ~ tmp160;
  local tmp162:8;
  tmp162 = S6_vtrunehb_ppp_Rdd32 & tmp161;
  local tmp163:8;
  local tmp164:1;
  local tmp165:4;
  tmp165 = 2;
  local tmp166:4;
  tmp166 = 2;
  local tmp167:4;
  tmp167 = tmp165 * tmp166;
  local tmp168:4;
  tmp168 = 8;
  local tmp169:4;
  tmp169 = tmp167 * tmp168;
  local tmp170:8;
  tmp170 = zext(tmp169);
  local tmp171:8;
  tmp171 = S6_vtrunehb_ppp_Rss32 s>> tmp170;
  local tmp172:4;
  tmp172 = 255;
  local tmp173:8;
  tmp173 = zext(tmp172);
  local tmp174:8;
  tmp174 = tmp171 & tmp173;
  tmp164 = tmp174:1;
  local tmp175:8;
  tmp175 = 255;
  local tmp176:8;
  tmp176 = zext(tmp164);
  local tmp177:8;
  tmp177 = tmp176 & tmp175;
  tmp163 = tmp177;
  local tmp178:4;
  tmp178 = 2;
  local tmp179:4;
  tmp179 = 4;
  local tmp180:4;
  tmp180 = tmp178 + tmp179;
  local tmp181:4;
  tmp181 = 8;
  local tmp182:4;
  tmp182 = tmp180 * tmp181;
  local tmp183:8;
  tmp183 = zext(tmp182);
  local tmp184:8;
  tmp184 = tmp163 << tmp183;
  local tmp185:8;
  tmp185 = tmp162 | tmp184;
  S6_vtrunehb_ppp_Rdd32 = tmp185;
  local tmp186:8;
  tmp186 = 255;
  local tmp187:4;
  tmp187 = 3;
  local tmp188:4;
  tmp188 = 8;
  local tmp189:4;
  tmp189 = tmp187 * tmp188;
  local tmp190:8;
  tmp190 = zext(tmp189);
  local tmp191:8;
  tmp191 = tmp186 << tmp190;
  local tmp192:8;
  tmp192 = ~ tmp191;
  local tmp193:8;
  tmp193 = S6_vtrunehb_ppp_Rdd32 & tmp192;
  local tmp194:8;
  local tmp195:1;
  local tmp196:4;
  tmp196 = 3;
  local tmp197:4;
  tmp197 = 2;
  local tmp198:4;
  tmp198 = tmp196 * tmp197;
  local tmp199:4;
  tmp199 = 8;
  local tmp200:4;
  tmp200 = tmp198 * tmp199;
  local tmp201:8;
  tmp201 = zext(tmp200);
  local tmp202:8;
  tmp202 = S6_vtrunehb_ppp_Rtt32 s>> tmp201;
  local tmp203:4;
  tmp203 = 255;
  local tmp204:8;
  tmp204 = zext(tmp203);
  local tmp205:8;
  tmp205 = tmp202 & tmp204;
  tmp195 = tmp205:1;
  local tmp206:8;
  tmp206 = 255;
  local tmp207:8;
  tmp207 = zext(tmp195);
  local tmp208:8;
  tmp208 = tmp207 & tmp206;
  tmp194 = tmp208;
  local tmp209:4;
  tmp209 = 3;
  local tmp210:4;
  tmp210 = 8;
  local tmp211:4;
  tmp211 = tmp209 * tmp210;
  local tmp212:8;
  tmp212 = zext(tmp211);
  local tmp213:8;
  tmp213 = tmp194 << tmp212;
  local tmp214:8;
  tmp214 = tmp193 | tmp213;
  S6_vtrunehb_ppp_Rdd32 = tmp214;
  local tmp215:8;
  tmp215 = 255;
  local tmp216:4;
  tmp216 = 3;
  local tmp217:4;
  tmp217 = 4;
  local tmp218:4;
  tmp218 = tmp216 + tmp217;
  local tmp219:4;
  tmp219 = 8;
  local tmp220:4;
  tmp220 = tmp218 * tmp219;
  local tmp221:8;
  tmp221 = zext(tmp220);
  local tmp222:8;
  tmp222 = tmp215 << tmp221;
  local tmp223:8;
  tmp223 = ~ tmp222;
  local tmp224:8;
  tmp224 = S6_vtrunehb_ppp_Rdd32 & tmp223;
  local tmp225:8;
  local tmp226:1;
  local tmp227:4;
  tmp227 = 3;
  local tmp228:4;
  tmp228 = 2;
  local tmp229:4;
  tmp229 = tmp227 * tmp228;
  local tmp230:4;
  tmp230 = 8;
  local tmp231:4;
  tmp231 = tmp229 * tmp230;
  local tmp232:8;
  tmp232 = zext(tmp231);
  local tmp233:8;
  tmp233 = S6_vtrunehb_ppp_Rss32 s>> tmp232;
  local tmp234:4;
  tmp234 = 255;
  local tmp235:8;
  tmp235 = zext(tmp234);
  local tmp236:8;
  tmp236 = tmp233 & tmp235;
  tmp226 = tmp236:1;
  local tmp237:8;
  tmp237 = 255;
  local tmp238:8;
  tmp238 = zext(tmp226);
  local tmp239:8;
  tmp239 = tmp238 & tmp237;
  tmp225 = tmp239;
  local tmp240:4;
  tmp240 = 3;
  local tmp241:4;
  tmp241 = 4;
  local tmp242:4;
  tmp242 = tmp240 + tmp241;
  local tmp243:4;
  tmp243 = 8;
  local tmp244:4;
  tmp244 = tmp242 * tmp243;
  local tmp245:8;
  tmp245 = zext(tmp244);
  local tmp246:8;
  tmp246 = tmp225 << tmp245;
  local tmp247:8;
  tmp247 = tmp224 | tmp246;
  S6_vtrunehb_ppp_Rdd32 = tmp247;
}

:S6_vtrunohb_ppp S6_vtrunohb_ppp_Rdd32 S6_vtrunohb_ppp_Rss32 S6_vtrunohb_ppp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S6_vtrunohb_ppp_Rdd32 & S6_vtrunohb_ppp_Rss32 & S6_vtrunohb_ppp_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S6_vtrunohb_ppp_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:1;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 2;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:4;
  tmp13 = 1;
  local tmp14:4;
  tmp14 = tmp12 + tmp13;
  local tmp15:4;
  tmp15 = 8;
  local tmp16:4;
  tmp16 = tmp14 * tmp15;
  local tmp17:8;
  tmp17 = zext(tmp16);
  local tmp18:8;
  tmp18 = S6_vtrunohb_ppp_Rtt32 s>> tmp17;
  local tmp19:4;
  tmp19 = 255;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = tmp18 & tmp20;
  tmp9 = tmp21:1;
  local tmp22:8;
  tmp22 = 255;
  local tmp23:8;
  tmp23 = zext(tmp9);
  local tmp24:8;
  tmp24 = tmp23 & tmp22;
  tmp8 = tmp24;
  local tmp25:4;
  tmp25 = 0;
  local tmp26:4;
  tmp26 = 8;
  local tmp27:4;
  tmp27 = tmp25 * tmp26;
  local tmp28:8;
  tmp28 = zext(tmp27);
  local tmp29:8;
  tmp29 = tmp8 << tmp28;
  local tmp30:8;
  tmp30 = tmp7 | tmp29;
  S6_vtrunohb_ppp_Rdd32 = tmp30;
  local tmp31:8;
  tmp31 = 255;
  local tmp32:4;
  tmp32 = 0;
  local tmp33:4;
  tmp33 = 4;
  local tmp34:4;
  tmp34 = tmp32 + tmp33;
  local tmp35:4;
  tmp35 = 8;
  local tmp36:4;
  tmp36 = tmp34 * tmp35;
  local tmp37:8;
  tmp37 = zext(tmp36);
  local tmp38:8;
  tmp38 = tmp31 << tmp37;
  local tmp39:8;
  tmp39 = ~ tmp38;
  local tmp40:8;
  tmp40 = S6_vtrunohb_ppp_Rdd32 & tmp39;
  local tmp41:8;
  local tmp42:1;
  local tmp43:4;
  tmp43 = 0;
  local tmp44:4;
  tmp44 = 2;
  local tmp45:4;
  tmp45 = tmp43 * tmp44;
  local tmp46:4;
  tmp46 = 1;
  local tmp47:4;
  tmp47 = tmp45 + tmp46;
  local tmp48:4;
  tmp48 = 8;
  local tmp49:4;
  tmp49 = tmp47 * tmp48;
  local tmp50:8;
  tmp50 = zext(tmp49);
  local tmp51:8;
  tmp51 = S6_vtrunohb_ppp_Rss32 s>> tmp50;
  local tmp52:4;
  tmp52 = 255;
  local tmp53:8;
  tmp53 = zext(tmp52);
  local tmp54:8;
  tmp54 = tmp51 & tmp53;
  tmp42 = tmp54:1;
  local tmp55:8;
  tmp55 = 255;
  local tmp56:8;
  tmp56 = zext(tmp42);
  local tmp57:8;
  tmp57 = tmp56 & tmp55;
  tmp41 = tmp57;
  local tmp58:4;
  tmp58 = 0;
  local tmp59:4;
  tmp59 = 4;
  local tmp60:4;
  tmp60 = tmp58 + tmp59;
  local tmp61:4;
  tmp61 = 8;
  local tmp62:4;
  tmp62 = tmp60 * tmp61;
  local tmp63:8;
  tmp63 = zext(tmp62);
  local tmp64:8;
  tmp64 = tmp41 << tmp63;
  local tmp65:8;
  tmp65 = tmp40 | tmp64;
  S6_vtrunohb_ppp_Rdd32 = tmp65;
  local tmp66:8;
  tmp66 = 255;
  local tmp67:4;
  tmp67 = 1;
  local tmp68:4;
  tmp68 = 8;
  local tmp69:4;
  tmp69 = tmp67 * tmp68;
  local tmp70:8;
  tmp70 = zext(tmp69);
  local tmp71:8;
  tmp71 = tmp66 << tmp70;
  local tmp72:8;
  tmp72 = ~ tmp71;
  local tmp73:8;
  tmp73 = S6_vtrunohb_ppp_Rdd32 & tmp72;
  local tmp74:8;
  local tmp75:1;
  local tmp76:4;
  tmp76 = 1;
  local tmp77:4;
  tmp77 = 2;
  local tmp78:4;
  tmp78 = tmp76 * tmp77;
  local tmp79:4;
  tmp79 = 1;
  local tmp80:4;
  tmp80 = tmp78 + tmp79;
  local tmp81:4;
  tmp81 = 8;
  local tmp82:4;
  tmp82 = tmp80 * tmp81;
  local tmp83:8;
  tmp83 = zext(tmp82);
  local tmp84:8;
  tmp84 = S6_vtrunohb_ppp_Rtt32 s>> tmp83;
  local tmp85:4;
  tmp85 = 255;
  local tmp86:8;
  tmp86 = zext(tmp85);
  local tmp87:8;
  tmp87 = tmp84 & tmp86;
  tmp75 = tmp87:1;
  local tmp88:8;
  tmp88 = 255;
  local tmp89:8;
  tmp89 = zext(tmp75);
  local tmp90:8;
  tmp90 = tmp89 & tmp88;
  tmp74 = tmp90;
  local tmp91:4;
  tmp91 = 1;
  local tmp92:4;
  tmp92 = 8;
  local tmp93:4;
  tmp93 = tmp91 * tmp92;
  local tmp94:8;
  tmp94 = zext(tmp93);
  local tmp95:8;
  tmp95 = tmp74 << tmp94;
  local tmp96:8;
  tmp96 = tmp73 | tmp95;
  S6_vtrunohb_ppp_Rdd32 = tmp96;
  local tmp97:8;
  tmp97 = 255;
  local tmp98:4;
  tmp98 = 1;
  local tmp99:4;
  tmp99 = 4;
  local tmp100:4;
  tmp100 = tmp98 + tmp99;
  local tmp101:4;
  tmp101 = 8;
  local tmp102:4;
  tmp102 = tmp100 * tmp101;
  local tmp103:8;
  tmp103 = zext(tmp102);
  local tmp104:8;
  tmp104 = tmp97 << tmp103;
  local tmp105:8;
  tmp105 = ~ tmp104;
  local tmp106:8;
  tmp106 = S6_vtrunohb_ppp_Rdd32 & tmp105;
  local tmp107:8;
  local tmp108:1;
  local tmp109:4;
  tmp109 = 1;
  local tmp110:4;
  tmp110 = 2;
  local tmp111:4;
  tmp111 = tmp109 * tmp110;
  local tmp112:4;
  tmp112 = 1;
  local tmp113:4;
  tmp113 = tmp111 + tmp112;
  local tmp114:4;
  tmp114 = 8;
  local tmp115:4;
  tmp115 = tmp113 * tmp114;
  local tmp116:8;
  tmp116 = zext(tmp115);
  local tmp117:8;
  tmp117 = S6_vtrunohb_ppp_Rss32 s>> tmp116;
  local tmp118:4;
  tmp118 = 255;
  local tmp119:8;
  tmp119 = zext(tmp118);
  local tmp120:8;
  tmp120 = tmp117 & tmp119;
  tmp108 = tmp120:1;
  local tmp121:8;
  tmp121 = 255;
  local tmp122:8;
  tmp122 = zext(tmp108);
  local tmp123:8;
  tmp123 = tmp122 & tmp121;
  tmp107 = tmp123;
  local tmp124:4;
  tmp124 = 1;
  local tmp125:4;
  tmp125 = 4;
  local tmp126:4;
  tmp126 = tmp124 + tmp125;
  local tmp127:4;
  tmp127 = 8;
  local tmp128:4;
  tmp128 = tmp126 * tmp127;
  local tmp129:8;
  tmp129 = zext(tmp128);
  local tmp130:8;
  tmp130 = tmp107 << tmp129;
  local tmp131:8;
  tmp131 = tmp106 | tmp130;
  S6_vtrunohb_ppp_Rdd32 = tmp131;
  local tmp132:8;
  tmp132 = 255;
  local tmp133:4;
  tmp133 = 2;
  local tmp134:4;
  tmp134 = 8;
  local tmp135:4;
  tmp135 = tmp133 * tmp134;
  local tmp136:8;
  tmp136 = zext(tmp135);
  local tmp137:8;
  tmp137 = tmp132 << tmp136;
  local tmp138:8;
  tmp138 = ~ tmp137;
  local tmp139:8;
  tmp139 = S6_vtrunohb_ppp_Rdd32 & tmp138;
  local tmp140:8;
  local tmp141:1;
  local tmp142:4;
  tmp142 = 2;
  local tmp143:4;
  tmp143 = 2;
  local tmp144:4;
  tmp144 = tmp142 * tmp143;
  local tmp145:4;
  tmp145 = 1;
  local tmp146:4;
  tmp146 = tmp144 + tmp145;
  local tmp147:4;
  tmp147 = 8;
  local tmp148:4;
  tmp148 = tmp146 * tmp147;
  local tmp149:8;
  tmp149 = zext(tmp148);
  local tmp150:8;
  tmp150 = S6_vtrunohb_ppp_Rtt32 s>> tmp149;
  local tmp151:4;
  tmp151 = 255;
  local tmp152:8;
  tmp152 = zext(tmp151);
  local tmp153:8;
  tmp153 = tmp150 & tmp152;
  tmp141 = tmp153:1;
  local tmp154:8;
  tmp154 = 255;
  local tmp155:8;
  tmp155 = zext(tmp141);
  local tmp156:8;
  tmp156 = tmp155 & tmp154;
  tmp140 = tmp156;
  local tmp157:4;
  tmp157 = 2;
  local tmp158:4;
  tmp158 = 8;
  local tmp159:4;
  tmp159 = tmp157 * tmp158;
  local tmp160:8;
  tmp160 = zext(tmp159);
  local tmp161:8;
  tmp161 = tmp140 << tmp160;
  local tmp162:8;
  tmp162 = tmp139 | tmp161;
  S6_vtrunohb_ppp_Rdd32 = tmp162;
  local tmp163:8;
  tmp163 = 255;
  local tmp164:4;
  tmp164 = 2;
  local tmp165:4;
  tmp165 = 4;
  local tmp166:4;
  tmp166 = tmp164 + tmp165;
  local tmp167:4;
  tmp167 = 8;
  local tmp168:4;
  tmp168 = tmp166 * tmp167;
  local tmp169:8;
  tmp169 = zext(tmp168);
  local tmp170:8;
  tmp170 = tmp163 << tmp169;
  local tmp171:8;
  tmp171 = ~ tmp170;
  local tmp172:8;
  tmp172 = S6_vtrunohb_ppp_Rdd32 & tmp171;
  local tmp173:8;
  local tmp174:1;
  local tmp175:4;
  tmp175 = 2;
  local tmp176:4;
  tmp176 = 2;
  local tmp177:4;
  tmp177 = tmp175 * tmp176;
  local tmp178:4;
  tmp178 = 1;
  local tmp179:4;
  tmp179 = tmp177 + tmp178;
  local tmp180:4;
  tmp180 = 8;
  local tmp181:4;
  tmp181 = tmp179 * tmp180;
  local tmp182:8;
  tmp182 = zext(tmp181);
  local tmp183:8;
  tmp183 = S6_vtrunohb_ppp_Rss32 s>> tmp182;
  local tmp184:4;
  tmp184 = 255;
  local tmp185:8;
  tmp185 = zext(tmp184);
  local tmp186:8;
  tmp186 = tmp183 & tmp185;
  tmp174 = tmp186:1;
  local tmp187:8;
  tmp187 = 255;
  local tmp188:8;
  tmp188 = zext(tmp174);
  local tmp189:8;
  tmp189 = tmp188 & tmp187;
  tmp173 = tmp189;
  local tmp190:4;
  tmp190 = 2;
  local tmp191:4;
  tmp191 = 4;
  local tmp192:4;
  tmp192 = tmp190 + tmp191;
  local tmp193:4;
  tmp193 = 8;
  local tmp194:4;
  tmp194 = tmp192 * tmp193;
  local tmp195:8;
  tmp195 = zext(tmp194);
  local tmp196:8;
  tmp196 = tmp173 << tmp195;
  local tmp197:8;
  tmp197 = tmp172 | tmp196;
  S6_vtrunohb_ppp_Rdd32 = tmp197;
  local tmp198:8;
  tmp198 = 255;
  local tmp199:4;
  tmp199 = 3;
  local tmp200:4;
  tmp200 = 8;
  local tmp201:4;
  tmp201 = tmp199 * tmp200;
  local tmp202:8;
  tmp202 = zext(tmp201);
  local tmp203:8;
  tmp203 = tmp198 << tmp202;
  local tmp204:8;
  tmp204 = ~ tmp203;
  local tmp205:8;
  tmp205 = S6_vtrunohb_ppp_Rdd32 & tmp204;
  local tmp206:8;
  local tmp207:1;
  local tmp208:4;
  tmp208 = 3;
  local tmp209:4;
  tmp209 = 2;
  local tmp210:4;
  tmp210 = tmp208 * tmp209;
  local tmp211:4;
  tmp211 = 1;
  local tmp212:4;
  tmp212 = tmp210 + tmp211;
  local tmp213:4;
  tmp213 = 8;
  local tmp214:4;
  tmp214 = tmp212 * tmp213;
  local tmp215:8;
  tmp215 = zext(tmp214);
  local tmp216:8;
  tmp216 = S6_vtrunohb_ppp_Rtt32 s>> tmp215;
  local tmp217:4;
  tmp217 = 255;
  local tmp218:8;
  tmp218 = zext(tmp217);
  local tmp219:8;
  tmp219 = tmp216 & tmp218;
  tmp207 = tmp219:1;
  local tmp220:8;
  tmp220 = 255;
  local tmp221:8;
  tmp221 = zext(tmp207);
  local tmp222:8;
  tmp222 = tmp221 & tmp220;
  tmp206 = tmp222;
  local tmp223:4;
  tmp223 = 3;
  local tmp224:4;
  tmp224 = 8;
  local tmp225:4;
  tmp225 = tmp223 * tmp224;
  local tmp226:8;
  tmp226 = zext(tmp225);
  local tmp227:8;
  tmp227 = tmp206 << tmp226;
  local tmp228:8;
  tmp228 = tmp205 | tmp227;
  S6_vtrunohb_ppp_Rdd32 = tmp228;
  local tmp229:8;
  tmp229 = 255;
  local tmp230:4;
  tmp230 = 3;
  local tmp231:4;
  tmp231 = 4;
  local tmp232:4;
  tmp232 = tmp230 + tmp231;
  local tmp233:4;
  tmp233 = 8;
  local tmp234:4;
  tmp234 = tmp232 * tmp233;
  local tmp235:8;
  tmp235 = zext(tmp234);
  local tmp236:8;
  tmp236 = tmp229 << tmp235;
  local tmp237:8;
  tmp237 = ~ tmp236;
  local tmp238:8;
  tmp238 = S6_vtrunohb_ppp_Rdd32 & tmp237;
  local tmp239:8;
  local tmp240:1;
  local tmp241:4;
  tmp241 = 3;
  local tmp242:4;
  tmp242 = 2;
  local tmp243:4;
  tmp243 = tmp241 * tmp242;
  local tmp244:4;
  tmp244 = 1;
  local tmp245:4;
  tmp245 = tmp243 + tmp244;
  local tmp246:4;
  tmp246 = 8;
  local tmp247:4;
  tmp247 = tmp245 * tmp246;
  local tmp248:8;
  tmp248 = zext(tmp247);
  local tmp249:8;
  tmp249 = S6_vtrunohb_ppp_Rss32 s>> tmp248;
  local tmp250:4;
  tmp250 = 255;
  local tmp251:8;
  tmp251 = zext(tmp250);
  local tmp252:8;
  tmp252 = tmp249 & tmp251;
  tmp240 = tmp252:1;
  local tmp253:8;
  tmp253 = 255;
  local tmp254:8;
  tmp254 = zext(tmp240);
  local tmp255:8;
  tmp255 = tmp254 & tmp253;
  tmp239 = tmp255;
  local tmp256:4;
  tmp256 = 3;
  local tmp257:4;
  tmp257 = 4;
  local tmp258:4;
  tmp258 = tmp256 + tmp257;
  local tmp259:4;
  tmp259 = 8;
  local tmp260:4;
  tmp260 = tmp258 * tmp259;
  local tmp261:8;
  tmp261 = zext(tmp260);
  local tmp262:8;
  tmp262 = tmp239 << tmp261;
  local tmp263:8;
  tmp263 = tmp238 | tmp262;
  S6_vtrunohb_ppp_Rdd32 = tmp263;
}

:S2_vsxthw S2_vsxthw_Rdd32 S2_vsxthw_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vsxthw_Rdd32 & S2_vsxthw_Rs32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_vsxthw_Rdd32 & tmp6;
  local tmp8:2;
  local tmp9:4;
  tmp9 = 0;
  local tmp10:4;
  tmp10 = 16;
  local tmp11:4;
  tmp11 = tmp9 * tmp10;
  local tmp12:4;
  tmp12 = S2_vsxthw_Rs32 s>> tmp11;
  local tmp13:4;
  tmp13 = 65535;
  local tmp14:4;
  tmp14 = tmp12 & tmp13;
  tmp8 = tmp14:2;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = zext(tmp8);
  local tmp17:8;
  tmp17 = tmp16 & tmp15;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:4;
  tmp19 = 32;
  local tmp20:4;
  tmp20 = tmp18 * tmp19;
  local tmp21:8;
  tmp21 = zext(tmp20);
  local tmp22:8;
  tmp22 = tmp17 << tmp21;
  local tmp23:8;
  tmp23 = tmp7 | tmp22;
  S2_vsxthw_Rdd32 = tmp23;
  local tmp24:8;
  tmp24 = 4294967295;
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = 32;
  local tmp27:4;
  tmp27 = tmp25 * tmp26;
  local tmp28:8;
  tmp28 = zext(tmp27);
  local tmp29:8;
  tmp29 = tmp24 << tmp28;
  local tmp30:8;
  tmp30 = ~ tmp29;
  local tmp31:8;
  tmp31 = S2_vsxthw_Rdd32 & tmp30;
  local tmp32:2;
  local tmp33:4;
  tmp33 = 1;
  local tmp34:4;
  tmp34 = 16;
  local tmp35:4;
  tmp35 = tmp33 * tmp34;
  local tmp36:4;
  tmp36 = S2_vsxthw_Rs32 s>> tmp35;
  local tmp37:4;
  tmp37 = 65535;
  local tmp38:4;
  tmp38 = tmp36 & tmp37;
  tmp32 = tmp38:2;
  local tmp39:8;
  tmp39 = 4294967295;
  local tmp40:8;
  tmp40 = zext(tmp32);
  local tmp41:8;
  tmp41 = tmp40 & tmp39;
  local tmp42:4;
  tmp42 = 1;
  local tmp43:4;
  tmp43 = 32;
  local tmp44:4;
  tmp44 = tmp42 * tmp43;
  local tmp45:8;
  tmp45 = zext(tmp44);
  local tmp46:8;
  tmp46 = tmp41 << tmp45;
  local tmp47:8;
  tmp47 = tmp31 | tmp46;
  S2_vsxthw_Rdd32 = tmp47;
}

:S2_vzxthw S2_vzxthw_Rdd32 S2_vzxthw_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vzxthw_Rdd32 & S2_vzxthw_Rs32 {
  local i:4;
  local tmp0:8;
  tmp0 = 4294967295;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 32;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_vzxthw_Rdd32 & tmp6;
  local tmp8:2;
  local tmp9:4;
  tmp9 = 0;
  local tmp10:4;
  tmp10 = 16;
  local tmp11:4;
  tmp11 = tmp9 * tmp10;
  local tmp12:4;
  tmp12 = S2_vzxthw_Rs32 s>> tmp11;
  local tmp13:4;
  tmp13 = 65535;
  local tmp14:4;
  tmp14 = tmp12 & tmp13;
  tmp8 = tmp14:2;
  local tmp15:8;
  tmp15 = 4294967295;
  local tmp16:8;
  tmp16 = sext(tmp8);
  local tmp17:8;
  tmp17 = tmp16 & tmp15;
  local tmp18:4;
  tmp18 = 0;
  local tmp19:4;
  tmp19 = 32;
  local tmp20:4;
  tmp20 = tmp18 * tmp19;
  local tmp21:8;
  tmp21 = zext(tmp20);
  local tmp22:8;
  tmp22 = tmp17 << tmp21;
  local tmp23:8;
  tmp23 = tmp7 | tmp22;
  S2_vzxthw_Rdd32 = tmp23;
  local tmp24:8;
  tmp24 = 4294967295;
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = 32;
  local tmp27:4;
  tmp27 = tmp25 * tmp26;
  local tmp28:8;
  tmp28 = zext(tmp27);
  local tmp29:8;
  tmp29 = tmp24 << tmp28;
  local tmp30:8;
  tmp30 = ~ tmp29;
  local tmp31:8;
  tmp31 = S2_vzxthw_Rdd32 & tmp30;
  local tmp32:2;
  local tmp33:4;
  tmp33 = 1;
  local tmp34:4;
  tmp34 = 16;
  local tmp35:4;
  tmp35 = tmp33 * tmp34;
  local tmp36:4;
  tmp36 = S2_vzxthw_Rs32 s>> tmp35;
  local tmp37:4;
  tmp37 = 65535;
  local tmp38:4;
  tmp38 = tmp36 & tmp37;
  tmp32 = tmp38:2;
  local tmp39:8;
  tmp39 = 4294967295;
  local tmp40:8;
  tmp40 = sext(tmp32);
  local tmp41:8;
  tmp41 = tmp40 & tmp39;
  local tmp42:4;
  tmp42 = 1;
  local tmp43:4;
  tmp43 = 32;
  local tmp44:4;
  tmp44 = tmp42 * tmp43;
  local tmp45:8;
  tmp45 = zext(tmp44);
  local tmp46:8;
  tmp46 = tmp41 << tmp45;
  local tmp47:8;
  tmp47 = tmp31 | tmp46;
  S2_vzxthw_Rdd32 = tmp47;
}

:S2_vsatwh S2_vsatwh_Rd32 S2_vsatwh_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vsatwh_Rd32 & S2_vsatwh_Rss32 unimpl

:S2_vsatwuh S2_vsatwuh_Rd32 S2_vsatwuh_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vsatwuh_Rd32 & S2_vsatwuh_Rss32 unimpl

:S2_packhl S2_packhl_Rdd32 S2_packhl_Rs32 S2_packhl_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & S2_packhl_Rdd32 & S2_packhl_Rs32 & S2_packhl_Rt32 {
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 16;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = S2_packhl_Rdd32 & tmp6;
  local tmp8:8;
  local tmp9:2;
  local tmp10:4;
  tmp10 = 0;
  local tmp11:4;
  tmp11 = 16;
  local tmp12:4;
  tmp12 = tmp10 * tmp11;
  local tmp13:4;
  tmp13 = S2_packhl_Rt32 s>> tmp12;
  local tmp14:4;
  tmp14 = 65535;
  local tmp15:4;
  tmp15 = tmp13 & tmp14;
  tmp9 = tmp15:2;
  local tmp16:4;
  tmp16 = 65535;
  local tmp17:4;
  tmp17 = zext(tmp9);
  local tmp18:4;
  tmp18 = tmp17 & tmp16;
  tmp8 = sext(tmp18);
  local tmp19:4;
  tmp19 = 0;
  local tmp20:4;
  tmp20 = 16;
  local tmp21:4;
  tmp21 = tmp19 * tmp20;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp8 << tmp22;
  local tmp24:8;
  tmp24 = tmp7 | tmp23;
  S2_packhl_Rdd32 = tmp24;
  local tmp25:8;
  tmp25 = 65535;
  local tmp26:4;
  tmp26 = 1;
  local tmp27:4;
  tmp27 = 16;
  local tmp28:4;
  tmp28 = tmp26 * tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp25 << tmp29;
  local tmp31:8;
  tmp31 = ~ tmp30;
  local tmp32:8;
  tmp32 = S2_packhl_Rdd32 & tmp31;
  local tmp33:8;
  local tmp34:2;
  local tmp35:4;
  tmp35 = 0;
  local tmp36:4;
  tmp36 = 16;
  local tmp37:4;
  tmp37 = tmp35 * tmp36;
  local tmp38:4;
  tmp38 = S2_packhl_Rs32 s>> tmp37;
  local tmp39:4;
  tmp39 = 65535;
  local tmp40:4;
  tmp40 = tmp38 & tmp39;
  tmp34 = tmp40:2;
  local tmp41:4;
  tmp41 = 65535;
  local tmp42:4;
  tmp42 = zext(tmp34);
  local tmp43:4;
  tmp43 = tmp42 & tmp41;
  tmp33 = sext(tmp43);
  local tmp44:4;
  tmp44 = 1;
  local tmp45:4;
  tmp45 = 16;
  local tmp46:4;
  tmp46 = tmp44 * tmp45;
  local tmp47:8;
  tmp47 = zext(tmp46);
  local tmp48:8;
  tmp48 = tmp33 << tmp47;
  local tmp49:8;
  tmp49 = tmp32 | tmp48;
  S2_packhl_Rdd32 = tmp49;
  local tmp50:8;
  tmp50 = 65535;
  local tmp51:4;
  tmp51 = 2;
  local tmp52:4;
  tmp52 = 16;
  local tmp53:4;
  tmp53 = tmp51 * tmp52;
  local tmp54:8;
  tmp54 = zext(tmp53);
  local tmp55:8;
  tmp55 = tmp50 << tmp54;
  local tmp56:8;
  tmp56 = ~ tmp55;
  local tmp57:8;
  tmp57 = S2_packhl_Rdd32 & tmp56;
  local tmp58:8;
  local tmp59:2;
  local tmp60:4;
  tmp60 = 1;
  local tmp61:4;
  tmp61 = 16;
  local tmp62:4;
  tmp62 = tmp60 * tmp61;
  local tmp63:4;
  tmp63 = S2_packhl_Rt32 s>> tmp62;
  local tmp64:4;
  tmp64 = 65535;
  local tmp65:4;
  tmp65 = tmp63 & tmp64;
  tmp59 = tmp65:2;
  local tmp66:4;
  tmp66 = 65535;
  local tmp67:4;
  tmp67 = zext(tmp59);
  local tmp68:4;
  tmp68 = tmp67 & tmp66;
  tmp58 = sext(tmp68);
  local tmp69:4;
  tmp69 = 2;
  local tmp70:4;
  tmp70 = 16;
  local tmp71:4;
  tmp71 = tmp69 * tmp70;
  local tmp72:8;
  tmp72 = zext(tmp71);
  local tmp73:8;
  tmp73 = tmp58 << tmp72;
  local tmp74:8;
  tmp74 = tmp57 | tmp73;
  S2_packhl_Rdd32 = tmp74;
  local tmp75:8;
  tmp75 = 65535;
  local tmp76:4;
  tmp76 = 3;
  local tmp77:4;
  tmp77 = 16;
  local tmp78:4;
  tmp78 = tmp76 * tmp77;
  local tmp79:8;
  tmp79 = zext(tmp78);
  local tmp80:8;
  tmp80 = tmp75 << tmp79;
  local tmp81:8;
  tmp81 = ~ tmp80;
  local tmp82:8;
  tmp82 = S2_packhl_Rdd32 & tmp81;
  local tmp83:8;
  local tmp84:2;
  local tmp85:4;
  tmp85 = 1;
  local tmp86:4;
  tmp86 = 16;
  local tmp87:4;
  tmp87 = tmp85 * tmp86;
  local tmp88:4;
  tmp88 = S2_packhl_Rs32 s>> tmp87;
  local tmp89:4;
  tmp89 = 65535;
  local tmp90:4;
  tmp90 = tmp88 & tmp89;
  tmp84 = tmp90:2;
  local tmp91:4;
  tmp91 = 65535;
  local tmp92:4;
  tmp92 = zext(tmp84);
  local tmp93:4;
  tmp93 = tmp92 & tmp91;
  tmp83 = sext(tmp93);
  local tmp94:4;
  tmp94 = 3;
  local tmp95:4;
  tmp95 = 16;
  local tmp96:4;
  tmp96 = tmp94 * tmp95;
  local tmp97:8;
  tmp97 = zext(tmp96);
  local tmp98:8;
  tmp98 = tmp83 << tmp97;
  local tmp99:8;
  tmp99 = tmp82 | tmp98;
  S2_packhl_Rdd32 = tmp99;
}

:A2_swiz A2_swiz_Rd32 A2_swiz_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & A2_swiz_Rd32 & A2_swiz_Rs32 {
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 8;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:8;
  tmp4 = zext(tmp3);
  local tmp5:8;
  tmp5 = tmp0 << tmp4;
  local tmp6:8;
  tmp6 = ~ tmp5;
  local tmp7:8;
  tmp7 = zext(A2_swiz_Rd32);
  local tmp8:8;
  tmp8 = tmp7 & tmp6;
  local tmp9:8;
  local tmp10:1;
  local tmp11:4;
  tmp11 = 3;
  local tmp12:4;
  tmp12 = 8;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:4;
  tmp14 = A2_swiz_Rs32 s>> tmp13;
  local tmp15:4;
  tmp15 = 255;
  local tmp16:4;
  tmp16 = tmp14 & tmp15;
  tmp10 = tmp16:1;
  local tmp17:8;
  tmp17 = 255;
  local tmp18:8;
  tmp18 = zext(tmp10);
  local tmp19:8;
  tmp19 = tmp18 & tmp17;
  tmp9 = tmp19;
  local tmp20:4;
  tmp20 = 0;
  local tmp21:4;
  tmp21 = 8;
  local tmp22:4;
  tmp22 = tmp20 * tmp21;
  local tmp23:8;
  tmp23 = zext(tmp22);
  local tmp24:8;
  tmp24 = tmp9 << tmp23;
  local tmp25:8;
  tmp25 = tmp8 | tmp24;
  A2_swiz_Rd32 = tmp25:4;
  local tmp26:8;
  tmp26 = 255;
  local tmp27:4;
  tmp27 = 1;
  local tmp28:4;
  tmp28 = 8;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp26 << tmp30;
  local tmp32:8;
  tmp32 = ~ tmp31;
  local tmp33:8;
  tmp33 = zext(A2_swiz_Rd32);
  local tmp34:8;
  tmp34 = tmp33 & tmp32;
  local tmp35:8;
  local tmp36:1;
  local tmp37:4;
  tmp37 = 2;
  local tmp38:4;
  tmp38 = 8;
  local tmp39:4;
  tmp39 = tmp37 * tmp38;
  local tmp40:4;
  tmp40 = A2_swiz_Rs32 s>> tmp39;
  local tmp41:4;
  tmp41 = 255;
  local tmp42:4;
  tmp42 = tmp40 & tmp41;
  tmp36 = tmp42:1;
  local tmp43:8;
  tmp43 = 255;
  local tmp44:8;
  tmp44 = zext(tmp36);
  local tmp45:8;
  tmp45 = tmp44 & tmp43;
  tmp35 = tmp45;
  local tmp46:4;
  tmp46 = 1;
  local tmp47:4;
  tmp47 = 8;
  local tmp48:4;
  tmp48 = tmp46 * tmp47;
  local tmp49:8;
  tmp49 = zext(tmp48);
  local tmp50:8;
  tmp50 = tmp35 << tmp49;
  local tmp51:8;
  tmp51 = tmp34 | tmp50;
  A2_swiz_Rd32 = tmp51:4;
  local tmp52:8;
  tmp52 = 255;
  local tmp53:4;
  tmp53 = 2;
  local tmp54:4;
  tmp54 = 8;
  local tmp55:4;
  tmp55 = tmp53 * tmp54;
  local tmp56:8;
  tmp56 = zext(tmp55);
  local tmp57:8;
  tmp57 = tmp52 << tmp56;
  local tmp58:8;
  tmp58 = ~ tmp57;
  local tmp59:8;
  tmp59 = zext(A2_swiz_Rd32);
  local tmp60:8;
  tmp60 = tmp59 & tmp58;
  local tmp61:8;
  local tmp62:1;
  local tmp63:4;
  tmp63 = 1;
  local tmp64:4;
  tmp64 = 8;
  local tmp65:4;
  tmp65 = tmp63 * tmp64;
  local tmp66:4;
  tmp66 = A2_swiz_Rs32 s>> tmp65;
  local tmp67:4;
  tmp67 = 255;
  local tmp68:4;
  tmp68 = tmp66 & tmp67;
  tmp62 = tmp68:1;
  local tmp69:8;
  tmp69 = 255;
  local tmp70:8;
  tmp70 = zext(tmp62);
  local tmp71:8;
  tmp71 = tmp70 & tmp69;
  tmp61 = tmp71;
  local tmp72:4;
  tmp72 = 2;
  local tmp73:4;
  tmp73 = 8;
  local tmp74:4;
  tmp74 = tmp72 * tmp73;
  local tmp75:8;
  tmp75 = zext(tmp74);
  local tmp76:8;
  tmp76 = tmp61 << tmp75;
  local tmp77:8;
  tmp77 = tmp60 | tmp76;
  A2_swiz_Rd32 = tmp77:4;
  local tmp78:8;
  tmp78 = 255;
  local tmp79:4;
  tmp79 = 3;
  local tmp80:4;
  tmp80 = 8;
  local tmp81:4;
  tmp81 = tmp79 * tmp80;
  local tmp82:8;
  tmp82 = zext(tmp81);
  local tmp83:8;
  tmp83 = tmp78 << tmp82;
  local tmp84:8;
  tmp84 = ~ tmp83;
  local tmp85:8;
  tmp85 = zext(A2_swiz_Rd32);
  local tmp86:8;
  tmp86 = tmp85 & tmp84;
  local tmp87:8;
  local tmp88:1;
  local tmp89:4;
  tmp89 = 0;
  local tmp90:4;
  tmp90 = 8;
  local tmp91:4;
  tmp91 = tmp89 * tmp90;
  local tmp92:4;
  tmp92 = A2_swiz_Rs32 s>> tmp91;
  local tmp93:4;
  tmp93 = 255;
  local tmp94:4;
  tmp94 = tmp92 & tmp93;
  tmp88 = tmp94:1;
  local tmp95:8;
  tmp95 = 255;
  local tmp96:8;
  tmp96 = zext(tmp88);
  local tmp97:8;
  tmp97 = tmp96 & tmp95;
  tmp87 = tmp97;
  local tmp98:4;
  tmp98 = 3;
  local tmp99:4;
  tmp99 = 8;
  local tmp100:4;
  tmp100 = tmp98 * tmp99;
  local tmp101:8;
  tmp101 = zext(tmp100);
  local tmp102:8;
  tmp102 = tmp87 << tmp101;
  local tmp103:8;
  tmp103 = tmp86 | tmp102;
  A2_swiz_Rd32 = tmp103:4;
}

:S2_vsathub_nopack S2_vsathub_nopack_Rdd32 S2_vsathub_nopack_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vsathub_nopack_Rdd32 & S2_vsathub_nopack_Rss32 unimpl

:S2_vsathb_nopack S2_vsathb_nopack_Rdd32 S2_vsathb_nopack_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vsathb_nopack_Rdd32 & S2_vsathb_nopack_Rss32 unimpl

:S2_vsatwh_nopack S2_vsatwh_nopack_Rdd32 S2_vsatwh_nopack_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vsatwh_nopack_Rdd32 & S2_vsatwh_nopack_Rss32 unimpl

:S2_vsatwuh_nopack S2_vsatwuh_nopack_Rdd32 S2_vsatwuh_nopack_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_vsatwuh_nopack_Rdd32 & S2_vsatwuh_nopack_Rss32 unimpl

:S2_shuffob S2_shuffob_Rdd32 S2_shuffob_Rtt32 S2_shuffob_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 0 & b7 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_shuffob_Rdd32 & S2_shuffob_Rtt32 & S2_shuffob_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 2;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:8;
  tmp6 = zext(tmp5);
  local tmp7:8;
  tmp7 = tmp0 << tmp6;
  local tmp8:8;
  tmp8 = ~ tmp7;
  local tmp9:8;
  tmp9 = S2_shuffob_Rdd32 & tmp8;
  local tmp10:8;
  local tmp11:1;
  local tmp12:4;
  tmp12 = 0;
  local tmp13:4;
  tmp13 = 2;
  local tmp14:4;
  tmp14 = tmp12 * tmp13;
  local tmp15:4;
  tmp15 = 1;
  local tmp16:4;
  tmp16 = tmp14 + tmp15;
  local tmp17:4;
  tmp17 = 8;
  local tmp18:4;
  tmp18 = tmp16 * tmp17;
  local tmp19:8;
  tmp19 = zext(tmp18);
  local tmp20:8;
  tmp20 = S2_shuffob_Rss32 s>> tmp19;
  local tmp21:4;
  tmp21 = 255;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp20 & tmp22;
  tmp11 = tmp23:1;
  local tmp24:8;
  tmp24 = 255;
  local tmp25:8;
  tmp25 = zext(tmp11);
  local tmp26:8;
  tmp26 = tmp25 & tmp24;
  tmp10 = tmp26;
  local tmp27:4;
  tmp27 = 0;
  local tmp28:4;
  tmp28 = 2;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:4;
  tmp30 = 8;
  local tmp31:4;
  tmp31 = tmp29 * tmp30;
  local tmp32:8;
  tmp32 = zext(tmp31);
  local tmp33:8;
  tmp33 = tmp10 << tmp32;
  local tmp34:8;
  tmp34 = tmp9 | tmp33;
  S2_shuffob_Rdd32 = tmp34;
  local tmp35:8;
  tmp35 = 255;
  local tmp36:4;
  tmp36 = 0;
  local tmp37:4;
  tmp37 = 2;
  local tmp38:4;
  tmp38 = tmp36 * tmp37;
  local tmp39:4;
  tmp39 = 1;
  local tmp40:4;
  tmp40 = tmp38 + tmp39;
  local tmp41:4;
  tmp41 = 8;
  local tmp42:4;
  tmp42 = tmp40 * tmp41;
  local tmp43:8;
  tmp43 = zext(tmp42);
  local tmp44:8;
  tmp44 = tmp35 << tmp43;
  local tmp45:8;
  tmp45 = ~ tmp44;
  local tmp46:8;
  tmp46 = S2_shuffob_Rdd32 & tmp45;
  local tmp47:8;
  local tmp48:1;
  local tmp49:4;
  tmp49 = 0;
  local tmp50:4;
  tmp50 = 2;
  local tmp51:4;
  tmp51 = tmp49 * tmp50;
  local tmp52:4;
  tmp52 = 1;
  local tmp53:4;
  tmp53 = tmp51 + tmp52;
  local tmp54:4;
  tmp54 = 8;
  local tmp55:4;
  tmp55 = tmp53 * tmp54;
  local tmp56:8;
  tmp56 = zext(tmp55);
  local tmp57:8;
  tmp57 = S2_shuffob_Rtt32 s>> tmp56;
  local tmp58:4;
  tmp58 = 255;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = tmp57 & tmp59;
  tmp48 = tmp60:1;
  local tmp61:8;
  tmp61 = 255;
  local tmp62:8;
  tmp62 = zext(tmp48);
  local tmp63:8;
  tmp63 = tmp62 & tmp61;
  tmp47 = tmp63;
  local tmp64:4;
  tmp64 = 0;
  local tmp65:4;
  tmp65 = 2;
  local tmp66:4;
  tmp66 = tmp64 * tmp65;
  local tmp67:4;
  tmp67 = 1;
  local tmp68:4;
  tmp68 = tmp66 + tmp67;
  local tmp69:4;
  tmp69 = 8;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = tmp47 << tmp71;
  local tmp73:8;
  tmp73 = tmp46 | tmp72;
  S2_shuffob_Rdd32 = tmp73;
  local tmp74:8;
  tmp74 = 255;
  local tmp75:4;
  tmp75 = 1;
  local tmp76:4;
  tmp76 = 2;
  local tmp77:4;
  tmp77 = tmp75 * tmp76;
  local tmp78:4;
  tmp78 = 8;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = tmp74 << tmp80;
  local tmp82:8;
  tmp82 = ~ tmp81;
  local tmp83:8;
  tmp83 = S2_shuffob_Rdd32 & tmp82;
  local tmp84:8;
  local tmp85:1;
  local tmp86:4;
  tmp86 = 1;
  local tmp87:4;
  tmp87 = 2;
  local tmp88:4;
  tmp88 = tmp86 * tmp87;
  local tmp89:4;
  tmp89 = 1;
  local tmp90:4;
  tmp90 = tmp88 + tmp89;
  local tmp91:4;
  tmp91 = 8;
  local tmp92:4;
  tmp92 = tmp90 * tmp91;
  local tmp93:8;
  tmp93 = zext(tmp92);
  local tmp94:8;
  tmp94 = S2_shuffob_Rss32 s>> tmp93;
  local tmp95:4;
  tmp95 = 255;
  local tmp96:8;
  tmp96 = zext(tmp95);
  local tmp97:8;
  tmp97 = tmp94 & tmp96;
  tmp85 = tmp97:1;
  local tmp98:8;
  tmp98 = 255;
  local tmp99:8;
  tmp99 = zext(tmp85);
  local tmp100:8;
  tmp100 = tmp99 & tmp98;
  tmp84 = tmp100;
  local tmp101:4;
  tmp101 = 1;
  local tmp102:4;
  tmp102 = 2;
  local tmp103:4;
  tmp103 = tmp101 * tmp102;
  local tmp104:4;
  tmp104 = 8;
  local tmp105:4;
  tmp105 = tmp103 * tmp104;
  local tmp106:8;
  tmp106 = zext(tmp105);
  local tmp107:8;
  tmp107 = tmp84 << tmp106;
  local tmp108:8;
  tmp108 = tmp83 | tmp107;
  S2_shuffob_Rdd32 = tmp108;
  local tmp109:8;
  tmp109 = 255;
  local tmp110:4;
  tmp110 = 1;
  local tmp111:4;
  tmp111 = 2;
  local tmp112:4;
  tmp112 = tmp110 * tmp111;
  local tmp113:4;
  tmp113 = 1;
  local tmp114:4;
  tmp114 = tmp112 + tmp113;
  local tmp115:4;
  tmp115 = 8;
  local tmp116:4;
  tmp116 = tmp114 * tmp115;
  local tmp117:8;
  tmp117 = zext(tmp116);
  local tmp118:8;
  tmp118 = tmp109 << tmp117;
  local tmp119:8;
  tmp119 = ~ tmp118;
  local tmp120:8;
  tmp120 = S2_shuffob_Rdd32 & tmp119;
  local tmp121:8;
  local tmp122:1;
  local tmp123:4;
  tmp123 = 1;
  local tmp124:4;
  tmp124 = 2;
  local tmp125:4;
  tmp125 = tmp123 * tmp124;
  local tmp126:4;
  tmp126 = 1;
  local tmp127:4;
  tmp127 = tmp125 + tmp126;
  local tmp128:4;
  tmp128 = 8;
  local tmp129:4;
  tmp129 = tmp127 * tmp128;
  local tmp130:8;
  tmp130 = zext(tmp129);
  local tmp131:8;
  tmp131 = S2_shuffob_Rtt32 s>> tmp130;
  local tmp132:4;
  tmp132 = 255;
  local tmp133:8;
  tmp133 = zext(tmp132);
  local tmp134:8;
  tmp134 = tmp131 & tmp133;
  tmp122 = tmp134:1;
  local tmp135:8;
  tmp135 = 255;
  local tmp136:8;
  tmp136 = zext(tmp122);
  local tmp137:8;
  tmp137 = tmp136 & tmp135;
  tmp121 = tmp137;
  local tmp138:4;
  tmp138 = 1;
  local tmp139:4;
  tmp139 = 2;
  local tmp140:4;
  tmp140 = tmp138 * tmp139;
  local tmp141:4;
  tmp141 = 1;
  local tmp142:4;
  tmp142 = tmp140 + tmp141;
  local tmp143:4;
  tmp143 = 8;
  local tmp144:4;
  tmp144 = tmp142 * tmp143;
  local tmp145:8;
  tmp145 = zext(tmp144);
  local tmp146:8;
  tmp146 = tmp121 << tmp145;
  local tmp147:8;
  tmp147 = tmp120 | tmp146;
  S2_shuffob_Rdd32 = tmp147;
  local tmp148:8;
  tmp148 = 255;
  local tmp149:4;
  tmp149 = 2;
  local tmp150:4;
  tmp150 = 2;
  local tmp151:4;
  tmp151 = tmp149 * tmp150;
  local tmp152:4;
  tmp152 = 8;
  local tmp153:4;
  tmp153 = tmp151 * tmp152;
  local tmp154:8;
  tmp154 = zext(tmp153);
  local tmp155:8;
  tmp155 = tmp148 << tmp154;
  local tmp156:8;
  tmp156 = ~ tmp155;
  local tmp157:8;
  tmp157 = S2_shuffob_Rdd32 & tmp156;
  local tmp158:8;
  local tmp159:1;
  local tmp160:4;
  tmp160 = 2;
  local tmp161:4;
  tmp161 = 2;
  local tmp162:4;
  tmp162 = tmp160 * tmp161;
  local tmp163:4;
  tmp163 = 1;
  local tmp164:4;
  tmp164 = tmp162 + tmp163;
  local tmp165:4;
  tmp165 = 8;
  local tmp166:4;
  tmp166 = tmp164 * tmp165;
  local tmp167:8;
  tmp167 = zext(tmp166);
  local tmp168:8;
  tmp168 = S2_shuffob_Rss32 s>> tmp167;
  local tmp169:4;
  tmp169 = 255;
  local tmp170:8;
  tmp170 = zext(tmp169);
  local tmp171:8;
  tmp171 = tmp168 & tmp170;
  tmp159 = tmp171:1;
  local tmp172:8;
  tmp172 = 255;
  local tmp173:8;
  tmp173 = zext(tmp159);
  local tmp174:8;
  tmp174 = tmp173 & tmp172;
  tmp158 = tmp174;
  local tmp175:4;
  tmp175 = 2;
  local tmp176:4;
  tmp176 = 2;
  local tmp177:4;
  tmp177 = tmp175 * tmp176;
  local tmp178:4;
  tmp178 = 8;
  local tmp179:4;
  tmp179 = tmp177 * tmp178;
  local tmp180:8;
  tmp180 = zext(tmp179);
  local tmp181:8;
  tmp181 = tmp158 << tmp180;
  local tmp182:8;
  tmp182 = tmp157 | tmp181;
  S2_shuffob_Rdd32 = tmp182;
  local tmp183:8;
  tmp183 = 255;
  local tmp184:4;
  tmp184 = 2;
  local tmp185:4;
  tmp185 = 2;
  local tmp186:4;
  tmp186 = tmp184 * tmp185;
  local tmp187:4;
  tmp187 = 1;
  local tmp188:4;
  tmp188 = tmp186 + tmp187;
  local tmp189:4;
  tmp189 = 8;
  local tmp190:4;
  tmp190 = tmp188 * tmp189;
  local tmp191:8;
  tmp191 = zext(tmp190);
  local tmp192:8;
  tmp192 = tmp183 << tmp191;
  local tmp193:8;
  tmp193 = ~ tmp192;
  local tmp194:8;
  tmp194 = S2_shuffob_Rdd32 & tmp193;
  local tmp195:8;
  local tmp196:1;
  local tmp197:4;
  tmp197 = 2;
  local tmp198:4;
  tmp198 = 2;
  local tmp199:4;
  tmp199 = tmp197 * tmp198;
  local tmp200:4;
  tmp200 = 1;
  local tmp201:4;
  tmp201 = tmp199 + tmp200;
  local tmp202:4;
  tmp202 = 8;
  local tmp203:4;
  tmp203 = tmp201 * tmp202;
  local tmp204:8;
  tmp204 = zext(tmp203);
  local tmp205:8;
  tmp205 = S2_shuffob_Rtt32 s>> tmp204;
  local tmp206:4;
  tmp206 = 255;
  local tmp207:8;
  tmp207 = zext(tmp206);
  local tmp208:8;
  tmp208 = tmp205 & tmp207;
  tmp196 = tmp208:1;
  local tmp209:8;
  tmp209 = 255;
  local tmp210:8;
  tmp210 = zext(tmp196);
  local tmp211:8;
  tmp211 = tmp210 & tmp209;
  tmp195 = tmp211;
  local tmp212:4;
  tmp212 = 2;
  local tmp213:4;
  tmp213 = 2;
  local tmp214:4;
  tmp214 = tmp212 * tmp213;
  local tmp215:4;
  tmp215 = 1;
  local tmp216:4;
  tmp216 = tmp214 + tmp215;
  local tmp217:4;
  tmp217 = 8;
  local tmp218:4;
  tmp218 = tmp216 * tmp217;
  local tmp219:8;
  tmp219 = zext(tmp218);
  local tmp220:8;
  tmp220 = tmp195 << tmp219;
  local tmp221:8;
  tmp221 = tmp194 | tmp220;
  S2_shuffob_Rdd32 = tmp221;
  local tmp222:8;
  tmp222 = 255;
  local tmp223:4;
  tmp223 = 3;
  local tmp224:4;
  tmp224 = 2;
  local tmp225:4;
  tmp225 = tmp223 * tmp224;
  local tmp226:4;
  tmp226 = 8;
  local tmp227:4;
  tmp227 = tmp225 * tmp226;
  local tmp228:8;
  tmp228 = zext(tmp227);
  local tmp229:8;
  tmp229 = tmp222 << tmp228;
  local tmp230:8;
  tmp230 = ~ tmp229;
  local tmp231:8;
  tmp231 = S2_shuffob_Rdd32 & tmp230;
  local tmp232:8;
  local tmp233:1;
  local tmp234:4;
  tmp234 = 3;
  local tmp235:4;
  tmp235 = 2;
  local tmp236:4;
  tmp236 = tmp234 * tmp235;
  local tmp237:4;
  tmp237 = 1;
  local tmp238:4;
  tmp238 = tmp236 + tmp237;
  local tmp239:4;
  tmp239 = 8;
  local tmp240:4;
  tmp240 = tmp238 * tmp239;
  local tmp241:8;
  tmp241 = zext(tmp240);
  local tmp242:8;
  tmp242 = S2_shuffob_Rss32 s>> tmp241;
  local tmp243:4;
  tmp243 = 255;
  local tmp244:8;
  tmp244 = zext(tmp243);
  local tmp245:8;
  tmp245 = tmp242 & tmp244;
  tmp233 = tmp245:1;
  local tmp246:8;
  tmp246 = 255;
  local tmp247:8;
  tmp247 = zext(tmp233);
  local tmp248:8;
  tmp248 = tmp247 & tmp246;
  tmp232 = tmp248;
  local tmp249:4;
  tmp249 = 3;
  local tmp250:4;
  tmp250 = 2;
  local tmp251:4;
  tmp251 = tmp249 * tmp250;
  local tmp252:4;
  tmp252 = 8;
  local tmp253:4;
  tmp253 = tmp251 * tmp252;
  local tmp254:8;
  tmp254 = zext(tmp253);
  local tmp255:8;
  tmp255 = tmp232 << tmp254;
  local tmp256:8;
  tmp256 = tmp231 | tmp255;
  S2_shuffob_Rdd32 = tmp256;
  local tmp257:8;
  tmp257 = 255;
  local tmp258:4;
  tmp258 = 3;
  local tmp259:4;
  tmp259 = 2;
  local tmp260:4;
  tmp260 = tmp258 * tmp259;
  local tmp261:4;
  tmp261 = 1;
  local tmp262:4;
  tmp262 = tmp260 + tmp261;
  local tmp263:4;
  tmp263 = 8;
  local tmp264:4;
  tmp264 = tmp262 * tmp263;
  local tmp265:8;
  tmp265 = zext(tmp264);
  local tmp266:8;
  tmp266 = tmp257 << tmp265;
  local tmp267:8;
  tmp267 = ~ tmp266;
  local tmp268:8;
  tmp268 = S2_shuffob_Rdd32 & tmp267;
  local tmp269:8;
  local tmp270:1;
  local tmp271:4;
  tmp271 = 3;
  local tmp272:4;
  tmp272 = 2;
  local tmp273:4;
  tmp273 = tmp271 * tmp272;
  local tmp274:4;
  tmp274 = 1;
  local tmp275:4;
  tmp275 = tmp273 + tmp274;
  local tmp276:4;
  tmp276 = 8;
  local tmp277:4;
  tmp277 = tmp275 * tmp276;
  local tmp278:8;
  tmp278 = zext(tmp277);
  local tmp279:8;
  tmp279 = S2_shuffob_Rtt32 s>> tmp278;
  local tmp280:4;
  tmp280 = 255;
  local tmp281:8;
  tmp281 = zext(tmp280);
  local tmp282:8;
  tmp282 = tmp279 & tmp281;
  tmp270 = tmp282:1;
  local tmp283:8;
  tmp283 = 255;
  local tmp284:8;
  tmp284 = zext(tmp270);
  local tmp285:8;
  tmp285 = tmp284 & tmp283;
  tmp269 = tmp285;
  local tmp286:4;
  tmp286 = 3;
  local tmp287:4;
  tmp287 = 2;
  local tmp288:4;
  tmp288 = tmp286 * tmp287;
  local tmp289:4;
  tmp289 = 1;
  local tmp290:4;
  tmp290 = tmp288 + tmp289;
  local tmp291:4;
  tmp291 = 8;
  local tmp292:4;
  tmp292 = tmp290 * tmp291;
  local tmp293:8;
  tmp293 = zext(tmp292);
  local tmp294:8;
  tmp294 = tmp269 << tmp293;
  local tmp295:8;
  tmp295 = tmp268 | tmp294;
  S2_shuffob_Rdd32 = tmp295;
}

:S2_shuffeb S2_shuffeb_Rdd32 S2_shuffeb_Rss32 S2_shuffeb_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_shuffeb_Rdd32 & S2_shuffeb_Rss32 & S2_shuffeb_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 255;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 2;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = 8;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:8;
  tmp6 = zext(tmp5);
  local tmp7:8;
  tmp7 = tmp0 << tmp6;
  local tmp8:8;
  tmp8 = ~ tmp7;
  local tmp9:8;
  tmp9 = S2_shuffeb_Rdd32 & tmp8;
  local tmp10:8;
  local tmp11:1;
  local tmp12:4;
  tmp12 = 0;
  local tmp13:4;
  tmp13 = 2;
  local tmp14:4;
  tmp14 = tmp12 * tmp13;
  local tmp15:4;
  tmp15 = 8;
  local tmp16:4;
  tmp16 = tmp14 * tmp15;
  local tmp17:8;
  tmp17 = zext(tmp16);
  local tmp18:8;
  tmp18 = S2_shuffeb_Rtt32 s>> tmp17;
  local tmp19:4;
  tmp19 = 255;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = tmp18 & tmp20;
  tmp11 = tmp21:1;
  local tmp22:8;
  tmp22 = 255;
  local tmp23:8;
  tmp23 = zext(tmp11);
  local tmp24:8;
  tmp24 = tmp23 & tmp22;
  tmp10 = tmp24;
  local tmp25:4;
  tmp25 = 0;
  local tmp26:4;
  tmp26 = 2;
  local tmp27:4;
  tmp27 = tmp25 * tmp26;
  local tmp28:4;
  tmp28 = 8;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp10 << tmp30;
  local tmp32:8;
  tmp32 = tmp9 | tmp31;
  S2_shuffeb_Rdd32 = tmp32;
  local tmp33:8;
  tmp33 = 255;
  local tmp34:4;
  tmp34 = 0;
  local tmp35:4;
  tmp35 = 2;
  local tmp36:4;
  tmp36 = tmp34 * tmp35;
  local tmp37:4;
  tmp37 = 1;
  local tmp38:4;
  tmp38 = tmp36 + tmp37;
  local tmp39:4;
  tmp39 = 8;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = tmp33 << tmp41;
  local tmp43:8;
  tmp43 = ~ tmp42;
  local tmp44:8;
  tmp44 = S2_shuffeb_Rdd32 & tmp43;
  local tmp45:8;
  local tmp46:1;
  local tmp47:4;
  tmp47 = 0;
  local tmp48:4;
  tmp48 = 2;
  local tmp49:4;
  tmp49 = tmp47 * tmp48;
  local tmp50:4;
  tmp50 = 8;
  local tmp51:4;
  tmp51 = tmp49 * tmp50;
  local tmp52:8;
  tmp52 = zext(tmp51);
  local tmp53:8;
  tmp53 = S2_shuffeb_Rss32 s>> tmp52;
  local tmp54:4;
  tmp54 = 255;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp53 & tmp55;
  tmp46 = tmp56:1;
  local tmp57:8;
  tmp57 = 255;
  local tmp58:8;
  tmp58 = zext(tmp46);
  local tmp59:8;
  tmp59 = tmp58 & tmp57;
  tmp45 = tmp59;
  local tmp60:4;
  tmp60 = 0;
  local tmp61:4;
  tmp61 = 2;
  local tmp62:4;
  tmp62 = tmp60 * tmp61;
  local tmp63:4;
  tmp63 = 1;
  local tmp64:4;
  tmp64 = tmp62 + tmp63;
  local tmp65:4;
  tmp65 = 8;
  local tmp66:4;
  tmp66 = tmp64 * tmp65;
  local tmp67:8;
  tmp67 = zext(tmp66);
  local tmp68:8;
  tmp68 = tmp45 << tmp67;
  local tmp69:8;
  tmp69 = tmp44 | tmp68;
  S2_shuffeb_Rdd32 = tmp69;
  local tmp70:8;
  tmp70 = 255;
  local tmp71:4;
  tmp71 = 1;
  local tmp72:4;
  tmp72 = 2;
  local tmp73:4;
  tmp73 = tmp71 * tmp72;
  local tmp74:4;
  tmp74 = 8;
  local tmp75:4;
  tmp75 = tmp73 * tmp74;
  local tmp76:8;
  tmp76 = zext(tmp75);
  local tmp77:8;
  tmp77 = tmp70 << tmp76;
  local tmp78:8;
  tmp78 = ~ tmp77;
  local tmp79:8;
  tmp79 = S2_shuffeb_Rdd32 & tmp78;
  local tmp80:8;
  local tmp81:1;
  local tmp82:4;
  tmp82 = 1;
  local tmp83:4;
  tmp83 = 2;
  local tmp84:4;
  tmp84 = tmp82 * tmp83;
  local tmp85:4;
  tmp85 = 8;
  local tmp86:4;
  tmp86 = tmp84 * tmp85;
  local tmp87:8;
  tmp87 = zext(tmp86);
  local tmp88:8;
  tmp88 = S2_shuffeb_Rtt32 s>> tmp87;
  local tmp89:4;
  tmp89 = 255;
  local tmp90:8;
  tmp90 = zext(tmp89);
  local tmp91:8;
  tmp91 = tmp88 & tmp90;
  tmp81 = tmp91:1;
  local tmp92:8;
  tmp92 = 255;
  local tmp93:8;
  tmp93 = zext(tmp81);
  local tmp94:8;
  tmp94 = tmp93 & tmp92;
  tmp80 = tmp94;
  local tmp95:4;
  tmp95 = 1;
  local tmp96:4;
  tmp96 = 2;
  local tmp97:4;
  tmp97 = tmp95 * tmp96;
  local tmp98:4;
  tmp98 = 8;
  local tmp99:4;
  tmp99 = tmp97 * tmp98;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = tmp80 << tmp100;
  local tmp102:8;
  tmp102 = tmp79 | tmp101;
  S2_shuffeb_Rdd32 = tmp102;
  local tmp103:8;
  tmp103 = 255;
  local tmp104:4;
  tmp104 = 1;
  local tmp105:4;
  tmp105 = 2;
  local tmp106:4;
  tmp106 = tmp104 * tmp105;
  local tmp107:4;
  tmp107 = 1;
  local tmp108:4;
  tmp108 = tmp106 + tmp107;
  local tmp109:4;
  tmp109 = 8;
  local tmp110:4;
  tmp110 = tmp108 * tmp109;
  local tmp111:8;
  tmp111 = zext(tmp110);
  local tmp112:8;
  tmp112 = tmp103 << tmp111;
  local tmp113:8;
  tmp113 = ~ tmp112;
  local tmp114:8;
  tmp114 = S2_shuffeb_Rdd32 & tmp113;
  local tmp115:8;
  local tmp116:1;
  local tmp117:4;
  tmp117 = 1;
  local tmp118:4;
  tmp118 = 2;
  local tmp119:4;
  tmp119 = tmp117 * tmp118;
  local tmp120:4;
  tmp120 = 8;
  local tmp121:4;
  tmp121 = tmp119 * tmp120;
  local tmp122:8;
  tmp122 = zext(tmp121);
  local tmp123:8;
  tmp123 = S2_shuffeb_Rss32 s>> tmp122;
  local tmp124:4;
  tmp124 = 255;
  local tmp125:8;
  tmp125 = zext(tmp124);
  local tmp126:8;
  tmp126 = tmp123 & tmp125;
  tmp116 = tmp126:1;
  local tmp127:8;
  tmp127 = 255;
  local tmp128:8;
  tmp128 = zext(tmp116);
  local tmp129:8;
  tmp129 = tmp128 & tmp127;
  tmp115 = tmp129;
  local tmp130:4;
  tmp130 = 1;
  local tmp131:4;
  tmp131 = 2;
  local tmp132:4;
  tmp132 = tmp130 * tmp131;
  local tmp133:4;
  tmp133 = 1;
  local tmp134:4;
  tmp134 = tmp132 + tmp133;
  local tmp135:4;
  tmp135 = 8;
  local tmp136:4;
  tmp136 = tmp134 * tmp135;
  local tmp137:8;
  tmp137 = zext(tmp136);
  local tmp138:8;
  tmp138 = tmp115 << tmp137;
  local tmp139:8;
  tmp139 = tmp114 | tmp138;
  S2_shuffeb_Rdd32 = tmp139;
  local tmp140:8;
  tmp140 = 255;
  local tmp141:4;
  tmp141 = 2;
  local tmp142:4;
  tmp142 = 2;
  local tmp143:4;
  tmp143 = tmp141 * tmp142;
  local tmp144:4;
  tmp144 = 8;
  local tmp145:4;
  tmp145 = tmp143 * tmp144;
  local tmp146:8;
  tmp146 = zext(tmp145);
  local tmp147:8;
  tmp147 = tmp140 << tmp146;
  local tmp148:8;
  tmp148 = ~ tmp147;
  local tmp149:8;
  tmp149 = S2_shuffeb_Rdd32 & tmp148;
  local tmp150:8;
  local tmp151:1;
  local tmp152:4;
  tmp152 = 2;
  local tmp153:4;
  tmp153 = 2;
  local tmp154:4;
  tmp154 = tmp152 * tmp153;
  local tmp155:4;
  tmp155 = 8;
  local tmp156:4;
  tmp156 = tmp154 * tmp155;
  local tmp157:8;
  tmp157 = zext(tmp156);
  local tmp158:8;
  tmp158 = S2_shuffeb_Rtt32 s>> tmp157;
  local tmp159:4;
  tmp159 = 255;
  local tmp160:8;
  tmp160 = zext(tmp159);
  local tmp161:8;
  tmp161 = tmp158 & tmp160;
  tmp151 = tmp161:1;
  local tmp162:8;
  tmp162 = 255;
  local tmp163:8;
  tmp163 = zext(tmp151);
  local tmp164:8;
  tmp164 = tmp163 & tmp162;
  tmp150 = tmp164;
  local tmp165:4;
  tmp165 = 2;
  local tmp166:4;
  tmp166 = 2;
  local tmp167:4;
  tmp167 = tmp165 * tmp166;
  local tmp168:4;
  tmp168 = 8;
  local tmp169:4;
  tmp169 = tmp167 * tmp168;
  local tmp170:8;
  tmp170 = zext(tmp169);
  local tmp171:8;
  tmp171 = tmp150 << tmp170;
  local tmp172:8;
  tmp172 = tmp149 | tmp171;
  S2_shuffeb_Rdd32 = tmp172;
  local tmp173:8;
  tmp173 = 255;
  local tmp174:4;
  tmp174 = 2;
  local tmp175:4;
  tmp175 = 2;
  local tmp176:4;
  tmp176 = tmp174 * tmp175;
  local tmp177:4;
  tmp177 = 1;
  local tmp178:4;
  tmp178 = tmp176 + tmp177;
  local tmp179:4;
  tmp179 = 8;
  local tmp180:4;
  tmp180 = tmp178 * tmp179;
  local tmp181:8;
  tmp181 = zext(tmp180);
  local tmp182:8;
  tmp182 = tmp173 << tmp181;
  local tmp183:8;
  tmp183 = ~ tmp182;
  local tmp184:8;
  tmp184 = S2_shuffeb_Rdd32 & tmp183;
  local tmp185:8;
  local tmp186:1;
  local tmp187:4;
  tmp187 = 2;
  local tmp188:4;
  tmp188 = 2;
  local tmp189:4;
  tmp189 = tmp187 * tmp188;
  local tmp190:4;
  tmp190 = 8;
  local tmp191:4;
  tmp191 = tmp189 * tmp190;
  local tmp192:8;
  tmp192 = zext(tmp191);
  local tmp193:8;
  tmp193 = S2_shuffeb_Rss32 s>> tmp192;
  local tmp194:4;
  tmp194 = 255;
  local tmp195:8;
  tmp195 = zext(tmp194);
  local tmp196:8;
  tmp196 = tmp193 & tmp195;
  tmp186 = tmp196:1;
  local tmp197:8;
  tmp197 = 255;
  local tmp198:8;
  tmp198 = zext(tmp186);
  local tmp199:8;
  tmp199 = tmp198 & tmp197;
  tmp185 = tmp199;
  local tmp200:4;
  tmp200 = 2;
  local tmp201:4;
  tmp201 = 2;
  local tmp202:4;
  tmp202 = tmp200 * tmp201;
  local tmp203:4;
  tmp203 = 1;
  local tmp204:4;
  tmp204 = tmp202 + tmp203;
  local tmp205:4;
  tmp205 = 8;
  local tmp206:4;
  tmp206 = tmp204 * tmp205;
  local tmp207:8;
  tmp207 = zext(tmp206);
  local tmp208:8;
  tmp208 = tmp185 << tmp207;
  local tmp209:8;
  tmp209 = tmp184 | tmp208;
  S2_shuffeb_Rdd32 = tmp209;
  local tmp210:8;
  tmp210 = 255;
  local tmp211:4;
  tmp211 = 3;
  local tmp212:4;
  tmp212 = 2;
  local tmp213:4;
  tmp213 = tmp211 * tmp212;
  local tmp214:4;
  tmp214 = 8;
  local tmp215:4;
  tmp215 = tmp213 * tmp214;
  local tmp216:8;
  tmp216 = zext(tmp215);
  local tmp217:8;
  tmp217 = tmp210 << tmp216;
  local tmp218:8;
  tmp218 = ~ tmp217;
  local tmp219:8;
  tmp219 = S2_shuffeb_Rdd32 & tmp218;
  local tmp220:8;
  local tmp221:1;
  local tmp222:4;
  tmp222 = 3;
  local tmp223:4;
  tmp223 = 2;
  local tmp224:4;
  tmp224 = tmp222 * tmp223;
  local tmp225:4;
  tmp225 = 8;
  local tmp226:4;
  tmp226 = tmp224 * tmp225;
  local tmp227:8;
  tmp227 = zext(tmp226);
  local tmp228:8;
  tmp228 = S2_shuffeb_Rtt32 s>> tmp227;
  local tmp229:4;
  tmp229 = 255;
  local tmp230:8;
  tmp230 = zext(tmp229);
  local tmp231:8;
  tmp231 = tmp228 & tmp230;
  tmp221 = tmp231:1;
  local tmp232:8;
  tmp232 = 255;
  local tmp233:8;
  tmp233 = zext(tmp221);
  local tmp234:8;
  tmp234 = tmp233 & tmp232;
  tmp220 = tmp234;
  local tmp235:4;
  tmp235 = 3;
  local tmp236:4;
  tmp236 = 2;
  local tmp237:4;
  tmp237 = tmp235 * tmp236;
  local tmp238:4;
  tmp238 = 8;
  local tmp239:4;
  tmp239 = tmp237 * tmp238;
  local tmp240:8;
  tmp240 = zext(tmp239);
  local tmp241:8;
  tmp241 = tmp220 << tmp240;
  local tmp242:8;
  tmp242 = tmp219 | tmp241;
  S2_shuffeb_Rdd32 = tmp242;
  local tmp243:8;
  tmp243 = 255;
  local tmp244:4;
  tmp244 = 3;
  local tmp245:4;
  tmp245 = 2;
  local tmp246:4;
  tmp246 = tmp244 * tmp245;
  local tmp247:4;
  tmp247 = 1;
  local tmp248:4;
  tmp248 = tmp246 + tmp247;
  local tmp249:4;
  tmp249 = 8;
  local tmp250:4;
  tmp250 = tmp248 * tmp249;
  local tmp251:8;
  tmp251 = zext(tmp250);
  local tmp252:8;
  tmp252 = tmp243 << tmp251;
  local tmp253:8;
  tmp253 = ~ tmp252;
  local tmp254:8;
  tmp254 = S2_shuffeb_Rdd32 & tmp253;
  local tmp255:8;
  local tmp256:1;
  local tmp257:4;
  tmp257 = 3;
  local tmp258:4;
  tmp258 = 2;
  local tmp259:4;
  tmp259 = tmp257 * tmp258;
  local tmp260:4;
  tmp260 = 8;
  local tmp261:4;
  tmp261 = tmp259 * tmp260;
  local tmp262:8;
  tmp262 = zext(tmp261);
  local tmp263:8;
  tmp263 = S2_shuffeb_Rss32 s>> tmp262;
  local tmp264:4;
  tmp264 = 255;
  local tmp265:8;
  tmp265 = zext(tmp264);
  local tmp266:8;
  tmp266 = tmp263 & tmp265;
  tmp256 = tmp266:1;
  local tmp267:8;
  tmp267 = 255;
  local tmp268:8;
  tmp268 = zext(tmp256);
  local tmp269:8;
  tmp269 = tmp268 & tmp267;
  tmp255 = tmp269;
  local tmp270:4;
  tmp270 = 3;
  local tmp271:4;
  tmp271 = 2;
  local tmp272:4;
  tmp272 = tmp270 * tmp271;
  local tmp273:4;
  tmp273 = 1;
  local tmp274:4;
  tmp274 = tmp272 + tmp273;
  local tmp275:4;
  tmp275 = 8;
  local tmp276:4;
  tmp276 = tmp274 * tmp275;
  local tmp277:8;
  tmp277 = zext(tmp276);
  local tmp278:8;
  tmp278 = tmp255 << tmp277;
  local tmp279:8;
  tmp279 = tmp254 | tmp278;
  S2_shuffeb_Rdd32 = tmp279;
}

:S2_shuffoh S2_shuffoh_Rdd32 S2_shuffoh_Rtt32 S2_shuffoh_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_shuffoh_Rdd32 & S2_shuffoh_Rtt32 & S2_shuffoh_Rss32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 2;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:8;
  tmp6 = zext(tmp5);
  local tmp7:8;
  tmp7 = tmp0 << tmp6;
  local tmp8:8;
  tmp8 = ~ tmp7;
  local tmp9:8;
  tmp9 = S2_shuffoh_Rdd32 & tmp8;
  local tmp10:8;
  local tmp11:2;
  local tmp12:4;
  tmp12 = 0;
  local tmp13:4;
  tmp13 = 2;
  local tmp14:4;
  tmp14 = tmp12 * tmp13;
  local tmp15:4;
  tmp15 = 1;
  local tmp16:4;
  tmp16 = tmp14 + tmp15;
  local tmp17:4;
  tmp17 = 16;
  local tmp18:4;
  tmp18 = tmp16 * tmp17;
  local tmp19:8;
  tmp19 = zext(tmp18);
  local tmp20:8;
  tmp20 = S2_shuffoh_Rss32 s>> tmp19;
  local tmp21:4;
  tmp21 = 65535;
  local tmp22:8;
  tmp22 = zext(tmp21);
  local tmp23:8;
  tmp23 = tmp20 & tmp22;
  tmp11 = tmp23:2;
  local tmp24:4;
  tmp24 = 65535;
  local tmp25:4;
  tmp25 = zext(tmp11);
  local tmp26:4;
  tmp26 = tmp25 & tmp24;
  tmp10 = sext(tmp26);
  local tmp27:4;
  tmp27 = 0;
  local tmp28:4;
  tmp28 = 2;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:4;
  tmp30 = 16;
  local tmp31:4;
  tmp31 = tmp29 * tmp30;
  local tmp32:8;
  tmp32 = zext(tmp31);
  local tmp33:8;
  tmp33 = tmp10 << tmp32;
  local tmp34:8;
  tmp34 = tmp9 | tmp33;
  S2_shuffoh_Rdd32 = tmp34;
  local tmp35:8;
  tmp35 = 65535;
  local tmp36:4;
  tmp36 = 0;
  local tmp37:4;
  tmp37 = 2;
  local tmp38:4;
  tmp38 = tmp36 * tmp37;
  local tmp39:4;
  tmp39 = 1;
  local tmp40:4;
  tmp40 = tmp38 + tmp39;
  local tmp41:4;
  tmp41 = 16;
  local tmp42:4;
  tmp42 = tmp40 * tmp41;
  local tmp43:8;
  tmp43 = zext(tmp42);
  local tmp44:8;
  tmp44 = tmp35 << tmp43;
  local tmp45:8;
  tmp45 = ~ tmp44;
  local tmp46:8;
  tmp46 = S2_shuffoh_Rdd32 & tmp45;
  local tmp47:8;
  local tmp48:2;
  local tmp49:4;
  tmp49 = 0;
  local tmp50:4;
  tmp50 = 2;
  local tmp51:4;
  tmp51 = tmp49 * tmp50;
  local tmp52:4;
  tmp52 = 1;
  local tmp53:4;
  tmp53 = tmp51 + tmp52;
  local tmp54:4;
  tmp54 = 16;
  local tmp55:4;
  tmp55 = tmp53 * tmp54;
  local tmp56:8;
  tmp56 = zext(tmp55);
  local tmp57:8;
  tmp57 = S2_shuffoh_Rtt32 s>> tmp56;
  local tmp58:4;
  tmp58 = 65535;
  local tmp59:8;
  tmp59 = zext(tmp58);
  local tmp60:8;
  tmp60 = tmp57 & tmp59;
  tmp48 = tmp60:2;
  local tmp61:4;
  tmp61 = 65535;
  local tmp62:4;
  tmp62 = zext(tmp48);
  local tmp63:4;
  tmp63 = tmp62 & tmp61;
  tmp47 = sext(tmp63);
  local tmp64:4;
  tmp64 = 0;
  local tmp65:4;
  tmp65 = 2;
  local tmp66:4;
  tmp66 = tmp64 * tmp65;
  local tmp67:4;
  tmp67 = 1;
  local tmp68:4;
  tmp68 = tmp66 + tmp67;
  local tmp69:4;
  tmp69 = 16;
  local tmp70:4;
  tmp70 = tmp68 * tmp69;
  local tmp71:8;
  tmp71 = zext(tmp70);
  local tmp72:8;
  tmp72 = tmp47 << tmp71;
  local tmp73:8;
  tmp73 = tmp46 | tmp72;
  S2_shuffoh_Rdd32 = tmp73;
  local tmp74:8;
  tmp74 = 65535;
  local tmp75:4;
  tmp75 = 1;
  local tmp76:4;
  tmp76 = 2;
  local tmp77:4;
  tmp77 = tmp75 * tmp76;
  local tmp78:4;
  tmp78 = 16;
  local tmp79:4;
  tmp79 = tmp77 * tmp78;
  local tmp80:8;
  tmp80 = zext(tmp79);
  local tmp81:8;
  tmp81 = tmp74 << tmp80;
  local tmp82:8;
  tmp82 = ~ tmp81;
  local tmp83:8;
  tmp83 = S2_shuffoh_Rdd32 & tmp82;
  local tmp84:8;
  local tmp85:2;
  local tmp86:4;
  tmp86 = 1;
  local tmp87:4;
  tmp87 = 2;
  local tmp88:4;
  tmp88 = tmp86 * tmp87;
  local tmp89:4;
  tmp89 = 1;
  local tmp90:4;
  tmp90 = tmp88 + tmp89;
  local tmp91:4;
  tmp91 = 16;
  local tmp92:4;
  tmp92 = tmp90 * tmp91;
  local tmp93:8;
  tmp93 = zext(tmp92);
  local tmp94:8;
  tmp94 = S2_shuffoh_Rss32 s>> tmp93;
  local tmp95:4;
  tmp95 = 65535;
  local tmp96:8;
  tmp96 = zext(tmp95);
  local tmp97:8;
  tmp97 = tmp94 & tmp96;
  tmp85 = tmp97:2;
  local tmp98:4;
  tmp98 = 65535;
  local tmp99:4;
  tmp99 = zext(tmp85);
  local tmp100:4;
  tmp100 = tmp99 & tmp98;
  tmp84 = sext(tmp100);
  local tmp101:4;
  tmp101 = 1;
  local tmp102:4;
  tmp102 = 2;
  local tmp103:4;
  tmp103 = tmp101 * tmp102;
  local tmp104:4;
  tmp104 = 16;
  local tmp105:4;
  tmp105 = tmp103 * tmp104;
  local tmp106:8;
  tmp106 = zext(tmp105);
  local tmp107:8;
  tmp107 = tmp84 << tmp106;
  local tmp108:8;
  tmp108 = tmp83 | tmp107;
  S2_shuffoh_Rdd32 = tmp108;
  local tmp109:8;
  tmp109 = 65535;
  local tmp110:4;
  tmp110 = 1;
  local tmp111:4;
  tmp111 = 2;
  local tmp112:4;
  tmp112 = tmp110 * tmp111;
  local tmp113:4;
  tmp113 = 1;
  local tmp114:4;
  tmp114 = tmp112 + tmp113;
  local tmp115:4;
  tmp115 = 16;
  local tmp116:4;
  tmp116 = tmp114 * tmp115;
  local tmp117:8;
  tmp117 = zext(tmp116);
  local tmp118:8;
  tmp118 = tmp109 << tmp117;
  local tmp119:8;
  tmp119 = ~ tmp118;
  local tmp120:8;
  tmp120 = S2_shuffoh_Rdd32 & tmp119;
  local tmp121:8;
  local tmp122:2;
  local tmp123:4;
  tmp123 = 1;
  local tmp124:4;
  tmp124 = 2;
  local tmp125:4;
  tmp125 = tmp123 * tmp124;
  local tmp126:4;
  tmp126 = 1;
  local tmp127:4;
  tmp127 = tmp125 + tmp126;
  local tmp128:4;
  tmp128 = 16;
  local tmp129:4;
  tmp129 = tmp127 * tmp128;
  local tmp130:8;
  tmp130 = zext(tmp129);
  local tmp131:8;
  tmp131 = S2_shuffoh_Rtt32 s>> tmp130;
  local tmp132:4;
  tmp132 = 65535;
  local tmp133:8;
  tmp133 = zext(tmp132);
  local tmp134:8;
  tmp134 = tmp131 & tmp133;
  tmp122 = tmp134:2;
  local tmp135:4;
  tmp135 = 65535;
  local tmp136:4;
  tmp136 = zext(tmp122);
  local tmp137:4;
  tmp137 = tmp136 & tmp135;
  tmp121 = sext(tmp137);
  local tmp138:4;
  tmp138 = 1;
  local tmp139:4;
  tmp139 = 2;
  local tmp140:4;
  tmp140 = tmp138 * tmp139;
  local tmp141:4;
  tmp141 = 1;
  local tmp142:4;
  tmp142 = tmp140 + tmp141;
  local tmp143:4;
  tmp143 = 16;
  local tmp144:4;
  tmp144 = tmp142 * tmp143;
  local tmp145:8;
  tmp145 = zext(tmp144);
  local tmp146:8;
  tmp146 = tmp121 << tmp145;
  local tmp147:8;
  tmp147 = tmp120 | tmp146;
  S2_shuffoh_Rdd32 = tmp147;
}

:S2_shuffeh S2_shuffeh_Rdd32 S2_shuffeh_Rss32 S2_shuffeh_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_shuffeh_Rdd32 & S2_shuffeh_Rss32 & S2_shuffeh_Rtt32 {
  local i:4;
  local tmp0:8;
  tmp0 = 65535;
  local tmp1:4;
  tmp1 = 0;
  local tmp2:4;
  tmp2 = 2;
  local tmp3:4;
  tmp3 = tmp1 * tmp2;
  local tmp4:4;
  tmp4 = 16;
  local tmp5:4;
  tmp5 = tmp3 * tmp4;
  local tmp6:8;
  tmp6 = zext(tmp5);
  local tmp7:8;
  tmp7 = tmp0 << tmp6;
  local tmp8:8;
  tmp8 = ~ tmp7;
  local tmp9:8;
  tmp9 = S2_shuffeh_Rdd32 & tmp8;
  local tmp10:8;
  local tmp11:2;
  local tmp12:4;
  tmp12 = 0;
  local tmp13:4;
  tmp13 = 2;
  local tmp14:4;
  tmp14 = tmp12 * tmp13;
  local tmp15:4;
  tmp15 = 16;
  local tmp16:4;
  tmp16 = tmp14 * tmp15;
  local tmp17:8;
  tmp17 = zext(tmp16);
  local tmp18:8;
  tmp18 = S2_shuffeh_Rtt32 s>> tmp17;
  local tmp19:4;
  tmp19 = 65535;
  local tmp20:8;
  tmp20 = zext(tmp19);
  local tmp21:8;
  tmp21 = tmp18 & tmp20;
  tmp11 = tmp21:2;
  local tmp22:4;
  tmp22 = 65535;
  local tmp23:4;
  tmp23 = zext(tmp11);
  local tmp24:4;
  tmp24 = tmp23 & tmp22;
  tmp10 = sext(tmp24);
  local tmp25:4;
  tmp25 = 0;
  local tmp26:4;
  tmp26 = 2;
  local tmp27:4;
  tmp27 = tmp25 * tmp26;
  local tmp28:4;
  tmp28 = 16;
  local tmp29:4;
  tmp29 = tmp27 * tmp28;
  local tmp30:8;
  tmp30 = zext(tmp29);
  local tmp31:8;
  tmp31 = tmp10 << tmp30;
  local tmp32:8;
  tmp32 = tmp9 | tmp31;
  S2_shuffeh_Rdd32 = tmp32;
  local tmp33:8;
  tmp33 = 65535;
  local tmp34:4;
  tmp34 = 0;
  local tmp35:4;
  tmp35 = 2;
  local tmp36:4;
  tmp36 = tmp34 * tmp35;
  local tmp37:4;
  tmp37 = 1;
  local tmp38:4;
  tmp38 = tmp36 + tmp37;
  local tmp39:4;
  tmp39 = 16;
  local tmp40:4;
  tmp40 = tmp38 * tmp39;
  local tmp41:8;
  tmp41 = zext(tmp40);
  local tmp42:8;
  tmp42 = tmp33 << tmp41;
  local tmp43:8;
  tmp43 = ~ tmp42;
  local tmp44:8;
  tmp44 = S2_shuffeh_Rdd32 & tmp43;
  local tmp45:8;
  local tmp46:2;
  local tmp47:4;
  tmp47 = 0;
  local tmp48:4;
  tmp48 = 2;
  local tmp49:4;
  tmp49 = tmp47 * tmp48;
  local tmp50:4;
  tmp50 = 16;
  local tmp51:4;
  tmp51 = tmp49 * tmp50;
  local tmp52:8;
  tmp52 = zext(tmp51);
  local tmp53:8;
  tmp53 = S2_shuffeh_Rss32 s>> tmp52;
  local tmp54:4;
  tmp54 = 65535;
  local tmp55:8;
  tmp55 = zext(tmp54);
  local tmp56:8;
  tmp56 = tmp53 & tmp55;
  tmp46 = tmp56:2;
  local tmp57:4;
  tmp57 = 65535;
  local tmp58:4;
  tmp58 = zext(tmp46);
  local tmp59:4;
  tmp59 = tmp58 & tmp57;
  tmp45 = sext(tmp59);
  local tmp60:4;
  tmp60 = 0;
  local tmp61:4;
  tmp61 = 2;
  local tmp62:4;
  tmp62 = tmp60 * tmp61;
  local tmp63:4;
  tmp63 = 1;
  local tmp64:4;
  tmp64 = tmp62 + tmp63;
  local tmp65:4;
  tmp65 = 16;
  local tmp66:4;
  tmp66 = tmp64 * tmp65;
  local tmp67:8;
  tmp67 = zext(tmp66);
  local tmp68:8;
  tmp68 = tmp45 << tmp67;
  local tmp69:8;
  tmp69 = tmp44 | tmp68;
  S2_shuffeh_Rdd32 = tmp69;
  local tmp70:8;
  tmp70 = 65535;
  local tmp71:4;
  tmp71 = 1;
  local tmp72:4;
  tmp72 = 2;
  local tmp73:4;
  tmp73 = tmp71 * tmp72;
  local tmp74:4;
  tmp74 = 16;
  local tmp75:4;
  tmp75 = tmp73 * tmp74;
  local tmp76:8;
  tmp76 = zext(tmp75);
  local tmp77:8;
  tmp77 = tmp70 << tmp76;
  local tmp78:8;
  tmp78 = ~ tmp77;
  local tmp79:8;
  tmp79 = S2_shuffeh_Rdd32 & tmp78;
  local tmp80:8;
  local tmp81:2;
  local tmp82:4;
  tmp82 = 1;
  local tmp83:4;
  tmp83 = 2;
  local tmp84:4;
  tmp84 = tmp82 * tmp83;
  local tmp85:4;
  tmp85 = 16;
  local tmp86:4;
  tmp86 = tmp84 * tmp85;
  local tmp87:8;
  tmp87 = zext(tmp86);
  local tmp88:8;
  tmp88 = S2_shuffeh_Rtt32 s>> tmp87;
  local tmp89:4;
  tmp89 = 65535;
  local tmp90:8;
  tmp90 = zext(tmp89);
  local tmp91:8;
  tmp91 = tmp88 & tmp90;
  tmp81 = tmp91:2;
  local tmp92:4;
  tmp92 = 65535;
  local tmp93:4;
  tmp93 = zext(tmp81);
  local tmp94:4;
  tmp94 = tmp93 & tmp92;
  tmp80 = sext(tmp94);
  local tmp95:4;
  tmp95 = 1;
  local tmp96:4;
  tmp96 = 2;
  local tmp97:4;
  tmp97 = tmp95 * tmp96;
  local tmp98:4;
  tmp98 = 16;
  local tmp99:4;
  tmp99 = tmp97 * tmp98;
  local tmp100:8;
  tmp100 = zext(tmp99);
  local tmp101:8;
  tmp101 = tmp80 << tmp100;
  local tmp102:8;
  tmp102 = tmp79 | tmp101;
  S2_shuffeh_Rdd32 = tmp102;
  local tmp103:8;
  tmp103 = 65535;
  local tmp104:4;
  tmp104 = 1;
  local tmp105:4;
  tmp105 = 2;
  local tmp106:4;
  tmp106 = tmp104 * tmp105;
  local tmp107:4;
  tmp107 = 1;
  local tmp108:4;
  tmp108 = tmp106 + tmp107;
  local tmp109:4;
  tmp109 = 16;
  local tmp110:4;
  tmp110 = tmp108 * tmp109;
  local tmp111:8;
  tmp111 = zext(tmp110);
  local tmp112:8;
  tmp112 = tmp103 << tmp111;
  local tmp113:8;
  tmp113 = ~ tmp112;
  local tmp114:8;
  tmp114 = S2_shuffeh_Rdd32 & tmp113;
  local tmp115:8;
  local tmp116:2;
  local tmp117:4;
  tmp117 = 1;
  local tmp118:4;
  tmp118 = 2;
  local tmp119:4;
  tmp119 = tmp117 * tmp118;
  local tmp120:4;
  tmp120 = 16;
  local tmp121:4;
  tmp121 = tmp119 * tmp120;
  local tmp122:8;
  tmp122 = zext(tmp121);
  local tmp123:8;
  tmp123 = S2_shuffeh_Rss32 s>> tmp122;
  local tmp124:4;
  tmp124 = 65535;
  local tmp125:8;
  tmp125 = zext(tmp124);
  local tmp126:8;
  tmp126 = tmp123 & tmp125;
  tmp116 = tmp126:2;
  local tmp127:4;
  tmp127 = 65535;
  local tmp128:4;
  tmp128 = zext(tmp116);
  local tmp129:4;
  tmp129 = tmp128 & tmp127;
  tmp115 = sext(tmp129);
  local tmp130:4;
  tmp130 = 1;
  local tmp131:4;
  tmp131 = 2;
  local tmp132:4;
  tmp132 = tmp130 * tmp131;
  local tmp133:4;
  tmp133 = 1;
  local tmp134:4;
  tmp134 = tmp132 + tmp133;
  local tmp135:4;
  tmp135 = 16;
  local tmp136:4;
  tmp136 = tmp134 * tmp135;
  local tmp137:8;
  tmp137 = zext(tmp136);
  local tmp138:8;
  tmp138 = tmp115 << tmp137;
  local tmp139:8;
  tmp139 = tmp114 | tmp138;
  S2_shuffeh_Rdd32 = tmp139;
}

:S5_popcountp S5_popcountp_Rd32 S5_popcountp_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S5_popcountp_Rd32 & S5_popcountp_Rss32 unimpl

:S4_parity S4_parity_Rd32 S4_parity_Rs32 S4_parity_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & S4_parity_Rd32 & S4_parity_Rs32 & S4_parity_Rt32 unimpl

:S2_parityp S2_parityp_Rd32 S2_parityp_Rss32 S2_parityp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 1 & S2_parityp_Rd32 & S2_parityp_Rss32 & S2_parityp_Rtt32 unimpl

:S2_lfsp S2_lfsp_Rdd32 S2_lfsp_Rss32 S2_lfsp_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_lfsp_Rdd32 & S2_lfsp_Rss32 & S2_lfsp_Rtt32 unimpl

:S2_clbnorm S2_clbnorm_Rd32 S2_clbnorm_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_clbnorm_Rd32 & S2_clbnorm_Rs32 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:1;
  tmp1 = S2_clbnorm_Rs32 == tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = 0;
  S2_clbnorm_Rd32 = tmp4;
  goto <done_4>;
<f_branch_4>
  local tmp5:4;
  tmp5 = cl1(S2_clbnorm_Rs32);
  local tmp6:4;
  tmp6 = ~ S2_clbnorm_Rs32;
  local tmp7:4;
  tmp7 = cl1(tmp6);
  local tmp8:1;
  tmp8 = tmp5 s> tmp7;
  local tmp9:1;
  tmp9 = tmp8;
  if (tmp9) goto <t_branch_11>;
  goto <f_branch_11>;
<t_branch_11>
  local tmp11:4;
  tmp11 = cl1(S2_clbnorm_Rs32);
  local tmp12:4;
  tmp12 = tmp11;
  goto <done_11>;
<f_branch_11>
  local tmp13:4;
  tmp13 = ~ S2_clbnorm_Rs32;
  local tmp14:4;
  tmp14 = cl1(tmp13);
  tmp12 = tmp14;
<done_11>
  local tmp15:4;
  tmp15 = 1;
  local tmp16:4;
  tmp16 = tmp12 - tmp15;
  S2_clbnorm_Rd32 = tmp16;
<done_4>
}

:S4_clbaddi S4_clbaddi_Rd32 S4_clbaddi_Rs32 S4_clbaddi_s6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S4_clbaddi_Rd32 & S4_clbaddi_Rs32 & S4_clbaddi_s6 {
  local tmp0:4;
  tmp0 = cl1(S4_clbaddi_Rs32);
  local tmp1:4;
  tmp1 = ~ S4_clbaddi_Rs32;
  local tmp2:4;
  tmp2 = cl1(tmp1);
  local tmp3:1;
  tmp3 = tmp0 s> tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  local tmp6:4;
  tmp6 = cl1(S4_clbaddi_Rs32);
  local tmp7:4;
  tmp7 = tmp6;
  goto <done_6>;
<f_branch_6>
  local tmp8:4;
  tmp8 = ~ S4_clbaddi_Rs32;
  local tmp9:4;
  tmp9 = cl1(tmp8);
  tmp7 = tmp9;
<done_6>
  local tmp10:4;
  tmp10 = tmp7 + S4_clbaddi_s6;
  S4_clbaddi_Rd32 = tmp10;
}

:S4_clbpnorm S4_clbpnorm_Rd32 S4_clbpnorm_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S4_clbpnorm_Rd32 & S4_clbpnorm_Rss32 {
  local tmp0:4;
  tmp0 = 0;
  local tmp1:8;
  tmp1 = zext(tmp0);
  local tmp2:1;
  tmp2 = S4_clbpnorm_Rss32 == tmp1;
  local tmp3:1;
  tmp3 = tmp2;
  if (tmp3) goto <t_branch_5>;
  goto <f_branch_5>;
<t_branch_5>
  local tmp5:4;
  tmp5 = 0;
  S4_clbpnorm_Rd32 = tmp5;
  goto <done_5>;
<f_branch_5>
  local tmp6:4;
  tmp6 = cl1(S4_clbpnorm_Rss32);
  local tmp7:8;
  tmp7 = ~ S4_clbpnorm_Rss32;
  local tmp8:4;
  tmp8 = cl1(tmp7);
  local tmp9:1;
  tmp9 = tmp6 s> tmp8;
  local tmp10:1;
  tmp10 = tmp9;
  if (tmp10) goto <t_branch_12>;
  goto <f_branch_12>;
<t_branch_12>
  local tmp12:4;
  tmp12 = cl1(S4_clbpnorm_Rss32);
  local tmp13:4;
  tmp13 = tmp12;
  goto <done_12>;
<f_branch_12>
  local tmp14:8;
  tmp14 = ~ S4_clbpnorm_Rss32;
  local tmp15:4;
  tmp15 = cl1(tmp14);
  tmp13 = tmp15;
<done_12>
  local tmp16:4;
  tmp16 = 1;
  local tmp17:4;
  tmp17 = tmp13 - tmp16;
  S4_clbpnorm_Rd32 = tmp17;
<done_5>
}

:S4_clbpaddi S4_clbpaddi_Rd32 S4_clbpaddi_Rss32 S4_clbpaddi_s6 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S4_clbpaddi_Rd32 & S4_clbpaddi_Rss32 & S4_clbpaddi_s6 {
  local tmp0:4;
  tmp0 = cl1(S4_clbpaddi_Rss32);
  local tmp1:8;
  tmp1 = ~ S4_clbpaddi_Rss32;
  local tmp2:4;
  tmp2 = cl1(tmp1);
  local tmp3:1;
  tmp3 = tmp0 s> tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  local tmp6:4;
  tmp6 = cl1(S4_clbpaddi_Rss32);
  local tmp7:4;
  tmp7 = tmp6;
  goto <done_6>;
<f_branch_6>
  local tmp8:8;
  tmp8 = ~ S4_clbpaddi_Rss32;
  local tmp9:4;
  tmp9 = cl1(tmp8);
  tmp7 = tmp9;
<done_6>
  local tmp10:4;
  tmp10 = tmp7 + S4_clbpaddi_s6;
  S4_clbpaddi_Rd32 = tmp10;
}

:S2_cabacdecbin S2_cabacdecbin_Rdd32 S2_cabacdecbin_Rss32 S2_cabacdecbin_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b6 = 1 & b7 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 1 & b31 = 1 & S2_cabacdecbin_Rdd32 & S2_cabacdecbin_Rss32 & S2_cabacdecbin_Rtt32 unimpl

:S2_clb S2_clb_Rd32 S2_clb_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_clb_Rd32 & S2_clb_Rs32 {
  local tmp0:4;
  tmp0 = cl1(S2_clb_Rs32);
  local tmp1:4;
  tmp1 = ~ S2_clb_Rs32;
  local tmp2:4;
  tmp2 = cl1(tmp1);
  local tmp3:1;
  tmp3 = tmp0 s> tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  local tmp6:4;
  tmp6 = cl1(S2_clb_Rs32);
  local tmp7:4;
  tmp7 = tmp6;
  goto <done_6>;
<f_branch_6>
  local tmp8:4;
  tmp8 = ~ S2_clb_Rs32;
  local tmp9:4;
  tmp9 = cl1(tmp8);
  tmp7 = tmp9;
<done_6>
  S2_clb_Rd32 = tmp7;
}

:S2_cl0 S2_cl0_Rd32 S2_cl0_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_cl0_Rd32 & S2_cl0_Rs32 {
  local tmp0:4;
  tmp0 = ~ S2_cl0_Rs32;
  local tmp1:4;
  tmp1 = cl1(tmp0);
  S2_cl0_Rd32 = tmp1;
}

:S2_cl1 S2_cl1_Rd32 S2_cl1_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_cl1_Rd32 & S2_cl1_Rs32 {
  local tmp0:4;
  tmp0 = cl1(S2_cl1_Rs32);
  S2_cl1_Rd32 = tmp0;
}

:S2_clbp S2_clbp_Rd32 S2_clbp_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_clbp_Rd32 & S2_clbp_Rss32 {
  local tmp0:4;
  tmp0 = cl1(S2_clbp_Rss32);
  local tmp1:8;
  tmp1 = ~ S2_clbp_Rss32;
  local tmp2:4;
  tmp2 = cl1(tmp1);
  local tmp3:1;
  tmp3 = tmp0 s> tmp2;
  local tmp4:1;
  tmp4 = tmp3;
  if (tmp4) goto <t_branch_6>;
  goto <f_branch_6>;
<t_branch_6>
  local tmp6:4;
  tmp6 = cl1(S2_clbp_Rss32);
  local tmp7:4;
  tmp7 = tmp6;
  goto <done_6>;
<f_branch_6>
  local tmp8:8;
  tmp8 = ~ S2_clbp_Rss32;
  local tmp9:4;
  tmp9 = cl1(tmp8);
  tmp7 = tmp9;
<done_6>
  S2_clbp_Rd32 = tmp7;
}

:S2_cl0p S2_cl0p_Rd32 S2_cl0p_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_cl0p_Rd32 & S2_cl0p_Rss32 {
  local tmp0:8;
  tmp0 = ~ S2_cl0p_Rss32;
  local tmp1:4;
  tmp1 = cl1(tmp0);
  S2_cl0p_Rd32 = tmp1;
}

:S2_cl1p S2_cl1p_Rd32 S2_cl1p_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_cl1p_Rd32 & S2_cl1p_Rss32 {
  local tmp0:4;
  tmp0 = cl1(S2_cl1p_Rss32);
  S2_cl1p_Rd32 = tmp0;
}

:S2_brev S2_brev_Rd32 S2_brev_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_brev_Rd32 & S2_brev_Rs32 {
  local tmp0:4;
  tmp0 = brev(S2_brev_Rs32);
  S2_brev_Rd32 = tmp0;
}

:S2_brevp S2_brevp_Rdd32 S2_brevp_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_brevp_Rdd32 & S2_brevp_Rss32 {
  local tmp0:4;
  tmp0 = brev(S2_brevp_Rss32);
  S2_brevp_Rdd32 = zext(tmp0);
}

:S2_ct0 S2_ct0_Rd32 S2_ct0_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_ct0_Rd32 & S2_ct0_Rs32 {
  local tmp0:4;
  tmp0 = brev(S2_ct0_Rs32);
  local tmp1:4;
  tmp1 = ~ tmp0;
  local tmp2:4;
  tmp2 = cl1(tmp1);
  S2_ct0_Rd32 = tmp2;
}

:S2_ct1 S2_ct1_Rd32 S2_ct1_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_ct1_Rd32 & S2_ct1_Rs32 {
  local tmp0:4;
  tmp0 = brev(S2_ct1_Rs32);
  local tmp1:4;
  tmp1 = cl1(tmp0);
  S2_ct1_Rd32 = tmp1;
}

:S2_ct0p S2_ct0p_Rd32 S2_ct0p_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_ct0p_Rd32 & S2_ct0p_Rss32 {
  local tmp0:4;
  tmp0 = brev(S2_ct0p_Rss32);
  local tmp1:4;
  tmp1 = ~ tmp0;
  local tmp2:4;
  tmp2 = cl1(tmp1);
  S2_ct0p_Rd32 = tmp2;
}

:S2_ct1p S2_ct1p_Rd32 S2_ct1p_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_ct1p_Rd32 & S2_ct1p_Rss32 {
  local tmp0:4;
  tmp0 = brev(S2_ct1p_Rss32);
  local tmp1:4;
  tmp1 = cl1(tmp0);
  S2_ct1p_Rd32 = tmp1;
}

:S2_interleave S2_interleave_Rdd32 S2_interleave_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_interleave_Rdd32 & S2_interleave_Rss32 unimpl

:S2_deinterleave S2_deinterleave_Rdd32 S2_deinterleave_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 1 & S2_deinterleave_Rdd32 & S2_deinterleave_Rss32 unimpl

:J2_trap0 J2_trap0_u8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_trap0_u8 {
  local tmp0:4;
  tmp0 = trap0(J2_trap0_u8);
}

:J2_trap1 J2_trap1_Rx32 J2_trap1_u8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_trap1_Rx32 & J2_trap1_u8 {
  local tmp0:4;
  tmp0 = trap1(J2_trap1_Rx32, J2_trap1_u8);
}

:J2_pause J2_pause_u8 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_pause_u8 {
  local tmp0:4;
  tmp0 = pause(J2_pause_u8);
}

:J2_rte  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b12 = 0 & b13 = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 {
  local tmp0:4;
  tmp0 = rte();
}

:Y2_swi Y2_swi_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_swi_Rs32 {
  local tmp0:4;
  tmp0 = swi(Y2_swi_Rs32);
}

:Y2_cswi Y2_cswi_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_cswi_Rs32 {
  local tmp0:4;
  tmp0 = cswi(Y2_cswi_Rs32);
}

:Y2_ciad Y2_ciad_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_ciad_Rs32 {
  local tmp0:4;
  tmp0 = ciad(Y2_ciad_Rs32);
}

:Y4_siad Y4_siad_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y4_siad_Rs32 {
  local tmp0:4;
  tmp0 = siad(Y4_siad_Rs32);
}

:Y2_iassignr Y2_iassignr_Rd32 Y2_iassignr_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_iassignr_Rd32 & Y2_iassignr_Rs32 {
  local tmp0:4;
  tmp0 = iassignr(Y2_iassignr_Rs32);
  Y2_iassignr_Rd32 = tmp0;
}

:Y2_iassignw Y2_iassignw_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_iassignw_Rs32 {
  local tmp0:4;
  tmp0 = iassignw(Y2_iassignw_Rs32);
}

:Y2_getimask Y2_getimask_Rd32 Y2_getimask_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_getimask_Rd32 & Y2_getimask_Rs32 {
  local tmp0:4;
  tmp0 = getimask(Y2_getimask_Rs32);
  Y2_getimask_Rd32 = tmp0;
}

:Y2_setimask Y2_setimask_Pt4 Y2_setimask_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_setimask_Pt4 & Y2_setimask_Rs32 {
  local tmp0:4;
  tmp0 = setimask(Y2_setimask_Pt4, Y2_setimask_Rs32);
}

:Y2_tlbw Y2_tlbw_Rss32 Y2_tlbw_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_tlbw_Rss32 & Y2_tlbw_Rt32 {
  local tmp0:4;
  tmp0 = tlbw(Y2_tlbw_Rss32, Y2_tlbw_Rt32);
}

:Y5_ctlbw Y5_ctlbw_Rd32 Y5_ctlbw_Rss32 Y5_ctlbw_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y5_ctlbw_Rd32 & Y5_ctlbw_Rss32 & Y5_ctlbw_Rt32 {
  local tmp0:4;
  tmp0 = ctlbw(Y5_ctlbw_Rss32, Y5_ctlbw_Rt32);
  Y5_ctlbw_Rd32 = tmp0;
}

:Y5_tlboc Y5_tlboc_Rd32 Y5_tlboc_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y5_tlboc_Rd32 & Y5_tlboc_Rss32 {
  local tmp0:4;
  tmp0 = tlboc(Y5_tlboc_Rss32);
  Y5_tlboc_Rd32 = tmp0;
}

:Y2_tlbr Y2_tlbr_Rdd32 Y2_tlbr_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_tlbr_Rdd32 & Y2_tlbr_Rs32 {
  local tmp0:4;
  tmp0 = tlbr(Y2_tlbr_Rs32);
  Y2_tlbr_Rdd32 = zext(tmp0);
}

:Y2_tlbp Y2_tlbp_Rd32 Y2_tlbp_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_tlbp_Rd32 & Y2_tlbp_Rs32 {
  local tmp0:4;
  tmp0 = tlbp(Y2_tlbp_Rs32);
  Y2_tlbp_Rd32 = tmp0;
}

:Y5_tlbasidi Y5_tlbasidi_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y5_tlbasidi_Rs32 {
  local tmp0:4;
  tmp0 = tlbinvasid(Y5_tlbasidi_Rs32);
}

:Y2_tlblock  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 {
  local tmp0:4;
  tmp0 = tlblock();
}

:Y2_tlbunlock  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 {
  local tmp0:4;
  tmp0 = tlbunlock();
}

:Y2_k0lock  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 {
  local tmp0:4;
  tmp0 = k0lock();
}

:Y2_k0unlock  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 {
  local tmp0:4;
  tmp0 = k0unlock();
}

:Y2_crswap0 Y2_crswap0_Rx32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_crswap0_Rx32 {
  local tmp0:4;
  tmp0 = crswap(Y2_crswap0_Rx32, SGP0);
}

:Y4_crswap1 Y4_crswap1_Rx32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y4_crswap1_Rx32 {
  local tmp0:4;
  tmp0 = crswap(Y4_crswap1_Rx32, SGP1);
}

:Y4_crswap10 Y4_crswap10_Rxx32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b0 = 0 & b1 = 0 & b2 = 0 & b3 = 0 & b4 = 0 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y4_crswap10_Rxx32 {
  local tmp0:4;
  tmp0 = crswap(Y4_crswap10_Rxx32, SGP1SGP0);
}

:Y2_tfrscrr Y2_tfrscrr_Rd32 Y2_tfrscrr_Ss128 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_tfrscrr_Rd32 & Y2_tfrscrr_Ss128 {
  Y2_tfrscrr_Rd32 = Y2_tfrscrr_Ss128;
}

:Y2_tfrsrcr Y2_tfrsrcr_Sd128 Y2_tfrsrcr_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_tfrsrcr_Sd128 & Y2_tfrsrcr_Rs32 {
  Y2_tfrsrcr_Sd128 = Y2_tfrsrcr_Rs32;
}

:Y4_tfrscpp Y4_tfrscpp_Rdd32 Y4_tfrscpp_Sss128 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y4_tfrscpp_Rdd32 & Y4_tfrscpp_Sss128 {
  Y4_tfrscpp_Rdd32 = Y4_tfrscpp_Sss128;
}

:Y4_tfrspcp Y4_tfrspcp_Sdd128 Y4_tfrspcp_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y4_tfrspcp_Sdd128 & Y4_tfrspcp_Rss32 {
  Y4_tfrspcp_Sdd128 = Y4_tfrspcp_Rss32;
}

:G4_tfrgcrr G4_tfrgcrr_Rd32 G4_tfrgcrr_Gs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & G4_tfrgcrr_Rd32 & G4_tfrgcrr_Gs32 {
  G4_tfrgcrr_Rd32 = G4_tfrgcrr_Gs32;
}

:G4_tfrgrcr G4_tfrgrcr_Gd32 G4_tfrgrcr_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & G4_tfrgrcr_Gd32 & G4_tfrgrcr_Rs32 {
  G4_tfrgrcr_Gd32 = G4_tfrgrcr_Rs32;
}

:G4_tfrgcpp G4_tfrgcpp_Rdd32 G4_tfrgcpp_Gss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & G4_tfrgcpp_Rdd32 & G4_tfrgcpp_Gss32 {
  G4_tfrgcpp_Rdd32 = G4_tfrgcpp_Gss32;
}

:G4_tfrgpcp G4_tfrgpcp_Gdd32 G4_tfrgpcp_Rss32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & G4_tfrgpcp_Gdd32 & G4_tfrgpcp_Rss32 {
  G4_tfrgpcp_Gdd32 = G4_tfrgpcp_Rss32;
}

:Y2_setprio Y2_setprio_Pt4 Y2_setprio_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_setprio_Pt4 & Y2_setprio_Rs32 {
  local tmp0:4;
  tmp0 = setprio(Y2_setprio_Pt4, Y2_setprio_Rs32);
}

:Y6_diag Y6_diag_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y6_diag_Rs32 {
  local tmp0:4;
  tmp0 = diag(Y6_diag_Rs32);
}

:Y6_diag0 Y6_diag0_Rss32 Y6_diag0_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y6_diag0_Rss32 & Y6_diag0_Rtt32 {
  local tmp0:4;
  tmp0 = diag0(Y6_diag0_Rss32, Y6_diag0_Rtt32);
}

:Y6_diag1 Y6_diag1_Rss32 Y6_diag1_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 1 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y6_diag1_Rss32 & Y6_diag1_Rtt32 {
  local tmp0:4;
  tmp0 = diag1(Y6_diag1_Rss32, Y6_diag1_Rtt32);
}

:Y4_trace Y4_trace_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y4_trace_Rs32 {
  local tmp0:4;
  tmp0 = trace(Y4_trace_Rs32);
}

:Y2_stop Y2_stop_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_stop_Rs32 {
  local tmp0:4;
  tmp0 = stop(Y2_stop_Rs32);
}

:Y4_nmi Y4_nmi_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 1 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y4_nmi_Rs32 {
  local tmp0:4;
  tmp0 = nmi(Y4_nmi_Rs32);
}

:Y2_start Y2_start_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_start_Rs32 {
  local tmp0:4;
  tmp0 = start(Y2_start_Rs32);
}

:Y2_wait Y2_wait_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_wait_Rs32 {
  local tmp0:4;
  tmp0 = wait(Y2_wait_Rs32);
}

:Y2_resume Y2_resume_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 1 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 & Y2_resume_Rs32 {
  local tmp0:4;
  tmp0 = resume(Y2_resume_Rs32);
}

:Y2_break  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 1 & b31 = 0 {
  local tmp0:4;
  tmp0 = brkpt();
}

:Y2_ictagr Y2_ictagr_Rd32 Y2_ictagr_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & Y2_ictagr_Rd32 & Y2_ictagr_Rs32 {
  local tmp0:4;
  tmp0 = ictagr(Y2_ictagr_Rs32);
  Y2_ictagr_Rd32 = tmp0;
}

:Y2_ictagw Y2_ictagw_Rs32 Y2_ictagw_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & Y2_ictagw_Rs32 & Y2_ictagw_Rt32 {
  local tmp0:4;
  tmp0 = ictagw(Y2_ictagw_Rs32, Y2_ictagw_Rt32);
}

:Y2_icdataw Y2_icdataw_Rs32 Y2_icdataw_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 1 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & Y2_icdataw_Rs32 & Y2_icdataw_Rt32 {
  local tmp0:4;
  tmp0 = icdataw(Y2_icdataw_Rs32, Y2_icdataw_Rt32);
}

:Y2_icdatar Y2_icdatar_Rd32 Y2_icdatar_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & Y2_icdatar_Rd32 & Y2_icdatar_Rs32 {
  local tmp0:4;
  tmp0 = icdatar(Y2_icdatar_Rs32);
  Y2_icdatar_Rd32 = tmp0;
}

:Y2_icinva Y2_icinva_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & Y2_icinva_Rs32 {
  local tmp0:4;
  tmp0 = icinva(Y2_icinva_Rs32);
}

:Y2_icinvidx Y2_icinvidx_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & Y2_icinvidx_Rs32 {
  local tmp0:4;
  tmp0 = icinvidx(Y2_icinvidx_Rs32);
}

:Y2_ickill  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 {
  local tmp0:4;
  tmp0 = ickill();
}

:Y2_isync  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b0 = 0 & b1 = 1 & b2 = 0 & b3 = 0 & b4 = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b8 = 0 & b9 = 0 & b13 = 0 & b16 = 0 & b17 = 0 & b18 = 0 & b19 = 0 & b20 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 1 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 {
  local tmp0:4;
  tmp0 = isync();
}

:Y2_barrier  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 {
  local tmp0:4;
  tmp0 = barrier();
}

:Y2_syncht  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 {
  local tmp0:4;
  tmp0 = syncht();
}

:Y2_dcfetchbo Y2_dcfetchbo_Rs32 Y2_dcfetchbo_u11_3 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 0 & b31 = 1 & Y2_dcfetchbo_Rs32 & Y2_dcfetchbo_u11_3 {
  local tmp0:4;
  local tmp1:4;
  tmp1 = Y2_dcfetchbo_Rs32 + Y2_dcfetchbo_u11_3;
  tmp0 = dcfetch(tmp1);
}

:Y2_dckill  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 {
  local tmp0:4;
  tmp0 = dckill();
}

:Y2_dczeroa Y2_dczeroa_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y2_dczeroa_Rs32 {
  local tmp0:4;
  tmp0 = dczeroa(Y2_dczeroa_Rs32);
}

:Y2_dccleana Y2_dccleana_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y2_dccleana_Rs32 {
  local tmp0:4;
  tmp0 = dccleana(Y2_dccleana_Rs32);
}

:Y2_dccleanidx Y2_dccleanidx_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y2_dccleanidx_Rs32 {
  local tmp0:4;
  tmp0 = dccleanidx(Y2_dccleanidx_Rs32);
}

:Y2_dccleaninva Y2_dccleaninva_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y2_dccleaninva_Rs32 {
  local tmp0:4;
  tmp0 = dccleaninva(Y2_dccleaninva_Rs32);
}

:Y2_dccleaninvidx Y2_dccleaninvidx_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y2_dccleaninvidx_Rs32 {
  local tmp0:4;
  tmp0 = dccleaninvidx(Y2_dccleaninvidx_Rs32);
}

:Y2_dcinva Y2_dcinva_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y2_dcinva_Rs32 {
  local tmp0:4;
  tmp0 = dcinva(Y2_dcinva_Rs32);
}

:Y2_dcinvidx Y2_dcinvidx_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y2_dcinvidx_Rs32 {
  local tmp0:4;
  tmp0 = dcinvidx(Y2_dcinvidx_Rs32);
}

:Y2_dctagr Y2_dctagr_Rd32 Y2_dctagr_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y2_dctagr_Rd32 & Y2_dctagr_Rs32 {
  local tmp0:4;
  tmp0 = dctagr(Y2_dctagr_Rs32);
  Y2_dctagr_Rd32 = tmp0;
}

:Y2_dctagw Y2_dctagw_Rs32 Y2_dctagw_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y2_dctagw_Rs32 & Y2_dctagw_Rt32 {
  local tmp0:4;
  tmp0 = dctagw(Y2_dctagw_Rs32, Y2_dctagw_Rt32);
}

:Y2_l2kill  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 {
  local tmp0:4;
  tmp0 = l2kill();
}

:Y4_l2tagw Y4_l2tagw_Rs32 Y4_l2tagw_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y4_l2tagw_Rs32 & Y4_l2tagw_Rt32 {
  local tmp0:4;
  tmp0 = l2tagw(Y4_l2tagw_Rs32, Y4_l2tagw_Rt32);
}

:Y4_l2tagr Y4_l2tagr_Rd32 Y4_l2tagr_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y4_l2tagr_Rd32 & Y4_l2tagr_Rs32 {
  local tmp0:4;
  tmp0 = l2tagr(Y4_l2tagr_Rs32);
  Y4_l2tagr_Rd32 = tmp0;
}

:Y2_l2cleaninvidx Y2_l2cleaninvidx_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y2_l2cleaninvidx_Rs32 {
  local tmp0:4;
  tmp0 = l2cleaninvidx(Y2_l2cleaninvidx_Rs32);
}

:Y5_l2cleanidx Y5_l2cleanidx_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y5_l2cleanidx_Rs32 {
  local tmp0:4;
  tmp0 = l2cleanidx(Y5_l2cleanidx_Rs32);
}

:Y5_l2invidx Y5_l2invidx_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y5_l2invidx_Rs32 {
  local tmp0:4;
  tmp0 = l2invidx(Y5_l2invidx_Rs32);
}

:Y4_l2fetch Y4_l2fetch_Rs32 Y4_l2fetch_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b5 = 0 & b6 = 0 & b7 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y4_l2fetch_Rs32 & Y4_l2fetch_Rt32 {
  local tmp0:4;
  tmp0 = l2fetch(Y4_l2fetch_Rs32, Y4_l2fetch_Rt32);
}

:Y5_l2fetch Y5_l2fetch_Rs32 Y5_l2fetch_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y5_l2fetch_Rs32 & Y5_l2fetch_Rtt32 {
  local tmp0:4;
  tmp0 = l2fetch(Y5_l2fetch_Rs32, Y5_l2fetch_Rtt32);
}

:Y5_l2locka Y5_l2locka_Pd4 Y5_l2locka_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b13 = 1 & b21 = 1 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y5_l2locka_Pd4 & Y5_l2locka_Rs32 {
  local tmp0:4;
  tmp0 = l2locka(Y5_l2locka_Rs32);
  Y5_l2locka_Pd4 = tmp0:1;
}

:Y5_l2unlocka Y5_l2unlocka_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y5_l2unlocka_Rs32 {
  local tmp0:4;
  tmp0 = l2unlocka(Y5_l2unlocka_Rs32);
}

:Y5_l2gunlock  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 {
  local tmp0:4;
  tmp0 = l2gunlock();
}

:Y5_l2gclean  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 {
  local tmp0:4;
  tmp0 = l2gclean();
}

:Y5_l2gcleaninv  is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b10 = 0 & b11 = 1 & b12 = 1 & b21 = 1 & b22 = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 0 & b27 = 1 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 {
  local tmp0:4;
  tmp0 = l2gcleaninv();
}

:Y6_l2gcleanpa Y6_l2gcleanpa_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 1 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y6_l2gcleanpa_Rtt32 {
  local tmp0:4;
  tmp0 = l2gclean(Y6_l2gcleanpa_Rtt32);
}

:Y6_l2gcleaninvpa Y6_l2gcleaninvpa_Rtt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 1 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 1 & b27 = 0 & b28 = 0 & b29 = 1 & b30 = 0 & b31 = 1 & Y6_l2gcleaninvpa_Rtt32 {
  local tmp0:4;
  tmp0 = l2gcleaninv(Y6_l2gcleaninvpa_Rtt32);
}

:SA1_addi SA1_addi_Rx16 SA1_addi_s7 is phase = 1 & subinsn = 1 & a11 = 0 & a12 = 0 & SA1_addi_Rx16 & SA1_addi_s7 {
  local tmp0:4;
  tmp0 = SA1_addi_Rx16 + SA1_addi_s7;
  SA1_addi_Rx16 = tmp0;
}

:SA1_tfr SA1_tfr_Rd16 SA1_tfr_Rs16 is phase = 1 & subinsn = 1 & a8 = 0 & a9 = 0 & a10 = 0 & a11 = 0 & a12 = 1 & SA1_tfr_Rd16 & SA1_tfr_Rs16 {
  SA1_tfr_Rd16 = SA1_tfr_Rs16;
}

:SA1_seti SA1_seti_Rd16 SA1_seti_u6 is phase = 1 & subinsn = 1 & a10 = 0 & a11 = 1 & a12 = 0 & SA1_seti_Rd16 & SA1_seti_u6 {
  SA1_seti_Rd16 = SA1_seti_u6;
}

:SA1_setin1 SA1_setin1_Rd16 is phase = 1 & subinsn = 1 & a6 = 0 & a9 = 1 & a10 = 0 & a11 = 1 & a12 = 1 & SA1_setin1_Rd16 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = - tmp0;
  SA1_setin1_Rd16 = tmp1;
}

:SA1_clrtnew SA1_clrtnew_Rd16 is phase = 1 & subinsn = 1 & a4 = 0 & a5 = 0 & a6 = 1 & a9 = 1 & a10 = 0 & a11 = 1 & a12 = 1 & SA1_clrtnew_Rd16 {
  local tmp0:1;
  tmp0 = newreg(P0);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = 0;
  SA1_clrtnew_Rd16 = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:SA1_clrfnew SA1_clrfnew_Rd16 is phase = 1 & subinsn = 1 & a4 = 1 & a5 = 0 & a6 = 1 & a9 = 1 & a10 = 0 & a11 = 1 & a12 = 1 & SA1_clrfnew_Rd16 {
  local tmp0:1;
  tmp0 = newreg(P0);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  local tmp4:4;
  tmp4 = 0;
  SA1_clrfnew_Rd16 = tmp4;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:SA1_clrt SA1_clrt_Rd16 is phase = 1 & subinsn = 1 & a4 = 0 & a5 = 1 & a6 = 1 & a9 = 1 & a10 = 0 & a11 = 1 & a12 = 1 & SA1_clrt_Rd16 {
  local tmp0:1;
  tmp0 = P0;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  local tmp2:4;
  tmp2 = 0;
  SA1_clrt_Rd16 = tmp2;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:SA1_clrf SA1_clrf_Rd16 is phase = 1 & subinsn = 1 & a4 = 1 & a5 = 1 & a6 = 1 & a9 = 1 & a10 = 0 & a11 = 1 & a12 = 1 & SA1_clrf_Rd16 {
  local tmp0:1;
  tmp0 = ! P0;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  local tmp3:4;
  tmp3 = 0;
  SA1_clrf_Rd16 = tmp3;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:SA1_addsp SA1_addsp_Rd16 SA1_addsp_u6_2 is phase = 1 & subinsn = 1 & a10 = 1 & a11 = 1 & a12 = 0 & SA1_addsp_Rd16 & SA1_addsp_u6_2 {
  local tmp0:4;
  tmp0 = R29 + SA1_addsp_u6_2;
  SA1_addsp_Rd16 = tmp0;
}

:SA1_inc SA1_inc_Rd16 SA1_inc_Rs16 is phase = 1 & subinsn = 1 & a8 = 1 & a9 = 0 & a10 = 0 & a11 = 0 & a12 = 1 & SA1_inc_Rd16 & SA1_inc_Rs16 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = SA1_inc_Rs16 + tmp0;
  SA1_inc_Rd16 = tmp1;
}

:SA1_dec SA1_dec_Rd16 SA1_dec_Rs16 is phase = 1 & subinsn = 1 & a8 = 1 & a9 = 1 & a10 = 0 & a11 = 0 & a12 = 1 & SA1_dec_Rd16 & SA1_dec_Rs16 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = SA1_dec_Rs16 - tmp0;
  SA1_dec_Rd16 = tmp1;
}

:SA1_addrx SA1_addrx_Rx16 SA1_addrx_Rs16 is phase = 1 & subinsn = 1 & a8 = 0 & a9 = 0 & a10 = 0 & a11 = 1 & a12 = 1 & SA1_addrx_Rx16 & SA1_addrx_Rs16 {
  local tmp0:4;
  tmp0 = SA1_addrx_Rx16 + SA1_addrx_Rs16;
  SA1_addrx_Rx16 = tmp0;
}

:SA1_zxtb SA1_zxtb_Rd16 SA1_zxtb_Rs16 is phase = 1 & subinsn = 1 & a8 = 1 & a9 = 1 & a10 = 1 & a11 = 0 & a12 = 1 & SA1_zxtb_Rd16 & SA1_zxtb_Rs16 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 8;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = SA1_zxtb_Rs16 & tmp4;
  SA1_zxtb_Rd16 = tmp5;
}

:SA1_and1 SA1_and1_Rd16 SA1_and1_Rs16 is phase = 1 & subinsn = 1 & a8 = 0 & a9 = 1 & a10 = 0 & a11 = 0 & a12 = 1 & SA1_and1_Rd16 & SA1_and1_Rs16 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = SA1_and1_Rs16 & tmp0;
  SA1_and1_Rd16 = tmp1;
}

:SA1_sxtb SA1_sxtb_Rd16 SA1_sxtb_Rs16 is phase = 1 & subinsn = 1 & a8 = 1 & a9 = 0 & a10 = 1 & a11 = 0 & a12 = 1 & SA1_sxtb_Rd16 & SA1_sxtb_Rs16 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 8;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = SA1_sxtb_Rs16 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 8;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 8;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  SA1_sxtb_Rd16 = tmp17;
}

:SA1_zxth SA1_zxth_Rd16 SA1_zxth_Rs16 is phase = 1 & subinsn = 1 & a8 = 0 & a9 = 1 & a10 = 1 & a11 = 0 & a12 = 1 & SA1_zxth_Rd16 & SA1_zxth_Rs16 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 16;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = SA1_zxth_Rs16 & tmp4;
  SA1_zxth_Rd16 = tmp5;
}

:SA1_sxth SA1_sxth_Rd16 SA1_sxth_Rs16 is phase = 1 & subinsn = 1 & a8 = 0 & a9 = 0 & a10 = 1 & a11 = 0 & a12 = 1 & SA1_sxth_Rd16 & SA1_sxth_Rs16 {
  local tmp0:4;
  tmp0 = 1;
  local tmp1:4;
  tmp1 = 16;
  local tmp2:4;
  tmp2 = tmp0 << tmp1;
  local tmp3:4;
  tmp3 = 1;
  local tmp4:4;
  tmp4 = tmp2 - tmp3;
  local tmp5:4;
  tmp5 = SA1_sxth_Rs16 & tmp4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 16;
  local tmp8:4;
  tmp8 = 1;
  local tmp9:4;
  tmp9 = tmp7 - tmp8;
  local tmp10:4;
  tmp10 = tmp6 << tmp9;
  local tmp11:4;
  tmp11 = tmp5 ^ tmp10;
  local tmp12:4;
  tmp12 = 1;
  local tmp13:4;
  tmp13 = 16;
  local tmp14:4;
  tmp14 = 1;
  local tmp15:4;
  tmp15 = tmp13 - tmp14;
  local tmp16:4;
  tmp16 = tmp12 << tmp15;
  local tmp17:4;
  tmp17 = tmp11 - tmp16;
  SA1_sxth_Rd16 = tmp17;
}

:SA1_cmpeqi SA1_cmpeqi_Rs16 SA1_cmpeqi_u2 is phase = 1 & subinsn = 1 & a8 = 1 & a9 = 0 & a10 = 0 & a11 = 1 & a12 = 1 & SA1_cmpeqi_Rs16 & SA1_cmpeqi_u2 {
  local tmp0:1;
  tmp0 = SA1_cmpeqi_Rs16 == SA1_cmpeqi_u2;
  P0 = tmp0;
}

:SL1_loadri_io SL1_loadri_io_Rd16 SL1_loadri_io_Rs16 SL1_loadri_io_u4_2 is phase = 1 & subinsn = 2 & a12 = 0 & SL1_loadri_io_Rd16 & SL1_loadri_io_Rs16 & SL1_loadri_io_u4_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = SL1_loadri_io_Rs16 + SL1_loadri_io_u4_2;
  EA = tmp0;
  SL1_loadri_io_Rd16 = *:4 EA;
}

:SL1_loadrub_io SL1_loadrub_io_Rd16 SL1_loadrub_io_Rs16 SL1_loadrub_io_u4_0 is phase = 1 & subinsn = 2 & a12 = 1 & SL1_loadrub_io_Rd16 & SL1_loadrub_io_Rs16 & SL1_loadrub_io_u4_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = SL1_loadrub_io_Rs16 + SL1_loadrub_io_u4_0;
  EA = tmp0;
  SL1_loadrub_io_Rd16 = *:1 EA;
}

:SL2_loadrh_io SL2_loadrh_io_Rd16 SL2_loadrh_io_Rs16 SL2_loadrh_io_u3_1 is phase = 1 & subinsn = 3 & a11 = 0 & a12 = 0 & SL2_loadrh_io_Rd16 & SL2_loadrh_io_Rs16 & SL2_loadrh_io_u3_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = SL2_loadrh_io_Rs16 + SL2_loadrh_io_u3_1;
  EA = tmp0;
  SL2_loadrh_io_Rd16 = *:2 EA;
}

:SL2_loadruh_io SL2_loadruh_io_Rd16 SL2_loadruh_io_Rs16 SL2_loadruh_io_u3_1 is phase = 1 & subinsn = 3 & a11 = 1 & a12 = 0 & SL2_loadruh_io_Rd16 & SL2_loadruh_io_Rs16 & SL2_loadruh_io_u3_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = SL2_loadruh_io_Rs16 + SL2_loadruh_io_u3_1;
  EA = tmp0;
  SL2_loadruh_io_Rd16 = *:2 EA;
}

:SL2_loadrb_io SL2_loadrb_io_Rd16 SL2_loadrb_io_Rs16 SL2_loadrb_io_u3_0 is phase = 1 & subinsn = 3 & a11 = 0 & a12 = 1 & SL2_loadrb_io_Rd16 & SL2_loadrb_io_Rs16 & SL2_loadrb_io_u3_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = SL2_loadrb_io_Rs16 + SL2_loadrb_io_u3_0;
  EA = tmp0;
  SL2_loadrb_io_Rd16 = *:1 EA;
}

:SL2_loadri_sp SL2_loadri_sp_Rd16 SL2_loadri_sp_u5_2 is phase = 1 & subinsn = 3 & a9 = 0 & a10 = 1 & a11 = 1 & a12 = 1 & SL2_loadri_sp_Rd16 & SL2_loadri_sp_u5_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = R29 + SL2_loadri_sp_u5_2;
  EA = tmp0;
  SL2_loadri_sp_Rd16 = *:4 EA;
}

:SL2_loadrd_sp SL2_loadrd_sp_Rdd8 SL2_loadrd_sp_u5_3 is phase = 1 & subinsn = 3 & a8 = 0 & a9 = 1 & a10 = 1 & a11 = 1 & a12 = 1 & SL2_loadrd_sp_Rdd8 & SL2_loadrd_sp_u5_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = R29 + SL2_loadrd_sp_u5_3;
  EA = tmp0;
  SL2_loadrd_sp_Rdd8 = *:8 EA;
}

:SL2_deallocframe  is phase = 1 & subinsn = 3 & a2 = 0 & a6 = 0 & a7 = 0 & a8 = 1 & a9 = 1 & a10 = 1 & a11 = 1 & a12 = 1 {
  local tmp:8;
  local EA:4;
  EA = R30;
  tmp = *:8 EA;
  tmp = tmp;
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 32;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = tmp >> tmp5;
  local tmp7:8;
  tmp7 = 4294967295;
  local tmp8:8;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:4;
  tmp0 = zext(tmp1);
  R31 = tmp0:4;
  local tmp9:8;
  local tmp10:4;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 32;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = tmp >> tmp14;
  local tmp16:8;
  tmp16 = 4294967295;
  local tmp17:8;
  tmp17 = tmp15 & tmp16;
  tmp10 = tmp17:4;
  tmp9 = zext(tmp10);
  R30 = tmp9:4;
  local tmp18:4;
  tmp18 = 8;
  local tmp19:4;
  tmp19 = EA + tmp18;
  R29 = tmp19;
}

:SL2_return  is phase = 1 & subinsn = 3 & a2 = 0 & a6 = 1 & a7 = 0 & a8 = 1 & a9 = 1 & a10 = 1 & a11 = 1 & a12 = 1 {
  local tmp:8;
  local EA:4;
  EA = R30;
  tmp = *:8 EA;
  tmp = tmp;
  local tmp0:8;
  local tmp1:4;
  local tmp2:4;
  tmp2 = 1;
  local tmp3:4;
  tmp3 = 32;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:8;
  tmp5 = zext(tmp4);
  local tmp6:8;
  tmp6 = tmp >> tmp5;
  local tmp7:8;
  tmp7 = 4294967295;
  local tmp8:8;
  tmp8 = tmp6 & tmp7;
  tmp1 = tmp8:4;
  tmp0 = zext(tmp1);
  R31 = tmp0:4;
  local tmp9:8;
  local tmp10:4;
  local tmp11:4;
  tmp11 = 0;
  local tmp12:4;
  tmp12 = 32;
  local tmp13:4;
  tmp13 = tmp11 * tmp12;
  local tmp14:8;
  tmp14 = zext(tmp13);
  local tmp15:8;
  tmp15 = tmp >> tmp14;
  local tmp16:8;
  tmp16 = 4294967295;
  local tmp17:8;
  tmp17 = tmp15 & tmp16;
  tmp10 = tmp17:4;
  tmp9 = zext(tmp10);
  R30 = tmp9:4;
  local tmp18:4;
  tmp18 = 8;
  local tmp19:4;
  tmp19 = EA + tmp18;
  R29 = tmp19;
  local tmp20:8;
  local tmp21:4;
  local tmp22:4;
  tmp22 = 1;
  local tmp23:4;
  tmp23 = 32;
  local tmp24:4;
  tmp24 = tmp22 * tmp23;
  local tmp25:8;
  tmp25 = zext(tmp24);
  local tmp26:8;
  tmp26 = tmp >> tmp25;
  local tmp27:8;
  tmp27 = 4294967295;
  local tmp28:8;
  tmp28 = tmp26 & tmp27;
  tmp21 = tmp28:4;
  tmp20 = zext(tmp21);
  return [tmp20];
}

:SL2_return_t  is phase = 1 & subinsn = 3 & a0 = 0 & a1 = 0 & a2 = 1 & a6 = 1 & a7 = 0 & a8 = 1 & a9 = 1 & a10 = 1 & a11 = 1 & a12 = 1 {
  local tmp:8;
  local EA:4;
  EA = R30;
  local tmp0:1;
  tmp0 = P0;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  tmp = *:8 EA;
  tmp = tmp;
  local tmp2:8;
  local tmp3:4;
  local tmp4:4;
  tmp4 = 1;
  local tmp5:4;
  tmp5 = 32;
  local tmp6:4;
  tmp6 = tmp4 * tmp5;
  local tmp7:8;
  tmp7 = zext(tmp6);
  local tmp8:8;
  tmp8 = tmp >> tmp7;
  local tmp9:8;
  tmp9 = 4294967295;
  local tmp10:8;
  tmp10 = tmp8 & tmp9;
  tmp3 = tmp10:4;
  tmp2 = zext(tmp3);
  R31 = tmp2:4;
  local tmp11:8;
  local tmp12:4;
  local tmp13:4;
  tmp13 = 0;
  local tmp14:4;
  tmp14 = 32;
  local tmp15:4;
  tmp15 = tmp13 * tmp14;
  local tmp16:8;
  tmp16 = zext(tmp15);
  local tmp17:8;
  tmp17 = tmp >> tmp16;
  local tmp18:8;
  tmp18 = 4294967295;
  local tmp19:8;
  tmp19 = tmp17 & tmp18;
  tmp12 = tmp19:4;
  tmp11 = zext(tmp12);
  R30 = tmp11:4;
  local tmp20:4;
  tmp20 = 8;
  local tmp21:4;
  tmp21 = EA + tmp20;
  R29 = tmp21;
  local tmp22:8;
  local tmp23:4;
  local tmp24:4;
  tmp24 = 1;
  local tmp25:4;
  tmp25 = 32;
  local tmp26:4;
  tmp26 = tmp24 * tmp25;
  local tmp27:8;
  tmp27 = zext(tmp26);
  local tmp28:8;
  tmp28 = tmp >> tmp27;
  local tmp29:8;
  tmp29 = 4294967295;
  local tmp30:8;
  tmp30 = tmp28 & tmp29;
  tmp23 = tmp30:4;
  tmp22 = zext(tmp23);
  return [tmp22];
  goto <done_2>;
<f_branch_2>
<done_2>
}

:SL2_return_f  is phase = 1 & subinsn = 3 & a0 = 1 & a1 = 0 & a2 = 1 & a6 = 1 & a7 = 0 & a8 = 1 & a9 = 1 & a10 = 1 & a11 = 1 & a12 = 1 {
  local tmp:8;
  local EA:4;
  EA = R30;
  local tmp0:1;
  tmp0 = ! P0;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  tmp = *:8 EA;
  tmp = tmp;
  local tmp3:8;
  local tmp4:4;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = 32;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:8;
  tmp8 = zext(tmp7);
  local tmp9:8;
  tmp9 = tmp >> tmp8;
  local tmp10:8;
  tmp10 = 4294967295;
  local tmp11:8;
  tmp11 = tmp9 & tmp10;
  tmp4 = tmp11:4;
  tmp3 = zext(tmp4);
  R31 = tmp3:4;
  local tmp12:8;
  local tmp13:4;
  local tmp14:4;
  tmp14 = 0;
  local tmp15:4;
  tmp15 = 32;
  local tmp16:4;
  tmp16 = tmp14 * tmp15;
  local tmp17:8;
  tmp17 = zext(tmp16);
  local tmp18:8;
  tmp18 = tmp >> tmp17;
  local tmp19:8;
  tmp19 = 4294967295;
  local tmp20:8;
  tmp20 = tmp18 & tmp19;
  tmp13 = tmp20:4;
  tmp12 = zext(tmp13);
  R30 = tmp12:4;
  local tmp21:4;
  tmp21 = 8;
  local tmp22:4;
  tmp22 = EA + tmp21;
  R29 = tmp22;
  local tmp23:8;
  local tmp24:4;
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = 32;
  local tmp27:4;
  tmp27 = tmp25 * tmp26;
  local tmp28:8;
  tmp28 = zext(tmp27);
  local tmp29:8;
  tmp29 = tmp >> tmp28;
  local tmp30:8;
  tmp30 = 4294967295;
  local tmp31:8;
  tmp31 = tmp29 & tmp30;
  tmp24 = tmp31:4;
  tmp23 = zext(tmp24);
  return [tmp23];
  goto <done_3>;
<f_branch_3>
<done_3>
}

:SL2_return_tnew  is phase = 1 & subinsn = 3 & a0 = 0 & a1 = 1 & a2 = 1 & a6 = 1 & a7 = 0 & a8 = 1 & a9 = 1 & a10 = 1 & a11 = 1 & a12 = 1 {
  local tmp:8;
  local EA:4;
  EA = R30;
  local tmp0:1;
  tmp0 = newreg(P0);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  tmp = *:8 EA;
  tmp = tmp;
  local tmp3:8;
  local tmp4:4;
  local tmp5:4;
  tmp5 = 1;
  local tmp6:4;
  tmp6 = 32;
  local tmp7:4;
  tmp7 = tmp5 * tmp6;
  local tmp8:8;
  tmp8 = zext(tmp7);
  local tmp9:8;
  tmp9 = tmp >> tmp8;
  local tmp10:8;
  tmp10 = 4294967295;
  local tmp11:8;
  tmp11 = tmp9 & tmp10;
  tmp4 = tmp11:4;
  tmp3 = zext(tmp4);
  R31 = tmp3:4;
  local tmp12:8;
  local tmp13:4;
  local tmp14:4;
  tmp14 = 0;
  local tmp15:4;
  tmp15 = 32;
  local tmp16:4;
  tmp16 = tmp14 * tmp15;
  local tmp17:8;
  tmp17 = zext(tmp16);
  local tmp18:8;
  tmp18 = tmp >> tmp17;
  local tmp19:8;
  tmp19 = 4294967295;
  local tmp20:8;
  tmp20 = tmp18 & tmp19;
  tmp13 = tmp20:4;
  tmp12 = zext(tmp13);
  R30 = tmp12:4;
  local tmp21:4;
  tmp21 = 8;
  local tmp22:4;
  tmp22 = EA + tmp21;
  R29 = tmp22;
  local tmp23:8;
  local tmp24:4;
  local tmp25:4;
  tmp25 = 1;
  local tmp26:4;
  tmp26 = 32;
  local tmp27:4;
  tmp27 = tmp25 * tmp26;
  local tmp28:8;
  tmp28 = zext(tmp27);
  local tmp29:8;
  tmp29 = tmp >> tmp28;
  local tmp30:8;
  tmp30 = 4294967295;
  local tmp31:8;
  tmp31 = tmp29 & tmp30;
  tmp24 = tmp31:4;
  tmp23 = zext(tmp24);
  return [tmp23];
  goto <done_3>;
<f_branch_3>
<done_3>
}

:SL2_return_fnew  is phase = 1 & subinsn = 3 & a0 = 1 & a1 = 1 & a2 = 1 & a6 = 1 & a7 = 0 & a8 = 1 & a9 = 1 & a10 = 1 & a11 = 1 & a12 = 1 {
  local tmp:8;
  local EA:4;
  EA = R30;
  local tmp0:1;
  tmp0 = newreg(P0);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  tmp = *:8 EA;
  tmp = tmp;
  local tmp4:8;
  local tmp5:4;
  local tmp6:4;
  tmp6 = 1;
  local tmp7:4;
  tmp7 = 32;
  local tmp8:4;
  tmp8 = tmp6 * tmp7;
  local tmp9:8;
  tmp9 = zext(tmp8);
  local tmp10:8;
  tmp10 = tmp >> tmp9;
  local tmp11:8;
  tmp11 = 4294967295;
  local tmp12:8;
  tmp12 = tmp10 & tmp11;
  tmp5 = tmp12:4;
  tmp4 = zext(tmp5);
  R31 = tmp4:4;
  local tmp13:8;
  local tmp14:4;
  local tmp15:4;
  tmp15 = 0;
  local tmp16:4;
  tmp16 = 32;
  local tmp17:4;
  tmp17 = tmp15 * tmp16;
  local tmp18:8;
  tmp18 = zext(tmp17);
  local tmp19:8;
  tmp19 = tmp >> tmp18;
  local tmp20:8;
  tmp20 = 4294967295;
  local tmp21:8;
  tmp21 = tmp19 & tmp20;
  tmp14 = tmp21:4;
  tmp13 = zext(tmp14);
  R30 = tmp13:4;
  local tmp22:4;
  tmp22 = 8;
  local tmp23:4;
  tmp23 = EA + tmp22;
  R29 = tmp23;
  local tmp24:8;
  local tmp25:4;
  local tmp26:4;
  tmp26 = 1;
  local tmp27:4;
  tmp27 = 32;
  local tmp28:4;
  tmp28 = tmp26 * tmp27;
  local tmp29:8;
  tmp29 = zext(tmp28);
  local tmp30:8;
  tmp30 = tmp >> tmp29;
  local tmp31:8;
  tmp31 = 4294967295;
  local tmp32:8;
  tmp32 = tmp30 & tmp31;
  tmp25 = tmp32:4;
  tmp24 = zext(tmp25);
  return [tmp24];
  goto <done_4>;
<f_branch_4>
<done_4>
}

:SL2_jumpr31  is phase = 1 & subinsn = 3 & a2 = 0 & a6 = 1 & a7 = 1 & a8 = 1 & a9 = 1 & a10 = 1 & a11 = 1 & a12 = 1 {
  return [R31];
}

:SL2_jumpr31_t  is phase = 1 & subinsn = 3 & a0 = 0 & a1 = 0 & a2 = 1 & a6 = 1 & a7 = 1 & a8 = 1 & a9 = 1 & a10 = 1 & a11 = 1 & a12 = 1 {
  local tmp0:1;
  tmp0 = P0;
  if (tmp0) goto <t_branch_2>;
  goto <done_2>;
<t_branch_2>
  return [R31];
  goto <done_2>;
<done_2>
}

:SL2_jumpr31_f  is phase = 1 & subinsn = 3 & a0 = 1 & a1 = 0 & a2 = 1 & a6 = 1 & a7 = 1 & a8 = 1 & a9 = 1 & a10 = 1 & a11 = 1 & a12 = 1 {
  local tmp0:1;
  tmp0 = ! P0;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  return [R31];
  goto <done_3>;
<done_3>
}

:SL2_jumpr31_tnew  is phase = 1 & subinsn = 3 & a0 = 0 & a1 = 1 & a2 = 1 & a6 = 1 & a7 = 1 & a8 = 1 & a9 = 1 & a10 = 1 & a11 = 1 & a12 = 1 {
  local tmp0:1;
  tmp0 = newreg(P0);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  return [R31];
  goto <done_3>;
<done_3>
}

:SL2_jumpr31_fnew  is phase = 1 & subinsn = 3 & a0 = 1 & a1 = 1 & a2 = 1 & a6 = 1 & a7 = 1 & a8 = 1 & a9 = 1 & a10 = 1 & a11 = 1 & a12 = 1 {
  local tmp0:1;
  tmp0 = newreg(P0);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  return [R31];
  goto <done_4>;
<done_4>
}

:SS1_storew_io SS1_storew_io_Rs16 SS1_storew_io_Rt16 SS1_storew_io_u4_2 is phase = 1 & subinsn = 4 & a12 = 0 & SS1_storew_io_Rs16 & SS1_storew_io_Rt16 & SS1_storew_io_u4_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = SS1_storew_io_Rs16 + SS1_storew_io_u4_2;
  EA = tmp0;
  *:4 EA = SS1_storew_io_Rt16;
}

:SS1_storeb_io SS1_storeb_io_Rs16 SS1_storeb_io_Rt16 SS1_storeb_io_u4_0 is phase = 1 & subinsn = 4 & a12 = 1 & SS1_storeb_io_Rs16 & SS1_storeb_io_Rt16 & SS1_storeb_io_u4_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = SS1_storeb_io_Rs16 + SS1_storeb_io_u4_0;
  EA = tmp0;
  local tmp1:1;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 8;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:4;
  tmp5 = SS1_storeb_io_Rt16 s>> tmp4;
  local tmp6:4;
  tmp6 = 255;
  local tmp7:4;
  tmp7 = tmp5 & tmp6;
  tmp1 = tmp7:1;
  *:1 EA = tmp1;
}

:SS2_storeh_io SS2_storeh_io_Rs16 SS2_storeh_io_Rt16 SS2_storeh_io_u3_1 is phase = 1 & subinsn = 5 & a11 = 0 & a12 = 0 & SS2_storeh_io_Rs16 & SS2_storeh_io_Rt16 & SS2_storeh_io_u3_1 {
  local EA:4;
  local tmp0:4;
  tmp0 = SS2_storeh_io_Rs16 + SS2_storeh_io_u3_1;
  EA = tmp0;
  local tmp1:2;
  local tmp2:4;
  tmp2 = 0;
  local tmp3:4;
  tmp3 = 16;
  local tmp4:4;
  tmp4 = tmp2 * tmp3;
  local tmp5:4;
  tmp5 = SS2_storeh_io_Rt16 s>> tmp4;
  local tmp6:4;
  tmp6 = 65535;
  local tmp7:4;
  tmp7 = tmp5 & tmp6;
  tmp1 = tmp7:2;
  *:2 EA = tmp1;
}

:SS2_stored_sp SS2_stored_sp_Rtt8 SS2_stored_sp_s6_3 is phase = 1 & subinsn = 5 & a9 = 1 & a10 = 0 & a11 = 1 & a12 = 0 & SS2_stored_sp_Rtt8 & SS2_stored_sp_s6_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = R29 + SS2_stored_sp_s6_3;
  EA = tmp0;
  *:8 EA = SS2_stored_sp_Rtt8;
}

:SS2_storew_sp SS2_storew_sp_Rt16 SS2_storew_sp_u5_2 is phase = 1 & subinsn = 5 & a9 = 0 & a10 = 0 & a11 = 1 & a12 = 0 & SS2_storew_sp_Rt16 & SS2_storew_sp_u5_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = R29 + SS2_storew_sp_u5_2;
  EA = tmp0;
  *:4 EA = SS2_storew_sp_Rt16;
}

:SS2_storewi0 SS2_storewi0_Rs16 SS2_storewi0_u4_2 is phase = 1 & subinsn = 5 & a8 = 0 & a9 = 0 & a10 = 0 & a11 = 0 & a12 = 1 & SS2_storewi0_Rs16 & SS2_storewi0_u4_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = SS2_storewi0_Rs16 + SS2_storewi0_u4_2;
  EA = tmp0;
  local tmp1:4;
  tmp1 = 0;
  *:4 EA = tmp1;
}

:SS2_storebi0 SS2_storebi0_Rs16 SS2_storebi0_u4_0 is phase = 1 & subinsn = 5 & a8 = 0 & a9 = 1 & a10 = 0 & a11 = 0 & a12 = 1 & SS2_storebi0_Rs16 & SS2_storebi0_u4_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = SS2_storebi0_Rs16 + SS2_storebi0_u4_0;
  EA = tmp0;
  local tmp1:4;
  tmp1 = 0;
  *:1 EA = tmp1;
}

:SS2_storewi1 SS2_storewi1_Rs16 SS2_storewi1_u4_2 is phase = 1 & subinsn = 5 & a8 = 1 & a9 = 0 & a10 = 0 & a11 = 0 & a12 = 1 & SS2_storewi1_Rs16 & SS2_storewi1_u4_2 {
  local EA:4;
  local tmp0:4;
  tmp0 = SS2_storewi1_Rs16 + SS2_storewi1_u4_2;
  EA = tmp0;
  local tmp1:4;
  tmp1 = 1;
  *:4 EA = tmp1;
}

:SS2_storebi1 SS2_storebi1_Rs16 SS2_storebi1_u4_0 is phase = 1 & subinsn = 5 & a8 = 1 & a9 = 1 & a10 = 0 & a11 = 0 & a12 = 1 & SS2_storebi1_Rs16 & SS2_storebi1_u4_0 {
  local EA:4;
  local tmp0:4;
  tmp0 = SS2_storebi1_Rs16 + SS2_storebi1_u4_0;
  EA = tmp0;
  local tmp1:4;
  tmp1 = 1;
  *:1 EA = tmp1;
}

:SS2_allocframe SS2_allocframe_u5_3 is phase = 1 & subinsn = 5 & a9 = 0 & a10 = 1 & a11 = 1 & a12 = 1 & SS2_allocframe_u5_3 {
  local EA:4;
  local tmp0:4;
  tmp0 = 8;
  local tmp1:4;
  tmp1 = - tmp0;
  local tmp2:4;
  tmp2 = R29 + tmp1;
  EA = tmp2;
  *:8 EA = R31R30;
  R30 = EA;
  local tmp3:4;
  tmp3 = EA - SS2_allocframe_u5_3;
  R29 = tmp3;
}

:DUPLEX is phase = 1 & subinsn = 0 & Parse = 0b00 unimpl

:A4_ext reloc is phase = 1 & immext = 0xffffffff & duplex_next  = 0 & Parse != 0b00 & subinsn = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 0 & A4_ext_u26_6_0 & A4_ext_u26_6_1 [
  reloc = (((A4_ext_u26_6_0 << 0)) + (A4_ext_u26_6_1 << 14)) << 6;
  immext = reloc;
  globalset(inst_next, immext);
] { }

:A4_ext reloc is phase = 1 & immext = 0xffffffff                    & Parse != 0b00 & subinsn = 0 & b28 = 0 & b29 = 0 & b30 = 0 & b31 = 0 & A4_ext_u26_6_0 & A4_ext_u26_6_1 [
  reloc = (((A4_ext_u26_6_0 << 0)) + (A4_ext_u26_6_1 << 14)) << 6;
  immext = 0xffffffff;
  globalset(inst_next, immext);
  immext = reloc;
  globalset(duplex_next, immext);
] { }

:A2_combinew A2_combinew_Rdd32 A2_combinew_Rs32 A2_combinew_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & A2_combinew_Rdd32 & A2_combinew_Rs32 & A2_combinew_Rt32 & A2_combinew_Rdd32_lo & A2_combinew_Rdd32_hi {
  A2_combinew_Rdd32_lo = A2_combinew_Rt32;
  A2_combinew_Rdd32_hi = A2_combinew_Rs32;
}

:A2_combineii A2_combineii_Rdd32 A2_combineii_s8 A2_combineii_S8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b23 = 0 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A2_combineii_Rdd32 & A2_combineii_s8 & A2_combineii_S8 & A2_combineii_Rdd32_lo & A2_combineii_Rdd32_hi {
  A2_combineii_Rdd32_lo = A2_combineii_S8;
  A2_combineii_Rdd32_hi = A2_combineii_s8;
}

:A4_combineri A4_combineri_Rdd32 A4_combineri_Rs32 A4_combineri_s8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_combineri_Rdd32 & A4_combineri_Rs32 & A4_combineri_s8 & A4_combineri_Rdd32_lo & A4_combineri_Rdd32_hi {
  A4_combineri_Rdd32_lo = A4_combineri_s8;
  A4_combineri_Rdd32_hi = A4_combineri_Rs32;
}

:A4_combineir A4_combineir_Rdd32 A4_combineir_Rs32 A4_combineir_s8 is phase = 1 & Parse != 0b00 & subinsn = 0 & b13 = 1 & b21 = 1 & b22 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_combineir_Rdd32 & A4_combineir_Rs32 & A4_combineir_s8 & A4_combineir_Rdd32_lo & A4_combineir_Rdd32_hi {
  A4_combineir_Rdd32_lo = A4_combineir_Rs32;
  A4_combineir_Rdd32_hi = A4_combineir_s8;
}

:A4_combineii A4_combineii_Rdd32 A4_combineii_s8 A4_combineii_U6 is phase = 1 & Parse != 0b00 & subinsn = 0 & b23 = 1 & b24 = 0 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 0 & A4_combineii_Rdd32 & A4_combineii_s8 & A4_combineii_U6 & A4_combineii_Rdd32_lo & A4_combineii_Rdd32_hi {
  A4_combineii_Rdd32_lo = A4_combineii_U6;
  A4_combineii_Rdd32_hi = A4_combineii_s8;
}

:SA1_combinezr SA1_combinezr_Rdd8 SA1_combinezr_Rs16 is phase = 1 & subinsn = 1 & a3 = 0 & a8 = 1 & a10 = 1 & a11 = 1 & a12 = 1 & SA1_combinezr_Rdd8 & SA1_combinezr_Rs16 & SA1_combinezr_Rdd8_lo & SA1_combinezr_Rdd8_hi {
  SA1_combinezr_Rdd8_lo = SA1_combinezr_Rs16;
  SA1_combinezr_Rdd8_hi = 0;
}

:SA1_combinerz SA1_combinerz_Rdd8 SA1_combinerz_Rs16 is phase = 1 & subinsn = 1 & a3 = 1 & a8 = 1 & a10 = 1 & a11 = 1 & a12 = 1 & SA1_combinerz_Rdd8 & SA1_combinerz_Rs16 & SA1_combinerz_Rdd8_lo & SA1_combinerz_Rdd8_hi {
  SA1_combinerz_Rdd8_lo = 0;
  SA1_combinerz_Rdd8_hi = SA1_combinerz_Rs16;
}

:SA1_combine0i SA1_combine0i_Rdd8 SA1_combine0i_u2 is phase = 1 & subinsn = 1 & a3 = 0 & a4 = 0 & a8 = 0 & a10 = 1 & a11 = 1 & a12 = 1 & SA1_combine0i_Rdd8 & SA1_combine0i_u2 & SA1_combine0i_Rdd8_lo & SA1_combine0i_Rdd8_hi {
  SA1_combine0i_Rdd8_lo = SA1_combine0i_u2;
  SA1_combine0i_Rdd8_hi = 0;
}

:SA1_combine1i SA1_combine1i_Rdd8 SA1_combine1i_u2 is phase = 1 & subinsn = 1 & a3 = 1 & a4 = 0 & a8 = 0 & a10 = 1 & a11 = 1 & a12 = 1 & SA1_combine1i_Rdd8 & SA1_combine1i_u2 & SA1_combine1i_Rdd8_lo & SA1_combine1i_Rdd8_hi {
  SA1_combine1i_Rdd8_lo = SA1_combine1i_u2;
  SA1_combine1i_Rdd8_hi = 1;
}

:SA1_combine2i SA1_combine2i_Rdd8 SA1_combine2i_u2 is phase = 1 & subinsn = 1 & a3 = 0 & a4 = 1 & a8 = 0 & a10 = 1 & a11 = 1 & a12 = 1 & SA1_combine2i_Rdd8 & SA1_combine2i_u2 & SA1_combine2i_Rdd8_lo & SA1_combine2i_Rdd8_hi {
  SA1_combine2i_Rdd8_lo = SA1_combine2i_u2;
  SA1_combine2i_Rdd8_hi = 2;
}

:SA1_combine3i SA1_combine3i_Rdd8 SA1_combine3i_u2 is phase = 1 & subinsn = 1 & a3 = 1 & a4 = 1 & a8 = 0 & a10 = 1 & a11 = 1 & a12 = 1 & SA1_combine3i_Rdd8 & SA1_combine3i_u2 & SA1_combine3i_Rdd8_lo & SA1_combine3i_Rdd8_hi {
  SA1_combine3i_Rdd8_lo = SA1_combine3i_u2;
  SA1_combine3i_Rdd8_hi = 3;
}

:C2_ccombinewnewt C2_ccombinewnewt_Rdd32 C2_ccombinewnewt_Pu4 C2_ccombinewnewt_Rs32 C2_ccombinewnewt_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & C2_ccombinewnewt_Rdd32 & C2_ccombinewnewt_Pu4 & C2_ccombinewnewt_Rs32 & C2_ccombinewnewt_Rt32 & C2_ccombinewnewt_Rdd32_lo & C2_ccombinewnewt_Rdd32_hi {
  local tmp0:1;
  tmp0 = newreg(C2_ccombinewnewt_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  C2_ccombinewnewt_Rdd32_lo = C2_ccombinewnewt_Rt32;
  C2_ccombinewnewt_Rdd32_hi = C2_ccombinewnewt_Rs32;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:C2_ccombinewnewf C2_ccombinewnewf_Rdd32 C2_ccombinewnewf_Pu4 C2_ccombinewnewf_Rs32 C2_ccombinewnewf_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 1 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & C2_ccombinewnewf_Rdd32 & C2_ccombinewnewf_Pu4 & C2_ccombinewnewf_Rs32 & C2_ccombinewnewf_Rt32 & C2_ccombinewnewf_Rdd32_lo & C2_ccombinewnewf_Rdd32_hi {
  local tmp0:1;
  tmp0 = newreg(C2_ccombinewnewf_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <f_branch_4>;
<t_branch_4>
  C2_ccombinewnewf_Rdd32_lo = C2_ccombinewnewf_Rt32;
  C2_ccombinewnewf_Rdd32_hi = C2_ccombinewnewf_Rs32;
  goto <done_4>;
<f_branch_4>
<done_4>
}

:C2_ccombinewt C2_ccombinewt_Rdd32 C2_ccombinewt_Pu4 C2_ccombinewt_Rs32 C2_ccombinewt_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 0 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & C2_ccombinewt_Rdd32 & C2_ccombinewt_Pu4 & C2_ccombinewt_Rs32 & C2_ccombinewt_Rt32 & C2_ccombinewt_Rdd32_lo & C2_ccombinewt_Rdd32_hi {
  local tmp0:1;
  tmp0 = C2_ccombinewt_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <f_branch_2>;
<t_branch_2>
  C2_ccombinewt_Rdd32_lo = C2_ccombinewt_Rt32;
  C2_ccombinewt_Rdd32_hi = C2_ccombinewt_Rs32;
  goto <done_2>;
<f_branch_2>
<done_2>
}

:C2_ccombinewf C2_ccombinewf_Rdd32 C2_ccombinewf_Pu4 C2_ccombinewf_Rs32 C2_ccombinewf_Rt32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b7 = 1 & b13 = 0 & b21 = 0 & b22 = 0 & b23 = 0 & b24 = 1 & b25 = 0 & b26 = 1 & b27 = 1 & b28 = 1 & b29 = 1 & b30 = 1 & b31 = 1 & C2_ccombinewf_Rdd32 & C2_ccombinewf_Pu4 & C2_ccombinewf_Rs32 & C2_ccombinewf_Rt32 & C2_ccombinewf_Rdd32_lo & C2_ccombinewf_Rdd32_hi {
  local tmp0:1;
  tmp0 = ! C2_ccombinewf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <f_branch_3>;
<t_branch_3>
  C2_ccombinewf_Rdd32_lo = C2_ccombinewf_Rt32;
  C2_ccombinewf_Rdd32_hi = C2_ccombinewf_Rs32;
  goto <done_3>;
<f_branch_3>
<done_3>
}

:J2_jumpr J2_jumpr_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b21 = 0 & b22 = 0 & b23 = 1 & b24 = 0 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumpr_Rs32 & J2_jumpr_Rs32 = 31 {
  return [ J2_jumpr_Rs32 ];
}

:J2_jumprt J2_jumprt_Pu4 J2_jumprt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprt_Pu4 & J2_jumprt_Rs32 & J2_jumpr_Rs32 = 31 {
  local tmp0:1;
  tmp0 = J2_jumprt_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <done_2>;
<t_branch_2>
  return [J2_jumprt_Rs32];
  goto <done_2>;
<done_2>
}

:J2_jumprf J2_jumprf_Pu4 J2_jumprf_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprf_Pu4 & J2_jumprf_Rs32  & J2_jumprf_Rs32 = 31 {
  local tmp0:1;
  tmp0 = ! J2_jumprf_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  return [J2_jumprf_Rs32];
  goto <done_3>;
<done_3>
}

:J2_jumprtpt J2_jumprtpt_Pu4 J2_jumprtpt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprtpt_Pu4 & J2_jumprtpt_Rs32 & J2_jumprtpt_Rs32 = 31 {
  local tmp0:1;
  tmp0 = J2_jumprtpt_Pu4;
  if (tmp0) goto <t_branch_2>;
  goto <done_2>;
<t_branch_2>
  return [J2_jumprtpt_Rs32];
  goto <done_2>;
<done_2>
}

:J2_jumprfpt J2_jumprfpt_Pu4 J2_jumprfpt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 0 & b12 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprfpt_Pu4 & J2_jumprfpt_Rs32 & J2_jumprfpt_Rs32 = 31 {
  local tmp0:1;
  tmp0 = ! J2_jumprfpt_Pu4;
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  return [J2_jumprfpt_Rs32];
  goto <done_3>;
<done_3>
}

:J2_jumprtnew J2_jumprtnew_Pu4 J2_jumprtnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprtnew_Pu4 & J2_jumprtnew_Rs32 & J2_jumprtnew_Rs32 = 31 {
  local tmp0:1;
  tmp0 = newreg(J2_jumprtnew_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  return [J2_jumprtnew_Rs32];
  goto <done_3>;
<done_3>
}

:J2_jumprfnew J2_jumprfnew_Pu4 J2_jumprfnew_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 0 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprfnew_Pu4 & J2_jumprfnew_Rs32 & J2_jumprfnew_Rs32 = 31 {
  local tmp0:1;
  tmp0 = newreg(J2_jumprfnew_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  return [J2_jumprfnew_Rs32];
  goto <done_4>;
<done_4>
}

:J2_jumprtnewpt J2_jumprtnewpt_Pu4 J2_jumprtnewpt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 1 & b21 = 0 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprtnewpt_Pu4 & J2_jumprtnewpt_Rs32 & J2_jumprtnewpt_Rs32 = 31 {
  local tmp0:1;
  tmp0 = newreg(J2_jumprtnewpt_Pu4);
  local tmp1:1;
  tmp1 = tmp0;
  if (tmp1) goto <t_branch_3>;
  goto <done_3>;
<t_branch_3>
  return [J2_jumprtnewpt_Rs32];
  goto <done_3>;
<done_3>
}

:J2_jumprfnewpt J2_jumprfnewpt_Pu4 J2_jumprfnewpt_Rs32 is phase = 1 & immext = 0xffffffff & Parse != 0b00 & subinsn = 0 & b11 = 1 & b12 = 1 & b21 = 1 & b22 = 1 & b23 = 0 & b24 = 1 & b25 = 1 & b26 = 0 & b27 = 0 & b28 = 1 & b29 = 0 & b30 = 1 & b31 = 0 & J2_jumprfnewpt_Pu4 & J2_jumprfnewpt_Rs32 & J2_jumprfnewpt_Rs32 = 31 {
  local tmp0:1;
  tmp0 = newreg(J2_jumprfnewpt_Pu4);
  local tmp1:1;
  tmp1 = ! tmp0;
  local tmp2:1;
  tmp2 = tmp1;
  if (tmp2) goto <t_branch_4>;
  goto <done_4>;
<t_branch_4>
  return [J2_jumprfnewpt_Rs32];
  goto <done_4>;
<done_4>
}
